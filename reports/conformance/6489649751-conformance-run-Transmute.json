{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb4d94b6-8531-4437-9afe-0011f96961ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "00d0bf5c-c527-430e-92c6-ae5c15ebc54b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b376e89-c07f-4820-9ce4-fdc49d4e7a02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20617a87-529e-43d6-8d4a-059b3a5bbaa6"
                }
              }
            ]
          },
          {
            "id": "73afd6a6-af43-4370-a292-0be2736fd3c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c75205d7-58df-4923-acca-c42c0505f75b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f618e508-c786-43b3-8222-d02ed8bf5b3e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59168f14-2944-4317-a403-7f406f260846",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "26b9fab2-fa0e-4e8b-b28d-610ca5bae658",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e14042ae-7cfd-4acc-b76a-dd8ea74e7d8e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db47aac9-da98-4115-9baa-93848b842f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "934a9b7f-b4e4-465a-850f-aaf0b147bb37"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1ecf9d4-cdb4-4664-a9db-04af04eb6ddd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19cb30b2-1930-463e-8d65-7c5eea4dd6b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdbd7fbb-d3c0-4936-b231-d8b7c42ddd0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a74bf3ff-8a33-477b-bb83-d7f749546ed6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc51648f-dfe8-4adb-a3d7-649b538a65b1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3f1b7fa7-69dd-479b-8948-e86ebe659e0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d3a8a62-aef6-47a2-9d29-ea730c0a7660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "292b7101-218b-46df-a879-dfeb90634cd5"
            }
          }
        ]
      },
      {
        "id": "58ba6585-014f-47e5-aaf7-ea73990d9690",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "42ae0269-1565-4866-be05-e42c352105b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "368d4b87-38a2-44cd-a3d3-dee8a90d3314",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c6f061f-1fdb-4541-95f9-ae8f472d4332",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c009c14a-fe91-4daf-8404-88ddb3d208ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2243add5-1438-4c89-9e35-5059ab9af907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6023df44-6914-45e7-9d52-b92a8b06d0cc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03a50f-a61c-4549-9771-f62ec891bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b5f5e40-9475-4d97-9622-d3614f8415d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1917ef41-0f82-4281-b6b5-2768f85649dd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5332acb9-be72-40a0-88a4-01bc88b8b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "863452fd-348c-4fd1-a3df-5a469b914947"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50eb1d43-2a3d-4dfc-9641-156dd42de78a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89936c6d-fcc9-487b-98b8-a55f3d5584cb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f220b0-9c4b-401c-b976-dc8eb51bb86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee787d0e-389b-4f1e-b058-5ccbd126d3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738fc486-b08d-4e3f-9125-f8e810a06c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6e2b95-0ed0-467e-9feb-0488a388af7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92347b37-ba42-470a-a65d-3ff650f25ae4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "695fcca1-d0c8-4554-8fd5-7e7722e25aba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76133890-cccf-407e-b649-92af78caa97e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7726226a-66ac-43f9-ae21-0d9429993583"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5bc7053-ae7d-42d8-b0e3-304f71ee8552",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ff984866-4908-43ec-8cdd-135cd2206c05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f1430f-9349-4423-b106-7be554d99cf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1848dece-d102-400b-84b7-29755ff44260"
            }
          }
        ]
      },
      {
        "id": "05d715f2-a713-40e7-b7ac-7634258b5524",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7e57474e-7b35-4594-8bb5-d3fc075ecfe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6afab818-d7cc-465f-8fe9-78d2ac19803a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "690ea430-fb9e-4c07-aaa2-4431f7d799c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd5cd59-340f-424e-8c61-27fa47a3af9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cda9647-8835-4bc1-8258-3881ca68f9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81225a9c-89a5-4cea-b093-3ce40ddcfa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe68b328-7168-4b60-a7ee-9173190deff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3ca81b-787a-48ed-9244-dcd5169e2761",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59741ce-dba1-40d7-bbb2-407fcfa63111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a46eb0-6f47-4d7e-b2a7-465c468527d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4267a6be-948e-4f6d-b410-5cd7dd67a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79ed4029-e1af-4fb2-98f9-e07d3952fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1659456-8b1a-4cf7-8f3e-d6f7dcdabb0b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d9e37a-50f4-4f05-b33e-f04530e78364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee6200-b056-43ad-8e2d-0a7a3aa017fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f51cfc8-1b56-417f-9b14-6357d61ded1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd56a51-19a1-473a-89f9-8d0cd1b30c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d5158-592f-4c49-beed-effa61ee2285",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60ab38e-4950-44eb-bea2-2ea5e034d2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4d8b7d-da6f-4950-9cdc-aa9c2133f9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b88bf3-c836-445b-a216-5917ba2003f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb4a52b1-0f4b-40ac-a4f0-d4c48c7497a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26f1c95-b5f6-4ff6-ab2e-b7cdcc2ed594",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563ee0cd-30d9-4686-9726-4ad9326ab9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc882cc4-48a8-49a3-9489-755bd27b123a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb4a9b8-f246-4219-850c-44a930079b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae65da22-eb01-4e2f-9f2b-c94ad257f245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1b28ae-2505-4a63-9af6-39210a2e7047",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38203aa9-93d3-4aeb-8488-b6e724e438c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc14684-e133-4382-bae7-2c9d8c2b9b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06618ba0-5d52-463e-a9c3-9b6b5da367e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b83f1bba-5999-48eb-943d-08d6c3599788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccccc8b-b4b0-4a7a-8331-c619590158f8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77622b9f-b421-44f6-8e18-85ce833b31eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fccddfb-43c4-46c9-8471-532005f4fe7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd01a6a-249f-4521-8803-6a75a194d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d514d2-5e4e-4479-a5ae-c24b189ff388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c28ad55-8884-46b4-9c54-3cfb88ea1b76",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265f52b3-cf9e-44df-ba0b-8da32852973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4f7a27-98b6-4a99-891a-7af45a2fe013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e1b398-0173-4d84-8610-4cfe9afa85cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b52c232-b6d2-4f00-a00b-f89e8a4c970c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408286cc-00ad-413c-ba7f-e801e16392b3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3dc78-d71d-4dce-b9e6-5dd547e1d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cd5d46-b0b4-4087-ac72-a7bb0e1c9215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e80e3e-8ef5-4cf6-8a82-2968b379f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64a851c7-32a0-40f9-9a21-cbfcf9ee9adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da87868-3a85-45ef-9383-d6d4a398ba62",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf733e3-f9c7-4515-86bb-b920a0c9f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186b4417-bb9a-4522-a4c9-9f99260c71e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df91a045-1995-48d8-8c71-2032709ec088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "541ca4a6-84e1-4a1f-8e36-5376dda35e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7899e90-76d0-4945-8d87-f5b92be88fd1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897474fe-bb8c-4152-b190-bbd1c8a834e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13ed7f3-d1bc-4e9b-ae16-63be9ac1f229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1204a65-65ad-4cc7-bb34-22cc5a1b3f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f0feb61-698b-4e19-b263-506e9b1918d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1968b6-d449-4330-b2a4-0cb34a95a327",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73bb689-6fbe-48d4-bc52-72747471993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1e0b86-5efd-47a5-aa57-190148ddb12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d86feed-87d4-445d-bac9-d8b8c6c9aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ffb60c9-58e5-4b2e-a7c8-c9e9730a1f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41032a67-6280-4a55-b3bc-5732f5be66ef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bb6bb5-1fb0-4e3e-a48b-935db4729d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c3ea40-4b06-45c4-b49a-707c0e8c4c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d675563-34cf-473a-b721-e9f5722c8193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87519823-c71b-40f6-897c-a897648a7165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a306e6fd-aa06-4b6d-8b24-e005351e15de",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35054e6-6e17-41b7-9a26-018a92880dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ca0f64-48b4-46bc-b69e-650fc97dc438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d9703d-eda3-4520-9b75-5f88a19e11dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b5cf7e0-3ff7-4470-808c-7b9c034ba6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67baf5e-95ca-464b-a65d-4aafd19136ce",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e892e9-0253-49c1-afc3-3ecbc2b6aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b272ef-cca1-45b6-9cf6-807806f8a880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70654eb0-afd7-4512-99dd-8703a09ed524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865f3c98-9a31-4b57-a041-6eb907d7ef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a4e617-2094-45a4-85a0-87cc04a1bdcf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575092f6-7c09-4dd4-81a5-856eb6c43cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a655d4-4fc9-43ac-a0ef-97fbf5576ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2aefc8-44b1-4bf1-b90b-6f5e8e76e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18b92228-f4e3-49c6-9f3d-d9f6f7b40baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7edd36-7694-4cb2-98d7-a433172058ec",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f64e83-aacd-4d7e-ace2-2c8b90145235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e08b925-0cb0-47cb-b8dd-dc6e8fec5ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5431d0b7-6462-43c8-a4f7-98592537bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3c7924f-5296-41cd-b52a-a20861b753ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feec1aea-0976-4daa-881b-72b42a7b94ba",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c92abd-0434-4d52-8b3f-fcdd10a13849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6c10a1-bff2-4e0d-8726-0307f93fdfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39dfac3-aeda-4144-8f86-1823deb29ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa430d40-f0a0-426f-a30e-869fe7170c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c83dc37-6142-4ef5-9389-1910bc35ca86",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3f0bd7-c7ae-4849-a691-d0423dcf13ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc2ec86-32b0-476f-801f-9e3225bbcfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd87685-5d5a-44b8-9d12-231d153fc862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "529604bf-b476-46f1-818e-5e7e26e8dc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b449224-c553-4d5d-9159-207b8549f531",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0e4552-1865-412d-a464-507f00fed3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09800761-2c5e-4cd2-b6e2-1f7f8e256ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6378a8fe-3633-479a-87a7-632fad8a9e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ede7806-0aad-4d7f-950d-84bcde1543a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ae17e5-f991-46db-994a-b16a55867feb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8977b08-838c-4338-bba7-10f8f69be766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae820eb-90db-4658-8093-b31c6d104ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f35ff42-3a31-4f7a-81a7-9fd9a0d41935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2155ce14-b4bf-49d2-aedc-63b23e9259b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76c337-ee0d-4d16-8cb5-9a7d05efff20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06e0f68-3194-4c59-bdcf-c40bb3c0d5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3a9a26-53b3-47aa-82d5-f7dcb8030e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3349805f-49da-4362-be2c-d70cf2fde309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d35bf7d9-5e7a-437d-9adb-0091b294db5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89943ee9-a011-48b1-8b9a-d34557ac6650",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe13664d-77bf-4fe5-b2e7-c03d65fa59c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c2e6d9-3d77-4ea5-98ce-5c24a1626b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d3d551-5e6d-48fe-8d3b-7d2c6207185c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97ff5712-7008-42ad-9e00-9bb4cb66b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfdb446-e9f4-4613-9a8f-7c9639f1f62f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28fb8f5-ae50-4a36-b280-5902340d4382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085bc24c-e7e5-4585-872f-5d071f892fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d94c7b3-a90d-4182-bc24-e51ff5cd5307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc996aef-14c4-4b65-8fc5-0291330aeee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc673f-442d-41da-8c04-6ca85fa6c403",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305153a5-5058-45f7-8208-b7418d502a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73eeb3dd-b099-4c7a-a48d-9c9f6778bbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a77569e-df47-443f-8f76-b1f7837ac97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4936e8b-b294-41c0-9939-c15b8d258002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5f9a37-a193-43b9-9607-0159840f6eab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ee636d-0550-42e9-86a9-044d571d5e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7861eb0b-f9cb-46ba-bc31-63c2b626fcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d4c4ce-0bc5-4e9b-b61b-70f3e92d930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa95ca4c-1725-48b7-8123-461c00248671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c775d3-2aa7-42a6-95de-1d9b81eb025d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c578df2-0bdd-48ea-9af2-ba956addf6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fddc78d-4861-4f15-8215-32f000c5f798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d74398-4138-4c1e-9297-82fcfb0d86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0fe15a-6a44-4397-8d4f-9e875cb7b04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533f2828-c969-4d35-8d9e-9609984f5bb6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1a57b9-c5f8-4c00-b698-f0671e529d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de4adbf-42b0-4173-9c93-8f7ec3395634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae8f1ff-e3c8-49c3-887a-5ccf009935f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e77b71c-259c-4e70-850d-ee2cbae47e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ada8a6-8390-4018-8066-70635c4516a9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76da1a47-79d2-4179-81d6-81c7518e42f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de1350c-8dc9-4dba-a3d9-3b47f2cc6354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e4c9f7-03d7-4bc3-b495-7a3c29d9431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "294b2df6-de9f-4e8b-ab2f-2c665084ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3193c6-d1a5-4237-a537-03c25089f28c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8aa46-ce25-4763-9ff9-018a68ab4d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb9f738-343d-4a4b-967c-1692b2ed556e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810c388-03f3-487b-8c01-7573f537f66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4d639a-497e-441a-8808-bc306ab6c38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f5f4ad-3fcc-40a4-ab75-fc6308fdad58",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cdae89-5092-4de5-97ed-e148242cd011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8f8bca-c389-49a5-bd19-35030808d021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403c8142-eabc-4249-b4e4-8b1798997cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d1a32f-f1cf-43d5-8aaf-fe28c2a859a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c19e70-535d-40c7-a864-ca9db17ea4bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c4e072-ccc7-4349-a6e2-6237c3a2f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edabaa82-14b8-495f-88c4-09b07e261dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355aeeb7-a8e6-4ccb-92b8-42e7f6314047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e542a8b-1fed-4763-ab79-ccc57ec8da57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8566f7b-6c0d-46c4-a178-dddca04ada54",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adddb31b-fa2f-47dc-943a-29b2e63884d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec13999-3d63-4c7a-812f-b74f010b27a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f60641-d0b5-4826-a4d7-3dcc110f9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29172c2c-dc21-4268-a7fb-352299987b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed03006-862f-4ced-bdef-3fc4d0c51e65",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdebcb8-9993-4775-b626-ce5948bca686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670fee43-dcbb-4ef7-85c1-de6e8cfb3284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fd7014-2597-40ae-80b2-8c5304798de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df234408-67b9-4625-9fc8-82400d14820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdebcc9-bd88-414d-96f5-ef5d6e70bcb7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4deaf61-19b5-4a34-a66b-a085db89a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc95321-1894-4562-b619-85a5938365aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad423d6d-bf7a-42f3-b5b2-cca54cc0a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac66409c-830b-4f7d-8097-b1c291159f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dcd264-118e-434b-9032-e8b2ae0d3dcf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898d863d-9450-452d-ad63-70a9f4f8a729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1114cf9e-9b08-4466-8e98-c668afaec534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553d6c8-5661-4149-9a82-b076f409e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66c09ae1-f748-4679-8277-106e0d4ef27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3ab75a-5aa7-4cd8-9cdc-1da420805e14",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c4fc5-64be-4259-a18a-721a346aae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080fc4bf-04f1-4e54-a09d-00ff55e8c27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a79419-9901-45de-a619-8d61c31e985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6e27a2-4aa0-4ec1-b6d5-598658343369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37abe1a-271e-49e6-95ca-e6f22696a4b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c848bc6b-40ea-4efc-8a95-bcfd70d68feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f23f55-0cd7-4098-86e1-29ef2d22e3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78495b9a-7c9d-4760-93b3-c955c86cd974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a35bef70-54eb-4fda-bc38-360c0e662824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43bbde0-d9a3-4ef5-8093-522fd8e66d11",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc428f-2bfe-477d-a5e6-0535f14394ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0976d677-40e8-420c-9eb1-c88023546d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79004d52-cef0-41e7-9c6e-b540f952dabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54bb52d8-321c-4986-b8ee-66be6fe669bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d02353-12a9-44ab-acfc-517e2c1b6211",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0171213-d6db-4cad-aa95-125f9e365da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9fc123-bcb8-4306-ab5e-155b12e13987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82ead5-3f37-41f3-a812-57e8aac1fa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5298a5c7-52b7-4611-b3f3-4cc3415be65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd751aa-71ce-4080-9225-795b14d50cdc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d1d879-ee6b-41eb-8d0c-5a0e43ccdd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ca6329-bc98-4bdf-b5c2-f99b04471af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca804ed-e2f4-4e88-a2d5-199a72066b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c18c37c-9f01-47a7-b90b-66c3cff3823e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c962a3a-198f-4bf7-816e-f280a3ffcabd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceda694d-c859-4f9e-afb4-b867736a8e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89836e29-a988-4986-9381-17e02f17f082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11806a5d-a6e7-48e8-90a6-4995ad591666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a72761ff-3be9-4603-9152-65445feeb184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb041c2-0b82-43bf-94a4-ec4a2a4e3d68",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd46523-d3a5-4b90-bc15-356cc01a189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ed26d7-6a3a-42b8-9db0-abd16cfd4f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef18a39-add5-4017-b858-68beba31e2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c15082d-a8f9-4593-9514-413900410b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4c2e05-974d-44da-9d4b-8da5d9f3997b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4100fc2d-2620-4f6b-8297-d18e3fbfa630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cd5891-55bd-4e64-9097-957bbbb43e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472420ae-b5a6-48a1-a9aa-adb21fe223ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "459f6eaa-503e-423c-91ee-e2a1b00f4fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f26609-f5da-4afb-926a-c14d634d4872",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e6d51-dad0-47dd-8a3b-37c8b4936e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90604c42-134b-40aa-b5bd-7833bed10036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1f60c9-74ae-4269-baaf-bc34163aab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "568d5df2-ee7b-4cbc-ac5f-ba085fc7472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b7bc7a-f992-492a-8788-de2888124406",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32681fea-0bab-427b-b598-71da8427d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b5f4b0-f576-413e-a3aa-fc8ca640a710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b05e13-5362-4790-af43-8f3d4f51a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab18eccf-411e-44a8-8f9a-7b4e8d9686e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0d859d-e166-4c24-a48d-6cdcd6e90266",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbd0ce7-09dc-45e1-806c-c305aac2953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa68aa9-4f4a-4d1d-94f1-3c313e36a774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fe1a43-f343-43a5-8515-b93f31dd1766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c8d440-b8d4-453e-a4da-893ee261d191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a21a3-e7ce-4fde-8c83-072f138a62fa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44042640-d6c3-4587-8b8f-214ca8bf9f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d95ea65-7e77-4f4b-91c9-14e696044193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c71614b-f4c8-4399-8ddd-0b0fbb3381dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fd568c-3d8d-4d8d-88c7-9f1e38f31bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac90c350-2189-4ca6-aaa2-f507f9f889ba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d91ffa-874a-494d-83e8-efff83b5fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b238c8d5-ee5a-466f-a5e2-8d4552adab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fda1f06-1ae2-4c98-bcfc-a8f300eab2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab8fc9b-06e3-4c19-a35a-14226442454c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8871646-d930-4fd9-ac86-05632bd2646c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fd7577-4b39-4f00-8dad-9af11d964605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db46eb79-5159-4ad7-9aea-72400e1b22ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec646158-b955-4c83-9156-d20aebe28c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e23adaa0-aa04-4b6a-9bd0-999d755d43c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f161813-a1aa-4a26-866a-2a28d47b07fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c22c3a-040f-411a-9f2c-c8f00264e7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eec14a-bd10-47f2-8b1f-2798af402b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9866e6-485c-4f0e-8391-53ba09cb1e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3565772-a015-490e-89f2-48d841da1102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fecaf5-49d2-4d40-81bc-9a3910aefb4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a23a9d2-58ff-4430-b455-40c3968b31cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa2f6be-f136-4adb-9f83-053c4d7874ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a11be24-cfae-4630-8f42-e7a4a0a26db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3bbf29-f2b5-417f-879b-87d32b2ed5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a434774-9149-4fea-a2e3-a877695506de",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e9aadd-0d98-4295-8e50-1dbaba91cf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0010db0b-e176-4aee-ae8f-4df498e63c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162bb613-6fb0-465c-84f5-e334cc3fa143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6512aaba-438a-47e9-87bd-0912a2c281df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26212bd2-7c75-4d71-9fd6-6ac3091c81c2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403c0ec2-a3f9-4145-9819-5e337d8bb49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5455a423-606a-449a-841f-9ae58b1c8682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb651c1-6262-48b0-aaec-264aaf5110db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea7dbd6-c350-47b9-9ff5-1d553847557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7cd9e-c14e-4142-864b-bb3700a4c4f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb04dfb1-a931-4f4a-b8c4-0651205d10f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ae86c-e33e-423e-be71-ba608181fd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a62986-1b9e-4ad0-9015-c7df06b5c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "884c1860-3725-4c9c-8d36-523c6371e84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2961af1-2163-4cbf-89c4-a8bcce9f6869",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a78d7c4-766c-4366-8c0e-d7a000bbd6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b22187-b788-4a1a-a7a6-a74570f1460c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b0c090-d26b-4be2-8cc9-3ed4e67643bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "27a7b8c2-7d08-4e75-a128-7c61ad64850f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adad1743-d420-49b3-a8fe-b70ef3da605e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d95414-12e6-4042-9a59-8b70cda12234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054be4fb-6306-4d45-b3a6-b48ced78d84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d426b6-8ceb-4ad6-9965-22c8cae63806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d647bb-d0d2-4ed0-8409-c19c8262ae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24486318-eec0-4fe9-9ab1-e2d7d415c9cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3ef2c9-e49e-4814-9460-ba87cd949641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d3747-67f6-4936-ab41-a6b863750ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f525994-c845-46da-bb40-5a0bf5a00a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e661e05-92e6-4e99-b45f-defa33259d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119e1939-1fbf-476f-99da-bc8b31df001f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f776f-a665-4ef8-931f-fdc523fd3e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8391ad98-b843-493a-90e2-77b100e93941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c0f7a7-ce7c-49da-a7ca-0871d5efbda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "acae6fe2-5b03-4ef7-8db9-81412f7c2793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a4339a-227b-433d-a4f5-edea3b9cd68e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6598ff5-7306-4721-a2ba-8352c4a76752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbc0bb7-ab01-4661-842e-20752e59b746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8f2d4d-db33-4b9c-af2a-b0898ded30c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01785c5e-48f8-4d70-8b1f-23a61d134262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52532d27-1ce0-4584-9370-0f0018d06139",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b6d332-40c3-472b-962e-3fa5996b9c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca7e0bd-1e30-41ad-8277-f37a06bc0c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63b9017-57f0-4aee-a096-2130cf1d4646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf1de2b-ecd8-45b5-af63-cecbc11e9b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e30f6d3-9dc6-4ce7-99ae-d8f9af23b970",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9476291d-52e5-46be-b70a-6e5862e4eeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e20c80-3fc3-45a2-944e-b7dc65d5a38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476e8157-5eab-4eeb-8b62-7f8a3c424eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b667816c-6b93-4217-8230-7971aac7b063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b42d29e-fd76-42cf-9d28-ed0750f53d81",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e279e-c0ff-4a23-ac74-59949c5a5942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1e5b0a-27fb-46f1-9af0-24e439bcc2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6464a562-b0d4-45b5-8948-e3e254781a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "168a373a-b8c3-4479-a9a2-b3c26c5421f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b09bb7-77f6-4369-881c-60eeb65272c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f493d9a7-dbe9-40e3-abb0-48af3feceac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9eb87a-4c65-4163-8bc2-069d691affed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d58f7-07c5-4307-8f46-8883dc726f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c7d26a-1632-4f71-bcc5-bb93701b61e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b0b09-48e5-4f90-8139-8652334a8fa2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6219e322-e93f-48de-b3cb-c2f88dfc5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e35c4c4-0e4f-4140-b2ab-956bdb24e2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea9a255-d610-464a-a3a2-40ee11370f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb257b3-2fd7-4b9d-b9e4-77add020a270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67a06d9-ebff-43bf-a7c5-fdc79eb999c0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc772a75-b303-4be6-a207-12696f5cd740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a704d4-8b5a-4ced-8614-b19fb9fe4931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88c8174-6898-4dc7-a354-4cad7d294e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96f5271-f3af-448c-a6b2-d1b58d808d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a24acc-621c-4aef-bfd7-2781da6a86e8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4778d9-659a-4514-82da-edfd55f7b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86521767-c308-4a87-afe3-a8b4567a7944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a898ab-43e0-4548-a585-dd60be2d6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4130ddf4-4dcd-4777-a423-5dab4d592062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a1379-23d8-4c82-8543-6e73dec0c5c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82af33eb-a44b-4299-b4f6-0042e13c90a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eaee50-6c91-4f5c-a16f-6a71483ab39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf0753e-0182-433a-bc99-2b59e6c53dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce927963-5181-4a39-b21d-8e017db90ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dc458c-de65-4871-9449-b7fcdd3bf5d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfdd9ea-e268-465e-a450-e3080c54e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0c5d37-a298-4081-8e9c-f2293d27e613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c785f-c500-4bb2-a7f6-664c1f749832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9578b38a-6540-460e-94a1-b378b6e76a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb5b27-1e1b-4da0-88b4-2557b364f4bb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9cfa11-833c-4f92-a060-32274020bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3220208-f77e-4c48-acaa-1aa0aacaa17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75691b-a091-4c5d-a4c1-fb04b2442290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8648e726-a0be-4335-ad60-78cd802f2664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ff2e47-0035-48f4-8300-31126627f792",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7679cf00-70f0-4a8f-b946-381c87843f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1372d4b-e7be-43e1-ad2b-4a2340abeccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a9ba8-9833-4e26-b97c-01e43a8074ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2feb01-6b79-4de2-88db-e0f97f55c744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92020fbb-dce9-4a99-a43d-6e94780b0fe3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a02382-4763-4c94-9665-b0ce6436edfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465d1dcf-65e6-4b4d-a23d-23154da858e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e80982b-c898-48ec-bf7c-1d8353488b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ec8cd9-2ed2-4aaa-8cd9-02db1e43e7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86dcb9e-0c25-4c99-a35e-06589a96a43e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d9627c-804f-4f39-a750-7f341eae585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026ead71-3f42-40d5-809f-ec37cc4a78b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e576f7-8be3-4cd4-8e5f-c78396bea0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff3be88-f05f-4f1f-b287-193e4811209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364e56d6-f1a8-458b-b2d0-b3aa9261fe1e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee9d454-ac4e-4eed-83aa-1202bf83edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7d6e38-a9e0-46e7-b352-7cf9de2d76a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3191cd13-5e52-4f1a-a2b5-9c1ecda4947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32220f4d-5b5c-4a3d-abab-c2b17d4aeb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edcd64-5ce1-465f-8938-0c284a0f9876",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b80b5-b351-46c8-8166-c670f0fe854a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf11427-5a0f-4363-8182-e7b638323e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aa0502-6b7f-4c64-a0b2-2aeafcdb4ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "095f9156-7c02-419c-bbe2-f999c9e630c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c390eb-e11b-4e25-8f5d-77bb2a36cd36",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f988a3b-7d71-46c0-807e-ef3b0daf359b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15392f65-0a22-43be-b71e-b5129a7e0b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f533198-6ccd-4981-a57d-b14916b493e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673f025e-d541-46d7-9680-fdbd83559fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d50fb1-9ff7-424b-81d3-8bd3dace4276",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22d6be5-53be-4439-b2d8-7588556582a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cf5ed1-0c3a-4e55-91d0-c9d3b607aecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119195c6-e050-40f4-9784-ddf3cd93ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95218811-eb08-4607-849b-dbe43ab51c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ebc492-2f83-4e0f-ac00-e83f81eba1ba",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcecd7e-8dfb-4840-9eff-004168ed00bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d49dfdd-bd70-4032-95ed-a03679b07b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836a65d0-21f0-436e-b003-04e391ba2992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4a5c5f-9f9d-499f-b0e7-65f9924c0aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c56af20-5224-40ab-9fa5-2584220caaf7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb032d3-28f4-497d-96da-19dcea330344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e2973f-955b-4ebd-b684-d3c5e09bf041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0c9097-3eef-477e-b208-59baa13f2738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e656f25e-d41c-42c8-a246-2d677158e02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0cc06-7594-410e-9791-6f602e48e4a6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ca8253-7ba8-4ed8-a9e2-a9f1d5c2846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e37a323-3ca2-4748-bf38-e1d2f48a36f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9605b306-8eb5-4f90-b67b-be7209e8ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "701abc47-43b5-40b5-8b20-9858d9a7253f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e0234a-b4a7-419d-aaf4-af22709da4e3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8761683c-7701-4817-8d37-68deb563c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21de42c9-0c1a-4910-b04c-c93a683ef6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20416dc0-78a7-4c16-b52b-21cae2f11b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bfc947-d2de-41c1-a071-b6210b1beaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1386536-2511-4c35-b9d2-deb288a0c6bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c593ef0-8bb9-410d-b6e0-b603dfdb859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfef060-77b9-4148-94a5-97931de8c962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce614f-6e65-480e-a179-19b09495a666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10eb58a6-3d2f-476f-80c0-09ce33c094d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6434d4d0-3ebb-4e5a-9c1e-5759e313b7b1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457f703-f2c4-4ee1-a0f4-31deba57f9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3190752b-aed8-4eb7-9499-094c208a64f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b36393-0c0f-4ff0-98fa-62e3d4827b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3389c802-0fb1-46be-ab74-2b5cd4624b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f62fb97-f037-4c98-8622-fc8597f82ee5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15420c26-1275-47a9-a862-5758e6754609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5bb2aa-7ba6-43fa-aadc-76fccd508555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8b8634-a136-405a-9173-770a41b3cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eaa5e4-8ad2-47bf-945b-1c3a8971050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20ed46a-d9e7-4c15-98cd-4d71b063d83a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a44c1f-221d-47e5-a097-2e162683fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5491c903-7a80-4774-a97d-c6c092dbc098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720abbda-8ef7-412a-8bc3-69f18bff5412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b40f153f-e0e2-4ea3-bf30-36d2cb710d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fb0e9f-f3fd-4c43-924e-1c92ecf8983f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedf80b5-c2cb-405d-a308-b41f9dd02292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46ba049-ba59-4f10-9024-7bf5ec905174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237eed8a-8676-4da0-aff7-43a2b12e2469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2dbbd9-a8a4-4395-b01d-63c082eaa452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7e1f3b-96de-4a9a-9a71-0021b50deb1c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e44831-0edf-4923-9906-e08f9f7347cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65625058-738a-4970-a183-265e385ac325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c905727-e899-473f-89a6-6c53b0e51f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97dcbabb-6080-4912-a476-fc4b92c58118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd70b774-8fb2-4328-9bcb-aa858085e97b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f728f87-6a62-465e-b5d1-efeb22930812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e12172a-f64d-454e-a1b8-dfe7f00b14da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a381cc-1b36-41fc-8c4a-1bef2fa917a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4105d639-3bd4-4db5-9463-ceea39476938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8284dbc-234c-4e18-9ce4-d29b358c3934",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1707eb-a60c-440a-8ec9-f1fbeab6f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32888a8-d554-4049-8534-9fed4fd64fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e5a07-664c-42d4-af21-3ffbd9ef56be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "847803cd-558f-4cc6-a2e0-53e6ec1c4fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f9a6d-3ea2-48ac-930c-128086a2ed72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d198ef76-f447-494d-8b4b-3ee551492d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86ae8a8-4c63-4326-9546-cfff44e12a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4a372-346e-472e-b75f-5158b5912050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b7a54a-3596-42bb-9633-0bc6e9b92d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb50cd6-d678-4ee2-9b57-97662a91e495",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b512f48-8f72-400a-8541-9afec459f84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d104241e-af8e-4bfb-836c-02c2c3fd1d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201f25b-80a8-4af6-a55b-4cba2d3fceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea50bad-39b1-4ae8-8ab4-51b420e4ab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9068b881-dee3-4476-b796-aa558c71d981",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e829c0-529d-4a37-83c7-0676f37d7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9712a338-369f-45b8-a1c7-3c320d3b694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6072d33e-f7f9-4a4d-b74d-6e6a77c764c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c373e466-47a7-4dd9-aad1-61951e8536c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6c58607-51bc-45c1-9e76-1356d6cfd216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61b2bc8a-c032-4bcc-835f-7fca5f20bcac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4589992d-bd4b-4dd6-af95-1a4b1061d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec251e39-db34-4f1a-b4cf-7eca51ec6334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa63ee79-585c-465e-a646-7a359520e5e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2faadd1c-65b0-449f-8465-722a2b024c99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a8a74b9-7fa0-40a8-b47d-2f36e5ee9a73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c204a88a-eb9f-48dc-8008-8c1f146f7bf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb8517e6-4cc4-4a7e-b489-01458755124e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccb9b938-f91e-42ae-8efb-4c9e0c41e319"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b95b81d1-b046-4938-bbff-3bae22508e3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e793b4d5-4191-4b65-aae5-e013ca31221f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed954abc-8ba0-4097-a66d-c6f87d39eb84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a234774b-8f29-4cbb-9294-1b4829e1bf73"
                }
              }
            ]
          },
          {
            "id": "67f0f4a9-a4e8-4c6c-a6f3-a08596b278bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9705829e-2363-48a0-b522-46a925720b6c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1fa0f0d-a03b-47c0-bbc7-786cfbc98db1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "496da88f-5165-490b-8521-b778f8f964b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1148cbe-fb9f-45c9-aedf-b6a8223ef444",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2db6b7d7-c432-47a6-a161-55f889031cbe"
                    }
                  }
                ]
              },
              {
                "id": "c539ae82-3fa1-4f27-860b-f29e6ffd59d6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6b65a97-9640-4b7b-937f-9bc9efdabe33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1535da9b-4f54-45a3-83d1-77084215f281"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00f6326c-e17f-4c30-a5e3-06f46e502a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3eeffffa-61fa-4c2f-af86-45e808e22845"
                    }
                  }
                ]
              },
              {
                "id": "67115be1-27f3-4580-bae4-b6f14bbc56ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "193ed656-3a12-41ab-ab72-4988c402d769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1499717-4935-4268-8ba8-373cfd52e5e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "207447bc-5305-43d5-9012-c02c2c69edc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea93577f-6b02-457b-b07a-ba7665ec3653"
                    }
                  }
                ]
              },
              {
                "id": "d710590e-6491-4846-acb3-239b9c90fa54",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac432ab-7394-4efb-b486-01c35a9d357a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "578ed4e8-e9d9-4b0e-9fb9-b74427238b92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0697e455-e8f8-4699-b435-d2b40a1274d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4be2389f-49d5-44e5-98a7-30f2c9f2f5b3"
                    }
                  }
                ]
              },
              {
                "id": "d1196490-b43a-4e61-83ea-1ba4259c2c08",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdef0fba-7229-4a3b-92df-91ffb9059988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "015a8ae2-3f6e-47fc-87d4-79f937769ac0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73b02005-1bc2-48e3-bcc5-10dc9aa4d93a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "738e7160-73d6-49d3-8d1e-fd1a46470a7f"
                    }
                  }
                ]
              },
              {
                "id": "f0eb62ca-7023-4d13-8d00-db2a4d51af06",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "242082df-9786-4ea8-96e4-6c3bd921f337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0046a943-4690-4796-822c-e84b2407ab3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a8327b-6674-429c-80ae-77237b0f7f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ac2861f-c26a-4e4c-84e0-d5f64915aed2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "037be5ec-af04-4381-8b53-f5d81b57c209",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cb8b631-e884-48a2-9e1c-bae11b873655"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "302b4ad5-2442-418b-a10c-ddd854fe015d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b304d250-48e9-45fa-8b43-9d39d5df4f25"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ef77bf3-ce5d-4da8-ab5a-ca42d59e1dbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25a17d63-3155-4a0c-876b-871ffb62692e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de2a9646-6a23-4524-a1c4-e80928eb266c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60864f7c-6256-445a-bc01-6bbd3e8b4ef5"
            }
          }
        ]
      },
      {
        "id": "dbca111a-9aa4-4d18-8bc7-8dc0f65a1c41",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e926042-2b4a-4cee-a9ea-940323e4618f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8471d52-c113-4a81-938f-0a4f0faf9fdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51575650-4ba3-4e43-97de-17a1c7e057bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b4f2a1-3a4d-4c99-bae9-b064c4aae1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9f835e-8b4f-4abc-bc51-33994042f5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4918384b-3e47-450e-a006-5c3fcfbd55bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b42da5-fdcc-431e-8dc0-f051e7293a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3eb8f4-7a5a-4205-80b4-622825bfa8c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c4ea7-2e31-436d-a929-c53682e5bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9ca32a-3f27-4610-9f05-b3d06ba97456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22bb18d-9902-4a83-8549-255674e5020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4dfa8e-cbf5-466f-ad8c-883873e139bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9743b20-431d-4b4f-9776-c2bbb386ab1d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e5c660-1b22-4c0e-9bb4-7c9f190f1bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aacbcb6-3027-44ad-aced-fb3323730691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b261a-cbfc-470c-b707-e7c41b7c6a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b340751-be2e-4938-b435-cc708eb0e0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513a4e3f-0768-4d2b-8f17-61be12bbce21",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b737acb8-d62d-48f3-8c5b-25bf15c6c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1d16b6-ec01-455a-b4cd-935cb96f2c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e99a4-52ac-4990-9e1b-ca869ccbc438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8081b660-a6c6-4588-8c19-b9ef912bab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b6a983-97db-44dd-922f-cbf60d313ab6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56165c01-7e1f-4701-b608-7804eb77e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc9cda4-452c-4a72-b4fa-897a72d05b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5ec3f4-cdb5-498e-a520-0d259f003500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94dbefd3-96d7-4dd1-973a-93cf3011abc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0649c91-8723-4f01-97a9-0df635f7842e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcb56d5-1854-4367-8c1f-a9b430053030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e3cdb0-9077-4b84-bcdf-8d139afdc1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cdcfbf-d4f6-4de6-8759-1c256df5bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65239a03-ac06-4524-bb1b-f1a5c81ce6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727feb30-11f5-4af8-8be1-1544263ffc64",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9452af4-edd1-4202-9dd2-1649f416ff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95473cc-c0a3-4652-9a09-90981b6bc67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f0d32-5d5c-4a32-b376-fe009852febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cb3fa1-9fa1-4876-88c8-ba62e3462f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109dfc60-a6b7-43ca-b6fc-a366303e92f7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21179e-c7d2-470b-ba1d-cade721e0110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a3349-4a24-4eac-92bb-4ddf8425084c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1776fc63-6ba5-45f8-8082-b2011998b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a531466-478a-4b7d-81a7-be8f1d69d1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30279278-d3eb-4d71-ba0b-16dde99c2f10",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef948a9-5ed9-4cc3-98f2-54c7502d0114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aacbede-567b-43eb-a9e5-40e97a2826f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c96158-c2e1-4861-a82f-e9fbbf0af0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "237737a8-b2fb-4eb2-a206-4c9ef3332790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11d2ae6-4c0c-4f5b-8546-df9c32f29197",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988593f5-384c-453a-8e65-2a1efecf319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ffe71b-e023-46e8-91aa-3de18da647e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf26e565-a4ab-4a80-89f2-c14b83b8d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6934cf3f-b8a7-40b2-b0be-51d1004e272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f919e14d-a24b-4b4d-a76c-f644696ba20b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582f712-8f15-47cc-854d-62ad16c95285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6731ce-64f7-42da-a277-262dd6fb578f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aee91c-63a2-4f4d-9ba8-46e205456536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "01b5550c-ad73-4250-af33-364b5185a469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3de75a-6a88-4bd9-92b7-da2e41492660",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22607a14-16e9-4ab8-8009-b31ba96eaafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d813b8e9-922c-4872-9496-ef556646da92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42315251-95e1-4e9b-8879-dde39940d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a63b6691-2003-401b-808a-b3db51584113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379a63a7-7843-428e-a70b-306bcc5dd733",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cf86ae-04a3-4b87-9286-d2701f66a847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a481de-852a-4a2f-8d54-c047981c16f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b03e5ed-dbc7-46c9-884d-b2ef9752bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1633402c-8db4-496e-93a2-e8aa9306ca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f3b04d-cbc6-4d1f-9199-f58292badd51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759fad38-6a4c-4a97-9f82-8da1c46f0bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ed5e9b-23c5-4e9f-889b-5f3c87b93de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6556a770-ba47-4e92-9841-cd0c0d38e559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb802bb3-50cf-4ad9-bfe8-fe7d54f9f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a590693-e0d5-4c5d-9e66-b52ad71ef865",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de8d0e-6030-4e23-8f7b-dd8bf249e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2014816-e25d-4c0d-9408-3711a55416ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc6ae65-c35e-41d6-9935-f7320d3ab5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad18ab43-b2ef-4c11-bfe1-3a4c7d67c9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ff78b-f940-493c-8873-d2ca002731c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7759804a-2ba2-43a7-82a8-461f7f948827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db35237e-53ce-4ffb-8ab6-ec869cad2da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f987bc51-37b3-4f8c-b412-b4e937665826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9a61ff-feab-4a10-804a-807126d01522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e1698-bcf7-4572-8648-4b99c4d31bd9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27916f7-b50e-48f4-ad38-ed53eef0d2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fb99e5-cd77-49cb-9796-cd3072392853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaac9cbe-6e83-4d16-9c9b-47b4c4b4310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e0f01a-a089-4f0d-8671-5360bf0463cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da86bc8b-cd37-4c82-967f-9e63215e30fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d52ab7-7f6e-438a-b946-7c1357d85a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a083bd-5f52-4d7a-bbfe-17e8de509925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b09e4f-46ec-4594-b087-47b242edce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec809ee-5762-4647-a731-9825e4dc2396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e73e9-2d3c-492f-9333-21293464c2b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b751b48-057a-4c91-8c4c-dd4d14055f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bf432a-15f6-46a3-a8be-d21c4ad3d7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e19f61-7a6a-4596-a28a-c458a100cc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fede232-f95f-44f8-8a10-959281f309e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18be4cbc-fc8f-42c0-b663-95399c8b9e01",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b5dd9f-05ff-4b7d-9965-805abed51dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1196c1-7c7e-4452-810f-9513bb0966be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e9ecf-9f7e-439a-9406-6d61d760e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a487996-5f81-4919-80bc-61937660b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e705158c-ca34-4c6c-97ee-5e6a1bfa0d67",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fada435-7c36-43ea-9101-92e33916db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae55f32-bc96-4ff5-b9a0-5fa30f5fc6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b21184-7d07-4565-af69-1e3bab4bfd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f5e9da-2da1-48e4-95aa-dfa9fda55c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0a7300-b04d-4901-8ec4-c1e20f1e65f8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9b074a-9a8d-491f-979c-76abab2f1b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96488b7-995d-455f-8bb8-4fc98df69aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a581e366-8f89-4d6c-8880-b229775584cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d30322-5cc3-483c-b188-32665f115764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64632a5-1bc7-4e21-8b3c-e7c18ccc3846",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef69360a-581b-4e42-915f-c5182e154e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e045df6-1519-4643-b525-a28c27e9a1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2dd314-6b57-426e-be54-7fb897b6c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71785991-7d9f-4788-a7c5-935eac415f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210a43c-d084-4806-9e0e-f0e331ea8af5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a616b004-dae8-4201-9154-7cdb999b8bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f586264-87bf-419e-ba3a-5945aeb151db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536aed22-925b-444c-b926-3c2a7790c57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec3aa09-e846-42a7-b4ed-337837184df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa67ac-6503-43a7-bfb2-155d06e90096",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61480b0c-ad6e-416c-8ce5-b84f705e5679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b162c2da-0a6a-4303-ae65-2995f1da1550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d617676-9a51-41ea-9969-71757d288162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9eeb83-160e-4583-afd8-4415009d557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5455516-c237-41a1-bbaa-03aa596dea0d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e35d7-d251-4ab2-a8f9-e511b6860dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cacf59-94df-4c86-bd5d-68d104db6a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec3da3-66a1-45bd-ad7b-d4967ca886a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a322a2f-afb6-48c0-bb01-dc94a98b663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf895fab-21ee-43c8-8806-49b453b1afd5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610773f1-8338-4439-9102-595e416932ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf7a384-75da-48c2-ba16-030f97efc09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2198ab19-adb0-49d6-aa03-9ac39ffd36ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec08a3ad-2399-4579-8941-4145cebc9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230085fc-edd5-4c44-9bbd-0277ff369474",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b69b44-a8cb-4825-a5d3-25847b6b5faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258a0ced-9769-442d-8e83-b4217ffcecd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfcb6a2-afbe-4316-a4f4-0d64e8075073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16dda562-a5e2-4f6f-aed9-b00ed2eaa54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9783af14-5bd3-4da6-b9c6-d886b9612a72",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e26537-978a-4ff9-8578-07c595ca4d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf21484-d2bc-4561-8a13-a1cbbd206725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70739c22-24d9-4b7f-9afa-78fcaeb402b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d2d56e-d65f-4047-83de-a7a73d9e122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f1eafa-5a25-4f4e-aa2e-18c8bd126240",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f010693b-80b3-408d-a504-49528b432536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ce96a5-0937-4a0d-a5e9-218f7e6a0788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870f0e7-cd6e-4753-a0eb-be2d84f17e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9de5bb-8e11-4395-ac07-bc014f257c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a4423-056d-4d5e-92da-81d9d2e59f62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a907f6-4d05-4487-8e17-794bbffa87f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4400668-0b07-4fa1-a6a7-cb8286047320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8814316-fc7f-47df-a02b-3bbb990c0671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e87c52-a015-45f8-9c83-f17a562805ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb711b3-f743-4158-a385-e908c7760893",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c6d6e-9067-4377-b2ab-2ce7ad374003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e52fe1-b765-43e7-88b2-1290a93649b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9983d6-4dd1-4050-9da4-1111628d2d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c263fe-587d-46e5-aa0d-1c4741ba7fcc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "261f2cf2-a2e0-4ec1-9f9b-90e61d6f20d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c783008-8d67-4bd2-8fdf-fde19c54e4bf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b5c675-6651-476f-a6ce-b2c62bf1c7da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a01afd0e-19db-49cb-8e3f-2c825ec0c16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211e276c-ff02-4047-b79a-a6bf48860ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "502a9536-0dfa-4479-ba5f-776bddb8f12f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f367587-b861-4a50-9a6a-3ec4bc97eeba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69d2f38b-cd26-457b-a5d2-56d60a06020a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee8f17f4-1850-4832-a709-5c4aa6da291d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac8adc4c-78ce-4fa0-99b7-f123a55ef441"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86442677-3dd0-4b25-b980-9dc40e6b3a4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "449f987f-d215-4cbd-b065-2627a0df1dc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f794326-f3c4-4510-8f1a-4513dc327332",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17f366f3-cb85-4759-9953-c63c77964a17"
            }
          }
        ]
      },
      {
        "id": "f329db35-9ac9-429c-9a7f-33afe99ab19d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "aa9eaa0f-aa18-4744-b0e7-cb3c9f69c788",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57cb7a52-350b-420f-802d-6bff712f4b2a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1d30a14-e1de-4698-980d-a00996fda199",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1d1bbe-2590-41df-b9c2-40516f829a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868fa900-5e1e-494d-8407-30b7534b80ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99c8f39-042f-4439-a03b-8d2d245f677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b5a0e9-de55-49a9-a27e-2aaa044e38d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71be7167-060d-463b-ac07-a63a9e6e135d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b05136-e9a6-4746-967b-a030e3019341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec47c81-0993-4c80-9e0a-561674c0b9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87575321-206c-46e4-81bb-a620f924241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af65329-ccb5-4fbb-9bb1-6a6776dbc738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecceed16-954d-4a75-9a1c-13acb44ea7eb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfa420e-d67a-493b-88d8-7549c472c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae9a073-bc98-481a-ac97-6f7df9e512d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f0e7de-5722-4dbb-a856-86319a4b0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13ad123-17bd-4fca-9d6f-420294dbd57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d43d9c3-11ce-454c-a20c-261cd4303310",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ab702-8cab-4204-8fd2-a3617161bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200805a3-3f5c-4699-8a3a-ea1624e30a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0637601-57b7-470a-b154-0183f6da657d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a4a4b8-0c1e-41b0-8cc1-c22268132da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40b44db-d323-473a-a4f6-8cbedd9a23a6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e133c3da-96e8-423b-9fc9-ca7a08dcfd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e543fa9a-fedd-4949-bdef-81826fcb0bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e21f78-cd36-408c-b951-cd3de15e5b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d467e05e-17ac-412c-aee7-b5072f7f3921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f888de1-3c3b-46ff-9275-34be4726c763",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24358d1b-f321-4e83-99fc-b5469814eb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da93fdd-6468-4179-a0f0-7affd1b1d596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d06191-2f7e-4bd9-9e94-ef0f69a11389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "424f7426-cbb6-4c2a-8865-01037fad7013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f1799b-a3a9-4a5d-8342-07d50a2bdf00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb5f6a2-6edf-4c1c-8acc-15c71dbb835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f30e21-287d-417a-a6a7-d64709df40c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280eaf25-811d-48a6-8a10-70f7bc6b0237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e37265-d754-4076-991e-8c43559b31e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd129e2-c8d4-487c-82d1-e8c60d357b06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf777d4-9d15-4b1b-9c44-28495a6ffb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadc8646-1ccc-4d54-9167-facdbb01da3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf8b7c-8125-4be5-a3e8-927f662cea33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c2af44-b8bd-4524-b128-8a9889fcb3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b035ea-6079-41b2-9f8d-aa33cadca451",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9e2b6-7989-4e9c-a5c7-a4307829ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9f6608-925c-4528-b993-6963c80c04b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e189c-579d-4ae6-8f45-8d7cb85749bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6f55c2-9e90-4fe1-a307-f34f4c99ddd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf0256c-35a7-4674-b1d1-e00eecbe9a7d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d912518f-bfdd-4544-823c-78b69eb71b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119114cc-f0ca-4ee7-8d52-3373e7e68efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfacc023-7de4-4cdf-9de2-47cc92e5c47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c2ff52-8119-4888-a1ae-1ed3f0757824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4977393e-dddb-4e17-ba09-ff22287562d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69e9a18-24bd-43bb-a53e-c29f6347066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd91f8cc-e56f-43d1-8933-55453d6be294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4a96ec-644f-4ffb-a0a2-0970c973f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d76ad211-69d6-4870-a227-e63432e810eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e522eb8-a5e1-4fcc-87f3-329f58db66f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6cb7ad-7a46-4e0f-8652-cb0a088897eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47598e67-be36-4dc3-9495-22180439dc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f28cd05-db17-4555-a064-1b642007db7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44353a96-cf36-48fa-970a-29faaec48118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a1bbcf-2791-4223-acf0-26b4ac08b35f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75576c3-9495-4ebe-a5bd-70bbfe8bb972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5f91ae-09ff-4fc6-a426-492439b548c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0adf8c8-f23b-4873-ba19-fbbaa1e6f34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff37ea8-f54d-4f0b-a8c1-0bdfc7cfc9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab95d64-c5c1-4b37-9801-60983e30b5a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb97bf6-0b16-47e1-91ff-a55f1bd44c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a91a28-e186-4afd-a498-58d83a259437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfa41a2-1559-44a1-84cf-17b4d8f1af6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d867e807-9054-4808-b036-ec2973003515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdbce96-8fbc-45db-87bb-3528d3bb6f77",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3802725-9cf3-4019-a42d-454d509973ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d2ce75-cf46-43c0-8c47-31b8ede2b993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a651b0-8f7b-4679-83c6-eecacdde9b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0863da-4ce3-4af3-9716-f3fe7493924b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47f2d8-8b69-43b2-bb4b-9f2a9ca3ac71",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45550406-d74b-4345-beda-af0731bd2d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0526646-882a-417f-b39b-61678cc945a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a117c7ba-28a0-44c7-a303-5d57e9f6f5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07f8f67-a46d-4b82-a390-79cea1d9344d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3c56ad-463c-4b34-b881-43c4303cc91d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8237056a-af39-4f98-b8b9-88de628b86b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c1d78b-8e71-44ef-b449-dcee9283019f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fe8972-d994-4238-b9c4-32b9f0991d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69074281-7ffd-4502-9c1d-fe139331689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb2d84-2bca-4a61-a811-7bd1393f5cf6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d3ac1a-b6e9-4a1c-85eb-6a58343fb699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c7fcc3-d19f-43af-80fd-d22c2c1c42b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc572bb-776b-483a-a8c7-6bd418842ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "575da05a-6143-447a-b9fb-e06185d0521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86991c82-ef3a-4928-8b3d-d2964e0a477f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fd197e-3a14-431a-9fb8-5893527f4b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5cbc93-9151-4076-be82-023a59fb738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab40dc-97c4-48a6-afae-d3011d5d0bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d880057-21f1-44b2-85f6-042d79807972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ba6d80-a5ff-47ef-8509-5bbb75085534",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824ef33b-208f-4d8b-bd39-244f79bd4c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a26143-1d63-4344-bb1d-194aef126509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1002d2d-1da7-464b-a1ca-7951e2a10f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88d058b-d45f-4f5a-8dca-dfa63b60c699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d30da-f2b4-4090-a64f-fa3eba4b389c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a3ddd3-79bc-4f7e-a12e-882d7831ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbca3c3-dec8-4e43-adb2-d82bc23ce0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30116e8-d807-4db9-8f29-37393f58e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ada16e-de7b-42da-8632-0b8f8a9c3ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c9bb1d-eeda-43d3-8a97-3a2c04525bcf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d74c65-4c55-47be-9c9d-4eaefb75bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f726122-5058-4353-baf6-a45c42fec760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9894c474-14f0-4baa-927c-14fdd4d7ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c498c37f-cb59-4287-9978-5036d3abed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882a1426-1eb5-4a26-bbd9-daf2ca25f8af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc354806-bc2d-4097-9f66-582c38303c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aaae29-77bf-49d9-a004-6ce3089ebf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44158b12-1b70-4a53-bb6d-fa3e7c65eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b7c872-f1ed-4421-b132-dad2996067cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062155eb-93a4-46c4-803b-3c28ed24f41e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9968125-5ac5-499c-b82b-26771d41a7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec420d6-05b1-4f8b-88c2-785e108601de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce6ca02-47ba-4267-8fd6-6b36fff4320d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c244e93-e2e5-4746-8448-441a5f0a062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c4f9cb-7662-4e2d-8525-2699c0f9b94c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94edd3b-13b4-4f00-adb5-5e9334e57a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cb60ff-027a-42f0-8ea6-cbe269d79e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a371cd9-468f-42e5-a4a5-9d559150b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6656e8-479b-4cb3-974b-2e71dfef2264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88dd378-3e0e-4b0a-8ba5-ef70870d3961",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f75df5-85b7-4c93-b7de-f6d9f5320e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696a7cf3-d47a-4e66-9f64-ce229fa10bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b980aa-e91e-4a69-94d8-ec9e3c49fd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb5959b-c398-46a9-b9c6-078d75ac3095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfa8349-0126-4779-a477-297cfc8ebfc6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6765a283-5de8-4e70-a768-5be1b0305079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ce40eb-4558-4f0a-86c8-eeba92c04146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f509ccc7-2445-4682-b363-fbf12ffb3dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25692642-31ee-4817-9d44-ef9b8a76ed1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd8a7d0-1f83-42be-baa0-71b66262e12e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29020064-e9c1-43b9-b2e0-2ce9eefd5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab69659-9da5-4833-8c6f-6d929d57b9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1bdfcb-142c-4cbb-9d8d-142f4f3e3e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0669e256-6db7-40ba-adeb-b11b6845edfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bdfd66-b56f-485f-9806-d89082483c26",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce612c5-d02f-4391-99be-af1a6d608faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5105a9-205d-424c-8435-9f915c58bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abf532a-c331-4337-aa16-e5a3851e4bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec8f8ba-43ca-4ed4-ae2b-23a699b59d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026a213b-3031-4251-a473-d2294f0f1eee",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f4e1e2-c7c1-4e68-9a65-842aa9cfc8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a5094e-9608-4066-adcd-deeefc4af6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e200e1-c7cb-48e0-8588-94758d97c925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb91fa8-5abe-4716-9626-52d71d4e07bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4620a63f-da1e-4c4d-89b7-6df5449d71de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf6837-f78e-4856-a993-0d1aa9cb9c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5115a46b-6cec-45de-9597-e77b46320e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c4431-e77f-43ef-a166-b7035d86504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81588d2a-6a60-41d2-9dfa-7c03ef682402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d82dff-fd10-430c-b51a-2bba613f870e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3401b8-d747-49d2-b1e2-0ee864cba357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4266d365-f58c-407f-83f6-caf62366cd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cf8c0f-512a-4090-af1c-185ed75939bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc29d97-5694-4e05-9d86-e7000b54d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c188f3-2657-4b31-bf52-75e7939c1b76",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43dff8-0ba2-426c-bd5f-442d7edc6cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81327213-a2b8-4ac6-bb72-54bf71e53bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e34ae8-2b58-4386-a8d5-3e060dc539fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6605fcaf-3b93-4fbf-a761-d3cfcc3e318c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016bee28-a7aa-4cd5-9e08-e3ba3055dac6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acca1cb0-514c-4132-950b-e76028dc4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d3e498-6b32-4229-a417-c1c1220e14d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a405fb6-0e23-4aad-9b59-f343f7d51aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9768eec6-b812-4e1d-af9f-cef0741a3e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea051f-3c6a-42fb-b302-2f70f75255cf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23b8adc-d9d5-46da-82be-af31ed8a97c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afade972-c4c5-42b3-baf4-eb4696b3e5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70b1fc6-d10c-4f5f-a501-ba3bf21427a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9e18fa-55b3-45c2-8e74-b25a5c437b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42613d34-bb9e-4e28-87b0-1ca56c7a709e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6489a1-58e2-45bf-8193-8b6c46073e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5c9193-286e-43dc-b787-2a7fafc98b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bc2d2f-f619-4844-9164-0f6517354fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa7e506-0028-4c9c-88f8-1bbebc1d8e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739aa668-86f2-4f7b-b193-2eea8b0fc3c9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a6d998-e16f-48e1-919f-6da5e0da5226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8028db43-5d12-409a-9d5e-3c869f64ecef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31bc602-f28f-4a60-a21c-b073eec3c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "881ad1d4-fbd1-4877-95ec-07c714044837"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b35c0d0d-25ad-4857-b2f0-b29d466189ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc8c6d56-fec2-4c80-a41f-d1846fec7d0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681413dc-0119-4263-9689-fc7b6a341d11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a269c302-cd86-406c-8625-b4cf769c026d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf4d707-17a0-46a5-a0ec-e2a4b58497bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fbc0715-7e3b-439b-8e3c-41dc573f28e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03739efa-1197-4868-ab36-00337f1c78cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3000c333-c974-4c15-9864-087ef6d2e60e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "252117d8-3718-48aa-9f43-53766e9e5f3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fd7b507-1577-4594-aac4-32ad1abeda34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "697daa2b-3bee-4f1d-b0a3-c93fd2de3f77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e9ea7b6-b81f-42cc-aab6-6d8ab9a01c9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb16d13e-febe-4c69-9534-1a4d667c739d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "548732bb-7c41-486a-8739-58b5eb86d543"
            }
          }
        ]
      },
      {
        "id": "6d4839ab-2796-4885-bf71-e61114258e66",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e3db38f9-90bc-4d29-a1d4-05fa141808ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ef83cee-931e-4ef1-a0ec-cd567b1d9b9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28c4bae2-e60a-446e-895c-c048f63b763e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2ac37-2b62-4b23-9ff6-1ef1e79eb6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fe1744-092a-423a-8e2c-d7c599c87b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018fdaed-633c-457b-bcaf-81577293f053",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e969be1a-6d89-4a22-b8ef-d62f18f04d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74114319-33f3-400c-aeb2-b8c60775737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850af165-746a-49ae-99cd-c0cc3dd1c3be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6c5eed-f30e-4bc1-9764-f483bfaab078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b743eaf1-6935-4e23-aa67-0473731bba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220980a2-7302-44b2-96b6-55e4c22bc805",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb6c76f-5638-4a3b-9f47-1847a81f4bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503e4094-228c-46f6-9ab1-c9acb66f92ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a869c6a-cb1d-4e8e-9d9b-eb2296ac43ee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0622e379-8c9d-4199-a488-a01844b38378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc04343c-f7fc-47d5-8c65-0a2b70269b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3b4c71-1f37-4362-a8d7-0836c189118b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1885a-4383-464f-8be9-a065ede52a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b2f6f5-f175-40c8-b635-ecb6c5fd2d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965c1a63-eb6b-41dd-92e2-315ddfa378be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d74f01-23ca-4245-877e-120f80ebd4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4682e06c-f47c-426c-b91d-bf52dfd14880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0139808-7945-4706-8e8f-5d884462292a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d877ae13-0a31-4064-a9e8-c3fc2cebe539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35616022-b53c-4386-9dcb-d311cf92cbd8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea2631-f526-495e-826b-0b61b850e943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9253cf16-4a52-4aaf-b65e-ffff6eaef7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9803019-5d1e-4b87-88b5-bb90ab780143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0f62a-d112-4c02-a7b2-31fcea6b9bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e36a7e6-c62b-469b-a6d2-5e204ae88622",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d52e50-1c8b-4a77-992b-3e580defded2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b220c79-f696-4b57-96d1-760636bf6fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ce131-2250-44ee-852b-b9762207df1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a728e1c4-fd3c-44a4-80d7-88668c078b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf62664-354f-4c76-870d-be8354c76283",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d61e6a1-26f4-44a3-929c-b5e9c0448b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1e310e-b05c-45d1-b3de-c56d2908504e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8a1d33-662f-424c-99ba-1ddb069a18cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf7c967-9e25-4cde-b800-38b57d519131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9825b4b5-c8d4-4532-9b2c-f33afa173b42",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d429f31-aba1-446c-be85-5b6bd97d2065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec62af63-ba51-4337-ab72-63fd077a921b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be7b06a-cb8e-4a3a-8958-eb744e56a641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dea89d-d57c-42a6-87a7-ca9a8e9a42e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0282dab-33e8-4e42-8287-d671ba75d2d9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e13024-4f25-4514-98c8-906de613dfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653ac7a3-41a4-416e-8761-cc856c3c90a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef06cc2-7878-4767-a442-6a4417bc8d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcca439-342d-4028-b5dd-9f5dc2566b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229cc317-2f38-4a50-b691-4625fe79fecb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d00fbe-ad88-4867-8f1d-7c4df80039d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ebb766-d6bb-4114-8126-e005f754b421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a575c73-835c-4a05-a7d7-47617276e9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67b8a57-bd8d-445b-804f-caee6e8a9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7706b86c-fa86-4fab-a982-143d31974b87",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e18d3-839f-49d4-807c-77bc87852c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597b7ef2-743e-47c6-a3a7-8a50e4f287fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156d4009-f41d-4b37-b06a-e6ac21ddcb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0f9845-32f0-4add-beba-249e0de9a490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebc5341-7730-480a-95d8-516c2f68e2e8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66541ce-5cd0-4501-978f-97465dfaeac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b822765-240f-483f-b6cc-a46997f2bb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dcd84a-cfe1-4168-905e-32f52dca2113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce344a71-ae20-40d2-a9eb-039d9c9acd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466be7f4-84b4-426e-af3e-a508fcc04ecd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd42d6c2-815d-4827-95fc-68f002b6e43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afa4aa2-b7d2-4a61-9862-0c5273d42ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe77c57-2615-4500-94d2-d3f78ce47dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7d35a2-6035-45c7-902c-14e8ce77bd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c0a0a3-0c5e-47d7-8be6-08132e2a27d7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7131864f-d031-4c99-8ea6-b3194da16fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489dde3f-3662-4beb-bb04-6d9bd71d6a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b23c7-db8a-4d85-aee7-d5a69925602b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9efb986-6927-4cb7-958b-b9f5ff7a4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e64858-b477-4add-bf59-ba45201a638e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d901b7-ebc7-41cc-b47f-a45f0a3f9e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3703bca4-16eb-4659-a9cf-b5479114a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfbb2a0-c957-427b-be3b-de486dd08bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8431b3-e8ee-40af-b8be-c826dab14c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da51de5-8167-42ea-868a-9dcca49603e6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f279e12-2870-48b7-9484-78b5b207363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f12ec2f-fd7c-479b-82ae-2ff9a7354815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5a862b-92cc-4445-9889-a3e285441b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee3b029-5fe1-4579-ad52-6754375eab4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba80e13f-aaa3-43d4-bd3f-97606209c111",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19247d80-f358-4f7b-ade2-622cd1e71ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aef0c7b-8559-4a35-bf3f-d3e3bc050208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f181814-0a9c-4e60-b9d1-05a4e86f597a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a521a9e-9952-4515-ae38-76b50ca1038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd90da8-1330-4236-9ded-81c9aa8e69ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72498dc8-c527-48e3-9f21-ad7307a5b803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e68d32-f458-4491-af18-7ceedbc0d5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce766ad5-82d3-4790-910f-35bfb4439d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0acbc95-75eb-403e-8894-3f5403b7aa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af83cfe4-fd6f-4f89-8516-8c44a3c218f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adefa8b-f17b-4cd0-af0e-ba99a712649c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852e7579-283d-4d23-b59b-be8003696264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2185549f-3e3f-4d23-a59b-3e4705c346c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c602923-55dc-4b40-a1e7-2eb89986b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f59baf-062a-4228-8a12-f1fdc77445a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163145b6-9a8a-401a-a1af-0309e4efd427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a147647-ff0d-41a8-9611-0615f9b153e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd11ad41-a8e7-4de9-8222-f5c711569cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2145e784-7d78-43ad-9b2c-4aabbe54f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853667c3-f373-40b1-a6e6-a0cf1c0ad193",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9437ff-323a-4493-9473-444c798c3b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d969f25-42ae-4dfa-b7b7-d83ff8839a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba96cd-fa69-41e5-800b-fa0b0990b16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079d86b6-9cef-4a37-9cab-8c297267c640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22ae4a-911d-4e0e-bccc-1bf0477f936a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f83abb-3ee3-4837-af45-3dba886c3297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbcb7ad-4cf6-48db-baaa-c55b7bd58047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44241e5-94f6-4f28-b861-fcfc6e116fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd751ab-8d2b-4ac2-9aa9-09f151391903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5e1d64-1af1-4943-994e-06dfa61dbcb9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba81c7-074a-48fe-829b-9a5d319fae49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be604ded-a68a-40cc-b10a-8771f2c433a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40d9596-7edd-4805-9385-3c594abed713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3df233d-7376-4f38-95f0-74bd5a95e5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f91539-10de-48e5-9871-8241d0c7cce5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd4d4b4-c86e-4238-8edc-d00d68b4f0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63baafd4-5cda-4563-a889-a524e707e91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c8ff45-ee19-452c-96a3-f948cbda3f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a4ad1d-5783-4e3c-bba7-ce13cfdc9561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2d7401-bd6f-4cd4-8176-93dbc12d55ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd6089-fd49-41e2-a22a-c0cc6880c902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f024a9c-a49d-4402-b384-a30be7011f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb0d64c-a237-4af5-a6b9-a1e04073e1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b2a81f-7c41-4d8e-a7f3-1cf31197c934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b32717-69ee-466c-9c0a-76463dda6ef6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af169cbc-3f53-4bf4-a700-68926b8a39f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3830d6c8-a51a-4912-89a8-05a9f5638126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301596b9-63cc-4992-977f-21965b9fbd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee6d907-b493-4e21-9e4d-bc48af42c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88094d28-e29c-4cdd-a29c-8be265c6a9e6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0598f7-ee04-4c92-9f89-83813a4e705f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dc033d-40d7-4159-b4ab-f8cf9c0d3915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a878506-40ca-4b32-a9e1-bc9f3d53e2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e911035b-c01e-4aa7-b8e0-708cc1a10143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40be50b7-6077-4c6c-952e-59b7cc3a34e4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016de3d6-3ccf-40df-892e-accf6de22b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508a8b52-7bc1-481d-8e0e-083c5ca8a9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8208c6a-4d6b-4f49-bf5a-97106fa8e01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0afc496-0cd7-4618-a8ee-d6aeead26c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14daf59a-1a39-4f6f-bd24-38b2df7f07a8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a22f6e-ab95-4679-a500-ce812429213c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f085898d-95c7-4aed-96ec-51a110e99940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f10d0ee-0d7f-4d61-bd34-e870fdedbb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597b292-e158-45a0-b5e8-45b87ddbc6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ef0f5b-cc0e-4b9e-897b-932b8ab0fabd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc51b9dd-d8d8-4900-a21f-7a8d4a7d56a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42c6ff7-120f-4d11-a237-9bb2028e8846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1d8970-6175-465b-a426-18e6dfb5f639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a779c758-4f61-4741-b3a4-c011cb4681ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76abc7b-5109-43c7-b98f-9c9248570dff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83143cb-4186-41a2-9b71-9827ff75c141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d2dca5-43a6-4f93-9a80-74c7a86a741b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b2474-3ee5-4cac-b96d-a8a325f154ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925948c1-156c-4e7c-8ecb-6f13a9bbebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f89ff-a8f8-48b0-974a-4ed0396d7d90",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9f4588-c04b-4142-99c5-117e19fcc846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c520fd1d-a241-4d0a-81ad-42e4f085d3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a587f8-c1d0-4f52-a226-901a5f0275a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3ff3ae-17a4-4f75-bae1-aeffebee0e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945d437-6f40-4c18-9b3b-e484136b11ef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3405d8dd-7f66-4763-b62e-04281d9eb757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c818623f-4eb3-4471-b1e0-76f019841255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035721a0-9213-41d3-9267-1a20d6bb8237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11d9292-29f1-4833-9272-8668649f4674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89074631-7780-4d2f-9264-3f9ad27d9905",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13371eb-694b-4543-81cb-434d155dc179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b6578f-6111-4f95-a636-5da9c718ca02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd3324-ea9f-4a9e-b3db-f5e6c25bd51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671b4cfb-38b0-4f89-99fc-19f69e335293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7565a329-cff4-417b-b91d-45f27bd7223c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef30e1f-08df-49db-95f0-c8af07293401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf1bd38-1890-4d52-9718-96fe5fe99b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbb5db4-6bd8-4562-ae91-79c325c4859a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdd7a32-6d93-400b-b1ba-5c8c184b075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c734e5-e346-4e77-9e0d-2acbcea8bc21",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e7e343-f989-4324-af9e-73e797512333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597d4776-ac5d-4501-927a-09021bfe0d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b5081-3338-4d44-9a0f-8cd7c4873434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1eec31f-3b5a-4eea-8c84-56e493434183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38206213-3e63-4fc2-a079-13857decc013",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa74b8b-1a70-40a3-8709-c3356f521278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75706fb-82bd-4c65-befc-c1eccc94f77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b94237b-0552-4244-b827-d19324e4308b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708705b2-f2e2-4516-b7dd-9ff3ed2d58ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce2599c-7f51-499c-a66b-03b79c034283",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202606b6-2f3d-492f-b806-3f5fcf6d6aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8377a2-84af-44c4-b372-7232754e6885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f05d61-4f22-4320-836e-d37fed614413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df7d8a7-088c-40d6-9e9b-ad9875f6ef6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669a9052-b0d6-45a8-9ab5-868be2002e4d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3042356-1217-4565-bc3c-0976a3df6c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e977cf5-75d1-4541-ab37-962781501375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748153cb-fbdc-4743-8a62-f76fb361f60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329bc49f-fc3d-4b77-aabc-cd388bd4f13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de668e63-edfd-4632-90f0-8a4e549a9c19",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909c6ed3-a943-4115-85c6-b9707bde0aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203b2522-2ee1-49b7-92c4-f8b052683de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fef37d6-863e-4ff6-acf6-05b214cd83a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3bdab-5c74-405f-a7e3-aab6c7c47192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a095209a-35f0-46cb-9ab9-69df8c21f71c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72525ae-b47b-4e6a-b93a-e0a151204a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7e4127-9213-4821-b3db-7dade33255ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a702973a-3309-43a5-abe0-85b977748745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8f68e2-2d71-458e-a591-7796ec23cecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b398df-b139-4ae0-8724-f567946238bc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa4eed-c6a5-4336-a05f-343fd06ae45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f7201a-10ba-44e7-a241-b6f06a1726f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518f57c2-f757-4894-aa07-80ac3a2a1996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c846a21-f831-413a-a02c-98b8fad13672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d08b84e-ac36-4f53-9040-5b896c8fa7f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b37def6-61d1-4a48-82de-09523d300bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfce7f4-f4a8-435f-8aba-50779b9bd74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5160c646-c90f-4641-bfa2-b073628bbf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48c2c90-671e-4eb6-8237-775daf71045d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f31c9c-f019-4018-848a-68340fe8c8b7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af427f81-6954-4c08-87f4-dbd4e36d82a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1772bb21-c073-4745-8f47-3d04977eebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2d0d3-b9e6-4a4e-9850-e88dbbbb4ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062ff0a6-0fdb-4ac9-ba71-83158f2c1039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca00129-00c3-4677-aa1b-c2b0602f5191",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88069edd-56fc-4e87-9825-1fc931e1cec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c993414b-7f98-449c-aa5d-78a32321d8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b9296-6c45-406a-b8eb-fa980317d8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c09014-9560-41b2-9668-054c56fa3efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa366b30-20e5-43a7-ba74-f624d0e9e411",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888409b9-9534-4323-a627-3946e634ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4409df8e-b30c-4786-ac1e-b8a3eb15ce08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82839b7-603e-405a-9dff-4e6c1f166470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c51a5b-8f82-4e9d-a593-57ca5d62c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381714d6-a62f-4e02-9045-9d90dfecb32a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae4b65d-298f-4654-9ae8-8634bbe78baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90d80e5-ccab-48b0-b33f-0818445e6d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d256754-9c09-4a1e-a4a4-5bf2376103d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de32077b-eaaf-4d07-a65e-f9a1c3277feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43eff6b-bd9d-4ba0-b022-f431917e8fc3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a80708b-5d9f-4e78-a19b-b9ccf35e17e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112a009d-f0c3-4ce5-9110-862e61907e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f972ab-59ea-4209-b54b-1f34d60c581e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2541f0d-b8d7-4f0a-9bf9-920886309fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c55c3-7f9d-4bdd-be70-62ca290336a0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0599bd-848e-42dc-b8cd-c94d9133d020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a664ff-c6dd-4f7d-b097-5a3563d19589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7c58d4-5260-4d0c-a6f4-a016eebda0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10947075-196b-49a2-81b1-d2227697b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e1913c-1b0f-4211-b6c7-9162ddb31ba9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a0be0-b7cf-418d-88f0-431a697809a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f86ad7-357b-4cda-ab35-54e9a9f3f042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75fe7fb-32e0-4c11-8fed-42cbe6460cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cf63c9-47ca-4a30-995c-c6ae78ca91a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4888718-b41c-4292-85b1-7940f5faeab3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c0d493-468c-44bc-b1ca-6b872ba317b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a42b343-c180-4a40-8748-383711366fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004145ff-ca15-4acc-bd55-3de0760de16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5723dc-8be3-4f81-8988-97f0279db70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e7099c-7bf9-457f-a42c-c8d06ce5fe9f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd441b-bed6-43fc-90d5-96ca420332e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48c4399-a0f0-4c70-accd-7cb45790bac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e81eb3-6074-40dd-944f-aa387962ac88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2931af6f-fc42-4e1a-b519-fe849334139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cc7d5b-6d3e-4356-9bb0-3fb355933732",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91604a20-5e4a-474c-bbc6-972191ec59ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4244c69-f9bd-473c-b782-30eea1611396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ee5ae-9b9b-451e-8b7d-81a764deaee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9af6c29-66c1-4b10-a2f3-39f08068db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2791d784-ec0d-41b2-8230-73d8ace001f5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4be004-79a2-4b0a-a3fa-7e4b5ca134e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6087ba94-baf5-4808-9fdc-edd124d4d207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da144632-d58a-4450-88be-e8aca86ef4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642f798c-2171-4712-adef-89fefb3a3925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4ef7af-46ff-44e0-a4b4-a10ff6747c3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa4ac7a-0130-4993-995e-634b04d42ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad6283b-2584-4519-9331-a22a5b415125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dec81ac-4e9e-44dc-a2b9-a81d79e5343b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e28056-6bd4-4d29-bf6d-20d10366aeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb8cc06-bdee-4708-861d-8db56d22f497",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b916826-7c20-4efc-8192-90e101546952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc9b3ff-6ab4-4f61-b4c8-0d103ae2a6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e3b573-9f9a-4808-a5d4-b3172f537d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369aa0e2-bbf3-47f3-8b6e-4e678d5c4868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848a2026-be07-426f-b2dd-56879c175dbd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063fe22d-3f92-4172-ad9b-97487426536a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1b17e1-ff7c-4569-8e20-94ed8b28a0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2b6e7e-462c-41b9-b8dc-d593a7dc09c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb5f0d8-68f6-4033-890b-816e1c6ad5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291f00bc-6240-4697-b5c8-6398a23e74fe",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe85f3-3ce8-4580-8033-638b12f1770f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001e2154-5cc0-4ef6-ab89-d8d8aab364ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f3b5a-727d-4a9f-9e1d-39f60efcf1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c76753-36db-4099-9316-5b9865b7bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfb92fa-f88e-4cee-bb80-5136701291fd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e357a50-9352-4fdd-9cfc-62480eb6e2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acdca91-845f-4370-ade2-e39738ec9c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d2095-6d51-4c02-a875-3dfe4a5ed265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3c7b9b-80c1-476b-8cec-35ad86b652d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f834cd-f1c7-4111-ba73-124df2d52a03",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c37355-8518-4b11-85ff-f1a6c47fcd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45fc75f-7d16-4e32-b362-42babde9f199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84a55f9-be40-4275-a86d-2519b93993b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be000b94-97f3-44a2-87f5-8f767db80b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b2fe40-55f1-4e3f-98cd-788e2e6ccba4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70435ddb-47db-4b4d-9a74-fc70aa80a532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50b2038-0e8d-4b8e-a2c2-f6b06e84812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82de998e-87bc-4a93-aed1-8947362828a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c971cf5-4ff9-4bcf-b5ff-8117a596e712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de31c09-3a31-44a6-bbe7-1f8d28fe9f2e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c6e376-f7e9-485c-b79f-0c97429c1a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee825dc4-3753-4241-b33d-82606178c1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797c320c-1c19-44cb-a07e-595a33d80b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d703ddf0-85fe-4684-ba73-fe8355201e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9f96f3-9ce9-46c9-a1df-b71538b38a48",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e846cf-00ae-421c-bdb3-dcfc9f893f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4cfbf5-8f63-44bd-8542-5b8da17cb4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e763e5a-3718-4cd5-b476-3c0befbc16de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904922cb-a7ab-49ab-ab13-20b7e41d727d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e3e5ce-ac1c-4a45-b650-adebc3949aa3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f697a3-9759-4c5d-afb8-5da98bdec842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e43033f-8494-42a6-af0c-63762f9b8c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cdc637-9763-4820-aefc-5fd1124ae0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087c38a8-34f6-4528-872c-1900ca3d3ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de25ce8-7465-4f79-a8fc-1179294a5c6a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cec6dc9-1115-49aa-8af0-32727be04ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa36a9b-95bf-4671-88e8-5b5b73f8f069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92276af-c613-4516-8309-932ca5c7dcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7090d9f4-6157-4e69-bd85-96d3d5869d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd57682e-f93c-4079-bea8-b80219892520",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790cfc2e-a010-4818-bd89-b60f490c7fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc20061-fd30-42fc-a418-db6a9625fb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9160e1-6ef6-4bea-a211-859259c92501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e818035a-27ed-4d5c-a0e1-0ea05001ff06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbb7dc1-e12c-4c58-b068-5be6fbce14ed",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0b830f-cc6c-451d-904c-4da2a98ba587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128d8b11-b6c2-41f6-b810-600381ca4c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7bfef9-389f-412b-a5af-a7dd9592dfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560fd579-03ff-4c4c-841f-6191e903c4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4c6ea-baf3-495d-a8b9-dd17cf1f2473",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc78ecb-5388-49b6-920d-6db53de6c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244a9a74-abcf-4292-9775-ebba05e5860f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6c24ce-e274-4edd-82e1-b5534856da47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefec185-2084-4e9d-9268-563c85c271aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5488e606-b1d7-4f4a-8714-c5fcaa57becf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27d5953-fd4b-4149-9535-79cf5c2d89a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655da1a7-cbf9-484f-8152-4635e811b025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ce90c9-85b3-4e78-b30d-09c5dcb876f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997f6cec-81eb-44a4-bc9a-08e79ea70aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6e7a3-69ca-4571-b8be-475fbc625666",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec2e09e-e85a-4de7-93ce-b402d466e76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb58d34-9314-427c-b460-10482c8dd6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d7193a-04cf-45c6-83aa-5c681c7575f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca461814-d3f3-4fa6-949b-fed4f3fb8fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3574180-bbfa-4708-8572-5eb78505d946",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada834dd-e13f-463d-b0d8-43af92414be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b754c33b-6c67-4143-b7c3-fe0529170e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1f80f6-7f97-4f9b-983a-c53dfb771300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45fda8d-e11e-4a63-8b93-bf098b882539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a086745-827e-47e1-ae6a-165b63379ce1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44134b0-ebf0-4d60-a40c-6ec6925a5df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5628a3-946b-4836-ad80-08e8746b78df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e323de-dfe6-425f-b723-b418289d669d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aaffeb-923b-4f0f-8f78-716488b5f3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c05b8a-fac1-438a-b6c5-63995b3ba286",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f372841-23dc-4842-b626-cd0a3adcbdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12d955e-29bc-4c04-a513-c600150ab1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d690fa10-45aa-413b-9759-93c46e177fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13c8102-8242-43f6-9552-87c15873b348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aab43a4-09c2-4152-ac67-2c8468711e39",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd6f4f1-10ac-4897-b774-739beae87888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd33986-019f-4493-9a7a-7cd9e3d55ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6144c2-5d46-4a53-b11d-aed9c4f27602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d31c09-4f8d-40c0-8ef9-56bffc8462dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8274e78-f60d-492e-995e-c37d290ca92b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc5bb19-89b5-4886-bb83-6b6a33e5c6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57119e76-f46a-4ab1-9f68-e856f4776c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187ac6eb-c5f0-48fd-b080-8f6041d02109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25905e8a-52bd-482b-b295-e33b7f029a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df155d4-f39c-41cf-816c-4a2ff2a4a8c3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5426f7-5b0a-410d-aa00-cc229a244001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2824d03-e0ac-45a7-87f5-0b8fd702d684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bd01a4-da94-4d82-b7c3-8c5613b382c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3301e96-ab9b-4b7f-a759-cc69f512c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3f208a-6660-4013-83a3-392814efb2e1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0750ef-24b7-4b7f-b321-87a4835a4ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22eb9e67-894e-4146-909f-e8e9776a1376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639b5e12-2b20-4a62-a9c8-c09c6926928a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505197f7-4d1a-4844-8e7b-c5876fc3b971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb47d0d-6a5f-425a-b8e5-92ec8c91759f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc8aba-a97c-4780-a485-adb0a32862cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc1cedf-a426-4dc4-9c2f-bbee2bd63e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e38d250-97fa-4dc7-9d19-4c987965e0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707b57b8-131a-4048-81d2-d87334807cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529edbdf-c28e-4f70-a717-cd1c4d4dd1e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d38ec-0142-42fa-8692-c06b67d981db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19871960-dc86-4883-90f4-e2ef0dc61caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22423ab5-4114-4ab8-854b-11415f9311ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f364124-5731-4174-a396-627869b58f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de336e10-da39-4e9b-9532-d0633abb6f9f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417b9bcd-0fee-44bf-a2fe-e07c05a60f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce58804-2f9f-4c60-9647-09ec456b1618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae187a-4aa6-42ab-88f0-dec55f68a23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c9bc84-e98f-4f1e-abe2-49f64900ff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0362fbae-ddd7-42db-ba87-67186e3695ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ffacd-658b-4f09-aeb2-8c47cce35395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f9af7e-b525-43da-82c6-0c87c44e8deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f12f05-6afc-4436-b54e-6b8ca2fcbe33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bb4d2c-cc72-4bd6-9b82-ad9971cf8616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7ce05b-97cb-4907-bff7-defd1a4db0d7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c6e982-fd72-475f-9e3a-a8b52ef4b1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da434ac4-0af4-40d0-92a6-2d21e1794137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1741f4-f520-41ad-8fb7-01b1344e8947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429b7b04-88bb-4794-af28-9cde7b79b0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bd8c05-777e-4122-a5d8-e710dca24ab3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceb88b7-9b88-411a-8e84-715ea682b7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "681cff83-c466-4c69-a0b8-b4cc9b1d26a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3ea670-369c-473e-8fd7-538e426ca6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92ef248-d804-4f8e-961a-7549107f0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc236c6-fd99-4a70-93a5-987904e80f5f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622c6366-db88-4ecd-aad1-c10688e188bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b0aed85-0060-4906-a8f8-d2dda1b94d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b471a11-2978-4693-b409-b0efd6c676ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f450dd-f87c-47cb-a4c7-2e9e827b1185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0647c5ce-c0b8-46d2-928b-39cdbee3acca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd1909-7b8a-437b-bc86-6b6abba9bdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2e5d69-1157-40fa-8785-3cdf5490f28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff1a3c9-a1f5-4f3c-aa1b-7089ce39050c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c51807-9b22-4478-b484-316f4549e56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b76002-d12a-4425-ad05-57b64d89b50e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b511fd8d-a100-439c-a106-d781cf1c68d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fa4a45-fa07-4ac3-8644-90bf752f988c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b050386c-c442-4af2-8911-b87eae80382c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714e9303-e0ee-4603-aa1e-a1bf61f57590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c8bb35-d3bb-4bc1-a7d5-3907fc6c8e81",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8703342-daf1-4f3b-bc56-1fd44b75f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "398afd55-3886-47ea-b3d5-4b2206d33c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16703fec-1652-425e-a761-3ee5ea839c0f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8feb68-08e2-442e-a66b-f6060c17845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cfc29a-5ff3-47c0-9c92-c2eb7e5b8aad",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2e3133-2f25-4f1d-aa98-107085a37a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d8dd65-fbb7-4584-959b-c8da5c9dd05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e02bd8d-de7a-4465-a91a-82608fecda4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4628b64-0547-4598-ab82-8357d46a7a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a7fd46-b96c-48de-be93-e7272e75199e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa28c4e-f8f3-4b26-bbb7-da2f905cc54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7212303-6a8b-4e7b-b9d0-7c877dae75cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd8bb3-0cbd-4528-b3ca-f0b8b4759899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16f6098-9d5f-486a-a515-a0c198b8246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfd6bb4-b8be-4d48-9a36-297a1af39cb4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fc9df6-0396-4262-a452-ec827e4fdeee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91fe2cb-5ead-4eb8-bf78-98d64552d48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52468615-4eda-476a-91eb-548f5efcb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d93db4-fec5-4715-869c-2fa33e1e7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f692a4-ee70-48bc-9172-af470828ff0c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cf8d8b-7be3-439e-af8b-46e6846d9ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0296cf00-4770-4b33-989a-8e443e54c6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26258d7c-9852-4d1d-99e4-a3c79ba2f9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df17c3e-ee12-4f5c-a7bb-c7c5ea94fa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5e52c0-605a-406d-afd2-44582a13f42f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e2745c-aaca-4367-803d-95ff99e37240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b10659-802d-4bef-adbf-0ed03d6bb494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061a66d7-96fa-4181-9d7f-b89d2ba2dd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba7cde2-31c2-4998-8ba3-c4f0b3bc3ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef6ecd-3d62-44c9-9d1b-f1550400b75b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967932d4-344a-4edf-9e49-b24417892ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5051cb3f-5631-43d3-8e53-9962475dad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa121e-4e39-4d11-b450-58e6227f3ad2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f87db8-8213-40ae-8356-9763c91a82d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb22aa4a-a62a-46b4-8c30-3aa52909dc33",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dd0342-e556-47be-a3df-0db94cb3ad69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d8a76f-b49b-47cf-bfee-d357d5718e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701a8732-cef1-4c19-a7c5-43ac93b956b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050e4598-2250-46a5-856c-03679c2a1bfc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f072eee-ef2c-450a-a1f0-17f78e26be57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f447a57f-e1d0-403a-b226-77b055a9fd71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17184068-f1c0-4b48-b944-f2a053730dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a0441a9-2ca8-44b1-bf33-e1e7d4b5b189"
                    }
                  }
                ]
              },
              {
                "id": "77dc4935-2a52-4bdd-bb06-d1f88506c46a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "506a12b2-7005-42aa-9acc-48ef767b4096",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036559af-1876-47e6-9d56-db2ab4e6d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e68a1135-7b3d-4a42-8914-28a227e2fb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aee2551-7ed1-4f37-ab5e-dbc00d1652ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1389d835-2713-4e40-82da-add3a554a449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f52466b-69d2-4d25-afd9-b4d1a572e68b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c829af5-144f-4e77-a699-5b50585e5787"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d54695e-4cca-4777-a9fc-1524e95cf109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c65a64f2-1695-44da-9eba-1e2be94d308c"
                    }
                  }
                ]
              },
              {
                "id": "88c53656-2c52-4164-91ee-5dee7c6ba7d8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "84df0b89-77d4-4b07-ab57-2cb589a59edc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24915f46-6058-4e75-a62c-06295a5fbf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "889cd2aa-6918-445e-a0d8-e94c9d318d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2425e6e-a80f-4263-8e80-1b5bb09b06ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678ee28e-9f4a-473f-a032-8503cf67fc91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b3b54705-f2b4-4477-9671-8958499df4f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31843497-cb27-42e9-ab43-de6bd2b0ad1b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e9a5703-7e1b-4743-8d2e-7de4207a7f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9e7a179-07be-4869-a8fd-2c8adf28c6ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11533362-efa8-4312-9f93-1da652824829",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f94b3c5d-3f3f-40c8-85aa-5bb686622894"
                    }
                  }
                ]
              },
              {
                "id": "d34fb1ef-c48d-4dbb-ab40-6e524917f6b0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acf53a70-5e58-4da8-bf33-fb1ac9b31440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c25427e-18dc-4a15-9475-5ff848393315"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc2f5f5e-64cb-452a-b83f-15d6281b0be9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba801133-003d-461e-8209-3f537454ea4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74203081-6a30-4075-ae5f-0c9573ea8ed7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "882ebcb0-6007-4d00-990f-d450bb2bf756"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65f0a894-fdac-4bef-bc09-10d9f078b5d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39d1e0db-9309-4096-8dfc-e94d9816ebbd"
            }
          }
        ]
      },
      {
        "id": "31ee6b1e-7801-411f-ad0b-426d7953f63a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "78d477fa-0be5-4089-9704-43b996bc0bc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15e292a8-ce4f-472c-aa24-92455ea016c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "641ca63b-e2cf-4373-9cd7-dc36df470c0d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d4fe25-0c8a-48a9-b45b-fa000d9af5b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d65a4290-4da1-4e44-8c68-5684d6344a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8a955d-a056-4733-a853-4b2e57f2777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8fdcc82-2e8a-4258-b48a-6bce0db98ad8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a81940b-0c70-4c2d-8a65-2f788dec69e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feaa221d-2920-4f50-ba9e-29d9285842b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09cdfd80-1931-4ca6-9316-1b747ba573c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3873def0-0901-4b43-aeb8-ca1536ba7039"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d79bfc74-f644-47a9-8f9f-372d4054006f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1561d508-2737-478e-ab8c-fa935fdacaf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f7f6417-61bc-4bbe-8a1f-018d7d8ab65e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b5a706b-6e45-44f8-9eed-3756f04da457"
            }
          }
        ]
      },
      {
        "id": "4d85b9cf-3582-4bb7-b6e6-74782dfdf793",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5aa1e011-a4cf-4b1f-b712-43bfae313a9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26ce75b9-2344-41e8-89e9-47aa1af8a0d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5f7d983-aa4f-4b78-88cb-a90e4e468b64",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d092d986-d2f8-481e-9f6a-d97e07cc68c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5c6f191-d04e-4cd4-b3b7-c0f2b970b0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a70ea0-ddcd-4c61-9e81-613cde6155dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630c0335-22f7-4b9f-9e28-3e421f8c5ae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df259ae6-fb76-4816-8cc0-121bbe37a23e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bf815fd-931f-45b4-97f3-dddf3fb96e97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86b706a-ca4f-46dc-98b0-f92ffaf531c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3dbdd1d-f789-4945-9035-87c46507f60e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3f30363-242b-4f41-87f3-da13e1dffbcb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccc8b016-b6d5-4cff-a646-a6d316bbef40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda4cb26-f8ed-4462-bd7a-1f28c1f2d2f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1514b7a2-be9e-4770-a8aa-d19f60c3ed66"
            }
          }
        ]
      },
      {
        "id": "141244db-861b-4e1d-9525-ca201eff4d8f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92b42563-a3e0-4095-88d6-c3f9a834f2f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f3f9e7d-c1c4-495d-8b1f-0bd5d30dbebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f41989-ada7-4faf-9880-80d8207690a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f64bf13-cec4-463e-b20a-e3375aa331d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bafced0-2f5d-437d-ab7a-098ec18abd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c180cbcf-e413-4d7f-85e0-0abf80538041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b018c8-3470-4434-9a6a-f3909427986c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e28f16a-1247-46d6-9092-1115dce8507c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a04e165-b81e-483b-8f14-b7c20312ffa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e1c0ac1-25f9-4690-946a-5bfa05a3cb26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8748116b-eb1c-4a97-ad9f-6b5ca1d52907"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daae80fb-e4da-40bf-b4b8-1ed25b1a221c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05cf7c02-df04-4650-8263-12cd8b103537"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d79b7c95-ddca-4d14-b3d9-aba97bff0ecd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e2ffc26-6ced-4cbd-9acb-300bf0934225"
            }
          }
        ]
      },
      {
        "id": "6d9a5df4-026c-44f6-a4bc-1797cb91a5ad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da5ba454-3f1a-44c5-a84d-950c5b9f64ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "731d31bd-05d4-4cc9-bc92-84d52a8c742e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5b7ff635-7b91-408a-af41-a4f10a3151ce",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb4bb36b-107d-4d94-b375-512d727e90ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35d9449a-75e9-4223-ac48-d2b6fcd46751",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 364.3556338028167,
      "responseMin": 13,
      "responseMax": 9546,
      "responseSd": 1151.9417304209271,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697070713905,
      "completed": 1697070832855
    },
    "executions": [
      {
        "id": "00d0bf5c-c527-430e-92c6-ae5c15ebc54b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4cfa5b2c-9522-45b8-858e-f2f74b17ba0a",
          "httpRequestId": "239710cc-1f58-4d9f-b6fc-14f028d79015"
        },
        "item": {
          "id": "00d0bf5c-c527-430e-92c6-ae5c15ebc54b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3f9be4db-3f24-42be-a354-3eb73813c362",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "73afd6a6-af43-4370-a292-0be2736fd3c1",
        "cursor": {
          "ref": "ad6758c7-e6f8-41e1-85f5-0675f0da61a0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "35037ccb-cddc-4f54-b0a4-88916a3f8db8"
        },
        "item": {
          "id": "73afd6a6-af43-4370-a292-0be2736fd3c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "272423af-7c0c-4273-b26d-eb95f3f126e3",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "e14042ae-7cfd-4acc-b76a-dd8ea74e7d8e",
        "cursor": {
          "ref": "67406f97-4cd2-45b3-a0c2-788d02836fd3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87599d03-02c8-4b98-8d10-a4c35c18fd15"
        },
        "item": {
          "id": "e14042ae-7cfd-4acc-b76a-dd8ea74e7d8e",
          "name": "did_json"
        },
        "response": {
          "id": "24482c17-4b77-406b-9e94-3eeefbf13f9d",
          "status": "OK",
          "code": 200,
          "responseTime": 1526,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f061f-1fdb-4541-95f9-ae8f472d4332",
        "cursor": {
          "ref": "f69ca95a-89ad-4345-9823-4731a14415e6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d6612ed-ef20-45d5-823b-976ed92a4b80"
        },
        "item": {
          "id": "7c6f061f-1fdb-4541-95f9-ae8f472d4332",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e6be3a5-07b7-490f-8fe8-21cffd4fd40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f061f-1fdb-4541-95f9-ae8f472d4332",
        "cursor": {
          "ref": "f69ca95a-89ad-4345-9823-4731a14415e6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d6612ed-ef20-45d5-823b-976ed92a4b80"
        },
        "item": {
          "id": "7c6f061f-1fdb-4541-95f9-ae8f472d4332",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e6be3a5-07b7-490f-8fe8-21cffd4fd40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6023df44-6914-45e7-9d52-b92a8b06d0cc",
        "cursor": {
          "ref": "72c58fc8-c429-452f-b673-7cc65f90a6b0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2c41c60f-6ea8-492f-8449-42f0ac4359c6"
        },
        "item": {
          "id": "6023df44-6914-45e7-9d52-b92a8b06d0cc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a2e03cc9-9347-4fa1-a67a-e27be67154a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 447,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1917ef41-0f82-4281-b6b5-2768f85649dd",
        "cursor": {
          "ref": "566b538d-6db5-4413-b976-25504f2fa4c5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "88ec7c5b-0030-48e1-a67a-4fb66d673e27"
        },
        "item": {
          "id": "1917ef41-0f82-4281-b6b5-2768f85649dd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "32442f64-d4bd-47d7-99d7-94f5279bd429",
          "status": "Not Found",
          "code": 404,
          "responseTime": 257,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89936c6d-fcc9-487b-98b8-a55f3d5584cb",
        "cursor": {
          "ref": "6568ae99-f38c-40c2-ab2d-829c005b8848",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "607ea44b-500f-46b4-a365-dc3d49466c2c"
        },
        "item": {
          "id": "89936c6d-fcc9-487b-98b8-a55f3d5584cb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "026130e3-cdde-4b62-8956-5cd8c277722a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695fcca1-d0c8-4554-8fd5-7e7722e25aba",
        "cursor": {
          "ref": "9819efa3-bf7e-487a-b7ce-e56fa988b3ef",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2d72ef52-9b42-4df1-ae3e-d2f0567fc8df"
        },
        "item": {
          "id": "695fcca1-d0c8-4554-8fd5-7e7722e25aba",
          "name": "identifiers"
        },
        "response": {
          "id": "a9b8d7ef-1a7f-4dc2-baab-6bfdef0a2970",
          "status": "OK",
          "code": 200,
          "responseTime": 1390,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ea430-fb9e-4c07-aaa2-4431f7d799c4",
        "cursor": {
          "ref": "5a5c79d6-2963-4f74-a671-037167e3f344",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8d0adff7-3698-4642-82f5-3a869d3e046e"
        },
        "item": {
          "id": "690ea430-fb9e-4c07-aaa2-4431f7d799c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b3d0deb-fc18-4924-9f9f-37bf7eade7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3ca81b-787a-48ed-9244-dcd5169e2761",
        "cursor": {
          "ref": "0ba27f9f-08bf-4e3f-8737-718695d785a1",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ace31e1e-3b58-4814-aacf-199e9f172bf6"
        },
        "item": {
          "id": "ec3ca81b-787a-48ed-9244-dcd5169e2761",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "29d3750c-8af8-4945-aaff-cd8a05417bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1659456-8b1a-4cf7-8f3e-d6f7dcdabb0b",
        "cursor": {
          "ref": "cd90d25a-56ee-4824-a631-fb617b5306f7",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bf346f4f-8eb8-4ec2-bf0a-312220ecbda7"
        },
        "item": {
          "id": "c1659456-8b1a-4cf7-8f3e-d6f7dcdabb0b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7ed8c8be-319d-429a-abe1-946ff1c585ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d5158-592f-4c49-beed-effa61ee2285",
        "cursor": {
          "ref": "d0373464-eac5-4631-8979-13cbcba212c6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7b89068e-d3e0-4886-8fd5-06dc42619347"
        },
        "item": {
          "id": "504d5158-592f-4c49-beed-effa61ee2285",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2d70f137-6470-47f4-9083-e63a8dd94fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26f1c95-b5f6-4ff6-ab2e-b7cdcc2ed594",
        "cursor": {
          "ref": "5d5bdedb-430a-4d7f-8143-67d89746fc7d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "778f7733-f9b3-4b62-b78d-4acd286ea72b"
        },
        "item": {
          "id": "d26f1c95-b5f6-4ff6-ab2e-b7cdcc2ed594",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e0df6f95-f28b-46f8-b4b9-941caede88fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1b28ae-2505-4a63-9af6-39210a2e7047",
        "cursor": {
          "ref": "67347a8b-8236-490d-9041-e6a9fe89926f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fea9f4f5-fc79-4766-991a-fb2a8d2788b6"
        },
        "item": {
          "id": "dc1b28ae-2505-4a63-9af6-39210a2e7047",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5906841d-df4d-4ba5-ae41-164bf05096ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccccc8b-b4b0-4a7a-8331-c619590158f8",
        "cursor": {
          "ref": "89d807b6-3557-4687-8909-779e718a83f5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5a401f63-04d4-4a4c-aca6-64a35cc4526f"
        },
        "item": {
          "id": "0ccccc8b-b4b0-4a7a-8331-c619590158f8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4e13b34d-92ba-4a86-8e9b-8577f6280fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c28ad55-8884-46b4-9c54-3cfb88ea1b76",
        "cursor": {
          "ref": "e65f036d-9dae-4eaa-a301-3f0b7dd2670c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "66e3c8de-66eb-477c-9a1f-9613e45758a7"
        },
        "item": {
          "id": "1c28ad55-8884-46b4-9c54-3cfb88ea1b76",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4c45db0b-cdb9-45bf-9b7f-a743eaf44470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408286cc-00ad-413c-ba7f-e801e16392b3",
        "cursor": {
          "ref": "0d60d205-a5f9-4427-8152-c5f86664c591",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e45dbbd-9ae1-41e3-8f11-76fba1c392c9"
        },
        "item": {
          "id": "408286cc-00ad-413c-ba7f-e801e16392b3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "283db4d9-e282-4875-92f1-7faf62b7c377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da87868-3a85-45ef-9383-d6d4a398ba62",
        "cursor": {
          "ref": "6efa5eac-4664-4971-b0de-e1da56759d16",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93f31837-f43d-46d6-a8ab-213f835aef4f"
        },
        "item": {
          "id": "8da87868-3a85-45ef-9383-d6d4a398ba62",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee54e897-28ab-4738-bc67-65cc4e5ea6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7899e90-76d0-4945-8d87-f5b92be88fd1",
        "cursor": {
          "ref": "bd7c40a5-2b90-477f-afdf-af3407e7bbf0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b3372a92-a8f3-40da-9040-0c71f647a19a"
        },
        "item": {
          "id": "c7899e90-76d0-4945-8d87-f5b92be88fd1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c843e8cb-9f19-48f0-8736-8bfd2a35f91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1968b6-d449-4330-b2a4-0cb34a95a327",
        "cursor": {
          "ref": "fcfad771-df88-4488-8440-f6bc92c1b0b0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "94f0c891-d3c1-4c49-88f6-32b865af3680"
        },
        "item": {
          "id": "5a1968b6-d449-4330-b2a4-0cb34a95a327",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e5d6cab8-781f-4210-87de-49de08157729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41032a67-6280-4a55-b3bc-5732f5be66ef",
        "cursor": {
          "ref": "2220702a-ec0a-48e9-8215-f5adafdbbdde",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cd3123d6-3528-4dea-89ee-d640c2a61c73"
        },
        "item": {
          "id": "41032a67-6280-4a55-b3bc-5732f5be66ef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6481a452-cadb-478f-bba7-d1f432a5d48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a306e6fd-aa06-4b6d-8b24-e005351e15de",
        "cursor": {
          "ref": "2cddf1a1-e8ca-4dc7-98bb-c27697162905",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c7589759-5f66-46cb-8142-23aa5509af67"
        },
        "item": {
          "id": "a306e6fd-aa06-4b6d-8b24-e005351e15de",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29a8c3c1-901e-4749-ada2-be61ff93b037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67baf5e-95ca-464b-a65d-4aafd19136ce",
        "cursor": {
          "ref": "75c8772a-d5f3-4c1a-b6a3-a5a40a3d105e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58f9b7ff-f37e-4faa-9692-d2e75744b279"
        },
        "item": {
          "id": "a67baf5e-95ca-464b-a65d-4aafd19136ce",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cda5fd9e-26af-47b3-ab5d-cfaeddbe6c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a4e617-2094-45a4-85a0-87cc04a1bdcf",
        "cursor": {
          "ref": "99a6d7aa-cfee-4b32-aced-9bb807c863cb",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dde4ca7b-459d-40bd-bf41-e9267051d0da"
        },
        "item": {
          "id": "c2a4e617-2094-45a4-85a0-87cc04a1bdcf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dbe0638b-6304-4c3f-bea1-2342e44bf6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7edd36-7694-4cb2-98d7-a433172058ec",
        "cursor": {
          "ref": "817d3acc-b33b-4509-a856-82192522ba82",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a22712fe-abc7-411b-bdd2-05095c2cc21b"
        },
        "item": {
          "id": "2f7edd36-7694-4cb2-98d7-a433172058ec",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9fa2ce22-011a-4a62-b09f-b3529ec836a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feec1aea-0976-4daa-881b-72b42a7b94ba",
        "cursor": {
          "ref": "7f103d98-26d7-45e4-9ad0-21353b18dde2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1aec70b8-c8af-4a8b-98c1-add207a43c18"
        },
        "item": {
          "id": "feec1aea-0976-4daa-881b-72b42a7b94ba",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07432edd-c31a-4e52-97e6-78ea8823b777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c83dc37-6142-4ef5-9389-1910bc35ca86",
        "cursor": {
          "ref": "7f042f4c-0b14-4ba2-8df1-cbbdccdf362c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3fdae21d-0f7b-4c27-9be9-3e8ddad87811"
        },
        "item": {
          "id": "0c83dc37-6142-4ef5-9389-1910bc35ca86",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a26b4eee-89a4-4728-8796-3a5c4687da03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b449224-c553-4d5d-9159-207b8549f531",
        "cursor": {
          "ref": "7108fa35-dd07-42f6-9dd7-14ebb299a4b1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e9d065d4-636a-4655-871c-af8f354d9092"
        },
        "item": {
          "id": "6b449224-c553-4d5d-9159-207b8549f531",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c4626ed8-566e-456b-83ae-a408510e7537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ae17e5-f991-46db-994a-b16a55867feb",
        "cursor": {
          "ref": "b33fea01-68cd-4b42-b58d-c34a3df60e7f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70549a53-a945-4e02-8da1-5ab423efa249"
        },
        "item": {
          "id": "44ae17e5-f991-46db-994a-b16a55867feb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a2bce56e-8401-4b66-a879-e25a79562b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76c337-ee0d-4d16-8cb5-9a7d05efff20",
        "cursor": {
          "ref": "e02e2fdd-eed7-4255-b296-5061eb91921a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4e0d14a1-8249-4eef-bd7b-945eb7b80ada"
        },
        "item": {
          "id": "8f76c337-ee0d-4d16-8cb5-9a7d05efff20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b1f7be7-ecf1-4bbd-8e8f-1e5d23dd1936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89943ee9-a011-48b1-8b9a-d34557ac6650",
        "cursor": {
          "ref": "a6f41ae8-700a-484e-9700-107e9717ce91",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "978cd24e-a99c-4389-91f2-93630244a7a5"
        },
        "item": {
          "id": "89943ee9-a011-48b1-8b9a-d34557ac6650",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "734b92f9-430e-4a8a-b8ba-d37babcec23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfdb446-e9f4-4613-9a8f-7c9639f1f62f",
        "cursor": {
          "ref": "9531f991-5a1a-46c5-a6d5-3938c8637779",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6cf49c49-601d-49c0-8e61-a17b04c6088d"
        },
        "item": {
          "id": "acfdb446-e9f4-4613-9a8f-7c9639f1f62f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "06c2786f-00c9-4712-a581-3a12a8ce84c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc673f-442d-41da-8c04-6ca85fa6c403",
        "cursor": {
          "ref": "b9f96a05-9d3c-4084-a2a8-5da179e59cfc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89ff4ae3-99fc-4958-b57c-a5cfde0746ae"
        },
        "item": {
          "id": "ddcc673f-442d-41da-8c04-6ca85fa6c403",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "478069fd-8fa5-4b76-af46-66bba6be4341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5f9a37-a193-43b9-9607-0159840f6eab",
        "cursor": {
          "ref": "f8ee80ba-519d-4a92-97ad-14fa0d04cc16",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "19b5ff9e-4a86-430e-be9d-0d764b30517e"
        },
        "item": {
          "id": "de5f9a37-a193-43b9-9607-0159840f6eab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7cbcad01-222c-4d13-b546-4fd3de747ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c775d3-2aa7-42a6-95de-1d9b81eb025d",
        "cursor": {
          "ref": "42611d2c-9e2e-458a-beff-72e91136188a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb58ff8a-1157-4895-a1cd-3d54bec80638"
        },
        "item": {
          "id": "19c775d3-2aa7-42a6-95de-1d9b81eb025d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f1ee0b76-7299-4a74-9897-fc0f6a57045f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533f2828-c969-4d35-8d9e-9609984f5bb6",
        "cursor": {
          "ref": "37801a82-c45d-49ea-9d6b-33236399dae6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a71df20d-44a9-415c-b829-143a7089f1b6"
        },
        "item": {
          "id": "533f2828-c969-4d35-8d9e-9609984f5bb6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bcea1750-9f0e-4fb3-90cf-a8e5a52cca8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ada8a6-8390-4018-8066-70635c4516a9",
        "cursor": {
          "ref": "a10f9c63-67c5-4888-ad21-e938da64de8e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dda9038c-a69f-4f32-90d4-36c422c29b8d"
        },
        "item": {
          "id": "99ada8a6-8390-4018-8066-70635c4516a9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe276493-9c2b-4a9c-ad25-45f3d88e4bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3193c6-d1a5-4237-a537-03c25089f28c",
        "cursor": {
          "ref": "eda6832a-f208-4435-8b4e-972670cdf934",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3cf1ef26-cae7-46ec-90b0-befca0d93961"
        },
        "item": {
          "id": "3b3193c6-d1a5-4237-a537-03c25089f28c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fefc12f7-0df3-436a-b082-cd0de83f1153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f5f4ad-3fcc-40a4-ab75-fc6308fdad58",
        "cursor": {
          "ref": "1f6eebed-da41-4e28-aada-22240adf98cd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8efdf848-f6fd-4fd4-acae-815105283b59"
        },
        "item": {
          "id": "03f5f4ad-3fcc-40a4-ab75-fc6308fdad58",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2e53d12a-b683-4444-ac1a-4374e195355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c19e70-535d-40c7-a864-ca9db17ea4bf",
        "cursor": {
          "ref": "f63cb742-777c-4c45-aa4a-f1c0f684dbae",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ba904bac-210c-4aca-a586-1d6d5b7d0706"
        },
        "item": {
          "id": "52c19e70-535d-40c7-a864-ca9db17ea4bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c4f0ad9a-6a05-41ef-9c5e-07fc9ade6f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8566f7b-6c0d-46c4-a178-dddca04ada54",
        "cursor": {
          "ref": "8a73ed69-a56b-4095-9f29-cb2b6c951f70",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e6f7d37c-d49c-49b6-a03d-d981cbdc53bf"
        },
        "item": {
          "id": "e8566f7b-6c0d-46c4-a178-dddca04ada54",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ff281eaf-8943-44aa-b937-caade600a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed03006-862f-4ced-bdef-3fc4d0c51e65",
        "cursor": {
          "ref": "4794525e-6356-43ea-aa7f-4d01ea7fa1d2",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44b25edd-3538-47f2-a0b9-3b9d06764c35"
        },
        "item": {
          "id": "aed03006-862f-4ced-bdef-3fc4d0c51e65",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de8acfe9-b3c8-43ca-858c-49b4b8a19eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdebcc9-bd88-414d-96f5-ef5d6e70bcb7",
        "cursor": {
          "ref": "0ed5e58d-4c33-4e69-8298-ccd2f698258b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c46fd255-1843-4ae4-b1a0-8e17beb5b7ac"
        },
        "item": {
          "id": "0fdebcc9-bd88-414d-96f5-ef5d6e70bcb7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27486de0-6b9b-453b-a0ec-6189518c58d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dcd264-118e-434b-9032-e8b2ae0d3dcf",
        "cursor": {
          "ref": "8df056bb-c072-4f42-828e-d14f12324e98",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2c038a68-9edc-459f-b220-02f64291aef1"
        },
        "item": {
          "id": "e0dcd264-118e-434b-9032-e8b2ae0d3dcf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c7366924-b44a-44c5-ada4-1d3449d7cd33",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 630,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3ab75a-5aa7-4cd8-9cdc-1da420805e14",
        "cursor": {
          "ref": "0a76e8a2-cace-4711-947f-46a41aaa9f6a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4759a7ee-bed5-4e01-8cb8-df62a4f3d99d"
        },
        "item": {
          "id": "4a3ab75a-5aa7-4cd8-9cdc-1da420805e14",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cca61854-d042-4deb-8b47-a038daa1ec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37abe1a-271e-49e6-95ca-e6f22696a4b8",
        "cursor": {
          "ref": "c7c9d0ea-1214-4207-a77b-14e48da76714",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7796aa4-4525-423e-b21d-1c14b943b048"
        },
        "item": {
          "id": "d37abe1a-271e-49e6-95ca-e6f22696a4b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0e807564-b667-49fe-a5d3-6579810bb042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43bbde0-d9a3-4ef5-8093-522fd8e66d11",
        "cursor": {
          "ref": "817b965c-ae77-405f-bff4-0f09aec01a2f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "401769a3-81d1-4939-b914-735c523c7adf"
        },
        "item": {
          "id": "d43bbde0-d9a3-4ef5-8093-522fd8e66d11",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "774d7a66-ee0c-4868-a7ef-6da64952ece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d02353-12a9-44ab-acfc-517e2c1b6211",
        "cursor": {
          "ref": "37cb547d-e08a-40fb-b9eb-0ce09e355f0d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e379666-704c-49af-8543-6a5bb762503d"
        },
        "item": {
          "id": "b3d02353-12a9-44ab-acfc-517e2c1b6211",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7912cffe-45b3-4af3-a3d1-b9af1f70d78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd751aa-71ce-4080-9225-795b14d50cdc",
        "cursor": {
          "ref": "4fcf0eae-cf94-4646-b603-65897d4c3447",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "db134c37-bf3d-4ccc-b398-1df7051cc7a8"
        },
        "item": {
          "id": "fbd751aa-71ce-4080-9225-795b14d50cdc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "71739c34-2253-48e3-9d06-1355946fca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c962a3a-198f-4bf7-816e-f280a3ffcabd",
        "cursor": {
          "ref": "2cba1ebe-9a2b-4427-9013-12a514fb914e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f37474cd-bb90-4a1d-a89b-f5a382fc6a43"
        },
        "item": {
          "id": "9c962a3a-198f-4bf7-816e-f280a3ffcabd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "20ecd4b2-b75a-484a-ab93-1242d47f43a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb041c2-0b82-43bf-94a4-ec4a2a4e3d68",
        "cursor": {
          "ref": "193a7168-33b2-423b-851d-d5c358951849",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00269040-076f-4d41-a186-39874cd3ee4c"
        },
        "item": {
          "id": "3fb041c2-0b82-43bf-94a4-ec4a2a4e3d68",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c19b1adb-119c-4d39-a838-4ae7824142f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4c2e05-974d-44da-9d4b-8da5d9f3997b",
        "cursor": {
          "ref": "131d704f-9619-4887-94e9-6c97db9f7f72",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a35538c0-3f24-4b76-924f-a02e97418a6f"
        },
        "item": {
          "id": "aa4c2e05-974d-44da-9d4b-8da5d9f3997b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "85b14908-4879-43e0-becc-bd518a5b7f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f26609-f5da-4afb-926a-c14d634d4872",
        "cursor": {
          "ref": "3b820151-0972-4b25-8c87-c5c87ac1703f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dd6f0e9b-1420-4d26-ba3e-6dd6a3cea1a8"
        },
        "item": {
          "id": "29f26609-f5da-4afb-926a-c14d634d4872",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "689e1c0b-0e7f-456f-8530-97fe41287e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b7bc7a-f992-492a-8788-de2888124406",
        "cursor": {
          "ref": "ede80327-a573-4008-8d05-25fef3c9418b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fcdb229a-3d2c-432a-99ee-7f77dc43e8a3"
        },
        "item": {
          "id": "86b7bc7a-f992-492a-8788-de2888124406",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bd63a384-46d4-4c79-bfd1-e74152b0a096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d859d-e166-4c24-a48d-6cdcd6e90266",
        "cursor": {
          "ref": "100f65f5-614f-4958-9db1-9d5f35876644",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a2bfaaca-8caa-4ed7-8575-5cea1b134f89"
        },
        "item": {
          "id": "ce0d859d-e166-4c24-a48d-6cdcd6e90266",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c47e6fa3-35a6-423f-a39d-41de6d9da4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a21a3-e7ce-4fde-8c83-072f138a62fa",
        "cursor": {
          "ref": "2b2887d7-e2ab-4f0f-befb-a99c9720056a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2325579c-75a5-4a7d-bf23-712ddab238e9"
        },
        "item": {
          "id": "333a21a3-e7ce-4fde-8c83-072f138a62fa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4b2b701d-f399-4e4d-970c-d5edd226f37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac90c350-2189-4ca6-aaa2-f507f9f889ba",
        "cursor": {
          "ref": "e654e2f5-86b2-4ec9-85f7-4365b8abcd12",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a04fd920-f854-469a-a2ba-2bc2d60227c1"
        },
        "item": {
          "id": "ac90c350-2189-4ca6-aaa2-f507f9f889ba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "09d25527-da64-4ac1-a225-5ff45f549024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8871646-d930-4fd9-ac86-05632bd2646c",
        "cursor": {
          "ref": "85cc3cc8-a3c1-4f49-8639-c8ffd7a5b544",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "da0e5f7c-08d7-4072-a0ee-7bd2cb3adc83"
        },
        "item": {
          "id": "c8871646-d930-4fd9-ac86-05632bd2646c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45ad6bd7-48a5-4f73-bd65-3ddb38633109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f161813-a1aa-4a26-866a-2a28d47b07fe",
        "cursor": {
          "ref": "3b803ecc-f419-4884-af4a-7878e0e1173c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "96e28402-c0b0-4699-8ae1-ce708392cc76"
        },
        "item": {
          "id": "9f161813-a1aa-4a26-866a-2a28d47b07fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9633d9c-7d2c-4aa1-a58a-8bbce33836b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fecaf5-49d2-4d40-81bc-9a3910aefb4a",
        "cursor": {
          "ref": "160c0ebf-0fcc-4914-b8c4-96763b68afb7",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e8344c15-0da5-4513-a734-7d32e7c8caf0"
        },
        "item": {
          "id": "25fecaf5-49d2-4d40-81bc-9a3910aefb4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a81e976c-6498-4a7e-b622-4bb43fe7abaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a434774-9149-4fea-a2e3-a877695506de",
        "cursor": {
          "ref": "3f2b7429-2a1a-40e4-8a07-01e5ae1e9d90",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "954afc26-0a89-48e1-87ab-8ad6a537713b"
        },
        "item": {
          "id": "0a434774-9149-4fea-a2e3-a877695506de",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "19094d4c-a9a8-46ab-8f35-e29158c4df9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26212bd2-7c75-4d71-9fd6-6ac3091c81c2",
        "cursor": {
          "ref": "ef751278-0841-4c72-92de-5d804144563b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bbf6adeb-6978-49a8-8edd-2abbd2e5d52f"
        },
        "item": {
          "id": "26212bd2-7c75-4d71-9fd6-6ac3091c81c2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "779c2152-9d2b-4c06-96f9-130a6d301954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7cd9e-c14e-4142-864b-bb3700a4c4f6",
        "cursor": {
          "ref": "c428a691-5885-40a7-8e65-2c81343f8573",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c6512353-4f86-4701-bf47-b629410ef6df"
        },
        "item": {
          "id": "8dc7cd9e-c14e-4142-864b-bb3700a4c4f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ca28ea01-421e-4979-b403-11b8a2529fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2961af1-2163-4cbf-89c4-a8bcce9f6869",
        "cursor": {
          "ref": "68d6e86c-c42b-4874-b86d-1d8c2e9f59b2",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bc44e9a6-6b52-4662-a274-3a731a3889dd"
        },
        "item": {
          "id": "a2961af1-2163-4cbf-89c4-a8bcce9f6869",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7d3958c2-89a8-4684-a3f9-6ace2e962ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adad1743-d420-49b3-a8fe-b70ef3da605e",
        "cursor": {
          "ref": "128d78c0-08a5-443c-9fbe-9e6d9ee34752",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d39ef9af-3273-4937-83f7-82c5b50355e4"
        },
        "item": {
          "id": "adad1743-d420-49b3-a8fe-b70ef3da605e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7263854f-b1d6-44b5-872e-fdf1ce3b1312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24486318-eec0-4fe9-9ab1-e2d7d415c9cc",
        "cursor": {
          "ref": "090003ec-ecfc-45ef-92d6-474f0f9bbfaf",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d8f026b9-65c9-473c-ae99-9369105876bb"
        },
        "item": {
          "id": "24486318-eec0-4fe9-9ab1-e2d7d415c9cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "76973f4a-f147-4434-acfe-c8a3459b4d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119e1939-1fbf-476f-99da-bc8b31df001f",
        "cursor": {
          "ref": "acb507fe-0f65-4e93-89e4-a8ac5ceb5bd0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "51eb9907-c982-4d1a-a48d-6eb329b0427c"
        },
        "item": {
          "id": "119e1939-1fbf-476f-99da-bc8b31df001f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4659bd0b-72ae-4cc8-b5c4-b9cbfc4bdd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a4339a-227b-433d-a4f5-edea3b9cd68e",
        "cursor": {
          "ref": "e760a77f-ec4f-437a-b312-650d1f7ae7aa",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eb4aa18a-3dd5-44bf-b833-3450d8954c02"
        },
        "item": {
          "id": "96a4339a-227b-433d-a4f5-edea3b9cd68e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2f48e7f6-44d1-4d7f-88be-89b2a4eeb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52532d27-1ce0-4584-9370-0f0018d06139",
        "cursor": {
          "ref": "26a75a79-38bd-4027-990a-8d1c092c7777",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "30455833-f026-4ce5-b8c2-704e54e4c2a8"
        },
        "item": {
          "id": "52532d27-1ce0-4584-9370-0f0018d06139",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b54e70d3-5ffa-45e5-95ae-877b3ecd5ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e30f6d3-9dc6-4ce7-99ae-d8f9af23b970",
        "cursor": {
          "ref": "6a4f4956-e851-4a11-820b-0a7ec6b37562",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9a2840e8-a2cc-4215-b2fb-5735cda2f7fb"
        },
        "item": {
          "id": "8e30f6d3-9dc6-4ce7-99ae-d8f9af23b970",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "22de68cf-e772-4bdf-8960-c087c60a4031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b42d29e-fd76-42cf-9d28-ed0750f53d81",
        "cursor": {
          "ref": "2c4ddead-a9f7-4403-88ed-0afcdbe4ea51",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a41af08d-097b-4fb0-87fb-7436e81fb31d"
        },
        "item": {
          "id": "7b42d29e-fd76-42cf-9d28-ed0750f53d81",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c98060b-7ef8-486b-a12d-82c3240551e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b09bb7-77f6-4369-881c-60eeb65272c8",
        "cursor": {
          "ref": "de6cbdfb-ab0f-47f5-84d9-e2d36be0e888",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9fa2ae36-2153-4332-945e-7d63c1ad2b7e"
        },
        "item": {
          "id": "20b09bb7-77f6-4369-881c-60eeb65272c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ef501a3f-c3a5-4492-8566-9efd216976b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b0b09-48e5-4f90-8139-8652334a8fa2",
        "cursor": {
          "ref": "7d14a7f5-357e-4a03-bfdc-9091203d08d5",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "500a5262-462b-4cb5-9d4c-3a57f33fefae"
        },
        "item": {
          "id": "434b0b09-48e5-4f90-8139-8652334a8fa2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1365e43c-c183-4052-87fd-84273e3d008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67a06d9-ebff-43bf-a7c5-fdc79eb999c0",
        "cursor": {
          "ref": "f89ad39c-d462-4bf5-ace5-819fcca1f9c8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "21b39868-dd05-4e3d-b316-5128a3da04a8"
        },
        "item": {
          "id": "d67a06d9-ebff-43bf-a7c5-fdc79eb999c0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "830cf6d7-cc87-4f44-a455-8bafddc018dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a24acc-621c-4aef-bfd7-2781da6a86e8",
        "cursor": {
          "ref": "f7e0beb4-1819-4385-b3e0-722f83d6bdd8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee315d51-27a6-40ec-8a86-3edeb37177ac"
        },
        "item": {
          "id": "30a24acc-621c-4aef-bfd7-2781da6a86e8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2febb7fc-c71e-404c-9e7f-415f871dd070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a1379-23d8-4c82-8543-6e73dec0c5c1",
        "cursor": {
          "ref": "28f97dfd-1877-4985-a2d2-8ef064131c83",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a0717b82-d0fa-4e72-b978-bef3ccba057d"
        },
        "item": {
          "id": "c57a1379-23d8-4c82-8543-6e73dec0c5c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5afb3e8a-7dc0-4d48-af98-688abb994b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dc458c-de65-4871-9449-b7fcdd3bf5d4",
        "cursor": {
          "ref": "852c84d3-3249-44c4-aec5-77f2205120c3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0a309488-b3dd-4768-89ad-ac17098b162e"
        },
        "item": {
          "id": "d6dc458c-de65-4871-9449-b7fcdd3bf5d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "87f62908-6147-44ee-93dd-1a73ffca4c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb5b27-1e1b-4da0-88b4-2557b364f4bb",
        "cursor": {
          "ref": "5166b8e5-631d-40a1-b6db-db8232b7843c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b82a0b77-3ac7-4013-9dc3-082fa96f51f7"
        },
        "item": {
          "id": "57bb5b27-1e1b-4da0-88b4-2557b364f4bb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75a517ce-b520-43b9-a006-24662126a01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ff2e47-0035-48f4-8300-31126627f792",
        "cursor": {
          "ref": "3e9ff1f7-cee9-4b40-8b5a-94331703d88f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "66047604-c3dc-4722-891b-a4bb17b63ef1"
        },
        "item": {
          "id": "d2ff2e47-0035-48f4-8300-31126627f792",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e66929fd-19fc-4f5b-b51d-b5ea08ad2cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92020fbb-dce9-4a99-a43d-6e94780b0fe3",
        "cursor": {
          "ref": "7ec4f5d3-40f6-46e9-8846-fc2cd72cdc68",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "78c74e31-2e5a-490a-8d26-9e019cd2d9bf"
        },
        "item": {
          "id": "92020fbb-dce9-4a99-a43d-6e94780b0fe3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "494416a0-4b1d-4d21-9275-e69eb7f79fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86dcb9e-0c25-4c99-a35e-06589a96a43e",
        "cursor": {
          "ref": "2808dcd1-d453-42b2-8c9c-7cefe587bc9f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "485e17f7-9678-4979-b1ae-f396cd769aea"
        },
        "item": {
          "id": "a86dcb9e-0c25-4c99-a35e-06589a96a43e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f1941387-3f4a-4740-a8fb-159243b10022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364e56d6-f1a8-458b-b2d0-b3aa9261fe1e",
        "cursor": {
          "ref": "0a7bd091-e2da-4039-94ec-7adf47af546b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "24fe23f1-4692-436e-b781-9578b80f32b8"
        },
        "item": {
          "id": "364e56d6-f1a8-458b-b2d0-b3aa9261fe1e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13e72948-239b-4f51-bf9d-7adcd64f6ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edcd64-5ce1-465f-8938-0c284a0f9876",
        "cursor": {
          "ref": "54ed8660-d53f-488f-baeb-f57b96cbece2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89708adb-5c38-4351-8481-9fa67802a91d"
        },
        "item": {
          "id": "51edcd64-5ce1-465f-8938-0c284a0f9876",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "24e33afd-aa56-43ed-9a99-778adf99f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c390eb-e11b-4e25-8f5d-77bb2a36cd36",
        "cursor": {
          "ref": "35f88fd5-5fae-4a78-ab6f-3ba1c1a8c87c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "86c3730d-2b90-49ab-b535-b975398dc85f"
        },
        "item": {
          "id": "04c390eb-e11b-4e25-8f5d-77bb2a36cd36",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "43cec6da-07a1-4204-a479-764855df83d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d50fb1-9ff7-424b-81d3-8bd3dace4276",
        "cursor": {
          "ref": "aaac1155-2420-43b5-97f8-199b355eec66",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66fd23bf-9903-48d7-bfcf-ce196e2700da"
        },
        "item": {
          "id": "80d50fb1-9ff7-424b-81d3-8bd3dace4276",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "979dee7e-ab3b-499d-9b82-9ff275b2ff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ebc492-2f83-4e0f-ac00-e83f81eba1ba",
        "cursor": {
          "ref": "80267761-da6e-443c-a675-785c16c35cd1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9bbdb7e9-84da-4a83-9db7-3b1ddaef2cd6"
        },
        "item": {
          "id": "32ebc492-2f83-4e0f-ac00-e83f81eba1ba",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc57d2b4-f26a-4dd5-8c74-26a983ee0b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c56af20-5224-40ab-9fa5-2584220caaf7",
        "cursor": {
          "ref": "01cc6b7a-e522-40f3-9ad4-161df7b1cd73",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "760b6216-1801-4aef-bc8b-3424ea85bcbb"
        },
        "item": {
          "id": "8c56af20-5224-40ab-9fa5-2584220caaf7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "60ed7714-b197-47b9-855e-3e2c099b485d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0cc06-7594-410e-9791-6f602e48e4a6",
        "cursor": {
          "ref": "712ed7b2-ffcc-4950-a0ee-e4bbf2ed4e51",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92c3fe34-437c-41a6-9129-2c4156626c63"
        },
        "item": {
          "id": "77c0cc06-7594-410e-9791-6f602e48e4a6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f3430bdd-5a43-4b72-9cf0-835abaef2472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e0234a-b4a7-419d-aaf4-af22709da4e3",
        "cursor": {
          "ref": "5e78d830-1b38-4777-8e60-1e1943ac292f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1c73fdf0-0452-424b-bf7c-270a811c951b"
        },
        "item": {
          "id": "91e0234a-b4a7-419d-aaf4-af22709da4e3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "80875b55-d4ca-44f7-9392-85417d62affa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1386536-2511-4c35-b9d2-deb288a0c6bf",
        "cursor": {
          "ref": "314b115f-a5c9-4f16-9432-52716e58e2c1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad0f2ee3-3139-467b-bf07-f744c6200f11"
        },
        "item": {
          "id": "d1386536-2511-4c35-b9d2-deb288a0c6bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "985b297f-917b-4903-8f01-c320bfeafb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6434d4d0-3ebb-4e5a-9c1e-5759e313b7b1",
        "cursor": {
          "ref": "3b669bd5-9749-4b52-a7da-b17bd984182e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "43503225-1769-444d-9b05-1a149e46207d"
        },
        "item": {
          "id": "6434d4d0-3ebb-4e5a-9c1e-5759e313b7b1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7d3f5d39-e529-4ea1-a2e1-246da4904aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f62fb97-f037-4c98-8622-fc8597f82ee5",
        "cursor": {
          "ref": "e03b2b71-b093-4770-8108-96561888ee84",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06c645bd-cb0c-43b2-a85b-722f14224172"
        },
        "item": {
          "id": "7f62fb97-f037-4c98-8622-fc8597f82ee5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bb211a70-5494-47eb-bf80-96ad36336f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20ed46a-d9e7-4c15-98cd-4d71b063d83a",
        "cursor": {
          "ref": "3196cb2a-a203-4265-aaef-8ffb93c638cc",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b302ee2a-b864-4dea-868c-d8bb107a7627"
        },
        "item": {
          "id": "f20ed46a-d9e7-4c15-98cd-4d71b063d83a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b2c33574-94f1-49ef-98e8-d8ea837103e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fb0e9f-f3fd-4c43-924e-1c92ecf8983f",
        "cursor": {
          "ref": "d15b76be-7449-40fa-be8f-b2b3879dc3d7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "74b85151-36a9-46a8-b162-50b40fbf315f"
        },
        "item": {
          "id": "a5fb0e9f-f3fd-4c43-924e-1c92ecf8983f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7298d6ed-4478-4adb-ba33-f789d1c634b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7e1f3b-96de-4a9a-9a71-0021b50deb1c",
        "cursor": {
          "ref": "e96b9af1-c5fc-4cac-bd89-c3c05bbd58c4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6a91f370-3c6b-4978-8972-24f261bc19f6"
        },
        "item": {
          "id": "8a7e1f3b-96de-4a9a-9a71-0021b50deb1c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "193e79c7-7638-4a79-81cc-421c29d14310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd70b774-8fb2-4328-9bcb-aa858085e97b",
        "cursor": {
          "ref": "504a20ba-c6d6-474a-a9d0-1d0aaf15930d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04196359-d7d5-4a3a-914c-46a61c8dcd92"
        },
        "item": {
          "id": "cd70b774-8fb2-4328-9bcb-aa858085e97b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "359cf714-9279-4f7e-a536-a6252e22b386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8284dbc-234c-4e18-9ce4-d29b358c3934",
        "cursor": {
          "ref": "d9b67b8b-9132-47a6-9ab7-9f73a9782936",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a1d540a1-4661-4132-aa80-e26a8b5c4801"
        },
        "item": {
          "id": "c8284dbc-234c-4e18-9ce4-d29b358c3934",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6fdf8a57-11fb-4674-b11c-9c9cc5454aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f9a6d-3ea2-48ac-930c-128086a2ed72",
        "cursor": {
          "ref": "ff60d3c4-66c4-4d10-9a33-97bbfa116f49",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b393cb81-1d07-407f-b75f-6f11b3fafd73"
        },
        "item": {
          "id": "6b2f9a6d-3ea2-48ac-930c-128086a2ed72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a03b652d-d709-45f1-9bdf-afe5d628be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb50cd6-d678-4ee2-9b57-97662a91e495",
        "cursor": {
          "ref": "7e66d0ab-61b1-4401-b96b-d5394c706765",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a68299f0-78cf-4759-b7f4-d93e22e549db"
        },
        "item": {
          "id": "cbb50cd6-d678-4ee2-9b57-97662a91e495",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3222c659-9b46-4399-8ef7-9a657f550f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9068b881-dee3-4476-b796-aa558c71d981",
        "cursor": {
          "ref": "e444142e-443e-4f47-b3b9-32443be09a62",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db1136bf-33b6-498c-9dd9-1b004e2ff549"
        },
        "item": {
          "id": "9068b881-dee3-4476-b796-aa558c71d981",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6ff939fc-635d-49be-a013-34142ad7dc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b2bc8a-c032-4bcc-835f-7fca5f20bcac",
        "cursor": {
          "ref": "f0e83f45-0b96-40eb-9fc4-1dddd1a57a69",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b99304f4-cf14-4c24-8678-f3a66c297a17"
        },
        "item": {
          "id": "61b2bc8a-c032-4bcc-835f-7fca5f20bcac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7fa4d766-9a9c-458d-94af-2cf8ffaf67a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9705829e-2363-48a0-b522-46a925720b6c",
        "cursor": {
          "ref": "28ad978e-e6b1-4b08-a101-c7dd9e2a812e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b266fded-6b72-4e6e-a17a-f13f6ca7ff13"
        },
        "item": {
          "id": "9705829e-2363-48a0-b522-46a925720b6c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cab54b68-37a9-47b7-ab58-0524a05c0018",
          "status": "Created",
          "code": 201,
          "responseTime": 9546,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c539ae82-3fa1-4f27-860b-f29e6ffd59d6",
        "cursor": {
          "ref": "893293d8-aede-4e1e-a9ab-0b785fea627a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ee2c56c6-d1c5-4764-af6e-af8c2469575c"
        },
        "item": {
          "id": "c539ae82-3fa1-4f27-860b-f29e6ffd59d6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "442d149a-52d9-484f-a9d0-56dc11fe4f15",
          "status": "Created",
          "code": 201,
          "responseTime": 8842,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67115be1-27f3-4580-bae4-b6f14bbc56ca",
        "cursor": {
          "ref": "21cb7f03-5bc3-40a6-9d4f-6c8d56df4a4b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8685dab4-22a7-4da5-b984-787c8dab449b"
        },
        "item": {
          "id": "67115be1-27f3-4580-bae4-b6f14bbc56ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "89304b54-a383-4d58-a90b-8fe226747844",
          "status": "Created",
          "code": 201,
          "responseTime": 8528,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d710590e-6491-4846-acb3-239b9c90fa54",
        "cursor": {
          "ref": "d66c85a1-3577-4cfb-a0a5-6ce438c9f728",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d646b964-3634-49bc-bde9-7515f7f6e026"
        },
        "item": {
          "id": "d710590e-6491-4846-acb3-239b9c90fa54",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c6e090f5-3f53-42b5-a141-439a2e8d98f5",
          "status": "Created",
          "code": 201,
          "responseTime": 7619,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1196490-b43a-4e61-83ea-1ba4259c2c08",
        "cursor": {
          "ref": "0b333d7d-0755-404d-ba3d-4925172b4b70",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "71421519-41cc-4f0d-a678-b277d0b6e4cb"
        },
        "item": {
          "id": "d1196490-b43a-4e61-83ea-1ba4259c2c08",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34e76e0b-db8e-4bc7-b211-86881483b8c4",
          "status": "Created",
          "code": 201,
          "responseTime": 9374,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eb62ca-7023-4d13-8d00-db2a4d51af06",
        "cursor": {
          "ref": "3f4db925-cd42-4e52-8571-42c19442ba0b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0de8457e-7d5c-4668-8fec-838213a2fceb"
        },
        "item": {
          "id": "f0eb62ca-7023-4d13-8d00-db2a4d51af06",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "90c3451e-d25a-4f77-88f9-d6365d0a786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "51575650-4ba3-4e43-97de-17a1c7e057bc",
        "cursor": {
          "ref": "209021d7-a96c-470e-861e-564a26cf8e1b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ae5133b7-25f0-41f5-b7bd-75434e5361a2"
        },
        "item": {
          "id": "51575650-4ba3-4e43-97de-17a1c7e057bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba728ddb-9825-4792-afd9-91e1d0f9e81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3eb8f4-7a5a-4205-80b4-622825bfa8c2",
        "cursor": {
          "ref": "af37c150-6736-4011-88a9-74124d822616",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a7396e2e-0613-4fdb-a93a-cd569b4a052b"
        },
        "item": {
          "id": "3b3eb8f4-7a5a-4205-80b4-622825bfa8c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d6cb37d3-8fb6-457f-b779-cd76c21d4a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9743b20-431d-4b4f-9776-c2bbb386ab1d",
        "cursor": {
          "ref": "02652994-8a53-4e97-b8e6-89c59541b146",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c8bc062-d932-428a-8821-f8f76f2534a5"
        },
        "item": {
          "id": "b9743b20-431d-4b4f-9776-c2bbb386ab1d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c096e6b-4e0b-4681-bfb9-08c976661e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513a4e3f-0768-4d2b-8f17-61be12bbce21",
        "cursor": {
          "ref": "441be453-d7fd-42ea-b9a4-b52034fae170",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f81d9b16-6da8-4848-beb2-776d65df06b8"
        },
        "item": {
          "id": "513a4e3f-0768-4d2b-8f17-61be12bbce21",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f160a9c-5ee1-4004-8015-3872b189de84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b6a983-97db-44dd-922f-cbf60d313ab6",
        "cursor": {
          "ref": "02481ad2-87f7-4b29-8016-4f8659c05ad5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "241f72d9-f831-4888-8b74-c5b440839b69"
        },
        "item": {
          "id": "26b6a983-97db-44dd-922f-cbf60d313ab6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5072622a-6f4a-4abf-a5ee-8c592eff761a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0649c91-8723-4f01-97a9-0df635f7842e",
        "cursor": {
          "ref": "2668d354-9a1f-4f86-835b-094f4e0aec71",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "98fad555-9baa-4594-941e-c7ce4cee0c0d"
        },
        "item": {
          "id": "e0649c91-8723-4f01-97a9-0df635f7842e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6f75d0fc-e032-45ba-ad5b-f23864cba65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727feb30-11f5-4af8-8be1-1544263ffc64",
        "cursor": {
          "ref": "ea308afd-3a4b-47af-bec7-85b8bf252694",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e64055ce-1b7c-40ce-89b0-58b4ec758861"
        },
        "item": {
          "id": "727feb30-11f5-4af8-8be1-1544263ffc64",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3780b85d-87c3-4b53-8690-f58f1e36affd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109dfc60-a6b7-43ca-b6fc-a366303e92f7",
        "cursor": {
          "ref": "d30ab4b7-f2f7-404e-8f63-0babe434746f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "624cc723-134a-450c-90df-ccd73d426b1a"
        },
        "item": {
          "id": "109dfc60-a6b7-43ca-b6fc-a366303e92f7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a6c390ec-0fec-4b7f-b597-51722ab53a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30279278-d3eb-4d71-ba0b-16dde99c2f10",
        "cursor": {
          "ref": "d27d53dc-cc92-416b-9ff1-2016df0376d5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c412bdf8-b748-4bbe-9226-48fd1df79083"
        },
        "item": {
          "id": "30279278-d3eb-4d71-ba0b-16dde99c2f10",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c59c671d-04be-4b42-b770-d34b5109dadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11d2ae6-4c0c-4f5b-8546-df9c32f29197",
        "cursor": {
          "ref": "afed1ca6-a225-441e-95fe-18d52133b46f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "591ea4a1-7615-4a03-9fef-a5cdef6d158f"
        },
        "item": {
          "id": "b11d2ae6-4c0c-4f5b-8546-df9c32f29197",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fbb3a412-9af0-40d8-99c6-9105805c79d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919e14d-a24b-4b4d-a76c-f644696ba20b",
        "cursor": {
          "ref": "913f8549-9cf9-482a-9fe8-d32f77a3b1bf",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9e03ff99-d67e-46fb-98aa-a8d1d318b59a"
        },
        "item": {
          "id": "f919e14d-a24b-4b4d-a76c-f644696ba20b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d641a40a-8496-447e-b038-992650850e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3de75a-6a88-4bd9-92b7-da2e41492660",
        "cursor": {
          "ref": "f4864887-89a9-4101-9b24-ebf3b5b92121",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9dc2eba5-b1a8-4b75-8ada-b2a35c004c77"
        },
        "item": {
          "id": "0f3de75a-6a88-4bd9-92b7-da2e41492660",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3223668c-8141-4239-a20b-affb209a27d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379a63a7-7843-428e-a70b-306bcc5dd733",
        "cursor": {
          "ref": "aefe69dc-e373-4ab2-a096-6da0457415c4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e7ca4e2-b62d-4fb2-a1fc-9fc03b626eec"
        },
        "item": {
          "id": "379a63a7-7843-428e-a70b-306bcc5dd733",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d6114e2c-fe19-4eb5-a016-1d7176118c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f3b04d-cbc6-4d1f-9199-f58292badd51",
        "cursor": {
          "ref": "0b2e32b4-36b5-40e4-88ae-482a334e1498",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5009975f-4131-4050-92b7-ee9489a10938"
        },
        "item": {
          "id": "c6f3b04d-cbc6-4d1f-9199-f58292badd51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9481b92-ca33-482a-a314-3de0ca360e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a590693-e0d5-4c5d-9e66-b52ad71ef865",
        "cursor": {
          "ref": "40c91ebf-3e21-451a-a3b5-e32fbc6c151a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "573ba556-05b1-47bc-9df2-8fb444c4b3c2"
        },
        "item": {
          "id": "2a590693-e0d5-4c5d-9e66-b52ad71ef865",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c670a4d4-0b98-4ca2-b03a-69cbd1476c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ff78b-f940-493c-8873-d2ca002731c2",
        "cursor": {
          "ref": "b8eff95b-8719-43fa-9f05-2da3308074da",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c05a0c1a-2b7d-4909-8ad7-c7d8b0ed5240"
        },
        "item": {
          "id": "be2ff78b-f940-493c-8873-d2ca002731c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c200e98e-3247-4487-82f4-77dad1acba44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e1698-bcf7-4572-8648-4b99c4d31bd9",
        "cursor": {
          "ref": "3c9c1072-6810-4c22-8e2a-0ab6163b1aa5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b57b3a05-815c-4cae-ae6f-71bdd75f3e17"
        },
        "item": {
          "id": "8d8e1698-bcf7-4572-8648-4b99c4d31bd9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dfb4ded0-3e10-41a3-a8f2-bca63060298c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da86bc8b-cd37-4c82-967f-9e63215e30fa",
        "cursor": {
          "ref": "e7c67d58-9522-4491-bbb6-bb935333c203",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "84330d8b-20a2-45ef-a90f-e8eca0cd014c"
        },
        "item": {
          "id": "da86bc8b-cd37-4c82-967f-9e63215e30fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "20d3e3c6-4c81-4ad3-bbe5-666418bfe072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e73e9-2d3c-492f-9333-21293464c2b2",
        "cursor": {
          "ref": "0f43a63d-04bf-4a4c-ac94-e66a8edd5d71",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "476d0d19-3eb4-47bf-9753-35fb8335a24d"
        },
        "item": {
          "id": "af9e73e9-2d3c-492f-9333-21293464c2b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc24c109-2b00-41b1-8897-677ec807f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18be4cbc-fc8f-42c0-b663-95399c8b9e01",
        "cursor": {
          "ref": "612f1573-8a28-494b-9199-b5f14b18e3a1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b977998b-5b37-4e50-a409-a6b89a8ca78c"
        },
        "item": {
          "id": "18be4cbc-fc8f-42c0-b663-95399c8b9e01",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "75d5170c-73d0-464b-a27c-0890342e5650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e705158c-ca34-4c6c-97ee-5e6a1bfa0d67",
        "cursor": {
          "ref": "0102f4ce-9e28-4339-97bf-a338afd4875a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6039cb16-0eb3-49c8-91a8-4e3178faf157"
        },
        "item": {
          "id": "e705158c-ca34-4c6c-97ee-5e6a1bfa0d67",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "53d2f3f2-e7ae-403f-ad04-4e6d65e193c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a7300-b04d-4901-8ec4-c1e20f1e65f8",
        "cursor": {
          "ref": "8a978120-d7f5-4cdb-bec2-29ded7d7c61d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6a982d24-8d9d-44b7-9084-b52b51f7c45b"
        },
        "item": {
          "id": "8e0a7300-b04d-4901-8ec4-c1e20f1e65f8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b2557235-a78f-4c0b-b707-c3246db0edee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64632a5-1bc7-4e21-8b3c-e7c18ccc3846",
        "cursor": {
          "ref": "de8f85f0-a38b-4e75-a052-4bf358bce58d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e5c6070-1cf7-4c35-8292-28f467c282bd"
        },
        "item": {
          "id": "a64632a5-1bc7-4e21-8b3c-e7c18ccc3846",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "daaea4f3-b9f3-4c41-a1fa-ee9654490db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210a43c-d084-4806-9e0e-f0e331ea8af5",
        "cursor": {
          "ref": "20b26ce8-44f9-4533-bf6a-aa4f7c13ed23",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e8d71deb-699a-4a11-8379-97017673be8d"
        },
        "item": {
          "id": "b210a43c-d084-4806-9e0e-f0e331ea8af5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5aad8cc0-6155-492e-8d87-1632c156d159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa67ac-6503-43a7-bfb2-155d06e90096",
        "cursor": {
          "ref": "e4279d4c-8a3f-43f8-a7d1-5526e783c1de",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3f5d2102-c3cc-42bd-a241-b4cdaad60f80"
        },
        "item": {
          "id": "76aa67ac-6503-43a7-bfb2-155d06e90096",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41ab56cc-3bae-46cc-9789-cd40e11907f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5455516-c237-41a1-bbaa-03aa596dea0d",
        "cursor": {
          "ref": "243e5163-4ef0-47bc-8e60-e751985cca8a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2edba0ad-58b1-4ff1-a81a-f8e490cadb8a"
        },
        "item": {
          "id": "f5455516-c237-41a1-bbaa-03aa596dea0d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c92a9be2-f3bb-471e-a3b7-52438e11173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf895fab-21ee-43c8-8806-49b453b1afd5",
        "cursor": {
          "ref": "05d6ddd4-20f7-473d-8540-d2e0501f3d7b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "606bcde8-d7db-44c2-b6e5-a71ef8c3cc40"
        },
        "item": {
          "id": "cf895fab-21ee-43c8-8806-49b453b1afd5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "00a81ecd-4f72-48b2-a064-ddf961372e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230085fc-edd5-4c44-9bbd-0277ff369474",
        "cursor": {
          "ref": "62a4c771-785d-40ff-b773-33184deb0599",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c0ee64de-9517-4ba1-ab71-634bf02cbdd8"
        },
        "item": {
          "id": "230085fc-edd5-4c44-9bbd-0277ff369474",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20eea029-0629-4457-8bf5-37e916be2539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9783af14-5bd3-4da6-b9c6-d886b9612a72",
        "cursor": {
          "ref": "2f899441-26a7-4ab2-914e-f2e83707db0e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ae94debf-f8a6-4642-9699-dc6eee0136fc"
        },
        "item": {
          "id": "9783af14-5bd3-4da6-b9c6-d886b9612a72",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5bd9ec96-dc38-4ae2-96ff-b11f90caa954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f1eafa-5a25-4f4e-aa2e-18c8bd126240",
        "cursor": {
          "ref": "a3bfa6e5-c61b-465f-938a-2cac61b72131",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44b7d95e-ba8d-497f-97fe-c7682a6169ac"
        },
        "item": {
          "id": "14f1eafa-5a25-4f4e-aa2e-18c8bd126240",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5238458a-aa89-409d-a155-8d9a24b16f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a4423-056d-4d5e-92da-81d9d2e59f62",
        "cursor": {
          "ref": "1fc273e6-1275-4728-9e66-4cac94e443de",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "59461e56-9bb0-4a2d-8ee4-01c5acf2e27e"
        },
        "item": {
          "id": "249a4423-056d-4d5e-92da-81d9d2e59f62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7bdff9e6-8007-4d07-af10-a1037a441cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb711b3-f743-4158-a385-e908c7760893",
        "cursor": {
          "ref": "dc4741d4-ac1e-4790-9fe1-af733f05ed24",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "85d7934d-2bc2-4c26-aeee-a0a9b68893b2"
        },
        "item": {
          "id": "7cb711b3-f743-4158-a385-e908c7760893",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ce6538fc-7037-4526-a57e-0a8013484eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c783008-8d67-4bd2-8fdf-fde19c54e4bf",
        "cursor": {
          "ref": "260a5540-a31d-44a7-ab13-ac39ea94eef0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8c923641-7d5c-445c-b07e-8348b99a8f93"
        },
        "item": {
          "id": "7c783008-8d67-4bd2-8fdf-fde19c54e4bf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25e9c60a-481b-4480-8737-e2ab8ca86ade",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d30a14-e1de-4698-980d-a00996fda199",
        "cursor": {
          "ref": "ef92c014-155d-43e3-a050-928d85de2780",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "92fa7d07-29fb-4e58-9b56-7b4276ca699b"
        },
        "item": {
          "id": "f1d30a14-e1de-4698-980d-a00996fda199",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "47b2b18f-6847-4eb7-8e53-b8b4ccf04cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71be7167-060d-463b-ac07-a63a9e6e135d",
        "cursor": {
          "ref": "4dc44984-bb35-4113-bca4-1bf6a500bed9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e4538bc9-7e74-4549-9d69-719441c8397a"
        },
        "item": {
          "id": "71be7167-060d-463b-ac07-a63a9e6e135d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3b54b55-2e4c-4cd2-acc0-e5e433e65a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecceed16-954d-4a75-9a1c-13acb44ea7eb",
        "cursor": {
          "ref": "9b911c2c-4af1-47a1-bfde-938aba9247a1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6f032a6f-4d32-4e56-a82f-d40af3811e4e"
        },
        "item": {
          "id": "ecceed16-954d-4a75-9a1c-13acb44ea7eb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2c9dc354-ff7f-4b97-a77f-e5a5c1931883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d43d9c3-11ce-454c-a20c-261cd4303310",
        "cursor": {
          "ref": "c5841c7e-2ee7-4fa9-a3f6-d3e791b30558",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c6be2116-266b-4878-8baa-f400fd6a8784"
        },
        "item": {
          "id": "6d43d9c3-11ce-454c-a20c-261cd4303310",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa75c5e1-bf73-4225-a361-784b477d4e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40b44db-d323-473a-a4f6-8cbedd9a23a6",
        "cursor": {
          "ref": "c257ebaa-999e-42b2-aa1e-61a5e0e1f927",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39079ee1-93ab-4d54-891a-8eabe980cf4c"
        },
        "item": {
          "id": "e40b44db-d323-473a-a4f6-8cbedd9a23a6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c95b526c-05a6-4ba3-b2bd-62d30eaf5da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f888de1-3c3b-46ff-9275-34be4726c763",
        "cursor": {
          "ref": "1b71a77c-9f61-4874-92a9-dd3a011e055c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f112521d-c34a-4d76-bf23-86cb38617bf6"
        },
        "item": {
          "id": "4f888de1-3c3b-46ff-9275-34be4726c763",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bb3af400-7821-443d-87e4-f37068eff655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f1799b-a3a9-4a5d-8342-07d50a2bdf00",
        "cursor": {
          "ref": "2c8eafe7-3477-40c5-93d1-c22124a6b630",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d42f3097-82ab-4a60-b292-bec7db2aa4ec"
        },
        "item": {
          "id": "23f1799b-a3a9-4a5d-8342-07d50a2bdf00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "12717c52-bd2a-4b62-8204-a74d04ba2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd129e2-c8d4-487c-82d1-e8c60d357b06",
        "cursor": {
          "ref": "d35e2b43-da5c-44dc-a98b-db3361430b47",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "758e4af2-036c-4bff-adbf-bd783f4dcfd7"
        },
        "item": {
          "id": "dbd129e2-c8d4-487c-82d1-e8c60d357b06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83fff7b0-200a-4086-8ce0-892095182835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b035ea-6079-41b2-9f8d-aa33cadca451",
        "cursor": {
          "ref": "b0800cbe-53d5-4f9d-8532-ce5d297ab0f6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b06fa15a-d5b6-42a5-90cf-7d8935f17742"
        },
        "item": {
          "id": "68b035ea-6079-41b2-9f8d-aa33cadca451",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ddab7ecd-e961-4fde-ad24-f1a5e80d4844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf0256c-35a7-4674-b1d1-e00eecbe9a7d",
        "cursor": {
          "ref": "a3b20898-89c4-4458-a731-61e578219803",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "714a126a-cb80-42f8-b0a1-9b79574fe8fc"
        },
        "item": {
          "id": "bbf0256c-35a7-4674-b1d1-e00eecbe9a7d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad29902b-44e1-41cc-8926-993a3512de8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4977393e-dddb-4e17-ba09-ff22287562d8",
        "cursor": {
          "ref": "cab54073-025b-4486-8519-6ae45f4456bf",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7e35d517-cb4c-45d8-aea5-3b8da62d98e3"
        },
        "item": {
          "id": "4977393e-dddb-4e17-ba09-ff22287562d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fe006877-48d1-4535-bf56-ab6222584b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e522eb8-a5e1-4fcc-87f3-329f58db66f5",
        "cursor": {
          "ref": "0fd17dab-80cc-4199-b0fe-6c5e10eb6afc",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5a758178-156d-4989-aaeb-01eb4fa51cf2"
        },
        "item": {
          "id": "1e522eb8-a5e1-4fcc-87f3-329f58db66f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b696420c-6f66-4da2-980d-1358af3c9b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a1bbcf-2791-4223-acf0-26b4ac08b35f",
        "cursor": {
          "ref": "a0304032-15f9-421a-bce1-08d5b650ef6e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35c5fa42-6bec-49fd-9b89-5c66a1ee8010"
        },
        "item": {
          "id": "47a1bbcf-2791-4223-acf0-26b4ac08b35f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "357e66ed-bc28-4fa1-876c-f41f8ef78fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab95d64-c5c1-4b37-9801-60983e30b5a7",
        "cursor": {
          "ref": "374ab5b6-9a5d-42c5-aace-6db9841164c1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e33f15ab-18d9-4e33-9fdc-1ceb884b7f3f"
        },
        "item": {
          "id": "7ab95d64-c5c1-4b37-9801-60983e30b5a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "919ac458-7695-4650-bda4-34159def6fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdbce96-8fbc-45db-87bb-3528d3bb6f77",
        "cursor": {
          "ref": "c87272fc-4dd1-4a58-a379-71a44276f5cb",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "61f08a89-c832-4a9f-ba06-21eb93cd3021"
        },
        "item": {
          "id": "4fdbce96-8fbc-45db-87bb-3528d3bb6f77",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b0c01af-38f9-49a0-b4d5-0262ae3c91c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47f2d8-8b69-43b2-bb4b-9f2a9ca3ac71",
        "cursor": {
          "ref": "92131125-5f3b-40e8-9672-440e3c023399",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c99b72cc-ab5b-4e77-baea-b6ef1008cefe"
        },
        "item": {
          "id": "5f47f2d8-8b69-43b2-bb4b-9f2a9ca3ac71",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22c58ddd-b6bb-470f-a81a-951df7ab22d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3c56ad-463c-4b34-b881-43c4303cc91d",
        "cursor": {
          "ref": "577d648b-5b10-403a-802b-2ddd85175ba4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "59bbb65b-7841-401a-8549-ad8e99d3bf68"
        },
        "item": {
          "id": "ec3c56ad-463c-4b34-b881-43c4303cc91d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fb6a034d-e05d-49d3-a4da-649441671a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb2d84-2bca-4a61-a811-7bd1393f5cf6",
        "cursor": {
          "ref": "9bafee1a-b17b-4ecf-95b4-90cfc8507f4b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bca4de54-9538-485d-af50-c2187a1bc8e9"
        },
        "item": {
          "id": "4feb2d84-2bca-4a61-a811-7bd1393f5cf6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92b16ff0-5e4e-40ad-b75a-0552b0b3a7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86991c82-ef3a-4928-8b3d-d2964e0a477f",
        "cursor": {
          "ref": "b2bfc545-6f53-4120-b250-7df5f8565ae6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3f3c9526-899f-41a3-b696-08e2a1bf002d"
        },
        "item": {
          "id": "86991c82-ef3a-4928-8b3d-d2964e0a477f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ac3c6d6-35db-4da9-9088-8c844f2b09e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ba6d80-a5ff-47ef-8509-5bbb75085534",
        "cursor": {
          "ref": "02bef337-bbdf-4b98-83f5-b983089bcd87",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3dc5b99f-36a7-43be-acc1-dd5a31e453ee"
        },
        "item": {
          "id": "41ba6d80-a5ff-47ef-8509-5bbb75085534",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b4014551-7eee-4e91-8623-1f677dc68a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d30da-f2b4-4090-a64f-fa3eba4b389c",
        "cursor": {
          "ref": "80798f7f-e492-4989-bcc0-ee8731247b9f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "55db513e-fb3a-4a8b-aab1-ab45e5ebf59c"
        },
        "item": {
          "id": "003d30da-f2b4-4090-a64f-fa3eba4b389c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7b605b2-ffca-45ae-a3c7-3e343e3b0868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c9bb1d-eeda-43d3-8a97-3a2c04525bcf",
        "cursor": {
          "ref": "a49eca69-0aa5-403c-a11d-49ebc44d5593",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "42deb560-3471-4e5a-9569-040cfb0bc700"
        },
        "item": {
          "id": "88c9bb1d-eeda-43d3-8a97-3a2c04525bcf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed8d4f44-4bbe-43f2-845c-172f1150a844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882a1426-1eb5-4a26-bbd9-daf2ca25f8af",
        "cursor": {
          "ref": "35cdf927-b6ef-4f8d-a3ab-001e1271619f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b093b170-0baf-458b-99c2-33dab4de8210"
        },
        "item": {
          "id": "882a1426-1eb5-4a26-bbd9-daf2ca25f8af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e26c781-d932-4ef4-94ea-63175c3c74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062155eb-93a4-46c4-803b-3c28ed24f41e",
        "cursor": {
          "ref": "c9757537-0643-4cb0-8305-b4241312c6d2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0ceaa78f-af43-43b1-9193-34f7b0d03b60"
        },
        "item": {
          "id": "062155eb-93a4-46c4-803b-3c28ed24f41e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "490794b7-d220-489b-817c-b7cc55082197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c4f9cb-7662-4e2d-8525-2699c0f9b94c",
        "cursor": {
          "ref": "ea08463d-f3ae-44fb-8d55-e59a4b9bc401",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e40ba7c9-258a-4c28-add5-3d81bce68302"
        },
        "item": {
          "id": "56c4f9cb-7662-4e2d-8525-2699c0f9b94c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a46d297d-43f4-4a3a-9f68-3b954c9baf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88dd378-3e0e-4b0a-8ba5-ef70870d3961",
        "cursor": {
          "ref": "b5f98ca0-a016-4a74-8b58-a0d0ab8429d6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c01a5eb-88c5-48ca-bdeb-969d73252007"
        },
        "item": {
          "id": "a88dd378-3e0e-4b0a-8ba5-ef70870d3961",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c418b04-369d-4836-a064-f4a2084f2900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfa8349-0126-4779-a477-297cfc8ebfc6",
        "cursor": {
          "ref": "6bc565ad-b95b-4e4a-8bc2-c896d7e15dc5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1aadb6f-570c-42f8-85b3-5fd2f13a85fc"
        },
        "item": {
          "id": "3dfa8349-0126-4779-a477-297cfc8ebfc6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2f160271-ba68-4081-9309-20cad0ed80b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd8a7d0-1f83-42be-baa0-71b66262e12e",
        "cursor": {
          "ref": "f2557659-6385-4053-a08f-5e8928793509",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e6a61be-3ec8-41d3-98a4-8b36b4569fd2"
        },
        "item": {
          "id": "8fd8a7d0-1f83-42be-baa0-71b66262e12e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "66064dd2-3075-4426-aac6-a4cb34f1d006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bdfd66-b56f-485f-9806-d89082483c26",
        "cursor": {
          "ref": "0a639137-a064-45d7-9f6e-f3fedaab1546",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "faf9e076-66cc-4d04-b0da-ac6db170b2db"
        },
        "item": {
          "id": "78bdfd66-b56f-485f-9806-d89082483c26",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "446db05b-f9fe-4043-b00e-d868dce17e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026a213b-3031-4251-a473-d2294f0f1eee",
        "cursor": {
          "ref": "bd05496c-fd55-41f9-ba98-34d5e7fffaf5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "89070064-2c8b-402b-8138-78952ca52dc9"
        },
        "item": {
          "id": "026a213b-3031-4251-a473-d2294f0f1eee",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64f6f399-ce16-4cae-a269-d556b6ff24f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4620a63f-da1e-4c4d-89b7-6df5449d71de",
        "cursor": {
          "ref": "e51a9b1b-4efb-4e34-bfe0-8492c53fd4c9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d234304-38c4-4e82-a661-011a58865140"
        },
        "item": {
          "id": "4620a63f-da1e-4c4d-89b7-6df5449d71de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1897af9a-dede-4f6a-9b38-abf185d3c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d82dff-fd10-430c-b51a-2bba613f870e",
        "cursor": {
          "ref": "5613fff0-1a8f-4827-b9c1-d1654e4c3070",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eadbc93e-4c35-4acf-bd1f-04ecf5097bb0"
        },
        "item": {
          "id": "04d82dff-fd10-430c-b51a-2bba613f870e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e0e487a-bafa-45d6-9525-a32f6d441f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c188f3-2657-4b31-bf52-75e7939c1b76",
        "cursor": {
          "ref": "f281059f-51ef-4ffe-a0c2-46ec78228e88",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bbc32242-d98a-4dd0-b4ca-3028f75c2282"
        },
        "item": {
          "id": "33c188f3-2657-4b31-bf52-75e7939c1b76",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "18c015f8-3507-42cc-9e5e-7f59a40a37e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016bee28-a7aa-4cd5-9e08-e3ba3055dac6",
        "cursor": {
          "ref": "116b8e79-2d79-4b91-b30d-7c1fba442908",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e3a3a6b-d164-4066-b6e2-1289d2fe1c59"
        },
        "item": {
          "id": "016bee28-a7aa-4cd5-9e08-e3ba3055dac6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c60f0e90-2b72-4534-8a43-7fdfc857da3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea051f-3c6a-42fb-b302-2f70f75255cf",
        "cursor": {
          "ref": "037d3131-a70d-4f17-8a28-822962312afd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bafb88f3-e79e-40d5-bf4c-65f1cc2fa028"
        },
        "item": {
          "id": "8bea051f-3c6a-42fb-b302-2f70f75255cf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "aa6c7f2b-fc98-4f75-a371-8eea9305d1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42613d34-bb9e-4e28-87b0-1ca56c7a709e",
        "cursor": {
          "ref": "2cf8dc4b-0235-4976-a544-bd222f545004",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5886cb02-7145-41fc-b016-5d3e7148459d"
        },
        "item": {
          "id": "42613d34-bb9e-4e28-87b0-1ca56c7a709e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b2e1efcd-d98f-4abd-8fd5-9470e39e967e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739aa668-86f2-4f7b-b193-2eea8b0fc3c9",
        "cursor": {
          "ref": "8691bdb5-1566-4dbc-81d0-1c5bc7a7b177",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d9bbd940-989e-4f7d-a04c-d576e20fa076"
        },
        "item": {
          "id": "739aa668-86f2-4f7b-b193-2eea8b0fc3c9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5ace03b2-6fec-4775-a2ba-4026c6ddc8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8c6d56-fec2-4c80-a41f-d1846fec7d0b",
        "cursor": {
          "ref": "a2e2a5df-967f-45e9-8645-1893cf39aea6",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "50d811e5-5a8c-4656-ba06-06302f03ffd8"
        },
        "item": {
          "id": "fc8c6d56-fec2-4c80-a41f-d1846fec7d0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e1d2f3e-423c-4b5d-b3c9-97a5ae6bce48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c4bae2-e60a-446e-895c-c048f63b763e",
        "cursor": {
          "ref": "0d18c254-ce96-44eb-b4ce-6e3a772c1fa0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "efbf01a1-5f86-4a8a-9659-7c7a91eaf20d"
        },
        "item": {
          "id": "28c4bae2-e60a-446e-895c-c048f63b763e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "46e40ef0-e246-451b-a6da-4360a9aeb184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018fdaed-633c-457b-bcaf-81577293f053",
        "cursor": {
          "ref": "79ede680-e034-42cf-9823-c642e4c2969e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "83ed16aa-ca9a-4685-9ed1-2187e31393d7"
        },
        "item": {
          "id": "018fdaed-633c-457b-bcaf-81577293f053",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c3c2aa4-cfee-47b5-919b-0ced66e45d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850af165-746a-49ae-99cd-c0cc3dd1c3be",
        "cursor": {
          "ref": "6fe46399-8639-4b6b-b944-3791d81536e2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "215fe2ef-d016-43c4-a0d0-f6674a1167b6"
        },
        "item": {
          "id": "850af165-746a-49ae-99cd-c0cc3dd1c3be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cc8765c6-fec9-4269-82d6-46c60d3545b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220980a2-7302-44b2-96b6-55e4c22bc805",
        "cursor": {
          "ref": "1add9236-23d4-4b11-9bd4-3260c3470cd9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84018910-09ff-47e6-b2eb-eb6443da2bb8"
        },
        "item": {
          "id": "220980a2-7302-44b2-96b6-55e4c22bc805",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6adc78f4-be9c-4c94-be8c-f2745344e679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a869c6a-cb1d-4e8e-9d9b-eb2296ac43ee",
        "cursor": {
          "ref": "d9d0c851-7416-45dc-90d0-0421ef75687e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2213fc67-2104-4c2b-bb46-a29664c14cda"
        },
        "item": {
          "id": "8a869c6a-cb1d-4e8e-9d9b-eb2296ac43ee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "03092cdd-2764-4887-b54e-a43a02fce385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3b4c71-1f37-4362-a8d7-0836c189118b",
        "cursor": {
          "ref": "19bf5fa6-e98e-46b5-bbdf-7d85c9222a6e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d6168305-4dbd-4bc5-9f9a-b5d74fa1080b"
        },
        "item": {
          "id": "fc3b4c71-1f37-4362-a8d7-0836c189118b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c94cde3f-9c46-4faa-a34b-2b6d171a11e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965c1a63-eb6b-41dd-92e2-315ddfa378be",
        "cursor": {
          "ref": "64bbefa5-ebec-4f69-9e39-ec1466a11aca",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "116bad3c-744a-4c02-aafd-1fb9a3b17344"
        },
        "item": {
          "id": "965c1a63-eb6b-41dd-92e2-315ddfa378be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e5ff159a-a243-442a-bbf3-6e6530d0192a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35616022-b53c-4386-9dcb-d311cf92cbd8",
        "cursor": {
          "ref": "ed5c3da4-deea-43db-9939-966a68bb244a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "518f40b6-5b82-41ef-b772-a82ea96fb7f0"
        },
        "item": {
          "id": "35616022-b53c-4386-9dcb-d311cf92cbd8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f5d7b3f-4fad-49b0-a08a-f9d7e3f42541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e36a7e6-c62b-469b-a6d2-5e204ae88622",
        "cursor": {
          "ref": "cf7cd93b-5c8c-448b-94d6-b673ee447352",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "525bf763-89a0-4293-9454-6e3d402b1ad8"
        },
        "item": {
          "id": "1e36a7e6-c62b-469b-a6d2-5e204ae88622",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ac487e79-7deb-4ea3-a23b-e466fe07a0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf62664-354f-4c76-870d-be8354c76283",
        "cursor": {
          "ref": "afe4c320-d4ea-4453-b65c-8dedff0ce655",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f618849f-572d-41c7-8c5c-0c931082851d"
        },
        "item": {
          "id": "3cf62664-354f-4c76-870d-be8354c76283",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "840bf3ed-edc7-41b1-8793-8d0260d3562c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9825b4b5-c8d4-4532-9b2c-f33afa173b42",
        "cursor": {
          "ref": "d7b08290-e85d-4334-8d69-78ed18f1d8e2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e233331e-6903-4377-af0c-6d1122fc88cb"
        },
        "item": {
          "id": "9825b4b5-c8d4-4532-9b2c-f33afa173b42",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "965d4816-bac9-45ce-8bcf-66f3b43b67a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0282dab-33e8-4e42-8287-d671ba75d2d9",
        "cursor": {
          "ref": "b2e484e0-3f7e-406a-b9bb-7df50d7167e6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7428fe45-a58b-43f9-b320-bd71c0490744"
        },
        "item": {
          "id": "e0282dab-33e8-4e42-8287-d671ba75d2d9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "754a04be-cf50-482c-8cbf-2bf10560471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229cc317-2f38-4a50-b691-4625fe79fecb",
        "cursor": {
          "ref": "75725095-c1e9-4bdd-92b3-b0169f908a74",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "32e7ee8f-2121-409d-8a5b-696b61e2cdb5"
        },
        "item": {
          "id": "229cc317-2f38-4a50-b691-4625fe79fecb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1c353052-8427-44fe-b445-f32d92890526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7706b86c-fa86-4fab-a982-143d31974b87",
        "cursor": {
          "ref": "66254ef0-e60e-4f6f-ac75-c3f4b0f1f2c0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "521c1a66-722e-4f8a-8951-18b2d1ca25f7"
        },
        "item": {
          "id": "7706b86c-fa86-4fab-a982-143d31974b87",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dded7bca-b056-4d75-8b3e-e4c16da3a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc5341-7730-480a-95d8-516c2f68e2e8",
        "cursor": {
          "ref": "505c6b2a-db62-413a-8ec7-b10a5cfe9ea4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6caa87ab-90db-443c-8f32-4c5e7cc10016"
        },
        "item": {
          "id": "bebc5341-7730-480a-95d8-516c2f68e2e8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2744b59e-e395-4fe0-9806-6204000adb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466be7f4-84b4-426e-af3e-a508fcc04ecd",
        "cursor": {
          "ref": "11f5f66e-4403-44b9-a534-b4b7beb86548",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "78bb2cfe-36cc-444b-876b-60260914f168"
        },
        "item": {
          "id": "466be7f4-84b4-426e-af3e-a508fcc04ecd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5e181b17-c2ba-44ba-aa2b-cd325a3c1257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c0a0a3-0c5e-47d7-8be6-08132e2a27d7",
        "cursor": {
          "ref": "11411f46-a87b-4487-ade2-0c2e61a1a13e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7ee4a33-6ad4-468d-afe9-038aa0e2b49f"
        },
        "item": {
          "id": "e8c0a0a3-0c5e-47d7-8be6-08132e2a27d7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b94039e4-1d4d-46ad-8edf-d86c3cbabb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e64858-b477-4add-bf59-ba45201a638e",
        "cursor": {
          "ref": "bd7dcee3-ccec-4348-aa46-cf8a8d9e7945",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b0d5377b-65d5-4187-bbfd-2db3d41d7a4b"
        },
        "item": {
          "id": "58e64858-b477-4add-bf59-ba45201a638e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e7af1d23-fd9b-4d1c-92c9-4d537d4f90e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da51de5-8167-42ea-868a-9dcca49603e6",
        "cursor": {
          "ref": "01fd7c62-6193-49d9-9045-3f63d089fdc7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75d67370-6bf3-431c-86db-bdd503f878db"
        },
        "item": {
          "id": "8da51de5-8167-42ea-868a-9dcca49603e6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f3c1d924-78e0-4104-8143-ba6517c08a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba80e13f-aaa3-43d4-bd3f-97606209c111",
        "cursor": {
          "ref": "ea4476cb-a79e-4e17-b70d-391789229423",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7eb5ea6b-69f1-4b7b-bde5-af5ff9e43c11"
        },
        "item": {
          "id": "ba80e13f-aaa3-43d4-bd3f-97606209c111",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "56f847a7-1bae-4214-a0ee-6851b3093030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd90da8-1330-4236-9ded-81c9aa8e69ce",
        "cursor": {
          "ref": "a4f3ac5d-df8b-4ca4-b2e3-925874b656a2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "af4560e1-f75f-4f2c-b1ce-a1468b36bb2a"
        },
        "item": {
          "id": "2dd90da8-1330-4236-9ded-81c9aa8e69ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "648a168b-20a6-4029-9713-9837b3f13a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af83cfe4-fd6f-4f89-8516-8c44a3c218f0",
        "cursor": {
          "ref": "0e5ae465-5f3e-4a7f-b75f-ad4bea08d1f4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1359762-da54-4856-a37f-722f07720ca0"
        },
        "item": {
          "id": "af83cfe4-fd6f-4f89-8516-8c44a3c218f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "47c4871f-5a2f-4ad1-94fe-6f0995494645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f59baf-062a-4228-8a12-f1fdc77445a4",
        "cursor": {
          "ref": "1b3208c6-04ce-4a45-b9c6-9494bf3a2bfd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f0ff160-9d6e-4c2a-bf40-fa0081ad9115"
        },
        "item": {
          "id": "d7f59baf-062a-4228-8a12-f1fdc77445a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "23df8f2c-4ef8-4fb3-80e0-c7cda60d4093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853667c3-f373-40b1-a6e6-a0cf1c0ad193",
        "cursor": {
          "ref": "12c3b985-7206-4f44-938f-64a1f4ae499a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "de88cac0-b95c-4b70-b841-b4f1b3f2ba6a"
        },
        "item": {
          "id": "853667c3-f373-40b1-a6e6-a0cf1c0ad193",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3a086446-4480-4d26-8513-893b917f694c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22ae4a-911d-4e0e-bccc-1bf0477f936a",
        "cursor": {
          "ref": "94887f9f-e930-4626-873f-c850db097ca0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd587d1a-b9bd-4b74-8501-c72c12050d90"
        },
        "item": {
          "id": "5a22ae4a-911d-4e0e-bccc-1bf0477f936a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3a9da487-76d9-4b4e-b6f1-27cc008cad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5e1d64-1af1-4943-994e-06dfa61dbcb9",
        "cursor": {
          "ref": "6f0c2a22-1c19-4e57-ab22-7ef8f98b82bf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "16206f9d-990c-46ed-acac-347963e45d55"
        },
        "item": {
          "id": "0a5e1d64-1af1-4943-994e-06dfa61dbcb9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21b8f249-c54e-4ddf-a444-6f121e9ccac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f91539-10de-48e5-9871-8241d0c7cce5",
        "cursor": {
          "ref": "d90bfaae-195d-4a44-b2a2-211317d5be8d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9ad1d0b1-7112-44f7-b99c-08469a3cf592"
        },
        "item": {
          "id": "a5f91539-10de-48e5-9871-8241d0c7cce5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3e9be989-0f8c-4279-ad26-e820a710c860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2d7401-bd6f-4cd4-8176-93dbc12d55ba",
        "cursor": {
          "ref": "ece60112-3411-4f66-908b-5892e560f486",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "12d598ad-bc7e-496a-b295-43d0c96f4295"
        },
        "item": {
          "id": "7f2d7401-bd6f-4cd4-8176-93dbc12d55ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e774b64-c5ca-481b-9542-0c7059aa7c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b32717-69ee-466c-9c0a-76463dda6ef6",
        "cursor": {
          "ref": "5aa27a23-8483-440c-8d4c-ce6086479198",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "39efd735-0bec-4cf5-a97f-de27e485a207"
        },
        "item": {
          "id": "89b32717-69ee-466c-9c0a-76463dda6ef6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "86441327-5e9d-4fc7-b19d-eea6e4ef1497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88094d28-e29c-4cdd-a29c-8be265c6a9e6",
        "cursor": {
          "ref": "be6b208a-5cd6-4775-8292-c3c6690b8c94",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "917e1e7b-32b2-4e30-ae4d-8043490f36cd"
        },
        "item": {
          "id": "88094d28-e29c-4cdd-a29c-8be265c6a9e6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e9e7f3e4-9874-4f48-8b4b-5ca93bf1ec6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40be50b7-6077-4c6c-952e-59b7cc3a34e4",
        "cursor": {
          "ref": "20316827-3221-4d12-80bc-4fd8a4b3ff00",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "16c1d97a-95e8-454f-b57b-40b0b0246201"
        },
        "item": {
          "id": "40be50b7-6077-4c6c-952e-59b7cc3a34e4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "15c371d5-8843-4d03-9688-df96f4576b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14daf59a-1a39-4f6f-bd24-38b2df7f07a8",
        "cursor": {
          "ref": "9e0a9bcf-d443-45ba-855e-f5e960d46dec",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "734fe27f-819f-4911-aef5-187181bbb5f6"
        },
        "item": {
          "id": "14daf59a-1a39-4f6f-bd24-38b2df7f07a8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "011a7d2b-bf49-4d3f-a3d4-821f689bfe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ef0f5b-cc0e-4b9e-897b-932b8ab0fabd",
        "cursor": {
          "ref": "cb2b256e-7a76-438b-b1f1-728df0d41666",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "465dab62-6647-485e-a110-b821a0553eba"
        },
        "item": {
          "id": "05ef0f5b-cc0e-4b9e-897b-932b8ab0fabd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab690c1e-835e-4b98-a7f8-082606491d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76abc7b-5109-43c7-b98f-9c9248570dff",
        "cursor": {
          "ref": "477fbaf6-92ba-4d2b-8080-60ab40682472",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cf13d664-e05b-4214-a7bc-76611bc3e142"
        },
        "item": {
          "id": "d76abc7b-5109-43c7-b98f-9c9248570dff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4cd6c350-fa6a-44ba-baef-a39028bf9a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f89ff-a8f8-48b0-974a-4ed0396d7d90",
        "cursor": {
          "ref": "5020bf81-ba63-42c0-9826-a1fb91948595",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9bedd6c8-4b14-4582-842b-9d9cad74f8d5"
        },
        "item": {
          "id": "a80f89ff-a8f8-48b0-974a-4ed0396d7d90",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "21ba0393-7116-4385-bc94-95458577b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945d437-6f40-4c18-9b3b-e484136b11ef",
        "cursor": {
          "ref": "fc643ffb-d562-452e-bc8b-cd964f98959c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c8223233-b397-4be8-b7f6-3d9bf1a70fc6"
        },
        "item": {
          "id": "0945d437-6f40-4c18-9b3b-e484136b11ef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc7b1aca-7145-4f6d-93e8-f1275d326d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89074631-7780-4d2f-9264-3f9ad27d9905",
        "cursor": {
          "ref": "157fd705-1df6-4c9c-83e4-2562ee999335",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f0ccb034-9653-4c4f-afc5-7c86e0103a1d"
        },
        "item": {
          "id": "89074631-7780-4d2f-9264-3f9ad27d9905",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f42e95b2-4dc3-425d-a22b-3bb7f0341d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7565a329-cff4-417b-b91d-45f27bd7223c",
        "cursor": {
          "ref": "aee0b0ab-8c80-405b-ace4-d09efc7ecd6e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3639283b-aa51-42f9-839f-26aec8dd4ee9"
        },
        "item": {
          "id": "7565a329-cff4-417b-b91d-45f27bd7223c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "63d1313f-f52e-4236-ac24-2deb413a0809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c734e5-e346-4e77-9e0d-2acbcea8bc21",
        "cursor": {
          "ref": "cf48467c-691c-495c-94b7-aedc5e044269",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f1c6b99b-0b90-4287-b802-c56a77963861"
        },
        "item": {
          "id": "00c734e5-e346-4e77-9e0d-2acbcea8bc21",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "26892b55-4fee-4e44-a181-cb33ba49ede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38206213-3e63-4fc2-a079-13857decc013",
        "cursor": {
          "ref": "bd54e622-f9ab-48bb-a506-c6e1c73fe22a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "361007db-b294-4857-b73f-bc381ab65c0b"
        },
        "item": {
          "id": "38206213-3e63-4fc2-a079-13857decc013",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0ef87777-ec1e-4490-acc6-a392e2234562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce2599c-7f51-499c-a66b-03b79c034283",
        "cursor": {
          "ref": "42cdaaea-5297-448b-a865-199517b1e1ed",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d4e2842-ef1d-4978-a3e9-20c55809d544"
        },
        "item": {
          "id": "bce2599c-7f51-499c-a66b-03b79c034283",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "14b54853-8cbf-4ef6-9350-d89aa1cc95dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669a9052-b0d6-45a8-9ab5-868be2002e4d",
        "cursor": {
          "ref": "823692fb-6d4f-4c74-9ed6-9bc3d4a170b6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2f284b88-942d-4d1d-af78-aa71d8036102"
        },
        "item": {
          "id": "669a9052-b0d6-45a8-9ab5-868be2002e4d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "576f0c0a-384c-4625-ab77-ee58bd67180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de668e63-edfd-4632-90f0-8a4e549a9c19",
        "cursor": {
          "ref": "f76a620f-7f5e-47bb-9cbe-e8d0ed7c83d1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "24bea137-38d6-4d59-9f19-17fa70b3d698"
        },
        "item": {
          "id": "de668e63-edfd-4632-90f0-8a4e549a9c19",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "47d35829-cf39-4b97-8843-d51674a5f4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a095209a-35f0-46cb-9ab9-69df8c21f71c",
        "cursor": {
          "ref": "c5f37399-d9b4-4dbe-9a7a-11feb545e553",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0dae3e0d-1e5f-4ade-9729-6d20a6cb3525"
        },
        "item": {
          "id": "a095209a-35f0-46cb-9ab9-69df8c21f71c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dcc1f81c-0df0-49b6-aad1-805d89548763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b398df-b139-4ae0-8724-f567946238bc",
        "cursor": {
          "ref": "3371cb22-626e-45d2-a4ed-fd75822054ed",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "424679f5-96a4-4c96-bc5c-1b8df18ac607"
        },
        "item": {
          "id": "e5b398df-b139-4ae0-8724-f567946238bc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4e4cc3a8-a5b8-4556-bef8-6e7974468fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d08b84e-ac36-4f53-9040-5b896c8fa7f6",
        "cursor": {
          "ref": "d4f637c2-8c30-4205-8062-eed186c78c5a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cbfd70fa-1949-4526-9af6-06d1c9c5ede3"
        },
        "item": {
          "id": "9d08b84e-ac36-4f53-9040-5b896c8fa7f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1d11de0d-bf13-477b-9322-18f4881480a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f31c9c-f019-4018-848a-68340fe8c8b7",
        "cursor": {
          "ref": "b3497a70-47ca-434c-9853-1ea3adc84eb6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "12b8c0d2-201d-4fd1-99de-4876bdea9da6"
        },
        "item": {
          "id": "13f31c9c-f019-4018-848a-68340fe8c8b7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "531f1dac-5952-43f9-9eb7-a112a8c15702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca00129-00c3-4677-aa1b-c2b0602f5191",
        "cursor": {
          "ref": "fd8e3f51-2ab8-4783-8bc2-cf8069496e54",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f8b45bc9-ec6f-4718-8279-ccee05d53190"
        },
        "item": {
          "id": "5ca00129-00c3-4677-aa1b-c2b0602f5191",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "483596d5-ebed-48c7-a946-b8dfb12d61f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa366b30-20e5-43a7-ba74-f624d0e9e411",
        "cursor": {
          "ref": "a33cdc55-e282-4452-b81d-7919e3dc9d6f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "55ee9ae2-fcb1-4676-8751-b2ed5b147669"
        },
        "item": {
          "id": "fa366b30-20e5-43a7-ba74-f624d0e9e411",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5e4ba054-b8eb-4973-92ef-e4131a1ea173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381714d6-a62f-4e02-9045-9d90dfecb32a",
        "cursor": {
          "ref": "c6d17389-b67c-45e2-8035-7978d3b26899",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "320e24cb-ed00-4ce6-a2bd-7bca506b3505"
        },
        "item": {
          "id": "381714d6-a62f-4e02-9045-9d90dfecb32a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc19b8b9-de38-441e-a455-48f65e29b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43eff6b-bd9d-4ba0-b022-f431917e8fc3",
        "cursor": {
          "ref": "a2b96852-6e72-48dc-a7e3-26ee56a55464",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "82f97f82-7cc7-4a31-ac5b-9a0b57eb2461"
        },
        "item": {
          "id": "e43eff6b-bd9d-4ba0-b022-f431917e8fc3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ad88b3a-98f8-4abd-8c5a-1e639724046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c55c3-7f9d-4bdd-be70-62ca290336a0",
        "cursor": {
          "ref": "07dc112d-3d8c-4a7e-b8bc-e76da56a081c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2020930a-59d9-42f4-9263-bd914624b34a"
        },
        "item": {
          "id": "439c55c3-7f9d-4bdd-be70-62ca290336a0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7a2ae712-f273-4327-862c-91ab8d181c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e1913c-1b0f-4211-b6c7-9162ddb31ba9",
        "cursor": {
          "ref": "9b6bc453-4661-484d-a5cc-65eda08234c5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ea3aa193-2794-44ce-93f4-c0acf582a76d"
        },
        "item": {
          "id": "36e1913c-1b0f-4211-b6c7-9162ddb31ba9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e46453df-57d3-47b0-9fef-548513f788d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4888718-b41c-4292-85b1-7940f5faeab3",
        "cursor": {
          "ref": "8a30637a-925f-4e28-9cd0-c914d2badd2d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3928e054-ce91-4ccb-af73-69e32440fc77"
        },
        "item": {
          "id": "f4888718-b41c-4292-85b1-7940f5faeab3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1b7291cb-865b-4a10-8e95-0967ce30eeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e7099c-7bf9-457f-a42c-c8d06ce5fe9f",
        "cursor": {
          "ref": "3af0f4eb-7d33-460d-95ff-eee509a8d471",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "23955748-5f75-49cd-9dfb-4074cc7ea3e0"
        },
        "item": {
          "id": "58e7099c-7bf9-457f-a42c-c8d06ce5fe9f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "605eeee8-50b6-4e72-9d5e-d86424ff2cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cc7d5b-6d3e-4356-9bb0-3fb355933732",
        "cursor": {
          "ref": "8e77b821-9e92-47d2-bce9-0130c1dc97e7",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9db94f95-b4f9-453b-b9fe-782403a07758"
        },
        "item": {
          "id": "56cc7d5b-6d3e-4356-9bb0-3fb355933732",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f90e7c6b-b744-4db5-8411-58d6fd289677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2791d784-ec0d-41b2-8230-73d8ace001f5",
        "cursor": {
          "ref": "33ae1ca6-b58a-475a-a485-e7dea1db7c31",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc9d18fc-a3de-4a02-93a7-4ef8383aef81"
        },
        "item": {
          "id": "2791d784-ec0d-41b2-8230-73d8ace001f5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dbd3f204-4ba3-427b-a1f5-923e88773b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ef7af-46ff-44e0-a4b4-a10ff6747c3c",
        "cursor": {
          "ref": "e7e8699c-5016-4f7d-97c5-fafa5de6bddf",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8fdf9928-462c-45e1-a16f-3987d5bfc349"
        },
        "item": {
          "id": "0a4ef7af-46ff-44e0-a4b4-a10ff6747c3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "64b13bcb-b15b-442a-b995-7f115303682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb8cc06-bdee-4708-861d-8db56d22f497",
        "cursor": {
          "ref": "151046a8-69ff-4a59-ae1b-83bf5695e9e5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "899d1e42-1852-4add-b4d5-65e465b8914d"
        },
        "item": {
          "id": "ceb8cc06-bdee-4708-861d-8db56d22f497",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3b1eedec-c909-432a-8c26-a6c2b4f2815a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848a2026-be07-426f-b2dd-56879c175dbd",
        "cursor": {
          "ref": "d22a0569-a6df-4a9c-8a5b-b327a36e5260",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "407042a9-b505-4607-8f1c-e1df1074e0e5"
        },
        "item": {
          "id": "848a2026-be07-426f-b2dd-56879c175dbd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1d2ff382-a797-4df9-931b-758f7e57678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f00bc-6240-4697-b5c8-6398a23e74fe",
        "cursor": {
          "ref": "a479635f-7825-4c3e-941a-3f7772c46b29",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d0325fe0-9542-40ab-96b7-5de459ed347b"
        },
        "item": {
          "id": "291f00bc-6240-4697-b5c8-6398a23e74fe",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f3daf9d-62e7-4191-b2d5-7683ab985417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb92fa-f88e-4cee-bb80-5136701291fd",
        "cursor": {
          "ref": "8e2d6d44-c090-41a4-8d63-b94288eeae43",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "780a2899-0722-49c4-bbd7-0026a62f59e5"
        },
        "item": {
          "id": "dcfb92fa-f88e-4cee-bb80-5136701291fd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "20fb7df0-cca9-400f-b026-761dae2bf8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f834cd-f1c7-4111-ba73-124df2d52a03",
        "cursor": {
          "ref": "3632f380-8b52-434a-80f2-393c499752b1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "57f1fbd8-a6d5-4e09-a092-d04bd4b73f08"
        },
        "item": {
          "id": "18f834cd-f1c7-4111-ba73-124df2d52a03",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4d614e34-3c7d-4fb4-9e5f-385b812cdce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b2fe40-55f1-4e3f-98cd-788e2e6ccba4",
        "cursor": {
          "ref": "c417a199-be33-42dd-8140-b1aad01599bc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5355fd7-ae92-4df1-81c1-b51c65424c62"
        },
        "item": {
          "id": "c3b2fe40-55f1-4e3f-98cd-788e2e6ccba4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cb6653c1-c528-458d-b100-0d3b6491d757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de31c09-3a31-44a6-bbe7-1f8d28fe9f2e",
        "cursor": {
          "ref": "d540a276-80d0-4ab0-b1ec-3e1c3aec896b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "acae600f-2220-4534-8130-2cfb8d8b513e"
        },
        "item": {
          "id": "8de31c09-3a31-44a6-bbe7-1f8d28fe9f2e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ae0e19f4-2164-47f4-b5c6-4e8aaf092998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9f96f3-9ce9-46c9-a1df-b71538b38a48",
        "cursor": {
          "ref": "39026b5d-c0e6-4338-a691-85fc4c4a485d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dba04bab-1a65-4ad7-a081-b763104585ae"
        },
        "item": {
          "id": "de9f96f3-9ce9-46c9-a1df-b71538b38a48",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "56dfcc82-6cbd-4688-b81b-99265183fccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e3e5ce-ac1c-4a45-b650-adebc3949aa3",
        "cursor": {
          "ref": "edeba4eb-05c5-4e6f-b0ef-1167792a4d74",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0ca3e5f8-f949-4d15-a304-7214dde1cc46"
        },
        "item": {
          "id": "e9e3e5ce-ac1c-4a45-b650-adebc3949aa3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "25e7e2e7-c64c-4015-94d6-521f01063adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de25ce8-7465-4f79-a8fc-1179294a5c6a",
        "cursor": {
          "ref": "dc8c7a3c-1890-46d9-9d4a-9443794a843d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8ea1ae46-a6fa-49bb-8ebb-2e6ad982e2b8"
        },
        "item": {
          "id": "0de25ce8-7465-4f79-a8fc-1179294a5c6a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "064b50bd-8d53-4b48-968d-bb26df574d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd57682e-f93c-4079-bea8-b80219892520",
        "cursor": {
          "ref": "7fd48dea-6531-4296-81a4-925f67f8f7ad",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ab19481-8e71-4963-95cc-8f336bf9b007"
        },
        "item": {
          "id": "bd57682e-f93c-4079-bea8-b80219892520",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7863c3ae-d027-4d60-96ab-9143a47cf625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbb7dc1-e12c-4c58-b068-5be6fbce14ed",
        "cursor": {
          "ref": "fa69853b-46c2-4ac3-8ef5-2bae65667a94",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048647ef-0929-4fae-b6bb-c88356cf86eb"
        },
        "item": {
          "id": "acbb7dc1-e12c-4c58-b068-5be6fbce14ed",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f5b6762-0241-403b-85d1-5fe65850ce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4c6ea-baf3-495d-a8b9-dd17cf1f2473",
        "cursor": {
          "ref": "aa038894-ff49-4a09-b4f8-2f53619de7c2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7eab1bcf-7a5a-4ebe-9417-d5a51b0c77f0"
        },
        "item": {
          "id": "a2e4c6ea-baf3-495d-a8b9-dd17cf1f2473",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2943f3a2-e6e8-4da0-b8a0-abb9158ca828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5488e606-b1d7-4f4a-8714-c5fcaa57becf",
        "cursor": {
          "ref": "9c6d9d4e-bf8d-488f-b0d2-167470526a48",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f8dcd7aa-7716-4a18-be34-b52fdfef62fb"
        },
        "item": {
          "id": "5488e606-b1d7-4f4a-8714-c5fcaa57becf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c747ca2-c564-49a0-9488-50ab8f52e03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6e7a3-69ca-4571-b8be-475fbc625666",
        "cursor": {
          "ref": "d706d347-6d6d-4e99-8bc1-38f219eb6161",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "89a182f5-982f-4cd2-8e61-6262827e5f56"
        },
        "item": {
          "id": "f3b6e7a3-69ca-4571-b8be-475fbc625666",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "483d916a-0e4b-4b2d-9929-0e1d6da697d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3574180-bbfa-4708-8572-5eb78505d946",
        "cursor": {
          "ref": "93d82297-da38-49b4-97e8-548ada0acd1e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4cd211a0-1b1c-44a2-8d8a-e1b5fae726c0"
        },
        "item": {
          "id": "b3574180-bbfa-4708-8572-5eb78505d946",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "56e2a7fb-ebd9-43a2-870a-0034e41c986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a086745-827e-47e1-ae6a-165b63379ce1",
        "cursor": {
          "ref": "211ed3f3-532d-412a-8880-2aeb653f2cdb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "68e7f722-6979-4f5c-9434-2493129cbbf1"
        },
        "item": {
          "id": "9a086745-827e-47e1-ae6a-165b63379ce1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1dd000ea-08a8-4f05-a303-9e53a4902f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c05b8a-fac1-438a-b6c5-63995b3ba286",
        "cursor": {
          "ref": "d5a06804-6f06-487b-952c-15d27836543b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "25b704a4-52d5-4ee9-a036-001adc52815b"
        },
        "item": {
          "id": "09c05b8a-fac1-438a-b6c5-63995b3ba286",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a1472a67-db90-4c1a-a535-33f1f12c77a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aab43a4-09c2-4152-ac67-2c8468711e39",
        "cursor": {
          "ref": "ed2d07f4-0968-4745-8793-dc1d951194a7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0b4e1077-6a98-403a-96f5-e686c5fca150"
        },
        "item": {
          "id": "3aab43a4-09c2-4152-ac67-2c8468711e39",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f82725bb-1ea0-4e99-83a1-8b5d7969cbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8274e78-f60d-492e-995e-c37d290ca92b",
        "cursor": {
          "ref": "0b114d48-4193-475e-99a3-cb074fe49abd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "15da15ad-0081-4104-b3fa-4f5eadba3526"
        },
        "item": {
          "id": "d8274e78-f60d-492e-995e-c37d290ca92b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "75f84d87-c801-4aa3-84c5-97d1e1928973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df155d4-f39c-41cf-816c-4a2ff2a4a8c3",
        "cursor": {
          "ref": "eb486722-dcce-447a-951b-5030642df766",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0c80b1a2-24be-41e2-afa8-845513e8a356"
        },
        "item": {
          "id": "6df155d4-f39c-41cf-816c-4a2ff2a4a8c3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5ce7e8c9-af9f-4f4b-981a-d4dbbc66b277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3f208a-6660-4013-83a3-392814efb2e1",
        "cursor": {
          "ref": "df9fbc7d-8211-441c-ac61-3710a9c28272",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1456ce6d-0fca-44f0-9b13-daafe2ba620f"
        },
        "item": {
          "id": "8d3f208a-6660-4013-83a3-392814efb2e1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bddde421-bc00-4ec7-a990-16da685acf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb47d0d-6a5f-425a-b8e5-92ec8c91759f",
        "cursor": {
          "ref": "04d65392-bfdc-4a88-b612-f731767a128e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9bbeecd2-ad1e-462d-b79f-07eb7025f0b4"
        },
        "item": {
          "id": "cdb47d0d-6a5f-425a-b8e5-92ec8c91759f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0f99d107-4008-4cb2-9d82-522ceb99b27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529edbdf-c28e-4f70-a717-cd1c4d4dd1e7",
        "cursor": {
          "ref": "32432af1-09cd-4f10-a091-61cf796ab346",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0c875d55-bf85-463f-afb4-e578a2677482"
        },
        "item": {
          "id": "529edbdf-c28e-4f70-a717-cd1c4d4dd1e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a173ab83-24e3-43e4-b026-41706b46857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de336e10-da39-4e9b-9532-d0633abb6f9f",
        "cursor": {
          "ref": "2574a898-5b79-4e7b-9911-855c4848b40f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46d0da99-4a7b-49ff-9e42-362ee07d938a"
        },
        "item": {
          "id": "de336e10-da39-4e9b-9532-d0633abb6f9f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e1a3a4d-7b43-47ab-9840-1be6331acc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0362fbae-ddd7-42db-ba87-67186e3695ba",
        "cursor": {
          "ref": "24cc0a91-cb1f-4da0-987f-03446a71dfa4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a17ea7a1-3c10-4e01-9a7c-9225c7f7921e"
        },
        "item": {
          "id": "0362fbae-ddd7-42db-ba87-67186e3695ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d5b69237-4d1c-4e93-9f4f-d35b351eaed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7ce05b-97cb-4907-bff7-defd1a4db0d7",
        "cursor": {
          "ref": "596cbd66-e010-4fe5-967d-7e780f150b2c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9b439397-c8b2-4761-baac-c086dac7345b"
        },
        "item": {
          "id": "8e7ce05b-97cb-4907-bff7-defd1a4db0d7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "696d3671-ea09-4c4c-886f-9a84c1ce034d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bd8c05-777e-4122-a5d8-e710dca24ab3",
        "cursor": {
          "ref": "3aff4b06-49fd-43b7-b45b-c3f9f76112ab",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0911d2f6-9e90-482a-a557-84a6a201f397"
        },
        "item": {
          "id": "05bd8c05-777e-4122-a5d8-e710dca24ab3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ab02e10-5709-4dc9-bfc6-a4e9d0ddb44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc236c6-fd99-4a70-93a5-987904e80f5f",
        "cursor": {
          "ref": "be332cb2-ed5a-4c16-9791-751525706985",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "32bb9119-07d1-4056-85ab-47bee6cb6595"
        },
        "item": {
          "id": "dfc236c6-fd99-4a70-93a5-987904e80f5f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2e562dc1-9728-4933-a9a0-e307755d2e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0647c5ce-c0b8-46d2-928b-39cdbee3acca",
        "cursor": {
          "ref": "e7a10694-5dfa-4e00-b4c8-3b08e66d611c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ea366cf4-377d-4a98-86d2-e9be1606d078"
        },
        "item": {
          "id": "0647c5ce-c0b8-46d2-928b-39cdbee3acca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b101b759-7581-4728-98ec-5d5eae6cab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b76002-d12a-4425-ad05-57b64d89b50e",
        "cursor": {
          "ref": "41816b95-aa28-4411-904d-c19eb6b651e2",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d04af7d9-c4de-4aba-8419-45f77703cbc1"
        },
        "item": {
          "id": "08b76002-d12a-4425-ad05-57b64d89b50e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "29ba300d-9ac7-4db2-aed7-9fe5bbc1c30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c8bb35-d3bb-4bc1-a7d5-3907fc6c8e81",
        "cursor": {
          "ref": "1a77b7aa-82df-478d-96cc-fb3716d8567a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "829ef131-edf0-4f54-b3df-e4d3988b3aa3"
        },
        "item": {
          "id": "f5c8bb35-d3bb-4bc1-a7d5-3907fc6c8e81",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1ffe89cd-ea35-4a91-8af0-a6da47f59012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cfc29a-5ff3-47c0-9c92-c2eb7e5b8aad",
        "cursor": {
          "ref": "54465ea3-cfd8-4ffc-b155-f5e7013c6503",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3b6e0ee4-23c5-4493-9bd7-636b68bc05ce"
        },
        "item": {
          "id": "66cfc29a-5ff3-47c0-9c92-c2eb7e5b8aad",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4cc86ea2-d225-4c66-a874-1b99b6727d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a7fd46-b96c-48de-be93-e7272e75199e",
        "cursor": {
          "ref": "b25fea50-c222-4b03-9eea-08fec680c783",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2af65693-2cfd-49d7-97a9-b4df27a97022"
        },
        "item": {
          "id": "81a7fd46-b96c-48de-be93-e7272e75199e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2aa1490b-eab9-47ce-bdf2-0a9f06f119e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfd6bb4-b8be-4d48-9a36-297a1af39cb4",
        "cursor": {
          "ref": "680dcc81-561a-498b-a16c-5b23e4474b4f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "19f2dfb5-1bfe-4a5d-946c-1d6c0a5a563c"
        },
        "item": {
          "id": "ebfd6bb4-b8be-4d48-9a36-297a1af39cb4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2e97973d-b643-4ae1-bb6c-5ac1472319ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f692a4-ee70-48bc-9172-af470828ff0c",
        "cursor": {
          "ref": "4fa44a1c-4a1e-4b87-bf35-5582a0083f6d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "920a0ea4-2c9b-43e3-99ce-62adb2240c83"
        },
        "item": {
          "id": "a0f692a4-ee70-48bc-9172-af470828ff0c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5de66726-7e1c-4d7d-98eb-43db01e6629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5e52c0-605a-406d-afd2-44582a13f42f",
        "cursor": {
          "ref": "7f66d74d-c08d-44ce-9041-8f9ec763cc63",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "437da1d5-bbba-4dc8-bb6c-4a80fce2537d"
        },
        "item": {
          "id": "2d5e52c0-605a-406d-afd2-44582a13f42f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eff6478a-4d42-4b08-86ad-2eb9d26ce50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef6ecd-3d62-44c9-9d1b-f1550400b75b",
        "cursor": {
          "ref": "4ea7ce41-e0ea-4439-9b0a-ef8ed8f24552",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "dec56701-62d6-427e-b289-83bd89371258"
        },
        "item": {
          "id": "f6ef6ecd-3d62-44c9-9d1b-f1550400b75b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2a2e2671-10c4-4026-b3c0-f202219fc8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb22aa4a-a62a-46b4-8c30-3aa52909dc33",
        "cursor": {
          "ref": "136e7972-01ee-4a22-946e-ba489c1345a5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "898e2135-ff95-4519-b001-430b7f8b24a7"
        },
        "item": {
          "id": "cb22aa4a-a62a-46b4-8c30-3aa52909dc33",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7c6c0c38-2ec8-4b4f-88f7-acb1fba7f8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506a12b2-7005-42aa-9acc-48ef767b4096",
        "cursor": {
          "ref": "6a040b0d-5156-4e8e-8d11-fb6476590a84",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "86aaf476-a44e-4538-88a9-4f3e73564373"
        },
        "item": {
          "id": "506a12b2-7005-42aa-9acc-48ef767b4096",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f1fd56e6-3cde-43f6-a797-48148ccaf366",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84df0b89-77d4-4b07-ab57-2cb589a59edc",
        "cursor": {
          "ref": "149f9aa2-6abf-4102-b5a6-ef36cd68159a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3be40b6a-c35f-4658-9f97-fdfbf21bd4ec"
        },
        "item": {
          "id": "84df0b89-77d4-4b07-ab57-2cb589a59edc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a2d37006-6cb4-4946-8f9c-9e8365cfe666",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "31843497-cb27-42e9-ab43-de6bd2b0ad1b",
        "cursor": {
          "ref": "2c0142e2-8136-4be3-9230-a48fbcd5ad45",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78cc57d4-053c-426d-86ce-53285b9bb263"
        },
        "item": {
          "id": "31843497-cb27-42e9-ab43-de6bd2b0ad1b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7cbc532a-d331-4bc2-954c-6f54842924ce",
          "status": "OK",
          "code": 200,
          "responseTime": 1838,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34fb1ef-c48d-4dbb-ab40-6e524917f6b0",
        "cursor": {
          "ref": "48513df2-1eae-40b3-8cfc-37677b87f994",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d1804be2-6c3e-42ee-8849-09bd4f683052"
        },
        "item": {
          "id": "d34fb1ef-c48d-4dbb-ab40-6e524917f6b0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f57eed25-6321-4c91-8b3e-ed8463ca834d",
          "status": "OK",
          "code": 200,
          "responseTime": 1815,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "641ca63b-e2cf-4373-9cd7-dc36df470c0d",
        "cursor": {
          "ref": "bb3e60c0-643a-4ce6-89cb-564a680af7f4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "eac908b2-602b-4b06-a02e-1b4a6c6d0336"
        },
        "item": {
          "id": "641ca63b-e2cf-4373-9cd7-dc36df470c0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f2a30bb2-cf9e-471b-ab9c-63a4130757c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641ca63b-e2cf-4373-9cd7-dc36df470c0d",
        "cursor": {
          "ref": "bb3e60c0-643a-4ce6-89cb-564a680af7f4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "eac908b2-602b-4b06-a02e-1b4a6c6d0336"
        },
        "item": {
          "id": "641ca63b-e2cf-4373-9cd7-dc36df470c0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f2a30bb2-cf9e-471b-ab9c-63a4130757c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f7d983-aa4f-4b78-88cb-a90e4e468b64",
        "cursor": {
          "ref": "fcbdcdf3-ad1b-4d80-ba61-6c777871b803",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e8aea8e4-62b7-442d-bbbb-46de1b09bde5"
        },
        "item": {
          "id": "e5f7d983-aa4f-4b78-88cb-a90e4e468b64",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d69fd961-d5e4-4fc5-bab6-9fe33e73a775",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f41989-ada7-4faf-9880-80d8207690a1",
        "cursor": {
          "ref": "8cc86552-8b1d-4566-a576-613a408b2b6d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "993a923e-6384-4efb-b181-2073f76684fb"
        },
        "item": {
          "id": "a8f41989-ada7-4faf-9880-80d8207690a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "680a1894-49fe-43e7-9e89-73a1fc2133f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}