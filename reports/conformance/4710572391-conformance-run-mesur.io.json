{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e95104f-a40e-4c2e-ae42-a2e78866a0f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16969921-9de0-4e6b-b801-9be4f06b38e4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53caf9d6-92ff-4f88-95e9-24fbafeb7161",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95eaeda0-0e33-483f-9fbc-e564be1abfaf"
                }
              }
            ]
          },
          {
            "id": "ed22b40d-ef8b-481a-8190-606759963b7e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83022e5d-5ae8-4b55-a63d-89fda487548f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4778fa1b-61ba-43af-b3a1-3cc3c72fe44d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "39dbd451-5694-40ae-8a60-f4a3eb7fd050",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e4625881-290a-408b-950b-fd5d1dc149ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb5746d9-1976-47ef-959e-dd782d36e48a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "877133b6-574d-4934-a4b0-04857678fee1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e0d6387-abd4-4cd4-ad77-33566b6d0f3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c819ceb-fa60-46da-9578-f0fc30ba8f51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "357b258b-a08c-4715-924a-aa1775ebf36a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0559f67-7b53-4e7e-a821-ab9aa6bc5448",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "661d1623-71df-4bc0-891b-fe516ae19087"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ea4b287-df44-42de-a65b-17f628f9afba",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b0b1b659-5db3-4229-809c-a652181549f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9cb411b-cd17-4d00-8f62-746e17d972ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e816b9b7-f6d3-4488-ace8-16b0d1f5a2ef"
            }
          }
        ]
      },
      {
        "id": "3b47ef92-ce0f-4be0-a03f-95a076a68800",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b46855ad-bfc7-47af-ba19-8361810486c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fe0f8fe-d07a-4d0c-8920-672ab582f24c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78d387dd-330f-42fe-b0ec-bfae3b9a1084",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b4d74-f837-41a6-ac77-880658554189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04bbf5bd-6cf3-4115-8650-a44a4151655b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41b2b95-2b96-4915-8b75-9e59493f7c4e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b812ac6-7c28-4faf-b1bb-9109990995d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a9e41a-0876-476e-87fa-da972fe2a820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095dd377-0336-4ba9-95f9-9df8708f935a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bee4ab-09bf-4cf6-a75e-dc3b3bb4f733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b6c9a0b-5d85-428a-aa4d-fc271447ce98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2df508d6-2b7f-4914-a4e2-c0ece185d4b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aa37c69-6cda-40f3-9bfe-eb5ff16c1ca3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690d2d5a-c14e-4a88-9dca-7e67211aef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2388395-fa67-4011-ae14-c99954d49d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ca426b-8c90-4c74-84dc-4538cd15293e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8857e2-6d60-482a-8937-d2a499681359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2dcf05-02c4-4c28-887c-18766a47dd6e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1921d6d8-45f9-4634-811a-55b8b2d1fa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1a85dbb-eaad-4b79-81f8-8fdd6140dd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49813296-59ca-4e26-a657-df448df78c55",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1af3ab10-68b1-4663-b8ad-3f150c9645bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "032b072a-7646-4533-bc0a-80ec4333d440",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1aa0f89d-e25f-417f-8985-f04632096fa6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "488f4b6b-7501-453a-a401-2602e4e5d79f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bffbcbaa-2291-4d43-a572-7037427da11a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c1c4b6e-27a7-4c4c-b5a1-e81941484e41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "479ffea1-bf32-455b-8589-c2245b1a9099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb577dd2-d777-4c66-8616-bec09616f433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86ff2016-706b-456c-8b9c-70aa2bcb2bd5"
            }
          }
        ]
      },
      {
        "id": "794e3607-1d28-4342-b7cf-deac25076bc2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "366e9a60-a3ea-4285-bb96-18becec83716",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7825c975-797f-4d0c-83bc-bd9be1da0817",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8a79ecd2-a5dd-4548-9619-bcb5ee77555a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a628da48-134b-4a88-8ecf-c91b3b628753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac03f08c-896d-47d2-b552-b979babd7f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9945362-340c-4b10-8bae-306814f468b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f71ecf-7d54-43f7-a7fc-cb31bb7760af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c54b4b0-eee3-4da3-92a5-8fc9be1feee1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061016a0-e430-4c54-83a8-36b16d8e3420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d229c53-3ffa-4a90-be70-233d703d9962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412d09eb-5dd9-4ac3-92bc-13507bf8fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fc34676-5bd7-426d-b155-7ee391798fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01118d50-fb19-47c5-a02f-c1458ae65563",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8423f0d5-a4b4-4568-b870-ef0de6cffade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3509cad8-532b-4921-9363-121e2040bb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87213991-58a8-46bf-83a6-0d28300e7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aa8780c-9874-4549-94d5-cd19302e1939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9541ff8-e5da-446d-960e-8fc51acaafec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0281a28-d163-41e3-901e-e4852b54534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d223185b-9477-4b9a-952a-d6e600574c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce88edd-92f6-4f6c-abe1-a28686aa67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "791a6c6e-052d-4973-9972-0d1d15b1ddb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d6543a-8dc1-481e-9f1c-836686d9f66d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e885a48e-203e-436d-95da-a3ddf134f607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33da0ce-1e90-4878-be88-0a320ef32de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba2177-4bbf-4908-a44d-8f6f69538b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ab3991c-f610-4dc1-b955-6d048cee4698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcea2a7b-962a-49cb-801c-5827fe1ffbe5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6b5dc2-837c-4c0c-965c-7dcb959d247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744c3043-11f9-4fd5-b642-9f5364215a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6808798-e41e-47cb-ab96-570460f8cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437e2bf1-ab48-42c5-8c60-a76d811076bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4986f73a-378d-4abf-9c2e-904d3fef2819",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f76f913-df9f-4bd3-b501-dcd0aac38727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f834ae-d597-4a11-a9b8-5863405ded95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d327af1a-faf0-41f7-94cb-652ec51ffdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c549a932-2779-463d-a323-d78788def6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bec7a6-fa92-4ad0-b90c-a09270a34340",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3663d6-738f-48b2-89a1-32a1148c552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e680adc7-dcdb-4979-add8-3105612c771c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1af162f-6ccb-4ac3-9555-1ca545b2d56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c1f478d-0a3f-4035-8bbd-ebea3445799b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd87d3cf-ebc5-434d-8d62-d9d8c9c94581",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5cd225-749d-49c9-af2d-7ec28cc72811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5625665-f6a2-41bf-b3bc-3adb63d0fb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899873cb-fe28-4b79-bdec-60ffdda5e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be7e1dab-ac99-4b87-9886-760ba684214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be518e78-cf19-415a-b451-16e4547eab8b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6530096-683c-48cb-8df4-b0034606231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab3bd3b-40bf-4650-8fb4-106f13c09865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c981ea4d-6959-4bea-af77-cb77cdd83408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "865e6719-4de4-4e08-82db-50f2f6b163ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a0b688-703c-4d01-995e-b4b71ec4109d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31056dd9-826e-4f14-93ac-00ce00f3f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60583781-f042-4597-b319-0b658b6f8ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4696253d-c80a-4617-a7b6-f62e3e915281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab4d19a-8b67-4f4d-b280-a8cfec3aa693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03541311-4b60-4bf8-937c-66becccb37f7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe8dc4a-136d-45f0-91d8-e286832201d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6305286f-1384-45c2-819a-a41acb967df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906adbbd-60a9-4825-bb82-2162767368c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb0d11e-f797-4845-a20c-1b6af6ff24e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090bb65-50d0-42f9-8748-96150d0ad453",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c3b783-e7f6-4c80-97b5-68e750e27110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d6cc4c-a016-4012-a5c1-d232bc56e3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f21db20-b8fd-423c-a4dc-bdfb0ba2137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bed936f-003e-41b3-8ba0-39e40a604dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3807eb75-fd31-43a3-b3ac-9c8302b095bc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3635f58b-ab39-42fa-b897-bae2ad1f06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dee05a-4dcf-4034-a126-c7afd79ac251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5ac50-3624-4f8f-af77-b638e252f206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aed86b21-fe69-4b7d-a809-e7f2550b9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d77f9c-be6b-4069-8b81-6bf363bfeaf8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be04f6-87ee-4586-aba5-0be2a4e77d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3cee7f-2886-4d8f-8f3b-58f0b54db23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4811fe83-9584-4720-937f-1c4e8367c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9590690d-fdd7-4a57-93f8-d99002833165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a98039-1ab2-4dd4-8f21-27345e26022b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbec0dc-e2ee-4ce3-a18d-d5a35ec89e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9fa4e3-d481-4002-80b5-186a035d8f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd80fd6d-5ef4-4f81-8999-63eaea801e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a44bfdf-fcba-4303-9cd2-514b8d5f17fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8974019-b300-4d51-979e-59115ac7c2b6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fdb05e-3e4e-4e8b-a950-86ea89275f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa5b0a-264d-41f8-a4e0-b989139c93e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815945f8-f7ea-4c46-82d9-71c7d360cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d99e83a-fe4d-48fe-8f83-3cdec5d0dbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e7c7a6-4d6a-4c8b-996a-d8e065c8eb3f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bb450c-1c1a-40df-a093-e5a7c680a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd333e3-22f5-492d-aa77-0bd6c525cf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e5ff05-86c1-4c74-9169-a4fed3573821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbacc00f-b58c-4e42-ae31-46aef22eae73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818f97f8-ce1c-478a-8cdd-ef8f6c37459a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7c2071-53bf-4d49-a9b5-3a03cc7ea58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ace2c0-4179-4545-b550-a91194858931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419fd758-a9c4-4628-b810-da428f1fbdff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7134322-5ffd-4e83-b20b-2844ead51cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2dd7b4-02f5-4eb7-8043-4fdcd5f250d3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262ffd9e-b4a4-4b29-9737-66b5e6816580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f64945-600e-4106-a016-fef725ac5841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af86a89-0cc3-4af8-b5b5-2533d51c2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bab3910-adc1-4d81-b04b-3d0ba63cb3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5086d-4b0c-481b-bfeb-7e38b751d4e3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c45cb8-4c4f-4e12-aaf1-681a58ca60bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54830c1-577a-48ed-a4cc-7a0a7cd00c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389342c8-31eb-481a-a574-31bb39c5e14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "956e3aef-3dcd-4530-b2b6-7abcfc5e39fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd44d81-19aa-4f33-b808-c479db3a535e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b2d1b2-dbac-4034-8703-4cc875f68993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae837fd-2330-4b83-884c-1db165206993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ee3ec6-8fe8-4b22-a0b4-14ce6b00c2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd88c86c-3fde-42e9-8b3c-51591ff567ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59012e1f-0b82-4523-843d-4ab2e50af964",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3881aed2-2c83-43c9-af36-9fd1f4d84c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55241fb0-e179-4593-bd63-ef4ca7d386be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2219fc0a-7561-4670-a6b4-bf3fa23560f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b699a98e-9286-402b-b46b-c4b8ded1fbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b39c358-f4eb-4780-bfe3-a267b72970a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97611f04-77e8-403d-9841-d0ec12206682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde2b868-d865-45d2-b926-9fdb13dab548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deab2a1-4bbf-48fe-8cc1-5f515975b298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d851e2da-a08d-4cda-869e-5a94f8a38c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef35977-5f2f-409c-af29-4cb6be2893c1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8d8d3d-a4d4-4804-b056-ebfdfcf3dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2283651-406b-41e8-aae3-430afca8e3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a8bc8-b338-4397-a72b-27e6ac0ec063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d375ae-37e9-4ab8-9242-dbdc4cc7b855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d47f1c-f4e2-4d35-98c7-08519809aed6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8006f10f-d9f5-4f8e-a300-ad54d8c33670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63f744b-04d6-4a28-b390-950d1d045ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0eeba9-fcec-4173-b9ec-aada99def264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8406b52-ec6e-40c1-971b-4151508d2907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a1ffe4-969f-4ebe-9656-3ccc21e3b5a0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada2f7aa-831c-425d-98c8-ccdb38c908e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33f6a0b-083e-450d-b820-5a3a8686b6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018923a9-478a-42e0-b1c4-0dbaa8c3afc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec31a0e7-da24-4047-9815-f29997b9f70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c405cac2-1e40-4645-a380-6afc8126887f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7134b9e-9790-488d-9542-d24049e133fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4fedb1-d4e8-416d-a90d-155a701b3741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e83cee-436f-4a91-b820-d57670e4cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc5df0b-3222-45ae-a462-004dc2ed7fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcded93-aacb-4dfb-8e58-70d4aaa7868c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97ef41d-4bee-4d3b-93e2-41d3adbe171d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f981bcc-fa99-4052-b63f-e29224722226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab417a5-ea77-4f85-bbe1-bffc698cc6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12f6f8c-5d4c-41cc-9140-8e84e57aa106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e4ab2a-2050-4e81-a258-746781c6b2b5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419687a4-6665-4090-add0-bdfeab4f1563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b388e8-4bd4-4df7-bd96-2161002fccec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc9e564-5ccc-4206-ad09-558a37d8054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ecfb8c-08a9-4865-a329-dfed336d2958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d6a8e2-6e0a-436d-912a-74b1d04d6e37",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8996a646-7f23-46ee-8a0c-704b36732327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52c32fa-0325-44fe-81a7-1e2b30482f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647b14c5-ae7a-41c5-a9cc-6cd747f8f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e964b7b-3277-4150-9e2d-6b90674da361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e4088-e3fb-457b-8407-4a986ad54540",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3749afa-2729-4ab6-97d7-211b5e56b5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d7bbeb-3bbf-4fce-9aa5-bdfa1a963f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a284bd-ae02-4167-bf44-5faef974f8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18625d6-62e9-4aee-80ad-d6dda9cafca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97264fc3-a91c-4b53-b931-3de4aecb5081",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb4ae87-1e34-4053-a58f-21c6b523cf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2538ec-6d87-42d7-8b9d-99e4a0b52cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154dddf5-3cb5-44df-802c-b7f5d2869c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fba6d0dc-8e38-4081-be33-1c720b13ecaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca0cec5-8733-4e0d-b49a-74f3b27122c5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c29ba6-a48c-4ce7-8941-d2eea0bf3b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5938afa-2339-4072-8cc1-de460fbe16c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef391d28-9738-49f1-a8a2-daef4bd8a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be567da-b8d3-43c4-bec1-be4afdd79880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79cd654-6498-40e0-88f3-c5b945de8185",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f32d59-1257-47aa-a428-1c7e0a4f4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7999cdeb-6232-4309-a729-34716ce3dded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7431bd63-2057-4ca1-a3bc-171ba68d2a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b75e81-2953-424c-a9b9-4393609e30ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac13212-94cb-4864-a03b-121e126f12c7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a4e44-8387-447d-b7f4-36a8de090202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f9bb264-a5c5-4d27-9448-135ad9a9b3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0aa080-c98e-48b7-9c25-3728e7b14ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0ab576-a869-4443-8cfb-93ab7039be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc1f4c1-78b5-4386-b369-ab401caa150d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66e953-79b8-452f-b201-141a57db0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c50ff0-1cee-4852-a7ef-1ff6b9ef5f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5dd44c-0a36-4f65-b2d1-d3509a08463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "990916b8-e8a9-438f-8243-dec06a1d4834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b904c-eca6-46be-8a71-0d72812559a8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a977cd2d-f62e-4130-9b36-797c43087d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a421a4f3-ae42-4d90-822f-d970166a4908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28b99b6-ea78-42f9-adf9-7e839caa398d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1118dc68-d59e-411c-8a2b-fec1e978061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04554a78-24aa-4046-b769-15d231425073",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99298f43-c432-4c60-bb43-15962a3e6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a713dc54-0fbb-4485-a53d-8d7f3088ca2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43de11bf-e759-4192-b9c0-a1d1cfd8d6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0bf457-e8c8-4400-967c-35c73c7463b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa83fcdc-1871-4c96-beb9-3417473b3573",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d54a41f-ad9f-4310-8929-6d57f1237dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb758a3f-8d8b-40ba-8264-c5fa894cf959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea54a8-10d9-44d3-8c8c-ff82fc8313bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca80263f-0ad4-4632-b2e7-500c4eed569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52c5d47-72fb-4a1a-a275-d2623b8f1986",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522502f2-22c2-4a74-9c7d-655eae254c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70649b0-93c2-4d10-b4d1-23cc428d3219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a5224-82fa-4795-91a2-e555e85f9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7cd369-ea33-4a90-8628-c0c6306c517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f136774-4fbc-4b7f-b2e4-a34ba39a7436",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0793900c-dc23-4aab-89ef-8f7eb41529a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944569a1-7292-4996-9f64-dd8d2c730b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14eb22f-d930-486f-acfd-d2892a1d1f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7d000b8c-d220-4915-8ad2-6a38dfc78518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16f5db3-2274-4da3-8c0c-9befe958878d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2286464-1db4-4501-b753-a81a2ce25707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488e33f5-e941-4878-8610-2fe5eb1f2cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e929d6dd-8892-464f-a8ee-5d5813b94781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6240b403-022d-41c1-8314-c9dca59b90b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e33c8-c944-4f16-8138-2aa45b990936",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fde116-2cc0-4b2a-8ab4-9eeb577a7313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1d0ea9-b555-4f33-a129-6cfef70d7d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca89175-4071-44f9-bfc5-06262bce2372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27e4273-7301-4f30-91ce-fc5117a566d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c9574-3316-41ce-b40b-fc659964367f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bd3796-d7b3-4e61-90be-4811ca394478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc42493-5a17-4c8d-ac3e-2b784c1d8243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e00b69-d4d8-429c-a36b-440d30641183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23da9c2-9dd8-45df-9fa1-c446ac5a28c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448b8fac-0ca4-40e4-9d5c-f33078e89980",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4c7b1d-9989-42b7-9621-383aa27d3c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738f89a3-bf56-4966-9bca-3ddbb88a5a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160b43ae-a121-4a96-b993-d17c420f46b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0015dae6-273e-4963-b0df-b7824d33224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aadab46-17a7-430c-996f-1979de4e7f00",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42780823-518a-4eb7-86c3-a4e80de7ba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76964da8-cd25-4f27-9dd4-075e6b3f4d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605b92b1-ee97-42fd-b433-7e13195b91e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbc27f7-95d6-489f-8411-74c1dfaf5b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ae085-635a-4ae6-ba24-8574941875f6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f0631b-96d0-4d70-9955-75660c1b7698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35566413-e660-4d01-8978-3e65de0b5284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7910e25b-7726-413c-b1bb-9633a1d5c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b693a49b-4b7f-4ed1-82d8-1c89085fddf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d19e85-57dd-461f-b144-2ed01403960a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778394db-6978-434b-8764-9b61b7d1c124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021abd39-5e4c-402c-b4f5-492d2d0846e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f4de84-1525-40b8-b332-a049747b6218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70bcf7a1-c48d-44cf-95c0-071e5e37e6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25b2d3d-c10e-4e77-bf79-d9125458619a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6ccab7-b5f6-4578-9e71-c55b7eb93fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf64c614-0149-4700-bfa9-235e30505b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53392c92-8755-4efd-9964-80adcc97cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e10a0a7-b8e9-4b93-9b61-cb9a8b2b0033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd39630-e168-4718-a200-5409e4ceb8dd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9510032e-9161-455a-9cb1-6b0720e55f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6432585a-4400-4187-b9eb-0444dbd5691c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825db1c1-4c12-4d11-8511-398c5c951936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d55de3e-7aac-411f-bf64-6b22b9760fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0072984-0d89-4e02-a7b8-2405971c95df",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443156b6-e6b4-4f3c-a4ac-b14de71fd6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d9f6c2-7cc5-4730-a112-f46daf22f453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca731f9-678c-4909-bbcd-72a8bc5103d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b511f15b-6340-4ee2-b5c8-50aa97dc727e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2d523-a81c-4b90-a966-97415799a47f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a873455-c2fe-4805-9707-2a83a70741ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324f99ff-1743-4ac3-ad59-26d0bf2e6a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3add87fd-a9d1-44c1-b452-3ca8b1b28552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c81231-854e-46d4-8936-979f7a60b280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c40571f-2cf8-4e8c-a6bc-549bdebe5022",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8cdffc-db55-4065-965f-6e82b34b558b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7452c2e-4c99-4bff-8060-98c6a00ebed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9e0da9-040d-4a53-b47c-04d6c796c256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b75a1ba3-f936-48c4-85cc-13c1f08ee948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e2a8b-62b7-42de-9e06-188a5526d0eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24436126-aca3-4863-ae77-0607041624f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c782fb-2a02-49cc-8722-79ae048163c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef31af0-ef93-4c51-ad47-1960ac195786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acd5e2ab-1b5d-4a2e-8ca3-7975a1f3462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150b04d3-b594-4c2f-8501-5b9a1c17cdb5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594f216d-3d5b-4895-a6b1-a787d257ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcad44bd-64f4-4ee8-9496-bbcc48615cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df39fd41-8c58-4865-8642-b8d106b1066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f84cc8c2-129f-4e97-9e77-d604484426b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3814952-a37d-4a84-8013-07600d094d06",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc667e61-b1a2-42f6-857d-ba2f169ce961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef763caf-23c6-4540-b324-a61319073c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e4253-7a73-406e-acb3-4d05540a9a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e387c9-3034-4047-a4a1-02801bf9f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56c9422-e1d0-4b0b-8076-24313285d49f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1080fbf6-82d6-495b-8029-6be2a8e5b16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b1bf33-6bf7-477d-8026-b1120f93b19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91fe133-99f5-4f89-8d7a-a39ce2a3086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7233d4c-e832-46cc-9860-c6aa7dfbe41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e61879-f667-4a79-aadb-a01753836f29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e133ed0-70ad-48ec-a83d-bbc8a9d0bcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45318c33-99dc-4738-a70e-18788291f6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84c33b-0c1d-452a-82e9-03fe09e3e2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91541cff-cabf-4297-bcfd-542a44792646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b743c42f-0196-4095-91cd-f05c15b6fd28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a8089c-781e-425f-ad1d-942028835fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a49024-e76b-4e8c-aafb-d7ade372f50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30a0296-d8b5-49ef-87c3-2ada34b03023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3f5c5b-a8cc-46da-9087-5ca7093f89d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e9f014-2073-4bd9-9fff-456833ab5fa0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9f8c8d-e87b-42ec-be13-eed419b2eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351b70ea-ef1c-4cb8-b515-b9ea6adf75c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ddcc79-0c6b-4460-96ac-77e5cdbda2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d35a66-c62b-460e-82d3-4c01e83c7c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60964016-0df8-4efd-91ee-a4ba479d6786",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9381bd3b-9a81-40cc-90a5-1846c5fc90b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a17836a-82b7-4cf7-a7d8-fb8a15cc61a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5e4c4f-5bc3-4fee-bd2b-b0fa0f0900d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f3950-b292-40f2-9a07-98d7df4dfb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a74f15-d0b7-4d55-bd2c-47a4d72a2c6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eddb437-930e-4cfe-874f-d6931514beb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3f56c3-0be2-4eae-b2d4-f7a54cbb9f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915ca130-4ad4-4796-b9bb-90ec24f46b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c49251-9523-49af-afb3-444c2df6f7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253c6160-8789-4b7a-b2ea-9d3625428212",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af622c9-30c4-49a0-958b-fbb680b589f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e9cca9-f6e3-4c33-a405-1f782d15954e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca2ab4e-c837-4de7-8aa3-7aa8b7c7172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48e6b593-72ec-454a-995d-cd20ce09c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8153ff4-42e8-4106-bdf6-9a4fd4948b1a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9377f217-aeec-4d9a-a3b3-a25e97c51f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b84e9fb-7573-4153-ab45-edd6c9cbe89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6664da6-22ec-47d2-95a2-527ed5b37042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aab961-bf13-4df8-8e5f-12586312851b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8950a2b-1151-4edc-9733-fe425f3520cc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becb5d5e-a6fb-45e5-a247-cba1a3addeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352be156-5e8b-43ea-a429-5339376433d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01a0ed9-43ea-4d73-a8d1-07a970e0d45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b19b32-1611-406e-b712-d0ddd52a1b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08489ad8-1d88-458f-94c8-dd698fd8f6ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c8cd9b-2caa-47e4-9e92-f77bc1b26b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94a4a05-4682-4ef2-8ca6-af36782bd236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1029b-73ad-4e6f-8176-b4e391c1bbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "792fd041-ea66-4ea5-b42e-24e76e3eaeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5cb38b-e7fa-4844-82da-5338ebade68d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956fa474-d844-4771-809f-980a4a9aa426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4369fb0f-4913-468d-a149-0cdb626e4925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfffa1e-3668-43ab-9849-ff14195d4435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b7222c-9e4e-47a5-b162-744712f96ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47db9f63-0725-4f1c-9356-d50e8789dd41",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d924f4c2-9e50-4d57-8616-6759b256a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43abd035-603b-4fc1-b861-6c6768aeffef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926d547e-aef3-41e5-8238-8fd149539d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80424108-e7ef-4145-a0a9-45861b10c170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1243da0-9e80-456a-91cd-305549ec1f5e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad48be3-ea25-4bcb-9f10-7ccb472ec05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60104d0a-2c96-4b53-8895-4fcccdf94729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def643ea-845c-408e-b83d-57e450f77bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "563e250f-8c2d-48ee-b2c1-b41037b86b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24066b1-ffa8-4082-9fad-aec0d18a417b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defc6154-f167-4126-97af-7c361b90e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beaa1bb-1409-4db7-83da-af76572d4ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aba4833-e00e-4a1e-a752-90aa630f47b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "811e3384-6841-4902-af8e-def66e354985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae509f36-a39c-490e-8e07-82b613a27a06",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563cd35a-4a40-401e-bca5-76bb6aa48c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b4835a-277b-44cc-95ce-04d33af43369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc03412f-7ef5-45b0-aa96-f57bfa1b4541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5e161a-43e4-411b-a0bc-7203d8c445c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef84ee1-27d4-4cc4-9631-030e147e1648",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddee6a9-cab4-4e7b-8c52-68d3845f1e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e977e0-1eb4-48b2-87e2-faeb8a880e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2d5c62-5dee-4381-8451-bf4516c2b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47f5cf84-6a9a-4765-9d93-c895b6ddeafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccd06e0-4d01-4945-8be4-d0fada838d90",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea025d3c-c70f-4323-9606-273719c9c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a698ba99-983a-4ab9-8797-697dd7b9120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e49569-bdaa-4027-9396-02163dcc3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf1734c-9260-4d3d-82a3-c0bd030b871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87047318-6612-48d4-b1b7-10bbf562f2a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c471bd24-e368-4bf7-9afb-96eb4549dc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611201fc-944c-4cf4-80fb-fbb8ca8d840b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c8c718-8fa0-4d18-858b-cfa4ceb292bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2083c12c-f562-43f9-84c0-e88f828cfbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11409ea4-d655-4852-9da4-2efc56030ead",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a94927-925a-4e22-a5ae-051cc641e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d4d173-fe49-4af8-b35a-33a668dd8c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be524270-ec99-49a9-9766-33d25c53b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60769072-aa13-4b32-985a-bb1bb12ffb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc03595-d49a-41ef-82c0-e37cd557c350",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb31092-412d-4a1c-a440-4938d517b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3f6a1d-97f3-4dbb-b639-4f5fd9c883d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4bff45-edc0-4542-9a65-6fb7ce822063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "741a94ed-c232-4708-a8a7-dc120bda7744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c619f519-b8a2-4af1-a0dd-87b81b91fd98",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1acd5f-fe5e-44a5-9edc-0476811536aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4271911-049f-4786-9607-f7eb75cbe357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c34af8-eb84-48e4-8584-ecb4299a6556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1474ebf-a79a-466a-bc21-0abde1706457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb0399f-120a-4b49-84f2-2a9505b6ecd4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bb581b-5932-4ec8-a240-9772347160cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9dff7f-8289-4139-89be-5bae46c68858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aede719-e546-4621-b05c-313e8a326413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdb9d37-ffa9-4006-b8a9-2a0840a134e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ad1d9-ad69-4577-9918-f54a07dae206",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffbabdc-0c8f-4a62-97c1-bba627dc5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53b3493-866f-4b5f-a867-0df6a0febd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a518ba59-1b42-47ee-8361-f211be4add68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edea164d-bfdc-43e2-b884-4d980a98d3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2872b9a8-4fa0-4512-a405-03be0162c302",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d195295-4e48-43e2-bf3b-bee42d3a5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6befddd-8b8e-43a9-8819-9acaed1f60c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebacf228-2504-4137-a3ae-a4f40fb41d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c7f355-07c9-4348-bc41-2f57a389e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e6eec-967c-4d68-b522-504863245a16",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853754d1-bc4c-4ff6-958e-f39f6710a6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f9496d-0054-4cd5-9f57-88f231220385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79908b58-ae56-4089-94b8-a6b0e08c5bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27776e90-1d84-4ecf-b63b-09e7e0d6328c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e53609b-b2ac-473c-8181-0172df5d7023",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1debe9-3ff0-4c6a-8fea-6e9c2d502405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af93b8bc-a645-453b-913c-cd331e161195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d0807e-33d7-43f2-9166-52514a4b4e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b03acf-cc4b-4617-af6d-fd70c6f4a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe306a8-4795-4f92-9468-a24b8264cf4b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a35017-0533-495d-92b3-e8e01f17de46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1891f52-0493-46f0-b4d3-01eb10973289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d8020c-936f-488f-928d-ccc098e840b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "047f5e05-1628-43c6-a684-ad4bece3a78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585c081d-92c8-403b-baec-7eed1ded10af",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b4417c-b09f-49e0-97e9-b427b6512b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bb900f-ccc8-404d-b108-ae2e7ab43902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ef9610-059d-4ba7-85ef-6a2b22450bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad9472c-0b4a-4491-961a-c54d863cfda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dca3d0-c550-4e26-835d-9f84b42153ea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbe9fb-fa9d-458f-bd55-a1713863b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775c04d9-91b5-49b2-9bf0-84b60746d0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cb1890-9000-40ba-a8ba-d794a8ff1f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ca5535-bd52-4350-ac47-c100d91fd17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21fbd83-b0e6-4a20-810a-0fbcc38c0fd2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ade8b92-95d5-4ce6-9ce6-5b114fea4cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e47e0c-e312-4730-be10-a29c14822f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df591725-ecb4-4977-bd34-e0fb60133501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d2ef20-4575-41f9-9e9d-ca9d13653561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2534de17-3b75-4a72-aa4c-a59d9f166f88",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f2918-0f71-4b7d-8dd1-fa4e275230d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3975e8d-8b73-41b9-beac-71abcd448c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9383ab-1346-49be-a5e3-988e0128b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a49e4dca-47aa-4414-a04d-66edad4ca489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b7b46-b483-40a6-80d5-fa91c72f28f0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc30fb-28ac-4007-b994-9abf3312f54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e218653-1b58-46a7-bb4c-620dcd6f7c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed24cb7-7583-4868-a354-841a4724ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b057c4c4-7679-401e-9877-57bd8c9f2871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd55ee-1294-43a7-9b80-21888323245d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed995a0-f12b-48e7-ac36-a5e66627f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f45ca5d-1077-4bb0-84f5-29f199698d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee60787d-12ff-46de-b05a-206dfeb7ac0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d88ad98b-06b2-4721-9fba-0d7506f18dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dad9f3-89ba-431b-a874-ea6b40edc6cc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2017f3-fe2c-42c8-86ce-7d65c49bc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72471d22-d7af-4717-9e3c-430b0fd408c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed8a100-c094-492e-b2a4-a49251182618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "024e226b-008b-4db3-b21a-303f637f607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d59b4a1-aa11-4aac-96a3-36ce3fe0c682",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd772d-bbef-4fb0-8c3e-08fe3bd9f5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4066555a-42cb-469e-9f62-0c6e2f15a750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b38e604-4d10-4644-b6a9-8db36d42667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "293b4bba-bb78-48aa-9374-f87549171c4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "861ebc05-9c93-4530-a7d3-a79c10b21aa0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d948d14-7888-4994-8c39-04568cd3be62",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b0fcaf-d221-4fec-82e9-5f7997666611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db93d28c-808a-4027-a6c3-975b0bdd3abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc7f6fe-5349-469c-883f-db70c98e6714",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91822590-06ec-4045-a074-b8f9bff6d3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2093f2ef-2d86-4115-aed1-69c7db72e8b2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca147ad-3f40-447d-8382-0d37c8c51932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c5a2126-021b-44f1-a31d-2bbcd3ba11f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2570f401-3d45-46ce-b2c1-ed989a1c5658",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2855a972-6f91-4dfb-9d41-d7403f950179"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a63578a-a450-4326-ab51-15f0d89874dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbbe74a8-542e-46ed-ade1-45b74fd7aaaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "730e76c9-05af-4985-b6d2-4fdace9ac64b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c908aada-7bec-42cf-ab62-eb1473907f6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3051f48d-4416-4856-87d2-72321d6740e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d29f39f1-66af-42ce-b87b-d102a45b417b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fcaca317-3499-4973-8160-4844e797fa74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "024c76b0-6715-4a48-9f59-2acba979e53f"
                }
              }
            ]
          },
          {
            "id": "ed6b5262-1600-418a-801b-449e7d689e01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d08580c6-a915-4e4e-ad5b-f93f1f581029",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a42a9196-8159-401f-9692-e79a55a3db27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c13fe355-358d-4285-ab4f-790b37b294de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "240998c3-e05d-48b7-97eb-55a19c5cb7ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f64d1d08-13df-4d67-98df-37e6358d768a"
                    }
                  }
                ]
              },
              {
                "id": "f3a82ad9-14bf-4f94-acee-81a81328ca59",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ad453c1-6862-46ba-9aba-e72f5db62606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "889327c1-d1dc-4109-9522-7b504c8752cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ee3656-1480-4c6d-bad3-54f1928e33a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40e4edbc-1336-44d6-85b2-065e5cf72b86"
                    }
                  }
                ]
              },
              {
                "id": "f94d853b-833c-4cf3-b9c2-2d8a9b21de1c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f6e6cb0-6a44-4180-ae33-bd5471702cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da2a2e20-0ccb-47d2-8c2a-4747e4d31bf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fbd99b3-4b36-4d63-962f-9425c71c1bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be781f19-d654-4b29-b7e3-de28140795a2"
                    }
                  }
                ]
              },
              {
                "id": "c54a690d-262b-472b-ae24-bb192f54f6b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b8b04dc-24c8-4cc3-b42b-e52f8b0d71dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0afcbf24-cbfe-45fc-af42-a805fd742157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68e988cf-61c7-4d91-b442-f012d263f883",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "096ca548-12d7-493e-bca9-83bf6462d879"
                    }
                  }
                ]
              },
              {
                "id": "a823d7ac-92b7-4db1-a4e4-c33a4f7e6ac4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceca646b-6e18-4dd3-b0fc-d0cb78e1970f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a66ee25-e282-4124-bcab-2d8b13e4a7cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10650954-166f-4b12-b4be-b93aa9ede600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "576a72ab-bd0e-4e18-8fd1-55f300e153d1"
                    }
                  }
                ]
              },
              {
                "id": "7b823404-3cb4-4957-bc6e-759a806051d1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091335f1-733d-44d4-8489-dfb79b176f20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43ee69dd-d219-4958-b4b6-a0f77fb7f1d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09a787c6-169f-4686-85cc-7b365b425a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "baa18d1d-e505-45c3-8895-7af830e41108"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a459618-bdc9-4d11-b433-2df3353ec11e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a1736a5-8604-453c-bb64-d9b871fb2392"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0979be41-b253-4160-92c6-3ebed2497a22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d976810-085c-48a3-9038-f7115114e012"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfa6f55f-ddfe-402f-96c6-e22ca585a439",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4fd728aa-5a46-4752-b0fb-d25bba5bd41c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a4899e7-0cb7-42f0-b155-6f2bd8175247",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8c4feae-d3cd-4258-a20d-f639656975e4"
            }
          }
        ]
      },
      {
        "id": "8e78011d-4089-45e1-ac8e-30f8b5c4f825",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9e6fbfd6-54a6-4bba-91bc-275cfca5210b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dea7f665-a6f4-4ea3-95c1-b56782320749",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c467109-bc7d-4435-8cfb-daf5e57b7f66",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6bac2b-07d7-465d-b59a-a15f9aa9cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480ca1f7-33a7-4a63-9435-c042d00c70df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a64c298-afaf-41a6-b61d-ebcd5f38b000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7603365-31f2-432d-af85-dc274fa859cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c54e3-4ebd-43a7-b53d-18a00941677d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54ae6de-6b77-4a85-babc-7bb0f2e9cf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42514d55-f6e5-49f1-8440-06a9ff181b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac415c-59f4-48ff-a2a1-37fc9c72a406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "609cadbc-5bd6-417b-94eb-e107258fa539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05b253d-7e44-4e3a-843d-0ca7914ad235",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bed475-e6ea-4e61-9ed1-30603962e09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1027d1e8-87f1-4c18-bc36-6edd832ac97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e0f8e-ed80-4d0a-a89b-c6b5274c4a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3703f4d1-5ef0-4d99-9de2-093a5fee9448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61ac5d6-8250-415f-a60e-481c6aa6a2cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b022c876-fa20-46ef-9d2c-71ae2c332a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65318f0c-8c71-45a8-a49c-8be92a2235de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d38188-ea58-424b-9de4-70f56abb67b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29faa0aa-3e00-46e4-b26b-6312b4696a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f869906-3c7e-44d0-b0a3-cce76b4ef49c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa323bb1-9a8d-4a79-bbd1-90f9496cca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43642e08-e7e5-4837-8f07-fb6896956b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0287d100-5b2f-476f-a0ff-f4dc208e41ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "197c99f3-b555-47bd-88e0-e2cc9250cdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7f5143-5326-4968-a13e-9f8e5f335ad1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1870ee-9749-4638-baa7-35a63e82f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2e0616-691c-4770-9e8f-38bd60bf7350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae54eb21-ec84-4216-b13e-cab7f34a38c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c2297e-0a36-4e59-8e50-d400dc001a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d1234a-cd55-49e5-b25d-e739fe7fb86f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154577f9-c6eb-4685-a35c-3ff863667aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56be0a42-d018-479f-8cae-616f86e1bc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf24b2d-e7d7-4cc8-bf38-8278ff6c6630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a630a8-dbbe-4dc3-8246-8f2bcdf182e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56daad2f-8c34-4f48-b45b-6ed1130025c3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd83fde-ac57-4e7e-b3f6-e7cdcaac0395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bde07d-6bf2-4967-b424-4f5fe4dcb38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69acddcb-610a-4012-863a-3fa0f3baed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b934fc-aa66-42f0-aea4-a8119174522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8af9ec-35f2-4bd0-818d-c864510372f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b32a193-426e-49e4-84ea-1dcd42b07ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1119b90-2496-4215-a0d3-082c14f54cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d585f404-a899-468d-9326-95f0e2644d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d40de0-1c42-48a4-b156-e485ac3221b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9a960-19c8-497a-b640-a283ed687302",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d46e2-18ec-461b-8813-f8ac61162dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cf5be8-73b2-4b3c-9294-09fb43d95070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2dc7d6-ff66-4bb6-8d63-0f24b3a4d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4080cc1f-285e-452d-9a45-254443eb3f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4192d601-4d0f-4fa0-8e97-198ea4213153",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71299de-e9f7-462d-9a4e-db0e88514a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464cd835-363d-4c93-9284-f42929e4de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3316215-98db-4d22-bdcd-2bcc31bcc54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "704f362d-ebeb-4f11-9a25-00d521e22ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e8af7c-cf1b-4476-aa18-617edfa81135",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf7758a-aca6-4702-bca3-10b107c04384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509d1735-44ba-44e0-9a9b-7be633d72b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe74493c-5b5d-4620-aefe-58e505aa1eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60241f77-68dc-47a5-8a6b-6739ab02514e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ac1e5-4af8-44ad-a07f-cb1f8d2346dd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad8341f-871a-4f27-b374-3a950c1e990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3153a84-3cf1-4f65-a663-758bad9b44a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6756ecd5-664a-4898-bba5-b8816cc3c983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45783d2d-7035-4e6d-8e07-0022f8efa5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18681adf-3555-4b27-a475-8d71909d18af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42dd03f-b8ee-4b21-ad86-3e84bd0890e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d39afd8-c287-4d51-82da-c587c715ca1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7c96c-1daf-4640-898e-a560953adac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "163c0650-8af3-4413-a878-f32f6ab0be09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac52670-b318-4541-83d1-c8953789f487",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acee5343-8743-4fc9-9d59-4cae3f3016dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da7df24-e21d-4196-adda-8f76e9362d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f4ba60-f776-498c-896f-5f8d9cbf4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e947a8f4-2a59-4a29-a08b-1240581fca4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6eda7d-c0f6-4569-adf5-ace8385a7bcd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57753f95-6101-4c8a-8c06-eca0e714b4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddd6678-5c9d-4da9-8e66-415a41679c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00afd64e-2367-4a55-ac15-66c807e962e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e7f63a-63b5-4bb8-8258-7ac6dde61211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58a8ab3-63f5-4768-a5b7-4cf2709b6adb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6196789d-6e85-4b1e-a716-5505b8c17cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6a71d6-02a5-42c7-87b5-570b92ecc4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bccac1-119f-4e7a-b1de-0c33bf18ae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "859fc654-0842-4d23-8d6c-40b3a0270ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20cccd1-1a64-4522-abc2-9572d7890058",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0735c4-b0ca-4082-9455-50bf7d695970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f951911-cf4c-4fe3-95e0-fa97852cb0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97313c2a-42f0-45f4-abd9-7e047b5739b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93251d32-45b1-4192-92e1-6f3c1cc7054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026429d6-bd6f-4c8f-bfae-dd7add48bc0d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6569c829-946e-4497-abb0-3d4b12a529f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6135a0e6-caa8-47a1-afd3-b2d24a8ad22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e786129-917a-4ba6-a3ed-c3b372e18da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6778d86-8d9d-4b87-8059-6c3cb43f5f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27095d6b-282b-4ea9-9881-09893311aa80",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aff6d1c-dfc4-4800-90ba-47437c9e6704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd48ea72-33ed-4205-8fef-381474678e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5ffdce-0fd7-47e2-a00b-b3cb16010807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07960173-bdb9-41d7-b61d-cfc48abf797e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55004e99-819f-4c5a-8a0b-0d2fe4d01cc3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e82c6e-a228-4414-9076-7cd2cc5a5b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4221d75c-5f10-46c5-997b-f494730a7caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d2f404-e58f-42b2-abe8-fa4cb10d5674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eed305d-b832-4f6e-a1d5-372087f4f365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24b1544-241f-4e7e-8f01-5216db1a8975",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93392e3-12a3-4cf2-b6cc-38363d9436eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35111f98-4459-47f1-bec6-3ec56a2e7f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc783df7-d622-4062-a7ca-e2dc83c20847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "088021a4-2206-4a92-bd92-77a98d30fcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f06173d-93ae-4aa6-bf5f-4513996128e1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b5baf-2a28-4e4e-98d9-a63cceebf352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbadf24-f4fc-420c-b563-2c9362cc81e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99399579-7e1a-4ce2-adbc-db582f67bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04503da-41fe-408f-bb6a-4c307f7a0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6096adbc-214c-4f82-bd2f-eaa27c67e3a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487ad3ad-9b4e-415a-9693-ff43e3e06abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c76250-8858-4b2c-8a5d-c8a842a11d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc51593-90b6-4757-bb1f-4dec08d83c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae8200d-e7ea-4664-84a3-0c6018edc4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c77a639-cb55-4b95-8474-a0fe082fb366",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d588d6c9-bcb4-47ba-9557-d8a48c6cf10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6701cf2f-4d6c-4dd6-9ad9-aba350d4c3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5594ab1f-8447-4dc4-a776-c2971f252282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "810cfe3f-e1fc-43c2-a8a4-a94db972cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2f67f-dba2-48b6-ba62-798da9dafa64",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24307e5-d373-43e3-b974-630daec7eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dc3202-6e4a-4b71-800a-7243e4395292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d650ab0b-dcfa-4354-aaeb-95ab71c38fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e59555f-d68e-4b81-a797-f9d15747ab06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcefb078-b3f9-44e9-98c7-47e25450e655",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9e02e9-2d47-4296-99d3-2807afcbe8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8616fdb-50e4-4e89-9aae-7ec482279041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46c5f60-8952-482a-ab2d-e4925155f5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85923f6-66c4-4459-ab73-b3777709f693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddec60b-4c37-441c-b212-a7bb213a2a40",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a3b23c-2a59-49a5-9216-c6faaedab26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9caa2f-f7f7-4538-99e3-1fcddbcfcb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d77120-f6a7-4e5d-8f53-e2df869ab372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a8d475-4598-40b1-91ef-11350f114053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e6ee2-ef7f-43e4-8c3b-1febbf531e91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0613cb0-4f45-4f85-b0cd-bcb5ae49f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51d02b7-0ab6-403f-9fbb-78ba3ae2c261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae4e27-2f4d-4b72-b4de-9039aa5f405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e79d0e-8372-4b9b-8481-03592f0ad6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8621d1-dd69-4b30-b349-de3000614828",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148ca8ed-8082-435e-945e-a0147ca56037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7a9248-93a0-47ac-8165-4d628fb345ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1c76e9-6638-4fdb-a5fe-ffa38c2bf837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6ebd2e-c181-4c45-8316-04fee8b8c121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905fa38c-5e00-4f8d-b799-ace2538bbd31",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b82c18-3ae3-4a5c-ae8d-f7cc8790e182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86105af-ae82-49f8-a018-27d548da7ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c8ded6-382e-4786-86ed-5315cc088e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf716e30-fd6f-4146-98e5-719e3f634e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aed357b-0c8c-4084-99df-24e70c0f5087",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97172efc-98b0-4d1e-980c-beb4c8d5e719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ad9ec-46dd-4be3-9a5e-59c2d9fe921c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db793fcf-ac6d-4956-acac-0203a0727c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655d28ef-32b6-4e44-b9ec-af5a0c28bd8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f79b29a4-448d-4d16-bd5f-f8195b15d593",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39fae767-da5a-4642-9f97-0143e40d5d5d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932a3c38-92f4-4ccd-93a9-3d1d35fcbbad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4831b603-f098-4f66-b3b0-4131a5d46e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa80e30-d817-4d8b-a7b4-8f789d7e3603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ab5b504-27ff-492b-bbee-569184dbe574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23438b3-1bc3-4210-8529-bd773eba068a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cb0d06-d3c5-4e5e-af42-5f7b9be36d02",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a92a60c4-cab7-4b6e-84ab-fc6af9487e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d292b5e-a6ab-4143-8253-b0eca7c07ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47de2a74-01cd-4e99-b2d9-f8b439a1cb42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b1e75fa-c874-41ad-8d4d-139fc9d1a614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7166c23e-09d7-4046-99dd-f64bc79e4d5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a15bd49-56ca-4bb6-8543-957dff8f45f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3777c1b-7ec5-4f78-95ea-64435e2ee52e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90453f29-7ab3-4f42-88fc-08b2ec64349d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5fd3397-d308-4ad4-a62c-6b90efe44509"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "355d276f-eb22-411b-b5dc-08e512f29c27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fef974d7-2358-4b1f-a115-2b02d5ffffef"
            }
          }
        ]
      },
      {
        "id": "26d8a758-2610-4bb1-afda-828ef92df3d3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aa936cbb-bd80-4c71-9084-e2c35180429b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b952ffd-46e7-4e76-beaf-fd1c123a72f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1fd738d0-627e-42e4-b817-d8c27dbdb95f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb82db9-bbbe-4bbc-9627-6a29dfd61a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9992a043-259b-4d7a-9c2d-0b45b90169ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71daf5a-a18c-4806-9f6e-04d09989b83d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffeb3b0-151e-4d79-a374-0e3c20a6e398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225b5080-14b3-4022-82d8-a1554ae1eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74351904-8364-441a-8d28-df4e425c3340",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd3f0d8-56a8-4f2b-af55-0983c716fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a163fe-4407-4816-be8d-2097bf2950d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269e25c5-2568-45ab-b801-4032186ceac6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5872db9-8e3b-4150-941b-b99702827011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b65c7a-6851-4d8a-a0d2-da6bb05f112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66708b64-4f95-41ca-ba46-90f7119280cd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed20985-89f8-493c-a2fc-0ee76fff2ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d27f1-f808-47df-9d78-d1dbf91a1691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b40f67c-9a73-4931-a795-1308e9ac5fd1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6fa7b3-6054-4922-a160-21c5876c9db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ab6fcd-7c24-4f8d-807c-d8266c84ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792c693d-745e-45bc-8357-5487ad18aab3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bb0da9-f5fc-4fa7-aa0f-329e65c73cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b6f193-c805-4b03-bbd3-90668b9c1870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1668a0-91ba-4f0f-b035-b0954b6c2ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa965d13-d7e1-4acb-8e0e-c71a75054e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc539c33-bedc-4590-8428-f0ec6f8ac785",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff08a0c4-3b91-4da1-a367-6302651651dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a388fb-5cdc-4724-930a-899ef8d6b5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a150d0-f202-4856-822e-fe880949c5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c90e0de-79d9-4061-8893-158c935b93aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c436c419-b19b-40d1-8df2-f20a596a23b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a747b3-7cd4-4418-91bb-ffba324e5334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63318f85-cbd1-4a73-b84a-94d9ba673981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aeecf8-61eb-4378-90ca-6fa693a2473e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37d30a1-2267-4875-a9db-711da7424311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebff9ea-b48e-4063-a6ca-70e5a02f90d9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a6da69-4d5c-4c1a-a8a2-08a914cfe4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce8b08ae-fd64-4ea9-a279-8a159793f983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c833542-f148-4622-90e6-742c6044ad1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2754240-6e08-4e9f-af47-25c85953173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3d3bc-38b6-4ea2-a8bb-e4786ebef6ab",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f56c63-2fda-4142-9085-2c301fa8da55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750606f9-3b36-4cf0-be51-68271954b02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1f8e53-31da-4a17-8f3d-8b7b3ae48a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bfcf3f-59c5-47ff-9732-8d24f99b1598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c00c154-5f81-4514-9973-b294bdc39149",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dade284-c8ad-49f5-b79b-794198a34d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3693ef16-10c0-4556-bf9b-e6fb3a3e90dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19fafb5-8b9d-4db0-a5af-8fd6d0e9aa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48e2c5-29e5-4a62-a49d-20d9269fc33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69661086-23a8-409c-80d2-2176570d6858",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cb80e9-51c5-4df4-9c8d-46fe398cab7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df17d697-9d33-4889-9d8d-2f21929abfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3c00e4-9add-4c8e-bf3e-7560bff1a76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80def2d-a775-4689-b8f7-bd366593f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcd2bcd-85af-4064-b952-b6c79c3dfd8a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bb6c58-78e4-44e9-908b-b53e42b88073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192448e3-c393-4cf6-9248-9ac9f21b30a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded85e4-c07b-489b-bda1-ec68fd36da46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ca9999-d881-4d3c-8749-ebe7b054c28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229068a1-8234-437e-8de9-f326fb1163de",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac55127c-cb33-4599-a6f0-3a66b300125c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0ae677f-34a6-46e6-89f7-3e374309cf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e0b7d-271c-4756-af91-f6ee5b7cbdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd7d296-4ae6-4137-8d04-4c1a6ff6223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e30d89-7877-4d5e-91ec-437763b97f75",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5aa9f-4c70-4743-95b1-ab8b750602a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b2f394-9c4b-4339-9704-e427877b609e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09c7076-ff2b-4afd-a3ad-28e9ce82633f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9e0b7c-5966-4eeb-9ed4-98e660ea1056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0281c46-951a-4c6c-b9db-d0ebf113f0fb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816ada76-e2f5-4278-8b15-4147ef72243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c3332c-271c-45a7-b0e9-4f1f42447042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467aa327-06ff-449f-976a-b065bc9e4baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3164dc79-f967-46fb-adea-acea315be5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067ccfb9-cd7a-4862-af8a-6091f4c29b9b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ae5b8f-7c39-4af6-8ad6-81918082ae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70c34b0-900b-4c56-bd2a-c3de8a1a6c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07013d6-a392-4200-82a8-540621be3195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177b62e8-5bf8-48af-a471-3e5b2c77f30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5ddc42-7193-4cc1-9eee-72def8d70bb1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f656a4dd-3b37-4786-8865-22c0c86bf362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9054d2e0-7eb5-4df3-a8e0-3a57b6e88cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dda9850-6bd6-4366-a172-5dc6c0f79c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f35905-438c-48c4-b549-f0a8c587fe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a66cddc-093e-46e0-b283-820dff88813d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8dee51-4f3f-43e6-ad85-8b708c247323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1f1f8f-f3b1-4fec-a0a9-3b9aa445c24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3aa8a4-d543-4e90-a8db-a877e90696bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f459354-c1eb-43e8-9ed9-57afee10807e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038d0e2a-13ea-4e27-ab79-bfe1f3cf445d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c06c0a-31ad-4865-b677-1e287a117ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed9dc3e-7ce4-4d94-91e4-10fc825c1dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef793dd0-fc24-4975-a525-e2015ebda947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421f6f24-11ac-4a54-8b6f-6920f4655458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e582bfa1-8096-4dfe-9509-2ab21a6489b5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a31370-e526-4ea3-9b64-cd1c7f5caa4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f05fa92-494e-4fbc-9fe5-f405802cc975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb602699-5ab5-4542-837a-45a95e45ae65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ca1c69-98b8-4f29-ae91-a046ce70a6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b18684-027b-4d1e-9607-7692cc477223",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28f8e07-206e-4efa-af08-c6ca631c3aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1488cf2e-8971-44a6-9477-1c28e5b2b482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b3efc-0c7e-4f35-b9a9-9005395cd5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78a1450-04b5-4205-a89d-ac118802e244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044b16cb-1754-455d-8a14-8d5160eecca0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706908c7-ea0f-40fa-b2a9-e78f20170725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5817f750-394f-4f52-9d4f-72be1c88572d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0beede4-1a4f-437a-9d54-3010203e4458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3082378a-716a-40fd-be40-4016b9358e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878467e4-ad9b-45a6-982a-ebe9772c109b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1def25c-d2a2-4997-acd2-f7768b06e03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80b9b60-c61a-476a-8fed-2c5eb68d9978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8cd576-8864-4dd0-b881-254e973723e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59aa4bd-29fe-4c0d-a04a-d59f980ea538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff70cca0-8f29-4851-b08b-700cb977cadc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeae826-f846-46fa-adc2-063b480bf6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26151eca-e543-4781-84a3-39946517e837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06591839-6fed-40ed-a421-76972762480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ac9505-bb68-408e-a451-0d892f36f645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0649970-5cb6-4d13-9b42-64765630cadd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6ce023-3d92-4e83-b35d-61fa952e1f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e70cfc-4939-4f32-976c-21eda9f0688a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba04b3-9351-4c0b-a1e6-f647aad6c17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f7b68c-adf0-44dd-98bc-7858b01d6ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b484e0ac-2de8-4050-81d1-d9f161c0930f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2af571-d6c1-44e0-8232-cd73c2eb43c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0c54b7-31de-493a-9a2c-4f2ed3f4ec7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275585ff-6fdf-4f9e-a0a9-1d11dfb3152d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd704a4d-b340-45e9-a31b-a4c16a436610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a1aaa8-790d-4586-8c46-9fe0226d7ba5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3011a1cf-ba76-450d-abc0-d6a479073227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd616a7-2d79-44a0-8bf4-3f41838784a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f0a0ad-49c5-48bd-85ff-2d74ba12b879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d5f908-1ac3-4acd-91c2-39ae7134b931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cb63da-9972-46d9-8798-3fe45fc1811d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec650ebe-dae8-48e5-af04-0662bbeb6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab2af82-1241-40b8-a730-ebf8b84687e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d335c27-70f1-4273-bee2-ed3f96ff46da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be857c9f-cca6-4be5-b08f-30ec183e08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7395b83-184d-40c4-b909-6919fd37ee13",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb996336-e49f-42e5-b177-138f3d3d9eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec1750d7-257a-4fc3-93e6-21990e4127a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55a7331-0320-43ec-a569-0861a4a1e643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c1cb64-abaa-4e4f-b606-222db6937f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d1c1c-45c6-4d15-8ed1-3f9adc41d59e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4169e99-8679-4d35-a205-3726761c289d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3fd275-23d2-463f-a2fc-79806f5489f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00496f4e-84c9-42f0-a3bf-3c4c008d823c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad1e82b-4053-4afd-89df-a8381ae1b2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b6169-903d-4779-ae94-b42362c2642b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d744f-0817-42f6-a97c-d9b4498dc72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0522c736-310f-4546-af92-8f2d75009aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cc45a2-f6fe-4b9a-b663-06564ad65830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a71f49c-5bed-4f55-a314-479620511974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ab9f2-6eaa-4354-992a-fd997766163d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1915853a-195d-4d62-abf6-2ed32b6a42ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cccbf91-1cec-4507-bf7a-395e15b0d7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f7d6cb-f77b-4425-bc9b-f9ec36fcd690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7527cf04-b6e9-4e7f-8d50-048f30e8437f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12518b0b-9a7b-4b3a-adfb-5d77631c7696",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40799e1c-95f0-472d-ba34-68fba59edf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f94b20-cb32-4341-bfec-57bbb3f823b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116b2163-27d9-4408-91a7-ba20e9c865c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b933f53-8bcf-44cf-b225-d335535cd276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f766737a-cd4c-4946-89fa-593e2f28da5a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55b0110-162a-43c9-bb8d-3a23875841eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d4be95-4518-4678-8dfa-063d01c93965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eab5313-358b-4b5f-ae3d-6a44776dd727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55080f4-ee21-4568-844f-ebfe79e53cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a9898e-8c89-477a-9b4b-d421406a962a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f31f6ad-cb51-4ee6-885e-da2f82bb36ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e751a5-7b11-4396-b5f4-447a970a4786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa1a6a2-c850-4240-beca-9f84a84b9202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ff8cdb-5bc6-4aa0-b1d3-cb6ed7a67993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56565c6d-554c-4a8f-be6c-6d94efd10c61",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526bce0d-5677-43cd-8982-0275da3dd934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713d50bb-28ba-48f9-b453-3cd826d2ab98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b493965-a41a-424c-9fd1-2604d6b88980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3985e246-c366-46b1-a7c0-fe2e2f3fa0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeccbe8-4a0a-4353-b657-882bc809a809",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4206be2-aab9-4228-aa83-36ad02660199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde48ef9-6413-4ea9-91f9-ad402ac655d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65757bb1-7959-4aba-8524-7beaf330cdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f12838-54ef-47e8-8ecf-6d13d19d6f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640e9a99-d038-415b-9fe7-58f8f587ff5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b759ee-316f-4b0f-9788-6827a591e74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047cc9b9-a603-4690-9cd5-9ac88ad8df12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3305e1-7d7e-4cb8-bf54-a23ac8dc41fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e68a6b-783b-402b-bc16-210d545d3012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846abb3a-a39d-405f-866e-ac3e37947bff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37faf051-62d1-4ce3-8efc-e08fb5496d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df51c92c-d8ff-4cd1-a85c-b3f7c48885df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d53b4f-daf9-4d8e-9ec1-5680f139e11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b268eb0-9ca0-4910-a4d8-b1b28d14e71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0369dd3-3ae8-48b9-9a07-fc17eabc00bb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6517373-993c-4556-8cce-85560d166a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443fa148-5479-414b-bf39-349c6346d68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c846e413-6a1d-474d-aafc-193b29f15c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11871e1b-92c0-49d3-94a2-cb9f0bded377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684a84b3-5086-4103-8250-6a787aa0dadf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99416a9d-c48b-47ef-8e9a-3194f69e5703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4b9a80-69ed-435f-b086-b6d535fdff3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc960e2-97f6-48ee-8771-b7cc4620a8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1629a8-a7c7-4d1a-ace1-f4671e8185b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e7368-3660-42fd-b048-8f91af644342",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f7a085-34e7-43b0-903c-b8a43f29c13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d4d637-e32f-4544-9438-e13a5a838f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94eb917-619f-4190-ba75-9f2dc33fdd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524f51f3-fe9d-450e-82b7-f23ba2895251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3528e042-f233-4cee-9049-fd5030c397a3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8abdb2-c83c-4d79-88c5-bfe25bc09786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3178ca0-4920-41a0-a425-9e74d70b4599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54ac404-041c-4d4e-8cf5-b544e56349b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d50b28-a714-43d7-b152-66df367a7546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860b3148-17f5-4c11-8b99-e93b258d071b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a685fa-cd42-4bdb-98bc-1e6a974c8229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb32ec5-3098-44e7-ba62-81e1577da255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d3cc90-b656-43bd-9c64-12a3091eb3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b49ce-b2da-44b7-b432-2a5d239dae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3e0076-f203-482d-84d9-887c060403c9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a8a7cb-dc3e-483f-abcf-44df4a281a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c887c84a-7b79-4b57-a468-dda3162d6536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef4f2af-5ca6-43b3-98f0-32c53adc1475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617513d-c8cc-4f60-8311-e2f056248ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd476fd0-796a-442c-8d2c-c377018fd1e3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1c4ac5-793c-4ba2-aba3-806cd1e7b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc85bb9-e6f0-417f-ac42-75a0cefd35ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d2c957-81b2-42f9-9d18-fbdc3b41ab37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f963655-c7c1-416d-8727-3e6600d60a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e833980-dd0a-4def-8867-eb3ccb83e420",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374349b6-c4e0-4105-b87f-492d73da1675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309a70e1-b045-46b0-8994-2ec2c8919fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6bed90-47af-4f8f-b5be-3bdd21864974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807f78e3-ae73-4881-a674-9fd6bd507554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c669b-e447-4fd4-8848-e0c0e110afb4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0830a3-b170-4458-b18f-beec87986261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4682752-d208-4861-9ee9-f55ba2ea43db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694931d-382f-4b9d-90c4-73c438c0bddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649e6182-9269-486d-85c8-9054097d305e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f22b59-c933-4967-9fc9-eff4a54a455f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bb1830-aa23-4ae0-bf3f-1f04d62c4651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfff909-9391-4286-b461-19c1f46bba9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3d9109-048c-480e-9ab5-dba34481883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bbf295-90e1-4b06-a924-c0797df6f942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b598d058-8e6b-4a66-b797-a38a615b7f77",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c16a70-4ba6-419a-be0f-51d3d307bbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64809986-fe17-46ad-83e4-e99bace80865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e182c8ff-6c56-4c0a-99a0-f23e20608034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b701e8db-6e6e-4a43-9e3d-47276d5b5df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9966e0f-73d1-40e3-8f7f-68e9b639aa96",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80c2b0c-45bd-41b6-82e9-693fd4748eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b3779b-abf4-435f-bbda-eec08f55898a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cbefaf-654a-4ea3-961f-ed9150b66522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035a6105-2db9-4952-9eb2-fdbfbbc16cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d6d60a-56bc-41f4-9a6c-7efaa935c520",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6fa404-d419-4a66-b877-813eacf66429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619cfd79-12c8-4dd5-8a29-4fa0895bd3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff06b4a-49d6-461a-ad2d-db75ec86799d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9154962a-84c7-4f63-bf40-b004931d57fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ac3352-112d-4d70-950d-7f3f734b68c4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50bb61-4f09-4bd3-82cd-4bdb9069dd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46565a18-8145-4a57-88fc-23110e271080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbda082-58cc-4279-b660-3fec86f35225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a2ef9e-5182-463b-9967-bba2eb2ec6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba91f86-5bc1-48a9-96f8-6bd32433fc12",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04efd7bf-5567-48de-949e-66bceefa6b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e27b94-f315-4edd-b7f9-3838013b858b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f48951-0830-46ec-8d55-90ea36b65d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd898955-41bc-440b-9f26-81bd3f6883ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b48f020-4313-4777-a444-0eb18ccda040",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edac95b3-9dce-4737-b2ad-2e74de4d27f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff106c01-b821-4c74-b985-a5bb4d3be9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ed775b-03d4-4a3d-beb8-4f67466fec2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9725c771-82dd-4314-af4c-21f79e047725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0838a8-319e-4e64-9364-fa5564718cc9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936c1c3a-f638-4500-98f1-876c33f3f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6996c8bc-a831-442a-9471-c605931886d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e00934-023d-4256-937c-39e2b9a6b0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dd0d5e-cc45-48e5-8a0a-1c7c10b9b642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c640a73a-c7c1-4b40-b7b1-caf5480c2724",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee479f95-f67a-42ac-a865-bde9d3d74e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd4478b-63a4-4a12-af59-1af22fd163f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe509c2-eb2a-43c1-a3ee-b8a6fd89be82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b801bb03-b607-4f44-8d63-d01ec438ccf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9805ad27-d06b-41dd-ba76-71a54051ddbd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0df172-90a4-4934-bb21-7bc553134574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a72760-6b64-4ea4-8466-2e9eb0699258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422630ba-1bc4-4b3d-b577-56b71e99d290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bb18ed-3835-42ca-baf7-92b52a8e09ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fcdca8-e9aa-4b85-b8b8-1d193d28da4d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518be26b-3a46-49d6-8f3a-46c3cc2cd758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b865f85-ac88-4fba-8256-c74089498e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd93be9-a880-44d1-a2c0-b3f19d72f608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cdf6c7-ceae-4d91-a275-c330b1f1d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e736faf-0e65-4b08-9069-f77a680ad99d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ff87d6-10af-458f-966b-0017deee0c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db290369-3c97-4d76-b462-acbeca5c9e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e5f0ec-3322-48c5-ba8d-7e5c06588340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de82083a-8158-492e-9856-48dd0dda9f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c2c61d-95d0-4032-af54-0afe31664544",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b2fc19-b319-4f83-8e08-4d331949f61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb74be1-1306-49d4-a51d-960a3c5f74bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4041d95f-982f-44f7-b19e-ac0f4901706f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b488cf08-259b-400b-b6dc-858b0724649e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c70577-9110-4983-83de-1cb08317e45a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224f0c1f-4f86-4cf9-94dc-96f10d8a7cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99b9f51-69b1-4772-a4a6-99612d2e805e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ac6015-26f2-40b3-abd4-49fb7d17542f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96ab08e-43ae-437c-8020-7152586ca9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3cd335-95a5-42da-8367-2aae8a32d898",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10587157-7dcb-474b-b14b-35e1c2073046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e2806f-6326-4804-821c-3548aca58a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3767712c-8473-43b1-98e8-5e9f0822e3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402088e7-1744-42a0-bb4b-44bd07871ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32152dcb-c1ab-4158-8f37-bcc4c7180c5f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440034b-ac97-4459-8cc8-02c5193ea10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd63b71-bf0d-4542-8a71-d48ea91e7110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad90417-4c28-40ec-a14b-5387355b0999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1a258f-b57c-4640-9c97-6395603eda66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd44cfc1-62d8-49b2-b765-6f398ee8fe95",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5de5a9-f91f-4ff8-ad9c-0facbee4f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86d31df-db52-4e43-959d-f08f68d677b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d9795-e5b3-4386-8c2b-b19d365255b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d043b018-3de2-4d48-8af4-48b6d7f5c9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2e2f78-2b1f-499d-9fad-3c8a5c67b8bd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454552e8-1516-46cc-a968-fed3a939a447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d389c664-80d7-4fce-bf60-23c8cb17ff19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdcd13a-890f-4cc6-980b-efd8b0ecb33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e82ab3d-c3c8-4a43-8ee6-0084e454c2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac79911-6e58-47d0-8132-f1f94e90cd36",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c519fc0d-5687-446e-b407-d7ac5f5c0150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f419c4-1d23-41cc-9a1c-5271fdca587f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42bf191-52fc-4c0c-bf49-acb0f969252b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa86d948-84e2-46bc-8496-ad465d1e3e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e54aa77-0404-4a0e-8808-33619ce1b32e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dbd597-9703-4b89-9343-ef5d5bdf6eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30d9648-3dd9-4a78-b2d5-b5730ded0be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07694a16-a03d-42bc-a20d-b1894556ba78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5619a789-7ed9-41f6-babe-06d9e8851fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890fd1d4-039a-430f-9588-8e807be1a8db",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c2c05-2dcf-4971-bc5e-290f2f37bf7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860cb9dd-2b3c-43c3-9744-1a5757424211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a882fc03-a4d4-43f6-b939-7ded3eca2583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65420d02-6a2c-4814-9613-93a3994d8ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e56f05-68d6-41ab-8ec7-ec44763bce5a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843bf570-19be-46d0-8eba-0581871e481b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433314e9-2cdf-44f5-8f24-5c64cd6b7ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3313c7f-4864-4a92-a08e-3df7ae044c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642f447a-869d-4183-8985-ef50e6aaad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b533be41-63cc-4f6b-a4ae-a4cc900f0e03",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614a60b2-77a7-4b51-83f2-04a37904cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81776201-d662-4d2c-af23-9af016b714f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1062af-e458-4509-bdfd-1c49819b5283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e491b96-656b-484d-b88b-5127e5a9089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5923702-160f-450e-a6ac-1b32247a0241",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d127ef-e0d1-4e10-86c7-17681e1e711c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482857cc-3af0-48ab-9050-46b892f62ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1477cc46-50d8-47da-b069-d796816b8dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce5c394-688e-4805-b2e2-4e7f71a47855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5a1d82-ac50-4409-9692-a09fb9a66eba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3badb201-ec93-44a8-af0e-a8fc4d7368bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac8acdf-ae87-4c59-b57e-4dc16e4ef9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78873d4-b5e5-4ce3-b134-85a0c01c8aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b2d0a2-0414-4fab-8c37-b75e000a5843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036e4b29-29c8-4091-958c-7da3eea7a8ca",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1c811c-9a0f-4a64-822e-c4257c45f565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c54f1f-8b31-4326-9f6b-19921430dfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944a78a4-1f3c-4af1-a73e-f7fabe9ecd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37681f60-e646-4284-8878-73351e4e6a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e30023a-e74d-4ffc-923e-65c28892b435",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c999048-2465-40fd-b7bb-07a6056f2643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba7a07d-6048-4f20-bca8-9f279beaecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7a7906-e212-4af9-a724-dd34167634fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e1ab64-0782-4ead-b962-15b5e0ed5868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69bb5b6-bfdc-4892-a9aa-ed86d93e6b46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f6f44-5335-44f8-b1be-c06a48795ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbf8864-6cb8-42a5-96c4-1e9cf8414196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c321024-b97c-4ea0-b637-48a15ae6d9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be895c9b-2598-480e-82e8-3a4ee717a690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8df9f5-97ee-4e80-bb85-c08164377d0f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e46606-ad4e-46f3-afe2-3f720524bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c75bae-97f6-4c2f-a2a1-259045f2b9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a8d3c-911c-44e9-8a9c-99687bcd3589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffdb151-94f2-4398-abd1-d060c9f5f2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150e1867-55e5-4419-b087-3a7110951c55",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8456bfe6-fd88-4f18-a6ed-a56b3d527e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f069e383-c696-4354-816b-1161553603a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cf9b9f-23ad-49be-8191-ec6d1784df04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229389e8-26a3-45c9-a5da-5e3e494fe2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d52dfe-8047-4745-bba4-bd3c7ba8c6f5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950daa6-76fc-4bf7-b18a-4b8894e4b412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32bc8c70-b503-4d7a-961d-dfc6213ddf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62677708-a97f-4076-84f4-9bb3982727c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd90bdc-17b9-4f99-94fc-21ccb278dc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999d2c8b-83b5-4c55-ba7f-5704d1e02ca2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2dd141-574a-40d8-b8a2-adf711be404d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ccc920-ef27-4847-bc5b-0f88b7c18794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968abc59-cc1e-4b4f-a1c0-bc858a400cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddb740c-0640-4ed0-bd4a-e52a45734c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0333c0d0-f104-4eb8-bfc5-3c32780e5762",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7169dbe3-7260-46d5-bca2-d19d524f39a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdf43e7-6f27-4a02-ae2f-45ed8bac9e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f02674-7f7f-47ad-9689-24a09ffa4c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4706c375-1326-43ac-886a-6f9bc6d3383f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12dc087-1edf-47e7-8a48-8619f3b9a304",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e2402b-0821-4919-a072-aa301cf869e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525f95cb-4ea7-4250-8e1c-a8cb8d585c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba53be0-1dd5-49d5-855b-8ae78d0aa63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c84f263-e367-4d95-86a4-564f2fa592e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab68cea-5d73-4691-95e9-c26e4a3ea94f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cdc3e0-c4e5-41bd-9e4a-a61aecf9335e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41169128-458f-4e11-89e8-93da1073f073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a180e7-fe3c-470b-b8c4-67537cf2a029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c499d5-ce02-4732-8d10-d0ba58b6298a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d98867-f23e-4328-af86-091229059482",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed0f008-283a-443a-bc6c-5b7753dc5b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01627f9-cc56-45f1-a078-0aa1996b1312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa52aa9-4bc6-463e-98e8-7daf1978d983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e00e7c-fbd1-4e7d-a182-aad794475f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc971de4-c018-45f9-8f84-097e96cc57df",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f0e8e-b37d-456d-b197-13fb512c25a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be577ca-b412-4707-b701-be50e3c65c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137b8e33-da9f-44d7-8a28-d753aa03165b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70a948a-4f90-4e6a-8718-14bea854831a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb6873a-8c6f-4045-a45d-27a9693ec64e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1e63e3-53d6-4e33-8bf6-650dbfd3a18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3573edb-5179-4b1a-9bcd-3c622d5bb1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d985262-18c3-446f-92a6-1d9999f61126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99fc772-84ea-4c9d-bba9-5627f439f552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e8c228-4032-41a3-a15d-6086200043e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d92bbd-bf4a-429b-911e-cddf2241f282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5757714-e46e-4666-94f8-9a31781e5044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7635545-4866-44e6-aec2-bfc323991608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b385aeb-f5a5-4afb-8171-dc2a456df942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7128c86-6626-4210-9b19-53c20574043d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0bfad5-1312-4598-8333-0af789ad381c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a166ac-faf3-4b2b-ae42-ac22f1cf854f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8aa429-1175-4cc9-a144-07c9c105dd47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a62666-59e9-4561-82b4-6d8dbdc747aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa450f2a-40a6-4d81-b259-09d8db9097ae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581415fb-acb0-4a46-a578-6367f9628cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80e0599-4261-486c-a0ff-1904c36c4948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6e78f-b96d-4ea3-84d5-119ac9c8ab8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1d6cd2-7b17-4476-a7c1-99fb975e693b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7838a6b-cff3-4148-a14a-2a98e49a0f8c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2460da8c-2e15-4143-84d5-3abed082ca58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5952c020-c58e-4b8d-9572-c2b5af490b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4472978c-fac6-451b-92fb-00d186a91be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b951ae1-8803-4530-abcc-a0aacfa40fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d141bb2-bcb4-43e3-8596-8ac60b46874b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8053789-99c9-4087-b5c4-8362281a8064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d542c2-4766-4e56-a928-8d7764d70f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c65504-a269-491a-b0f7-16c94373100a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcefe49-0c85-4dc8-ae2a-aaf66fba0987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6539089f-fee5-406e-8246-2e22314db7e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a89450-aed8-44da-bb1d-334c3dfedd60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780ccc6c-644f-4fec-9ea0-9db5ebb75749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2311f1c5-dd02-47d8-9804-656051475b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f7eb40-e86c-4f3a-9a0f-05ea028882d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf153c48-6a2b-4d66-84eb-376e04da7cd7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93eb0de-e06f-4816-9c3c-6c837b83b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9adbd5-1b86-4438-8adf-e2d4ddabe713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb482b78-6ae5-4dd4-bcae-292e5df948de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6233f68-2d98-4c89-8a28-834f4f8720fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1382f21-c41d-4b37-bae5-13c56c480caa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79de91b-8efa-4dce-b69d-2ed173098877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0047e0df-f033-45e2-8a1e-94ea605f2631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28dd9d8-1f8c-455c-8a5a-f15ed2a2ceeb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158f5566-3ac7-48fb-8e78-810182646407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bc06cd-cc1b-46c5-918a-f00402df218e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a59a30e-d1e0-41af-bf70-8f3a765c8051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be817147-db94-494b-be5c-be1fa93fab5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9825e07-cd53-4f60-92a4-1cf3d77479aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194a2538-4b69-43b5-9493-a2f0d7579b9b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be5201dd-4239-4978-8ef7-0c88c3f63ccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12a709f2-a25e-47a4-85c2-d53ebd1dbde8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a20f553c-990d-4861-8f4d-97edf68b38e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "509b8c9e-8a2c-44df-990a-ca9c159b7f58"
                    }
                  }
                ]
              },
              {
                "id": "ddad3b10-bcae-4e2c-9160-dbe55f438c77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c03b2e42-d478-4535-9553-279c8860365f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e9d78-49cf-44ee-a3d3-39382175a5b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7bc8e3a6-f11a-4e8e-aab7-dc3cfd22cad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772f20b0-fc6e-4c12-b816-ea19a4b0c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79c5a6dc-f26b-4c6c-9083-49cc5f200c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55135a0-7f62-4698-9b70-0dea6941f00f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2976133-87ae-46d6-930d-4cc0e0f08f38",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ed70915d-142a-4f0e-9b9e-beeef0c4d77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b01b742-73da-4d52-8ebf-61e6b1a3df7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f965626-856d-48ad-b964-898c37d33bb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "499994aa-8c20-4a98-b577-943bb7c88db5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59dfc4be-22fe-430e-8885-d3d513814bc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8e63f0-3aa6-467a-b434-84a7de873f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5d32796-4a55-47b1-a9b3-e81e85524781"
                    }
                  }
                ]
              },
              {
                "id": "0c0b31ee-16eb-49a0-a917-f30a5bcbb157",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da2b7e24-fb08-417c-b0de-e6665cd85c4f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98d00ab-b436-45b1-9996-89541ab434b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97f6926b-a8bd-4759-b093-33f75280ff8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2b244d-09c4-4410-8df0-2d44eacb8739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6998a4-afea-4bc0-bfb7-8fb24e90cae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "18adb3b4-3244-4a4c-91f7-e2716142db66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26112099-8cfe-46e5-9f4f-a72964e7b12e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c425d90-4ff3-4c7d-831e-15dffc262e0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1bbd268e-3535-45fb-9a76-1da65b4a3e97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cba76ab-5239-424a-9c64-b67c1d27cf9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db7dcee8-4933-47e6-bd96-9817b1082696"
                    }
                  }
                ]
              },
              {
                "id": "749ad85b-800b-4ceb-895f-22ac89a3a341",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b34e87f4-1ef5-4285-99e5-f4ac3cc4e632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5ca4060-320a-492f-ab7d-1fd0766a26ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff1d938-277f-4aad-b71a-a31f3759ddb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3909b8b5-25db-4d4d-9619-acadec2f713d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56d437cd-261a-4e0f-9a57-12e527ea04a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5f6c573a-5cdb-4440-a10a-137a3682ce2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0452572d-e83d-4e2c-ace6-e0b78e93e7d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd07c689-e82b-4901-85e8-f7d987db0af2"
            }
          }
        ]
      },
      {
        "id": "14c22ac5-8a76-468b-b7f8-c92bac9aad75",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f39e046-1ccc-4645-a1d9-b6bda96b7b64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f0e544-1d2b-43c4-856d-38637b117259",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd99413a-c072-4d73-94b6-5d7ce5fb7f43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d2879e14-3f0c-427d-9e3f-0d0dc03b140c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a849fea-48ea-443f-b7ce-38241bb5e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9220013-78af-447a-953d-9056172de912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd96b18-289d-44fa-be8c-9958155e89d2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87908257-712e-42f8-91eb-99a7ef2effe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6abb5b8f-eb62-4f46-820f-ba617ae7bf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f80030a-d8a5-4600-94a9-3df48cbf3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4010f2ff-c72d-4bfd-961f-1822a5a9382c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb3399eb-6bc2-4aa1-beeb-853cde205617",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02e9a73-3800-4d35-b18d-d12d54eb0426"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92fe8821-273d-4230-a31c-ed7090f10890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe1591f5-0bdc-437a-8c9c-46cf1742bd09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59bb9d31-1b83-456c-8832-a0487724edfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ec23b67c-e6fd-40a2-b4b0-cb7210da601c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21ac0a99-1849-4154-bf9e-9b7a2bbce136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f95eefcc-4027-4a49-b6c5-4fe8de2d0457"
            }
          }
        ]
      },
      {
        "id": "c897ad3f-1b2e-49df-b47a-6424501d121c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f0263ab0-0a0b-4b5a-855c-ee4eb90ab3c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ebaba5c-8aec-4940-ac71-159eaab69aea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf68d977-da3f-43b5-8490-66fe86fb78a8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f7266d-7eaf-4f68-a03b-5c4aed23b24d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "661e4800-3ab4-47a8-9213-08f26f548e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99d027-0758-428f-a006-05bfc308a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f140271-a2e3-4c25-bd09-08da872eab76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7817d038-2249-4385-a89a-7439b9a7540b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80258138-8618-4684-855f-2104e66d9279",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ce9ed0-506d-414f-8d35-82a60f873a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49da3aa-3433-48b0-8324-2ca6a85dd39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "754d4a50-fd11-4290-99e4-18aa877ba55b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc81e93d-f60f-4f9b-9ac8-c7a970423efd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16f76611-90cf-4ad5-a5bf-325e2f96ae03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db9e072-10fb-47f5-b957-353f6a2393ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a6bb75-00fc-4bbb-a8d2-636241634d7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "763ca1c7-99e4-4a21-be65-263c008cafc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f68ca07-8cc2-47aa-9ba7-6baa4b3d6982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c06104c-549d-49a6-aed4-f5cb51883451",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5020cea-4df3-4693-bdfa-c9298739b006"
            }
          }
        ]
      },
      {
        "id": "bfacb509-5a4e-4846-be57-6e2f9407bf7b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d31da53a-2ba5-4a01-a377-c1a3829610cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ae0502e-daee-48fe-9091-ed481c2c25fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f87b9f6a-dad9-4398-bb7b-b314a1e5ad85",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2887cc9a-96aa-472f-9c7b-e899e186a9a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6ff9df5-a10a-41fd-b4c0-1bc86957d6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ee933c-90bc-4e30-b9da-64b8e2d9a124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7957cb6d-96cf-4b45-8ec9-c43641f9d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec0854e-f489-4551-9fa0-bef3f2cdcbd9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4914d2f9-bb05-4fc8-bd04-92a2724c5d1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4cccb688-fd2b-4db2-9429-8d181eb2de08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b41cdfe-1d3d-45f1-a84b-fd3aadc09758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78414163-cd47-4d99-918b-c6ce4d7e6db3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "567855d0-05d0-4b94-ab5c-a120c9f4f87b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbe03815-87b2-4ef0-a590-8114066e9d2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea788df-f1cb-4a4e-bacf-727787331b57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74fc9d83-f1d1-400e-8399-58b1f3ae94b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43b15af1-08d0-4567-a325-f3d1310451a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3468d75f-50aa-4829-8ee5-5c524f1323b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a54f01f5-f7a6-442d-ae77-c90712ee2d65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93081673-b565-4aac-a40b-1ff071ec9a63"
            }
          }
        ]
      },
      {
        "id": "fcd1472d-985b-4eb2-ab6c-570f4591e110",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50f84e6a-dc62-4bd7-8806-2a886fe56d2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0637939b-188d-453b-beee-926c86af118a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "da454629-d3d0-4bad-9125-2c977dc62ef2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d32e6651-3c34-4400-9d04-b417be0dac0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2948c15-63ef-417a-b009-27abc42c087e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.67692307692308,
      "responseMin": 3,
      "responseMax": 314,
      "responseSd": 38.69351275077105,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681605505921,
      "completed": 1681605519813
    },
    "executions": [
      {
        "id": "16969921-9de0-4e6b-b801-9be4f06b38e4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dda646f0-a871-4434-9a26-fc3e5cd86417",
          "httpRequestId": "519f7f2b-b686-43f3-89d7-6ccf7785c63a"
        },
        "item": {
          "id": "16969921-9de0-4e6b-b801-9be4f06b38e4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "610c4d09-791e-4633-9bf6-6abd82a81b94",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "ed22b40d-ef8b-481a-8190-606759963b7e",
        "cursor": {
          "ref": "c1a1b2f7-9f12-422f-ab35-e2ae44886a25",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f6f3cfec-c5cd-4dbc-8f39-ab6cbbd6a5dd"
        },
        "item": {
          "id": "ed22b40d-ef8b-481a-8190-606759963b7e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6b8f62c3-94b9-4118-8b2e-d2385f860306",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "bb5746d9-1976-47ef-959e-dd782d36e48a",
        "cursor": {
          "ref": "dd204cda-5f98-44e8-8ebe-84c9516ea579",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd503a5e-8071-4e00-8e6a-1cdc8792e924"
        },
        "item": {
          "id": "bb5746d9-1976-47ef-959e-dd782d36e48a",
          "name": "did_json"
        },
        "response": {
          "id": "50e12f5d-9f8c-4c66-a0b1-c6d9dbd118ed",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d387dd-330f-42fe-b0ec-bfae3b9a1084",
        "cursor": {
          "ref": "0765cb7b-fbf4-47dd-9102-5a53a3978380",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1efa26eb-72fb-4b73-92a1-1ad92fb129c8"
        },
        "item": {
          "id": "78d387dd-330f-42fe-b0ec-bfae3b9a1084",
          "name": "did:invalid"
        },
        "response": {
          "id": "82f8cec0-11b7-4b96-84df-601e9ab6db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d387dd-330f-42fe-b0ec-bfae3b9a1084",
        "cursor": {
          "ref": "0765cb7b-fbf4-47dd-9102-5a53a3978380",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1efa26eb-72fb-4b73-92a1-1ad92fb129c8"
        },
        "item": {
          "id": "78d387dd-330f-42fe-b0ec-bfae3b9a1084",
          "name": "did:invalid"
        },
        "response": {
          "id": "82f8cec0-11b7-4b96-84df-601e9ab6db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b2b95-2b96-4915-8b75-9e59493f7c4e",
        "cursor": {
          "ref": "cf17b426-a0cc-4bac-a2d3-ef3abbd61243",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "39faf213-38db-440e-9bb2-720057c7dda0"
        },
        "item": {
          "id": "b41b2b95-2b96-4915-8b75-9e59493f7c4e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d5072eef-1e60-4341-a301-92105aab72fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 107,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095dd377-0336-4ba9-95f9-9df8708f935a",
        "cursor": {
          "ref": "4bae1aee-319c-4dd4-bb56-a65f99052010",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9877ee81-636e-4984-8918-429b6084bbf9"
        },
        "item": {
          "id": "095dd377-0336-4ba9-95f9-9df8708f935a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "47a553da-f75e-44b1-bdb3-77865aa284d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa37c69-6cda-40f3-9bfe-eb5ff16c1ca3",
        "cursor": {
          "ref": "d80f729a-4281-421f-beba-e7413d4db0ea",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8be15f31-0c5c-4082-809b-8c673f9144ea"
        },
        "item": {
          "id": "3aa37c69-6cda-40f3-9bfe-eb5ff16c1ca3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6634e608-da33-4338-8eea-d7afefe695c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2dcf05-02c4-4c28-887c-18766a47dd6e",
        "cursor": {
          "ref": "7775ab20-5c95-4d0e-8263-628598fbaadb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "710f6129-fc6b-4757-9820-2e13eb811c55"
        },
        "item": {
          "id": "6e2dcf05-02c4-4c28-887c-18766a47dd6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "00aa5e24-e6cc-465d-a86b-b6afca8cf000",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2dcf05-02c4-4c28-887c-18766a47dd6e",
        "cursor": {
          "ref": "7775ab20-5c95-4d0e-8263-628598fbaadb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "710f6129-fc6b-4757-9820-2e13eb811c55"
        },
        "item": {
          "id": "6e2dcf05-02c4-4c28-887c-18766a47dd6e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "00aa5e24-e6cc-465d-a86b-b6afca8cf000",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa0f89d-e25f-417f-8985-f04632096fa6",
        "cursor": {
          "ref": "70756cab-672e-485b-aba1-14aba5b3e751",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "872df520-3072-4882-9977-4619269f619f"
        },
        "item": {
          "id": "1aa0f89d-e25f-417f-8985-f04632096fa6",
          "name": "identifiers"
        },
        "response": {
          "id": "7f51c865-aa68-458e-85c2-daff37f5377c",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a79ecd2-a5dd-4548-9619-bcb5ee77555a",
        "cursor": {
          "ref": "9a128cdd-583c-4353-840b-e2b333f3940d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cd3c93ee-38c4-4c89-8edd-156c6b699ff4"
        },
        "item": {
          "id": "8a79ecd2-a5dd-4548-9619-bcb5ee77555a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "431fd0c2-e991-4254-a62c-4a7788ab22f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a79ecd2-a5dd-4548-9619-bcb5ee77555a",
        "cursor": {
          "ref": "9a128cdd-583c-4353-840b-e2b333f3940d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cd3c93ee-38c4-4c89-8edd-156c6b699ff4"
        },
        "item": {
          "id": "8a79ecd2-a5dd-4548-9619-bcb5ee77555a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "431fd0c2-e991-4254-a62c-4a7788ab22f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c54b4b0-eee3-4da3-92a5-8fc9be1feee1",
        "cursor": {
          "ref": "1eac75fb-93aa-46fb-8ae2-a7d69c5f255e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "39911954-1ac2-4c18-b67d-47ad945448ee"
        },
        "item": {
          "id": "9c54b4b0-eee3-4da3-92a5-8fc9be1feee1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ce48b711-e7a1-404d-ba53-c2b47f691eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01118d50-fb19-47c5-a02f-c1458ae65563",
        "cursor": {
          "ref": "a75bfa4e-66b5-42e2-b034-fcd9fd26e459",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "418cbe64-043f-43b2-b964-bcdaffd7ba45"
        },
        "item": {
          "id": "01118d50-fb19-47c5-a02f-c1458ae65563",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a5e4f7e1-6625-41fa-b11c-0ca1a3eb28e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9541ff8-e5da-446d-960e-8fc51acaafec",
        "cursor": {
          "ref": "7558a1b5-ac74-4355-b6f1-6579d081eeca",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b3b22b8-4090-4d9d-bc4f-fdbc215d04bb"
        },
        "item": {
          "id": "a9541ff8-e5da-446d-960e-8fc51acaafec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "512edfca-7f2b-4122-9777-6db1138d3626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d6543a-8dc1-481e-9f1c-836686d9f66d",
        "cursor": {
          "ref": "95a91859-0208-4ba6-bc82-ec97ed8a4a39",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "347e4e99-6ff2-4bbb-9076-4b18a34313f2"
        },
        "item": {
          "id": "d6d6543a-8dc1-481e-9f1c-836686d9f66d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dc7208c5-a642-41f2-8793-7cf2c9b09a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcea2a7b-962a-49cb-801c-5827fe1ffbe5",
        "cursor": {
          "ref": "dd306a67-bc3c-44a8-b594-f13be313a6c2",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fb7fe3da-fcb6-4031-a934-693af302ff92"
        },
        "item": {
          "id": "bcea2a7b-962a-49cb-801c-5827fe1ffbe5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2408f4f9-aff0-4aa5-ae29-e309e320c180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4986f73a-378d-4abf-9c2e-904d3fef2819",
        "cursor": {
          "ref": "b10789f8-4960-48ed-9df9-932ac042a2c7",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2052aaea-1839-478c-b21f-d1533aaf6bdf"
        },
        "item": {
          "id": "4986f73a-378d-4abf-9c2e-904d3fef2819",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6933a7fe-2d47-4c7d-a802-3dc4b38113bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bec7a6-fa92-4ad0-b90c-a09270a34340",
        "cursor": {
          "ref": "bd568773-9bfe-4fea-8a66-bcc244a22f78",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ee24b6f-c25e-4c90-941c-0dfa2023c0e4"
        },
        "item": {
          "id": "30bec7a6-fa92-4ad0-b90c-a09270a34340",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53820826-f171-4f9b-b124-7cfcdc819a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd87d3cf-ebc5-434d-8d62-d9d8c9c94581",
        "cursor": {
          "ref": "9fd2ec0e-6f03-4f7c-80ac-a8cc242a430c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c938b208-b387-4c47-ba8b-167dea9ab06a"
        },
        "item": {
          "id": "cd87d3cf-ebc5-434d-8d62-d9d8c9c94581",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0f34ea5e-dcc4-49f8-a408-a41983cfdbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be518e78-cf19-415a-b451-16e4547eab8b",
        "cursor": {
          "ref": "866f2d6b-8999-4b1a-aba9-9161648c0ab5",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "10885851-90fe-470c-9e88-68c121d7ad52"
        },
        "item": {
          "id": "be518e78-cf19-415a-b451-16e4547eab8b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "704962ef-d428-4480-9b3a-93a247f5802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a0b688-703c-4d01-995e-b4b71ec4109d",
        "cursor": {
          "ref": "e09f352f-acb6-49b6-abd3-5176eff18d74",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e406f203-1362-459b-bceb-e053dd0ec22a"
        },
        "item": {
          "id": "52a0b688-703c-4d01-995e-b4b71ec4109d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "30ce0467-b7bb-43fe-94e2-52de85dcbe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03541311-4b60-4bf8-937c-66becccb37f7",
        "cursor": {
          "ref": "3f13562e-a431-4812-9c07-e747e08f5e15",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee8e7c2d-4d29-4887-8b67-1c996727c8cf"
        },
        "item": {
          "id": "03541311-4b60-4bf8-937c-66becccb37f7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a94a935d-0298-4d2e-a5dc-0aba93454d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090bb65-50d0-42f9-8748-96150d0ad453",
        "cursor": {
          "ref": "7ce5a8c7-050e-4283-8da3-2d53e36813e7",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "34a6de6e-ee80-4727-a1ee-2d0442fa25ff"
        },
        "item": {
          "id": "3090bb65-50d0-42f9-8748-96150d0ad453",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c21a1223-8662-4423-bf46-a41985e9cb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3807eb75-fd31-43a3-b3ac-9c8302b095bc",
        "cursor": {
          "ref": "1b437f14-88bb-43ae-b6d3-f08cdd64b1d0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ba6a4aa6-6ec2-485a-9f56-a8e5de9273eb"
        },
        "item": {
          "id": "3807eb75-fd31-43a3-b3ac-9c8302b095bc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fb14721-b69a-4cdd-b09f-9be1e2a93665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d77f9c-be6b-4069-8b81-6bf363bfeaf8",
        "cursor": {
          "ref": "1d1f6b93-8ce4-4bef-9f68-69d0388b7ca1",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d64a8edb-cf89-4109-b518-d70c54bd4e2e"
        },
        "item": {
          "id": "b9d77f9c-be6b-4069-8b81-6bf363bfeaf8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "303ee68e-8378-4fc8-9be3-3977a1fd25a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a98039-1ab2-4dd4-8f21-27345e26022b",
        "cursor": {
          "ref": "dfbd9d91-ae2d-4584-8fd6-9df66be753b9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6e5341c3-8f47-4832-81f0-2f73a62d349b"
        },
        "item": {
          "id": "21a98039-1ab2-4dd4-8f21-27345e26022b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4d0a3857-57a9-4468-897e-f23dfd0101cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8974019-b300-4d51-979e-59115ac7c2b6",
        "cursor": {
          "ref": "7186c940-cb21-4d68-b822-98242b973c44",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b576812f-d068-4367-aa6b-0d7678e3b367"
        },
        "item": {
          "id": "e8974019-b300-4d51-979e-59115ac7c2b6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b4883d27-18d8-4328-9912-c6071faaba3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e7c7a6-4d6a-4c8b-996a-d8e065c8eb3f",
        "cursor": {
          "ref": "a8934100-74df-4ccf-a08d-42664dac74d4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1617eeda-9cfc-4c5d-9da6-b3522e0eb87b"
        },
        "item": {
          "id": "d7e7c7a6-4d6a-4c8b-996a-d8e065c8eb3f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07b14282-9e2a-4065-b79a-9ca89ff91ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818f97f8-ce1c-478a-8cdd-ef8f6c37459a",
        "cursor": {
          "ref": "8d127371-9c11-4dfa-87c0-b4d027ab0506",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "310f8aae-c24a-4cf3-be41-07a171ba4bf1"
        },
        "item": {
          "id": "818f97f8-ce1c-478a-8cdd-ef8f6c37459a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2ea72e73-4366-46f3-9503-8dbf1ab78f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2dd7b4-02f5-4eb7-8043-4fdcd5f250d3",
        "cursor": {
          "ref": "a0900bd8-6f66-433c-bc0e-31a62cadb215",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "da45c8f1-555d-4efe-8d80-7b3dbf7fdb74"
        },
        "item": {
          "id": "af2dd7b4-02f5-4eb7-8043-4fdcd5f250d3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "735693ba-09a7-4f47-a24c-bf7698d8f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5086d-4b0c-481b-bfeb-7e38b751d4e3",
        "cursor": {
          "ref": "899c97c0-ea26-4bba-85ac-3fe02423ec5d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "04bee91f-4612-4ee7-95d6-d0910050a395"
        },
        "item": {
          "id": "cec5086d-4b0c-481b-bfeb-7e38b751d4e3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dd3b7a33-bbf5-4eb1-bdb7-11b98456abcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd44d81-19aa-4f33-b808-c479db3a535e",
        "cursor": {
          "ref": "30304e01-3ff6-4ad4-8916-6b416c7804ab",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82423ec0-42fb-42c2-ab64-195e37b42e33"
        },
        "item": {
          "id": "ffd44d81-19aa-4f33-b808-c479db3a535e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3ab3aa18-17a6-4a7f-9f6b-1fb10a43fe36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59012e1f-0b82-4523-843d-4ab2e50af964",
        "cursor": {
          "ref": "a7ccccdf-1156-418f-9f4f-696ca4b9b79a",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c6f0a116-0eb6-466f-a343-0a8d81763996"
        },
        "item": {
          "id": "59012e1f-0b82-4523-843d-4ab2e50af964",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88fc88bf-011d-45f6-96ae-7fdb96ef11a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b39c358-f4eb-4780-bfe3-a267b72970a6",
        "cursor": {
          "ref": "cf99aaea-2662-419c-b285-e32c5a9e1223",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "49cdcec5-ed27-4431-af84-e4e5a4afdf9d"
        },
        "item": {
          "id": "8b39c358-f4eb-4780-bfe3-a267b72970a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "850c8c56-b793-4899-ac1e-241cb97a2aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef35977-5f2f-409c-af29-4cb6be2893c1",
        "cursor": {
          "ref": "573e5e93-e0fe-441f-aa59-c68b33ff84aa",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "435735ec-ccc9-4a6d-adb2-16c7cc59420e"
        },
        "item": {
          "id": "1ef35977-5f2f-409c-af29-4cb6be2893c1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "403bbb7a-51fd-4bdf-8888-1c02f7456a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d47f1c-f4e2-4d35-98c7-08519809aed6",
        "cursor": {
          "ref": "07bf9a2d-5b6e-41a3-ab42-7fa8ae2a3003",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8e7f4de8-63ba-4643-924e-b253e0280981"
        },
        "item": {
          "id": "f2d47f1c-f4e2-4d35-98c7-08519809aed6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3887f7d5-4fbf-4202-af31-54a7460e508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a1ffe4-969f-4ebe-9656-3ccc21e3b5a0",
        "cursor": {
          "ref": "b1bae5a1-7229-4a4f-a994-e7c8f429df60",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "203fb349-8c73-4638-8177-41b8a2c57ee6"
        },
        "item": {
          "id": "32a1ffe4-969f-4ebe-9656-3ccc21e3b5a0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c55b2554-e64e-4907-a5fd-d0f4e95eb47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c405cac2-1e40-4645-a380-6afc8126887f",
        "cursor": {
          "ref": "80d7d83f-50c5-467f-a074-0427773cd8c3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1192b8c1-eba9-4144-924b-7826389a3ec5"
        },
        "item": {
          "id": "c405cac2-1e40-4645-a380-6afc8126887f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c438f29e-1820-4694-883c-6f4e80d8d19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcded93-aacb-4dfb-8e58-70d4aaa7868c",
        "cursor": {
          "ref": "d6fe3483-710b-476c-ab7a-4c2efea7e522",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eef91ec6-370d-434a-9d62-5b7f8370c0f4"
        },
        "item": {
          "id": "ddcded93-aacb-4dfb-8e58-70d4aaa7868c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5c1739da-31d2-4e5f-b894-c3cf64075a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4ab2a-2050-4e81-a258-746781c6b2b5",
        "cursor": {
          "ref": "02afc9b7-6031-4f31-8883-471fa495713a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0226f75c-a05c-4ad7-8f53-5710b835b922"
        },
        "item": {
          "id": "a3e4ab2a-2050-4e81-a258-746781c6b2b5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d7f0f262-919d-49d3-9d18-f83e146d32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d6a8e2-6e0a-436d-912a-74b1d04d6e37",
        "cursor": {
          "ref": "1194baa0-c381-484d-b07b-df75d44d08de",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42b950d5-125e-4097-94d4-2d8f8e1fc60d"
        },
        "item": {
          "id": "a6d6a8e2-6e0a-436d-912a-74b1d04d6e37",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "485bb6a3-a546-4a7e-a7e1-ae5adf5c29fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e4088-e3fb-457b-8407-4a986ad54540",
        "cursor": {
          "ref": "d196d3a3-3d5a-47d3-9883-3ffab5e92938",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "047afd3d-bcc3-45f8-8938-f5e8825b6ea9"
        },
        "item": {
          "id": "d89e4088-e3fb-457b-8407-4a986ad54540",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ae9ac259-694b-4096-a467-20ef0cf6ecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97264fc3-a91c-4b53-b931-3de4aecb5081",
        "cursor": {
          "ref": "ff21ad92-a332-4070-b372-1238604cef41",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "75865016-78ce-4f7e-b78d-195173c9758d"
        },
        "item": {
          "id": "97264fc3-a91c-4b53-b931-3de4aecb5081",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1d32d65d-2bd2-492b-8529-9868859273f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca0cec5-8733-4e0d-b49a-74f3b27122c5",
        "cursor": {
          "ref": "d4e3a585-ebaa-4c5f-abe8-20cc909125d1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "65946aaf-8c4e-4986-bc8d-28b77f8c55e1"
        },
        "item": {
          "id": "cca0cec5-8733-4e0d-b49a-74f3b27122c5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "af260505-ebfd-415b-b2a0-589a5c56bd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79cd654-6498-40e0-88f3-c5b945de8185",
        "cursor": {
          "ref": "2243e61b-47b0-4437-abd5-50bc0a4c5d90",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7bcd4c48-8e1c-424e-a628-bf99ea878174"
        },
        "item": {
          "id": "d79cd654-6498-40e0-88f3-c5b945de8185",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7af5d2de-6c93-4fb1-a83b-ef0ff18b46bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac13212-94cb-4864-a03b-121e126f12c7",
        "cursor": {
          "ref": "415e6cc2-058c-45df-85f5-5d13417de740",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cca68578-6814-417d-bf8e-b8d13891e17e"
        },
        "item": {
          "id": "4ac13212-94cb-4864-a03b-121e126f12c7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ebe92d05-898d-40b6-9aa6-4c69cd31dcd1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc1f4c1-78b5-4386-b369-ab401caa150d",
        "cursor": {
          "ref": "1f33a586-8fd0-4784-9e02-a20f40d15ea0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "41438532-c20f-4644-859b-a001fbe4d436"
        },
        "item": {
          "id": "4dc1f4c1-78b5-4386-b369-ab401caa150d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7249a4aa-cc9c-4bdd-92a1-72dc767e3c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b904c-eca6-46be-8a71-0d72812559a8",
        "cursor": {
          "ref": "d696b8e3-c84a-4b98-a850-2dc23bea63b6",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43923766-b55f-4497-8d0a-d539df3c36ff"
        },
        "item": {
          "id": "d03b904c-eca6-46be-8a71-0d72812559a8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a6a39b90-2cc8-4a00-810f-63c59c6bb23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04554a78-24aa-4046-b769-15d231425073",
        "cursor": {
          "ref": "631308a8-7162-47ce-9f64-b53809997e3b",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "db01710c-8a15-4628-a2c9-c020375af6e4"
        },
        "item": {
          "id": "04554a78-24aa-4046-b769-15d231425073",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "69a43a60-57af-4230-a75e-8d0605ec22d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa83fcdc-1871-4c96-beb9-3417473b3573",
        "cursor": {
          "ref": "4b40af28-49cb-46c2-b152-080df3685210",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26bc2fd9-05d5-4c28-927e-187dc9281c53"
        },
        "item": {
          "id": "aa83fcdc-1871-4c96-beb9-3417473b3573",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f7ae4ec2-89df-42cd-ae7e-17f6ff3aa394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52c5d47-72fb-4a1a-a275-d2623b8f1986",
        "cursor": {
          "ref": "1e93602f-e1d6-4e4f-adaa-2314387e0c98",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c2f76260-a8e4-43ff-a261-448a6e6d4d84"
        },
        "item": {
          "id": "b52c5d47-72fb-4a1a-a275-d2623b8f1986",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9bb2cb39-9e91-4f67-99af-c57cdef8fd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f136774-4fbc-4b7f-b2e4-a34ba39a7436",
        "cursor": {
          "ref": "ccb71cd4-d134-49d1-8e1f-ce7a7f662421",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8e7cd3d0-74cb-4576-8d5f-d381c309426f"
        },
        "item": {
          "id": "9f136774-4fbc-4b7f-b2e4-a34ba39a7436",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "62e0e036-f31e-4253-965a-ad53b9147986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16f5db3-2274-4da3-8c0c-9befe958878d",
        "cursor": {
          "ref": "677f4a87-e2a6-4143-b901-6203476f9941",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bba618e8-34a5-43c5-baba-811acadfece1"
        },
        "item": {
          "id": "d16f5db3-2274-4da3-8c0c-9befe958878d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "37e16f36-8520-4990-8342-3c53dceff423",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e33c8-c944-4f16-8138-2aa45b990936",
        "cursor": {
          "ref": "f74c63ea-cd1b-407c-9e7b-4a01f7bb22e3",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8634c238-7903-41da-8efb-337ab1114b3b"
        },
        "item": {
          "id": "8a6e33c8-c944-4f16-8138-2aa45b990936",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e3f4384f-05ee-4470-9f56-1fa00e2d879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c9574-3316-41ce-b40b-fc659964367f",
        "cursor": {
          "ref": "b24f23ef-7364-4da6-b5fe-8b5dab32a565",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9d5d6fa-6138-4b91-a9f6-ebcac4deea89"
        },
        "item": {
          "id": "439c9574-3316-41ce-b40b-fc659964367f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "49d7cc54-04f3-4a34-bfbd-aa655ad62095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448b8fac-0ca4-40e4-9d5c-f33078e89980",
        "cursor": {
          "ref": "315bd015-9498-446a-896a-84e1eb9479ce",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "66c55edc-3fc7-43f4-88c0-a7bb5c5b4964"
        },
        "item": {
          "id": "448b8fac-0ca4-40e4-9d5c-f33078e89980",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6db75cc5-6de8-453c-bfcf-6a0377313426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aadab46-17a7-430c-996f-1979de4e7f00",
        "cursor": {
          "ref": "900e0167-499f-4be3-8933-e220766a1456",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ff1df8d-ee78-4ddf-8ee0-9363f6e926e6"
        },
        "item": {
          "id": "6aadab46-17a7-430c-996f-1979de4e7f00",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "42fca88d-731c-4658-8ad6-c3d94e7562a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ae085-635a-4ae6-ba24-8574941875f6",
        "cursor": {
          "ref": "062cf829-9ede-4a78-a1ee-aa8d3debb82c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d35cde22-282c-45c2-9358-c678cca117b3"
        },
        "item": {
          "id": "cb6ae085-635a-4ae6-ba24-8574941875f6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4c71b5bc-4f94-4481-8e92-d5e55ddc7b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d19e85-57dd-461f-b144-2ed01403960a",
        "cursor": {
          "ref": "8c8071ee-721d-4b46-a463-a9f1dc5de994",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6b4f43e9-0e0c-46f9-8015-5401f790eb08"
        },
        "item": {
          "id": "d4d19e85-57dd-461f-b144-2ed01403960a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc2dd9c5-bd79-4583-b9dc-454ed717fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25b2d3d-c10e-4e77-bf79-d9125458619a",
        "cursor": {
          "ref": "432d8bcf-b21b-4377-bf9b-1bf3d559795b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6a94dcb1-4a7f-4069-9d8f-21c5677cde1c"
        },
        "item": {
          "id": "f25b2d3d-c10e-4e77-bf79-d9125458619a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e0cea0d0-4e91-499d-96ee-d0367ec4caab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd39630-e168-4718-a200-5409e4ceb8dd",
        "cursor": {
          "ref": "d4d2d703-09e1-4739-907c-7390ff9e5e13",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7915586c-c98e-480d-b16e-1d3aefed87ec"
        },
        "item": {
          "id": "4bd39630-e168-4718-a200-5409e4ceb8dd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "489d6344-542f-425d-8fb3-03ae183e3c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0072984-0d89-4e02-a7b8-2405971c95df",
        "cursor": {
          "ref": "da11e1f2-57ff-44f3-8963-e2ec4ddbb0e2",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "33b395a1-5984-40e6-9f3b-ed2d02adb14d"
        },
        "item": {
          "id": "a0072984-0d89-4e02-a7b8-2405971c95df",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "96f40ccb-f9e0-4904-939d-3dcedfc45d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2d523-a81c-4b90-a966-97415799a47f",
        "cursor": {
          "ref": "6f7dec84-3cd9-4051-9c2a-ffce5c6adc29",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8b9b7ffc-58d9-437b-8cf8-9d96c9164827"
        },
        "item": {
          "id": "7ed2d523-a81c-4b90-a966-97415799a47f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4a733480-6948-4352-9d89-7e0e3af20cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c40571f-2cf8-4e8c-a6bc-549bdebe5022",
        "cursor": {
          "ref": "27881314-dcb6-466e-a09d-2af7bf7d4f19",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8699cafa-01f1-4521-9a19-c78f67b6f03d"
        },
        "item": {
          "id": "5c40571f-2cf8-4e8c-a6bc-549bdebe5022",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "762b7f25-937e-4103-b5ef-fea57aed01a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e2a8b-62b7-42de-9e06-188a5526d0eb",
        "cursor": {
          "ref": "f45766f1-08fd-453c-bd9f-6c44b16cd78a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aa3279d8-6bc1-4881-9ec8-9a943a9aee28"
        },
        "item": {
          "id": "418e2a8b-62b7-42de-9e06-188a5526d0eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d9bbc93d-4cde-4e42-88b0-de627c633cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150b04d3-b594-4c2f-8501-5b9a1c17cdb5",
        "cursor": {
          "ref": "d3772fff-b610-4145-bc2b-cbbad2684d61",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3640a5b1-8643-4b84-9b1b-4842dc562b7a"
        },
        "item": {
          "id": "150b04d3-b594-4c2f-8501-5b9a1c17cdb5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7abdf351-f7f7-4343-a550-1077e30e76d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3814952-a37d-4a84-8013-07600d094d06",
        "cursor": {
          "ref": "e32eb52d-9af9-4927-9454-de8f8cc23a88",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7fdf59a8-a99b-4c95-ab76-f151f8952297"
        },
        "item": {
          "id": "e3814952-a37d-4a84-8013-07600d094d06",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2ffcebbe-e132-4927-b44e-a692456e6779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56c9422-e1d0-4b0b-8076-24313285d49f",
        "cursor": {
          "ref": "5577db92-2cf6-4309-9e0c-86bbce92ecdf",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aed87ee1-8555-4e3c-b5c5-650bf29c5f88"
        },
        "item": {
          "id": "f56c9422-e1d0-4b0b-8076-24313285d49f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a49d9c55-cfd8-4026-93b3-8e63bf54dabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e61879-f667-4a79-aadb-a01753836f29",
        "cursor": {
          "ref": "59e556a8-5b0f-4a6f-981c-700d94004665",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf0646a0-93cb-45cb-84ce-45c39fe92b5f"
        },
        "item": {
          "id": "89e61879-f667-4a79-aadb-a01753836f29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6d34e371-4289-4e95-a7ac-2710c7873116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b743c42f-0196-4095-91cd-f05c15b6fd28",
        "cursor": {
          "ref": "b2e4b1f8-0b90-4085-b600-90c04843812f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "aeaeae8a-6259-4fa6-bca8-ab24e7268f43"
        },
        "item": {
          "id": "b743c42f-0196-4095-91cd-f05c15b6fd28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "55d6d72b-4901-4cc6-9f7a-931606daca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e9f014-2073-4bd9-9fff-456833ab5fa0",
        "cursor": {
          "ref": "41715cd3-b4ae-4790-b09e-a72aa9fe7f6f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d2428707-0dcb-47d9-a0f2-b17a77933787"
        },
        "item": {
          "id": "92e9f014-2073-4bd9-9fff-456833ab5fa0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1179f056-45c1-4546-b9cf-6120fb1c7b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60964016-0df8-4efd-91ee-a4ba479d6786",
        "cursor": {
          "ref": "ebbc4a8e-4d99-4300-a2a8-c62d0953d861",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "41c25422-4cfb-4a93-a6cd-573e9e698aac"
        },
        "item": {
          "id": "60964016-0df8-4efd-91ee-a4ba479d6786",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d12d0c7b-e5b9-4a40-9c86-86f9d50ca7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a74f15-d0b7-4d55-bd2c-47a4d72a2c6b",
        "cursor": {
          "ref": "f983836b-aadf-43ec-980f-23f4dd9c3b3e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b0b1d59c-5c14-48b0-b16b-a0131af60935"
        },
        "item": {
          "id": "94a74f15-d0b7-4d55-bd2c-47a4d72a2c6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3bfdca13-292c-41b1-a15c-c4a406d6f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c6160-8789-4b7a-b2ea-9d3625428212",
        "cursor": {
          "ref": "f8290544-4355-4ad2-abec-370f1207464b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e6d80256-152b-4ea9-95b1-18bf94835189"
        },
        "item": {
          "id": "253c6160-8789-4b7a-b2ea-9d3625428212",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2b5e7083-0f78-4658-b086-816d517d5b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8153ff4-42e8-4106-bdf6-9a4fd4948b1a",
        "cursor": {
          "ref": "b617f0d1-992f-436c-8263-bd455c8cdbdf",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a1af3fd7-5e90-4c6c-94b4-9d8cc045b39a"
        },
        "item": {
          "id": "c8153ff4-42e8-4106-bdf6-9a4fd4948b1a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0d9354d7-22f3-4369-9f5f-4950b99b9beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8950a2b-1151-4edc-9733-fe425f3520cc",
        "cursor": {
          "ref": "5c346d61-0f95-490a-ab2e-50efc0093b98",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "302cdf59-ae6f-45b3-82eb-0a9d0083653a"
        },
        "item": {
          "id": "b8950a2b-1151-4edc-9733-fe425f3520cc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4139f45c-1a78-42ff-b454-412b425a9d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08489ad8-1d88-458f-94c8-dd698fd8f6ec",
        "cursor": {
          "ref": "fe8f6e47-686c-4e6b-84d1-59f1c03eb9f4",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "51c70ebc-7666-41fe-90df-e306fae50958"
        },
        "item": {
          "id": "08489ad8-1d88-458f-94c8-dd698fd8f6ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a8e44c6c-ee0f-4e40-b5bb-0d45d6901433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5cb38b-e7fa-4844-82da-5338ebade68d",
        "cursor": {
          "ref": "25489f85-3a90-4479-a110-fcc0ebb4e7a3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cbf9cc8b-eb1c-4563-9c0a-6a0532fff883"
        },
        "item": {
          "id": "4b5cb38b-e7fa-4844-82da-5338ebade68d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a1b47f7-df39-4d3e-9875-382d54b63daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47db9f63-0725-4f1c-9356-d50e8789dd41",
        "cursor": {
          "ref": "1f30fddd-2fa0-42ff-84ea-457125e2ea76",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ae589a81-0594-4937-b4f6-5c632024f3a5"
        },
        "item": {
          "id": "47db9f63-0725-4f1c-9356-d50e8789dd41",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2fcd6cf-040e-4bac-a593-6dc8402480bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1243da0-9e80-456a-91cd-305549ec1f5e",
        "cursor": {
          "ref": "f2645fda-9e4a-4362-bb0c-1833bae2f04e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2c619707-e173-49ce-9f15-d238219d204f"
        },
        "item": {
          "id": "c1243da0-9e80-456a-91cd-305549ec1f5e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4111e9df-0ad2-4eb3-9587-5e0c7e05db00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24066b1-ffa8-4082-9fad-aec0d18a417b",
        "cursor": {
          "ref": "d793c3e4-236a-4f97-b7e4-08edf95a9861",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc69c362-2f83-423f-b960-b077adfb699b"
        },
        "item": {
          "id": "e24066b1-ffa8-4082-9fad-aec0d18a417b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "35ddded2-0ecb-46ac-bed0-0460179248b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae509f36-a39c-490e-8e07-82b613a27a06",
        "cursor": {
          "ref": "4b7de705-994a-4918-91fd-b2f56ff203c6",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6058d954-872a-4b33-a737-f3cbb8405bf2"
        },
        "item": {
          "id": "ae509f36-a39c-490e-8e07-82b613a27a06",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "15a9a3d5-ca68-4102-896f-d500c750a217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef84ee1-27d4-4cc4-9631-030e147e1648",
        "cursor": {
          "ref": "19de8418-a92b-434e-8e66-d2748c396659",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "812577a5-4ea2-4372-b9e0-7dec34369093"
        },
        "item": {
          "id": "bef84ee1-27d4-4cc4-9631-030e147e1648",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bb0df701-56f2-4e7b-a61f-6a018d33d9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccd06e0-4d01-4945-8be4-d0fada838d90",
        "cursor": {
          "ref": "9b6fc7c8-cc86-44de-82c2-f7063aa7c16a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16fab73a-b784-4578-8776-49d5e6e1c373"
        },
        "item": {
          "id": "6ccd06e0-4d01-4945-8be4-d0fada838d90",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5af131f6-ddd9-4582-ba78-08584239dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87047318-6612-48d4-b1b7-10bbf562f2a0",
        "cursor": {
          "ref": "263eccca-b8d3-4297-96cd-2ae388efa946",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6ab5e554-7ecf-4911-a22f-3efd8ce0e681"
        },
        "item": {
          "id": "87047318-6612-48d4-b1b7-10bbf562f2a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7d5d4799-9c6b-4fcb-bcbb-9f80aa25f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11409ea4-d655-4852-9da4-2efc56030ead",
        "cursor": {
          "ref": "cda93104-ea40-476c-9bec-a36b4595dcdf",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad196223-aa71-441b-a7ea-1eb00dbe6354"
        },
        "item": {
          "id": "11409ea4-d655-4852-9da4-2efc56030ead",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "536712ac-8fdf-40d9-985f-84e5530aa202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc03595-d49a-41ef-82c0-e37cd557c350",
        "cursor": {
          "ref": "af6b280a-ab52-4d6a-9a84-07d14ab3b7fa",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a8f80cc3-553d-45eb-b423-bbd586aede8e"
        },
        "item": {
          "id": "5fc03595-d49a-41ef-82c0-e37cd557c350",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c422076-b13e-4187-8668-f8d2af88794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c619f519-b8a2-4af1-a0dd-87b81b91fd98",
        "cursor": {
          "ref": "873a69f9-5214-49ae-835e-5509f7f698d8",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "01be3f9b-d383-45e4-9de8-aa2e602d00ff"
        },
        "item": {
          "id": "c619f519-b8a2-4af1-a0dd-87b81b91fd98",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7d126717-b889-4b14-bf83-4b1020ddc4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0399f-120a-4b49-84f2-2a9505b6ecd4",
        "cursor": {
          "ref": "4d36d2a7-a60d-4390-8249-663619d82280",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fddd7514-9934-40f4-9223-1ec0dda9e8b8"
        },
        "item": {
          "id": "0cb0399f-120a-4b49-84f2-2a9505b6ecd4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ea8236a7-d6b4-4e7a-9661-f597fb94305b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ad1d9-ad69-4577-9918-f54a07dae206",
        "cursor": {
          "ref": "9d2106a4-de46-4eb4-9b20-33c50a727843",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86dd0416-c4d6-4772-be95-6744453cd664"
        },
        "item": {
          "id": "1a0ad1d9-ad69-4577-9918-f54a07dae206",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5020409c-783f-4dc3-92df-02e7eefbc2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2872b9a8-4fa0-4512-a405-03be0162c302",
        "cursor": {
          "ref": "7c8e976a-5caa-437e-bfd3-d264b5bd47c7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a4b86298-6d45-4565-b1cb-e2901a20770e"
        },
        "item": {
          "id": "2872b9a8-4fa0-4512-a405-03be0162c302",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6cd38077-3036-4b3c-9994-9401289c9341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e6eec-967c-4d68-b522-504863245a16",
        "cursor": {
          "ref": "0c699f4d-c09b-4233-86af-92d5ba66a07a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0e37a10e-db6e-4c9e-8403-66a3f812ed55"
        },
        "item": {
          "id": "598e6eec-967c-4d68-b522-504863245a16",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18944c20-1e7a-4732-92e7-8bc13f8a2ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e53609b-b2ac-473c-8181-0172df5d7023",
        "cursor": {
          "ref": "2790ab49-3578-4182-a580-16280ada57c9",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "93e03c80-b9a2-4b54-ba4d-74f79d3a159b"
        },
        "item": {
          "id": "0e53609b-b2ac-473c-8181-0172df5d7023",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8b49c499-11c5-433f-8a8c-8c945b78d4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe306a8-4795-4f92-9468-a24b8264cf4b",
        "cursor": {
          "ref": "f2ee530e-dc9a-4067-992b-907332dfb680",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a1176118-b1c0-4ef9-a399-c71c9a3ce96c"
        },
        "item": {
          "id": "dfe306a8-4795-4f92-9468-a24b8264cf4b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3156ade9-4db1-4192-9daf-17b15b7b4bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c081d-92c8-403b-baec-7eed1ded10af",
        "cursor": {
          "ref": "d8e744ab-bfbc-4ce2-b684-29b27b74a80e",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "79b64b9d-eff4-4fd6-a841-7b101733210b"
        },
        "item": {
          "id": "585c081d-92c8-403b-baec-7eed1ded10af",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9cf021b6-3c05-4e61-b014-d7012ebd76e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dca3d0-c550-4e26-835d-9f84b42153ea",
        "cursor": {
          "ref": "f3987665-245b-4af4-926a-e7bf29cdf405",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "85cf2274-f484-4694-8a77-d6f62ddeec00"
        },
        "item": {
          "id": "04dca3d0-c550-4e26-835d-9f84b42153ea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ee076f25-f8a7-4ac1-9459-f4805f9c4760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21fbd83-b0e6-4a20-810a-0fbcc38c0fd2",
        "cursor": {
          "ref": "9c6d0fc9-6679-4847-a193-66110e6b0517",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1cced40-638c-482d-9501-102513ddcb21"
        },
        "item": {
          "id": "d21fbd83-b0e6-4a20-810a-0fbcc38c0fd2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "03720cd8-0e20-4a6d-93a4-80aea2456a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2534de17-3b75-4a72-aa4c-a59d9f166f88",
        "cursor": {
          "ref": "24af9087-cc11-4826-990d-2f088c88b577",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8441a865-1d80-48c6-9c06-3fede9a70be4"
        },
        "item": {
          "id": "2534de17-3b75-4a72-aa4c-a59d9f166f88",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7b4bc1fc-c740-43fc-a9d6-c29fbd9f4c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b7b46-b483-40a6-80d5-fa91c72f28f0",
        "cursor": {
          "ref": "68969c92-c815-4c78-a648-117c7f5491b1",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b3f0cfad-97fa-454c-ad1c-461ac5433fd4"
        },
        "item": {
          "id": "671b7b46-b483-40a6-80d5-fa91c72f28f0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d2d47bb5-df03-47f4-b7d3-a2d20f4004d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd55ee-1294-43a7-9b80-21888323245d",
        "cursor": {
          "ref": "8c5c1332-d5d5-4861-bb8d-41b1908a047e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4d18762d-c84b-4ca7-8ad5-5bf557909fa2"
        },
        "item": {
          "id": "56dd55ee-1294-43a7-9b80-21888323245d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a6c43808-bb7a-450c-b08d-efa0ad2c2fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dad9f3-89ba-431b-a874-ea6b40edc6cc",
        "cursor": {
          "ref": "9d648363-1a8c-4c67-92a0-d69638825830",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2dd6fc3b-0fd0-4649-a9a0-05d988777f24"
        },
        "item": {
          "id": "27dad9f3-89ba-431b-a874-ea6b40edc6cc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7bbd57b4-4076-4a80-a9f6-aa90cf5db72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d59b4a1-aa11-4aac-96a3-36ce3fe0c682",
        "cursor": {
          "ref": "f93a0968-6c02-464e-804e-a05da7f7c193",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e490cd25-e506-45b6-a75b-6cf74a8d2473"
        },
        "item": {
          "id": "1d59b4a1-aa11-4aac-96a3-36ce3fe0c682",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d3a39b3a-f425-4c6e-9466-daa49d898a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d948d14-7888-4994-8c39-04568cd3be62",
        "cursor": {
          "ref": "66ccc236-0cc5-4f64-a0fc-ff3c18e0d170",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d8840d2e-1884-4acd-8606-c4e35da18309"
        },
        "item": {
          "id": "6d948d14-7888-4994-8c39-04568cd3be62",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f51f3d92-00f7-41dd-bb5d-e69335b7885a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093f2ef-2d86-4115-aed1-69c7db72e8b2",
        "cursor": {
          "ref": "b2ed5f9c-3745-4209-8998-8c803f9e78b4",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f424ed91-65f8-41b2-b00e-fe3bf5de17a8"
        },
        "item": {
          "id": "2093f2ef-2d86-4115-aed1-69c7db72e8b2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f55886ec-a161-48b6-8464-611226b90b1f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08580c6-a915-4e4e-ad5b-f93f1f581029",
        "cursor": {
          "ref": "b530aa5f-d927-4bb1-b159-89df24bc2dfa",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2546dccd-7610-4282-803a-14c42bb1d70d"
        },
        "item": {
          "id": "d08580c6-a915-4e4e-ad5b-f93f1f581029",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6f170a1-0c37-450b-baef-8230ac12cb3a",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a82ad9-14bf-4f94-acee-81a81328ca59",
        "cursor": {
          "ref": "100fe134-29ce-4d26-a0bf-b83e1c0c9f7f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7730e933-0700-44f4-8e0b-89889c4b6495"
        },
        "item": {
          "id": "f3a82ad9-14bf-4f94-acee-81a81328ca59",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9831160a-96ed-42d3-88cd-4034b6c01a7e",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d853b-833c-4cf3-b9c2-2d8a9b21de1c",
        "cursor": {
          "ref": "0c15c658-653d-42af-82fc-b596fe7aa91a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a56f0764-8c1c-4e4d-b834-ff45dab4f82f"
        },
        "item": {
          "id": "f94d853b-833c-4cf3-b9c2-2d8a9b21de1c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1482285a-068c-4590-8770-1455a214feb0",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54a690d-262b-472b-ae24-bb192f54f6b8",
        "cursor": {
          "ref": "7d46d234-993e-4717-8c23-fab59231fdc6",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a25b4f4-c9ef-40ee-9eeb-9813cab247b1"
        },
        "item": {
          "id": "c54a690d-262b-472b-ae24-bb192f54f6b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9c9f059e-0d7b-4fcc-8e15-35a6292f0f3d",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a823d7ac-92b7-4db1-a4e4-c33a4f7e6ac4",
        "cursor": {
          "ref": "b01911cf-84d2-4cdc-9487-3d2ff0e29f65",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3bb06db-722f-4ee0-8618-e831ce5028b2"
        },
        "item": {
          "id": "a823d7ac-92b7-4db1-a4e4-c33a4f7e6ac4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cfdecef8-b3e3-42be-9193-0ea66ebd6b37",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b823404-3cb4-4957-bc6e-759a806051d1",
        "cursor": {
          "ref": "ae6351af-18b2-4384-aee1-b9d2c1012486",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0490a35a-3240-49b4-ad01-c5bf024d7c12"
        },
        "item": {
          "id": "7b823404-3cb4-4957-bc6e-759a806051d1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "db8bfae3-96ec-4186-bd79-23a2ae525ef0",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c467109-bc7d-4435-8cfb-daf5e57b7f66",
        "cursor": {
          "ref": "2b75145a-a552-465e-9c42-b8388b8f6d3c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0550d330-041f-48a4-b05e-4e1489b260d0"
        },
        "item": {
          "id": "5c467109-bc7d-4435-8cfb-daf5e57b7f66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f421affa-091b-42b8-9067-fbbf63048293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c467109-bc7d-4435-8cfb-daf5e57b7f66",
        "cursor": {
          "ref": "2b75145a-a552-465e-9c42-b8388b8f6d3c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0550d330-041f-48a4-b05e-4e1489b260d0"
        },
        "item": {
          "id": "5c467109-bc7d-4435-8cfb-daf5e57b7f66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f421affa-091b-42b8-9067-fbbf63048293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7c54e3-4ebd-43a7-b53d-18a00941677d",
        "cursor": {
          "ref": "203c9ffb-4f8c-46b3-baf3-f01d95e1a30a",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2b1b6307-b358-400c-8f16-5d0b1861ead0"
        },
        "item": {
          "id": "2a7c54e3-4ebd-43a7-b53d-18a00941677d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c0160153-f196-4e50-a45f-6bb7937730d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05b253d-7e44-4e3a-843d-0ca7914ad235",
        "cursor": {
          "ref": "3266cc57-d172-4ef7-849b-bf2e604ee838",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8319a8f3-1f18-46f0-ab6a-e5f8ec9c501e"
        },
        "item": {
          "id": "e05b253d-7e44-4e3a-843d-0ca7914ad235",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5935420-f6bf-43f5-a016-79836cd1c56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ac5d6-8250-415f-a60e-481c6aa6a2cd",
        "cursor": {
          "ref": "31aeb3a4-1559-4d01-9acb-202926dc9d3b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "43c30de5-c10e-403e-ad0e-9898dbe46618"
        },
        "item": {
          "id": "e61ac5d6-8250-415f-a60e-481c6aa6a2cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b7d462a-d47e-441d-ad3a-e50ac5e75b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f869906-3c7e-44d0-b0a3-cce76b4ef49c",
        "cursor": {
          "ref": "c758cc0c-7cd0-420e-a602-58de4d1d0971",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cce7f97c-f3b0-40b8-94f2-0bcd30c931c6"
        },
        "item": {
          "id": "7f869906-3c7e-44d0-b0a3-cce76b4ef49c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04aff88b-24ea-4c86-8e8e-e2ae80b72649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7f5143-5326-4968-a13e-9f8e5f335ad1",
        "cursor": {
          "ref": "363fab47-c768-4161-84fe-fcecbbf3884e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2bec08c8-7b77-42de-8d57-027100cbe2d7"
        },
        "item": {
          "id": "4f7f5143-5326-4968-a13e-9f8e5f335ad1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "25c1cb2a-629a-43d0-b88c-8539d932af91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d1234a-cd55-49e5-b25d-e739fe7fb86f",
        "cursor": {
          "ref": "c725eafe-40ef-4cba-bc46-b9dca5581415",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b4fe839f-2e7f-4d05-903d-e9d32fbce081"
        },
        "item": {
          "id": "f6d1234a-cd55-49e5-b25d-e739fe7fb86f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43bf85e1-d5d1-42ad-bed1-edfe4604a182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56daad2f-8c34-4f48-b45b-6ed1130025c3",
        "cursor": {
          "ref": "27fea081-e193-4954-b09a-26f8b74cdc1e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8c0d6817-d2c9-4e49-a1e4-de6202e79722"
        },
        "item": {
          "id": "56daad2f-8c34-4f48-b45b-6ed1130025c3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8386ca23-3dce-4cb6-8380-6ce952d1f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8af9ec-35f2-4bd0-818d-c864510372f1",
        "cursor": {
          "ref": "88a2884e-f31c-4a5c-be86-46a82caa91d3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d608f93-7f1f-4db7-a1ae-7de6f751b69a"
        },
        "item": {
          "id": "4f8af9ec-35f2-4bd0-818d-c864510372f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "07d7ead9-84c8-4f04-b049-305002564cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9a960-19c8-497a-b640-a283ed687302",
        "cursor": {
          "ref": "56c17f3c-fa27-4628-b653-fbc3ee484d63",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a6047058-2061-40d4-9681-3a555247b168"
        },
        "item": {
          "id": "2fc9a960-19c8-497a-b640-a283ed687302",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "94286ff6-aa09-45e3-ba3b-52718786c5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4192d601-4d0f-4fa0-8e97-198ea4213153",
        "cursor": {
          "ref": "d217bac1-ca1c-49db-b797-02b96d065b67",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6a727575-a9a1-49c0-88c4-1fa7b0d5290b"
        },
        "item": {
          "id": "4192d601-4d0f-4fa0-8e97-198ea4213153",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97e6b024-f141-455d-84c2-5a89683cbb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e8af7c-cf1b-4476-aa18-617edfa81135",
        "cursor": {
          "ref": "19bdf171-9349-4fc2-9056-fbc318c9df39",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "efcc9963-758e-48ea-902b-725591a3c8c0"
        },
        "item": {
          "id": "a6e8af7c-cf1b-4476-aa18-617edfa81135",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d0dc497b-7e35-491c-926d-2117831d1085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ac1e5-4af8-44ad-a07f-cb1f8d2346dd",
        "cursor": {
          "ref": "7535a07c-5228-4fe4-b499-64fbad8b2514",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "63ea528f-27da-4f49-abc6-27fb2e953033"
        },
        "item": {
          "id": "b87ac1e5-4af8-44ad-a07f-cb1f8d2346dd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b0bfad6-4645-4398-989c-805c99efaebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18681adf-3555-4b27-a475-8d71909d18af",
        "cursor": {
          "ref": "7eb0eeb0-d4f1-47e0-8ccc-67b4b95bf5c8",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a93da305-4c8d-41ab-96f3-96b77c63b174"
        },
        "item": {
          "id": "18681adf-3555-4b27-a475-8d71909d18af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1cee1e3f-c9e2-40d1-9299-a9794c091483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac52670-b318-4541-83d1-c8953789f487",
        "cursor": {
          "ref": "4583f7f1-6491-42a6-aee9-dc8b1da2e495",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7be2c847-2822-4fc9-a8a4-a907fb7ad779"
        },
        "item": {
          "id": "5ac52670-b318-4541-83d1-c8953789f487",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b9ea96f3-6f56-4148-89ca-285100b6b4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6eda7d-c0f6-4569-adf5-ace8385a7bcd",
        "cursor": {
          "ref": "cd046dc3-f86c-4585-b873-226001c5ee1d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b6e764e3-c13a-4628-9ab2-9385c4387bcb"
        },
        "item": {
          "id": "be6eda7d-c0f6-4569-adf5-ace8385a7bcd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9a85179c-100a-487c-8210-6f1b624b14e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58a8ab3-63f5-4768-a5b7-4cf2709b6adb",
        "cursor": {
          "ref": "db82c04c-6942-4efc-834e-066e0119dd69",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "48de0a9c-45e7-49ad-8033-5558c7b8dbaf"
        },
        "item": {
          "id": "d58a8ab3-63f5-4768-a5b7-4cf2709b6adb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cebd6a10-c155-4b3d-869d-b953a8aa8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20cccd1-1a64-4522-abc2-9572d7890058",
        "cursor": {
          "ref": "2040d5bf-0e41-4a4d-9452-4f9f1b80d96a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2626d72a-3219-47f2-803b-a1b87c6057a0"
        },
        "item": {
          "id": "b20cccd1-1a64-4522-abc2-9572d7890058",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d9875ca-9fa6-46ee-bc9d-179c0bc2d875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026429d6-bd6f-4c8f-bfae-dd7add48bc0d",
        "cursor": {
          "ref": "152108d4-2476-4437-bd56-12c3d6989a03",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0bca1245-5fd0-4b54-85c6-627d9699d680"
        },
        "item": {
          "id": "026429d6-bd6f-4c8f-bfae-dd7add48bc0d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f612de37-7df3-44c3-a2d2-af210709b52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27095d6b-282b-4ea9-9881-09893311aa80",
        "cursor": {
          "ref": "9184429a-589b-48e3-8dbc-85197191f49c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "626646c4-57da-432e-903b-8a30538a5db7"
        },
        "item": {
          "id": "27095d6b-282b-4ea9-9881-09893311aa80",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "72f7350d-e62e-4106-ba61-f5b5c2f4864f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55004e99-819f-4c5a-8a0b-0d2fe4d01cc3",
        "cursor": {
          "ref": "1595bb73-e99c-4fd5-b682-b6153f86d127",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3869d3d4-58ec-483a-8972-90c087b46ecf"
        },
        "item": {
          "id": "55004e99-819f-4c5a-8a0b-0d2fe4d01cc3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d4d57891-dcbc-42f0-8519-c4118429bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24b1544-241f-4e7e-8f01-5216db1a8975",
        "cursor": {
          "ref": "6a8314af-82e3-4fb5-aba1-79471940a0ef",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d8aee9f4-06fe-4957-bfc5-4513307fa45c"
        },
        "item": {
          "id": "e24b1544-241f-4e7e-8f01-5216db1a8975",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ea59c9d-8ca7-43dc-8a49-267b5f91becd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f06173d-93ae-4aa6-bf5f-4513996128e1",
        "cursor": {
          "ref": "a1a0c7a0-9398-4206-a608-962d84179eeb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2b000d7b-0f7a-4488-820a-3cc172aa2413"
        },
        "item": {
          "id": "7f06173d-93ae-4aa6-bf5f-4513996128e1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "529d0296-4dbd-4554-b652-4c46b3b2f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6096adbc-214c-4f82-bd2f-eaa27c67e3a2",
        "cursor": {
          "ref": "36496006-98f5-464f-863d-6d7009408389",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "de547843-f2fb-4810-9aea-ca1250049be9"
        },
        "item": {
          "id": "6096adbc-214c-4f82-bd2f-eaa27c67e3a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "246ebfac-c230-402c-b48a-41a957c2963b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c77a639-cb55-4b95-8474-a0fe082fb366",
        "cursor": {
          "ref": "b897fb75-81c0-43d4-926b-fffe21727f3d",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91fe9fc2-dfcb-475f-9f36-24f6a7efb411"
        },
        "item": {
          "id": "0c77a639-cb55-4b95-8474-a0fe082fb366",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d2aa0ec3-a840-421c-a8d3-b2b1f2a2b22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2f67f-dba2-48b6-ba62-798da9dafa64",
        "cursor": {
          "ref": "788ff9ad-fb1b-4524-adef-e1131787ebb2",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "856470bf-b4a1-435a-a083-8a13026166d1"
        },
        "item": {
          "id": "60b2f67f-dba2-48b6-ba62-798da9dafa64",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2bd4b659-90d9-4650-8359-010754fa03f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcefb078-b3f9-44e9-98c7-47e25450e655",
        "cursor": {
          "ref": "57b3a463-d5aa-4a38-b61c-8c9397a6bb13",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dc11d915-be28-4875-9297-a7834686982c"
        },
        "item": {
          "id": "dcefb078-b3f9-44e9-98c7-47e25450e655",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0339940-d97c-4584-b892-5e37a7eb7a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddec60b-4c37-441c-b212-a7bb213a2a40",
        "cursor": {
          "ref": "f53e82f1-dc00-4395-86ae-8524212266d9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "de2952aa-c06d-4861-98ab-91c68020d00a"
        },
        "item": {
          "id": "1ddec60b-4c37-441c-b212-a7bb213a2a40",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a9dbf4c5-8c8a-4575-9569-d9d3cd132d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e6ee2-ef7f-43e4-8c3b-1febbf531e91",
        "cursor": {
          "ref": "9989614d-50c2-416b-af62-1ebda12360d2",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7a3c7007-c2c5-48fb-a7e5-6b4bc1402dac"
        },
        "item": {
          "id": "9d7e6ee2-ef7f-43e4-8c3b-1febbf531e91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b213518d-3258-43b9-b611-19905776b38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8621d1-dd69-4b30-b349-de3000614828",
        "cursor": {
          "ref": "d0a30efa-6b2c-4d10-beae-61d2e7bb9de1",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "885e335c-93bc-4f55-890a-5b6dbba07b88"
        },
        "item": {
          "id": "cf8621d1-dd69-4b30-b349-de3000614828",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "edee6198-6256-4fcf-89ee-7919efda47da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905fa38c-5e00-4f8d-b799-ace2538bbd31",
        "cursor": {
          "ref": "b982d6d1-2bbd-431b-a741-e04ab6ae0d8c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "50bca2b4-2e2b-4c94-83c8-982378458f32"
        },
        "item": {
          "id": "905fa38c-5e00-4f8d-b799-ace2538bbd31",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4ad2cab-ea07-44cc-a4ae-c6da74de79c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aed357b-0c8c-4084-99df-24e70c0f5087",
        "cursor": {
          "ref": "efb0de71-2daa-4b61-aa62-d24fae26b6ea",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eb0f8405-270d-4c96-9323-32a3a9036309"
        },
        "item": {
          "id": "7aed357b-0c8c-4084-99df-24e70c0f5087",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c1d5cb52-f6e9-40cf-a776-72f35f765537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fae767-da5a-4642-9f97-0143e40d5d5d",
        "cursor": {
          "ref": "67e850be-d7a0-47ac-aae9-93d47ca654d6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ffb3f97-2c2a-4e94-9aa3-11108e8c6912"
        },
        "item": {
          "id": "39fae767-da5a-4642-9f97-0143e40d5d5d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "325aa89c-3204-40ae-ac55-be583e1ca70c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23438b3-1bc3-4210-8529-bd773eba068a",
        "cursor": {
          "ref": "3f67bdce-c025-4472-ac45-740e759bdeeb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "91588303-d012-497c-995d-7ad66085a5c8"
        },
        "item": {
          "id": "f23438b3-1bc3-4210-8529-bd773eba068a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3c18b06a-7681-4993-a71f-ebd196057f69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd738d0-627e-42e4-b817-d8c27dbdb95f",
        "cursor": {
          "ref": "be6c5a94-d8a4-479f-a596-d60257d46900",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "09dba0e3-e973-403f-80a4-1c382a29ab0a"
        },
        "item": {
          "id": "1fd738d0-627e-42e4-b817-d8c27dbdb95f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ec4e5718-3cb9-4f98-b648-40ab67277348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd738d0-627e-42e4-b817-d8c27dbdb95f",
        "cursor": {
          "ref": "be6c5a94-d8a4-479f-a596-d60257d46900",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "09dba0e3-e973-403f-80a4-1c382a29ab0a"
        },
        "item": {
          "id": "1fd738d0-627e-42e4-b817-d8c27dbdb95f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ec4e5718-3cb9-4f98-b648-40ab67277348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71daf5a-a18c-4806-9f6e-04d09989b83d",
        "cursor": {
          "ref": "298486e0-df9a-4118-8b68-4d5d2e9c25b3",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "65743a11-215c-4094-9d5f-a3e89ab46635"
        },
        "item": {
          "id": "e71daf5a-a18c-4806-9f6e-04d09989b83d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a581de2b-c0a0-4e4b-bacb-ec64bc32da6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74351904-8364-441a-8d28-df4e425c3340",
        "cursor": {
          "ref": "014745aa-4640-421f-a2fd-c5a03a282632",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "615dec10-801f-43b4-b0de-a900c0f694e0"
        },
        "item": {
          "id": "74351904-8364-441a-8d28-df4e425c3340",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5f317d33-a9c8-4d5b-8675-1cced5410173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269e25c5-2568-45ab-b801-4032186ceac6",
        "cursor": {
          "ref": "123defe6-73f1-4bc9-a666-081239ec8c0f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "23a1f32c-ecca-4430-b106-53f28fa6a190"
        },
        "item": {
          "id": "269e25c5-2568-45ab-b801-4032186ceac6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dcc92f76-f45a-4cdd-9d86-3d434792e674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66708b64-4f95-41ca-ba46-90f7119280cd",
        "cursor": {
          "ref": "841180ee-79d2-4179-a927-bb4048cc45d9",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b82be3f4-3b3b-41ec-b34a-5736e8378a99"
        },
        "item": {
          "id": "66708b64-4f95-41ca-ba46-90f7119280cd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "15e7d85b-3eae-43ba-ac5c-ea0b6cf14b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b40f67c-9a73-4931-a795-1308e9ac5fd1",
        "cursor": {
          "ref": "a2b40383-742d-4e2c-b172-5e962174fc97",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6116538e-1aa2-42a2-8788-fa251cdf4ee3"
        },
        "item": {
          "id": "8b40f67c-9a73-4931-a795-1308e9ac5fd1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0e58ec51-7c8d-4c93-95ab-6b1d9af82021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792c693d-745e-45bc-8357-5487ad18aab3",
        "cursor": {
          "ref": "d36c0e67-0214-45f7-8a31-eb5619cf486b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9cf1a72-3366-4cdd-8d75-25aa1b2b9133"
        },
        "item": {
          "id": "792c693d-745e-45bc-8357-5487ad18aab3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "88d41657-17fb-4f86-8690-ee2e5528083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc539c33-bedc-4590-8428-f0ec6f8ac785",
        "cursor": {
          "ref": "1f45bfc1-1541-4553-a161-373676f1fba7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8831f279-9db7-4261-b772-ae899e6cc1cd"
        },
        "item": {
          "id": "fc539c33-bedc-4590-8428-f0ec6f8ac785",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "87c48dcb-69dc-429c-a12e-4707b8678952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c436c419-b19b-40d1-8df2-f20a596a23b1",
        "cursor": {
          "ref": "9131544b-eb26-49b1-a023-3fd3c3aeb4e0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fb381658-70cc-4dd5-98ec-533e6ca29d4b"
        },
        "item": {
          "id": "c436c419-b19b-40d1-8df2-f20a596a23b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dd2f055f-0f95-4942-9302-1fd0f9bce911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebff9ea-b48e-4063-a6ca-70e5a02f90d9",
        "cursor": {
          "ref": "cfc06036-6d5d-463b-aab1-9f53292d59ff",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c9654ee-a346-4a7b-b89f-d9842f73d814"
        },
        "item": {
          "id": "7ebff9ea-b48e-4063-a6ca-70e5a02f90d9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bb1d65f9-7f53-4988-85a2-b549e503e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3d3bc-38b6-4ea2-a8bb-e4786ebef6ab",
        "cursor": {
          "ref": "a5bf220a-886b-4aed-8690-596e693f195a",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c7a4e02e-5ffe-42cc-bb7d-51529bc4919b"
        },
        "item": {
          "id": "adf3d3bc-38b6-4ea2-a8bb-e4786ebef6ab",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "335c5492-f165-414c-8903-45d91eca7ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c00c154-5f81-4514-9973-b294bdc39149",
        "cursor": {
          "ref": "3d9e1d20-291b-42e8-9579-adff54ed7d56",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2e0a492e-b4c2-4b21-ba3c-161a90a3ee11"
        },
        "item": {
          "id": "7c00c154-5f81-4514-9973-b294bdc39149",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a3fd8810-aeb3-483a-bdd9-70ccfc0c23a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69661086-23a8-409c-80d2-2176570d6858",
        "cursor": {
          "ref": "18aa04fc-0ae7-42ad-adbe-b1c41b65de73",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f197eb02-6f84-4c36-a1cc-73bf3ee050dd"
        },
        "item": {
          "id": "69661086-23a8-409c-80d2-2176570d6858",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eddb5413-6219-4ede-99a7-d937464c48c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcd2bcd-85af-4064-b952-b6c79c3dfd8a",
        "cursor": {
          "ref": "94653308-86df-43ae-9e42-d5b25db86db2",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2db11671-61a8-4750-924f-83a3851a31d0"
        },
        "item": {
          "id": "0bcd2bcd-85af-4064-b952-b6c79c3dfd8a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "322b7194-9c3e-4716-b523-7fe40f3ae404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229068a1-8234-437e-8de9-f326fb1163de",
        "cursor": {
          "ref": "2a34ef3a-7f75-4a3e-91cd-e083d6fbd99a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "651d0921-cd63-4676-9fd5-2c52f5696cc1"
        },
        "item": {
          "id": "229068a1-8234-437e-8de9-f326fb1163de",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b116432f-817a-4101-b041-8104fd4e12f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e30d89-7877-4d5e-91ec-437763b97f75",
        "cursor": {
          "ref": "64a86476-83a5-4a84-8626-6a25c6ddfad2",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e58fbf6c-47ac-40e5-9772-4ac0393f12cb"
        },
        "item": {
          "id": "47e30d89-7877-4d5e-91ec-437763b97f75",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0d1f85c0-540e-4be5-bf22-e0cda978efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0281c46-951a-4c6c-b9db-d0ebf113f0fb",
        "cursor": {
          "ref": "65b108bb-482e-402a-8fb1-02ab2698c86f",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "589cbe3c-f989-4a89-8601-a7bedacfa48b"
        },
        "item": {
          "id": "c0281c46-951a-4c6c-b9db-d0ebf113f0fb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "495c1c7a-adb8-448f-a4f9-4dea37875280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067ccfb9-cd7a-4862-af8a-6091f4c29b9b",
        "cursor": {
          "ref": "a5f411ed-6e10-4dcb-9d99-25da4fcdb925",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "96d7b39e-f3fc-4bc5-a5ac-f98288dedb62"
        },
        "item": {
          "id": "067ccfb9-cd7a-4862-af8a-6091f4c29b9b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8e67c7b-30fd-485e-bd3a-bbc96436b3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5ddc42-7193-4cc1-9eee-72def8d70bb1",
        "cursor": {
          "ref": "9c7b8ec7-e1c3-4f65-83e5-5e57bf153e80",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3820ca4c-cc30-48dd-a7b8-621b6e4ec07a"
        },
        "item": {
          "id": "9c5ddc42-7193-4cc1-9eee-72def8d70bb1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d786dab5-4f32-430b-8a2c-4385701a91ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a66cddc-093e-46e0-b283-820dff88813d",
        "cursor": {
          "ref": "9182161b-01f2-4142-a193-f5266088038a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6b400cab-954c-4117-ae27-8a8da7d6cdee"
        },
        "item": {
          "id": "3a66cddc-093e-46e0-b283-820dff88813d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c699a2e1-6136-45aa-9a53-0caec07285bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038d0e2a-13ea-4e27-ab79-bfe1f3cf445d",
        "cursor": {
          "ref": "9c005733-bae1-4ce2-bc1f-481ded85d340",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8eb2df97-ede6-4831-bf3b-b1aaabd12269"
        },
        "item": {
          "id": "038d0e2a-13ea-4e27-ab79-bfe1f3cf445d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "38ec7d2d-30e2-4ebc-b654-771ede03749e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e582bfa1-8096-4dfe-9509-2ab21a6489b5",
        "cursor": {
          "ref": "3ab15195-b49b-4cf5-9fed-3aadf8d3ef71",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cc469280-1fb9-43c3-b81f-bc77d29406c2"
        },
        "item": {
          "id": "e582bfa1-8096-4dfe-9509-2ab21a6489b5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dac36531-4fba-4075-a05e-46b490f0d245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b18684-027b-4d1e-9607-7692cc477223",
        "cursor": {
          "ref": "43133db5-35ca-4861-8f7b-3e43398c9aab",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9b859329-91d7-4db6-9b05-041be7eace6b"
        },
        "item": {
          "id": "06b18684-027b-4d1e-9607-7692cc477223",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8ac42887-774c-44cc-8da7-c8e35bc8c635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044b16cb-1754-455d-8a14-8d5160eecca0",
        "cursor": {
          "ref": "449c418f-bbbb-40eb-942c-ce170626a4ec",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "02cc4c9a-a15d-48c7-b9b6-15f7403fa835"
        },
        "item": {
          "id": "044b16cb-1754-455d-8a14-8d5160eecca0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d944db02-4939-4468-9953-997bb2d52de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878467e4-ad9b-45a6-982a-ebe9772c109b",
        "cursor": {
          "ref": "b96ef51d-dda3-491b-aeaf-c0c79414484e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "849cafe2-0515-49d6-873e-67b3905926fa"
        },
        "item": {
          "id": "878467e4-ad9b-45a6-982a-ebe9772c109b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "418fa0f0-8102-430b-a30a-078ecdca571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff70cca0-8f29-4851-b08b-700cb977cadc",
        "cursor": {
          "ref": "51e08097-2635-4139-b0bd-d4c6e7d7e207",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bca13d22-599b-4ed7-9c0e-5fb546798091"
        },
        "item": {
          "id": "ff70cca0-8f29-4851-b08b-700cb977cadc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27ee38ea-7179-4aa4-8e7e-40502d458032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0649970-5cb6-4d13-9b42-64765630cadd",
        "cursor": {
          "ref": "87d6c60c-e5b0-40dd-8afb-e44b54d6835a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c88acba-83ad-4b00-a485-e48bb00874c5"
        },
        "item": {
          "id": "d0649970-5cb6-4d13-9b42-64765630cadd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "14dfe7d1-9d9d-46eb-a367-e7a5bdf33536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b484e0ac-2de8-4050-81d1-d9f161c0930f",
        "cursor": {
          "ref": "d641dc3f-f5c3-46f2-b5eb-0e4ff2a7dad9",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e97be9ec-0718-4893-abcc-d69b37e408b7"
        },
        "item": {
          "id": "b484e0ac-2de8-4050-81d1-d9f161c0930f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c2311177-ef68-4a69-bd2e-313f5d8be7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a1aaa8-790d-4586-8c46-9fe0226d7ba5",
        "cursor": {
          "ref": "22909641-309e-4584-a70d-1530dbf80481",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "30df0502-bb2f-4457-9453-39405eacfc37"
        },
        "item": {
          "id": "e1a1aaa8-790d-4586-8c46-9fe0226d7ba5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cdf5bd7a-edaa-46b3-9f26-167cfa887fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb63da-9972-46d9-8798-3fe45fc1811d",
        "cursor": {
          "ref": "a97e3170-d9f2-473e-bcdb-05ad7ed0eb20",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ecbb4666-1026-4b8b-8871-d08a517be2d7"
        },
        "item": {
          "id": "24cb63da-9972-46d9-8798-3fe45fc1811d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c11daa1f-7046-4071-a465-8e63094fda63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7395b83-184d-40c4-b909-6919fd37ee13",
        "cursor": {
          "ref": "1f49162b-3a95-4c6c-bd5f-afb791d7f059",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7f04aa44-1aac-4a25-b5b8-6876853e03eb"
        },
        "item": {
          "id": "d7395b83-184d-40c4-b909-6919fd37ee13",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ddf1bab2-6330-492f-a827-1f3beddef498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d1c1c-45c6-4d15-8ed1-3f9adc41d59e",
        "cursor": {
          "ref": "7e4ef6be-f54c-4ae8-ac49-f6dc96c563b6",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f3ac3d4c-48b1-4953-8612-a347a07baaa4"
        },
        "item": {
          "id": "141d1c1c-45c6-4d15-8ed1-3f9adc41d59e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ee2bd24-f688-406c-8506-287e4a18f088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b6169-903d-4779-ae94-b42362c2642b",
        "cursor": {
          "ref": "61ca689e-10de-4e70-a652-05f5f79dce34",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "55d294cb-6ebc-49b8-9ae2-11d67a3f7c04"
        },
        "item": {
          "id": "531b6169-903d-4779-ae94-b42362c2642b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "028ccff2-2485-4277-831a-985eabd8bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ab9f2-6eaa-4354-992a-fd997766163d",
        "cursor": {
          "ref": "6dbd1137-581b-4d93-b292-3ccab2b1c1c6",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cfe11461-ef37-457a-aeb6-a93bac900668"
        },
        "item": {
          "id": "377ab9f2-6eaa-4354-992a-fd997766163d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "29f60ca2-df01-4ef1-8f74-e12cb850e80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12518b0b-9a7b-4b3a-adfb-5d77631c7696",
        "cursor": {
          "ref": "60f7128c-292c-4ce5-b0c8-b749b574d169",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0e95f797-38c2-40bf-a4c8-6f000b664d55"
        },
        "item": {
          "id": "12518b0b-9a7b-4b3a-adfb-5d77631c7696",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2cbe5e97-b0bf-4bdb-9986-3f35a3b4b599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f766737a-cd4c-4946-89fa-593e2f28da5a",
        "cursor": {
          "ref": "72140375-7815-4844-baf2-0a89aa1ff1fd",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "343701e0-fd34-40f5-8ac6-9cf2dfa2dfbc"
        },
        "item": {
          "id": "f766737a-cd4c-4946-89fa-593e2f28da5a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "49ab472c-8f83-47fa-bb63-255a71ef3025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a9898e-8c89-477a-9b4b-d421406a962a",
        "cursor": {
          "ref": "2b3d0e07-85ec-48eb-9244-489346255fe5",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "279aa334-013f-45bf-bb18-0f11eea44598"
        },
        "item": {
          "id": "52a9898e-8c89-477a-9b4b-d421406a962a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "21ee5fff-6c1a-4be0-b280-f150204571de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56565c6d-554c-4a8f-be6c-6d94efd10c61",
        "cursor": {
          "ref": "f54a9faa-5f61-452a-af42-1099bf96f0e7",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aef7c264-af9e-4999-8037-ffb074f5dc38"
        },
        "item": {
          "id": "56565c6d-554c-4a8f-be6c-6d94efd10c61",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "88714454-aab0-4a51-a371-681de6c2185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeccbe8-4a0a-4353-b657-882bc809a809",
        "cursor": {
          "ref": "ae27d51f-75bc-414a-8ff1-0f017a552dea",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3dce354e-421e-4253-9b46-6b0d57a2d29a"
        },
        "item": {
          "id": "aeeccbe8-4a0a-4353-b657-882bc809a809",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d1f5190-3487-4e27-bcd4-f39ef6dc82fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640e9a99-d038-415b-9fe7-58f8f587ff5e",
        "cursor": {
          "ref": "87c0e78b-f407-45f6-9ad6-efe7d41ad1cc",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "02fc1802-d0f0-4dc0-bcbc-42e151205a16"
        },
        "item": {
          "id": "640e9a99-d038-415b-9fe7-58f8f587ff5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46a7779e-c844-46e5-9671-66087ab81f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846abb3a-a39d-405f-866e-ac3e37947bff",
        "cursor": {
          "ref": "4a3c6b11-e2a7-4bff-9236-16d6940f5af7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "278003e2-443f-4f8b-838c-6ba436901aaa"
        },
        "item": {
          "id": "846abb3a-a39d-405f-866e-ac3e37947bff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f7fe162-dce3-4562-9e93-843095b44f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0369dd3-3ae8-48b9-9a07-fc17eabc00bb",
        "cursor": {
          "ref": "25d13c31-60a0-4ef8-995b-da4b1cf80704",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9ddc2843-2a61-4379-bde5-2b545acd29b3"
        },
        "item": {
          "id": "e0369dd3-3ae8-48b9-9a07-fc17eabc00bb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c16c25a2-a515-41ea-ad84-85e7fde8ae0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684a84b3-5086-4103-8250-6a787aa0dadf",
        "cursor": {
          "ref": "b4b39b47-939d-4145-8032-413f30d51c3c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de0f92a5-4724-4404-9da6-5b68796635b2"
        },
        "item": {
          "id": "684a84b3-5086-4103-8250-6a787aa0dadf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0192096b-3fae-4cef-bf33-b1485e01b6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e7368-3660-42fd-b048-8f91af644342",
        "cursor": {
          "ref": "c2281c08-1715-4f4b-a85e-acf2101fbfe9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "27f6fab7-986a-43ca-ab09-21c2e1534fca"
        },
        "item": {
          "id": "821e7368-3660-42fd-b048-8f91af644342",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ecfb3a89-45a9-45f1-b9f8-4f2da9e8dfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3528e042-f233-4cee-9049-fd5030c397a3",
        "cursor": {
          "ref": "41c17cdd-64d7-4759-8ca8-15fe74375626",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1fe65d41-2b99-46a8-be5b-26d202956092"
        },
        "item": {
          "id": "3528e042-f233-4cee-9049-fd5030c397a3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f6a57ffd-8dc5-4bca-89f3-0f5871c4f5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860b3148-17f5-4c11-8b99-e93b258d071b",
        "cursor": {
          "ref": "021f7694-96fa-4f0e-8ff1-ebf7a986d2c1",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "83d1b225-547c-4401-bb38-f311110bbcb9"
        },
        "item": {
          "id": "860b3148-17f5-4c11-8b99-e93b258d071b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ac8d8c31-200e-40f7-8698-cbb91ec6c18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3e0076-f203-482d-84d9-887c060403c9",
        "cursor": {
          "ref": "0c218ac7-245b-459a-843b-8e6e91322548",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c8046d4c-c36e-4f96-a390-229be74d2120"
        },
        "item": {
          "id": "fc3e0076-f203-482d-84d9-887c060403c9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "79ad0284-d7b1-4b5a-b905-8a65fdca4fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd476fd0-796a-442c-8d2c-c377018fd1e3",
        "cursor": {
          "ref": "2220ced8-a994-4086-b8be-65fca4e0092d",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e6c797cb-8e7b-40c3-b29a-23ba07b54473"
        },
        "item": {
          "id": "bd476fd0-796a-442c-8d2c-c377018fd1e3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46a666b8-893b-433f-8131-4629ce6e9e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e833980-dd0a-4def-8867-eb3ccb83e420",
        "cursor": {
          "ref": "01b5dae5-89c9-44a2-8fdd-7db3427489f0",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "993f3b00-a630-4523-baff-75ca8f335b58"
        },
        "item": {
          "id": "7e833980-dd0a-4def-8867-eb3ccb83e420",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53e29959-563c-48b0-96f4-212c026153c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c669b-e447-4fd4-8848-e0c0e110afb4",
        "cursor": {
          "ref": "2c87d00b-744b-49e5-8e97-4d486267dc85",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0a3254c1-7fdc-4be1-9c70-17601a51d057"
        },
        "item": {
          "id": "e46c669b-e447-4fd4-8848-e0c0e110afb4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "595d63b3-bf50-4c9e-a1aa-17d43ed9affd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f22b59-c933-4967-9fc9-eff4a54a455f",
        "cursor": {
          "ref": "ea88aa8c-069c-4b96-9ebc-259bdefcf771",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "adf91a83-cb2b-46e8-b92c-ce192c3e0dca"
        },
        "item": {
          "id": "66f22b59-c933-4967-9fc9-eff4a54a455f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d47b7c4-b29c-409e-a2bc-5794e30b8fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b598d058-8e6b-4a66-b797-a38a615b7f77",
        "cursor": {
          "ref": "6aeba53b-f65c-47d6-8bc3-5b6ce70956b2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5e5ae64f-6b2e-49a8-a293-8421bb024700"
        },
        "item": {
          "id": "b598d058-8e6b-4a66-b797-a38a615b7f77",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8c50740b-cfa3-4172-89e7-8e62b1601dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9966e0f-73d1-40e3-8f7f-68e9b639aa96",
        "cursor": {
          "ref": "61aaafc1-3d2f-4c40-9adc-3fa95454df8f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "047ac84b-5a8d-45af-bfba-1b5a375cb3b2"
        },
        "item": {
          "id": "c9966e0f-73d1-40e3-8f7f-68e9b639aa96",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dd0411b5-dd0b-4fed-9917-e7d4a497d6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d6d60a-56bc-41f4-9a6c-7efaa935c520",
        "cursor": {
          "ref": "59fa3f2b-89a3-4c03-8ea6-51da44b39859",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "47d5346e-c89f-4cbc-a627-115b1cd422ee"
        },
        "item": {
          "id": "02d6d60a-56bc-41f4-9a6c-7efaa935c520",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0c3da7ca-002f-4002-a561-b75aa8c36002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ac3352-112d-4d70-950d-7f3f734b68c4",
        "cursor": {
          "ref": "47818f1d-1664-43f7-a140-fbd01d1c27e9",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1e4af65-da9d-41cc-8084-c3d71616f994"
        },
        "item": {
          "id": "45ac3352-112d-4d70-950d-7f3f734b68c4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5e9582f5-0000-4108-a025-d879ecfc5d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba91f86-5bc1-48a9-96f8-6bd32433fc12",
        "cursor": {
          "ref": "752bed83-d2db-406b-b0e2-0512e26208a6",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8fccb3be-07b5-4f57-bd20-02f3cd28a51c"
        },
        "item": {
          "id": "eba91f86-5bc1-48a9-96f8-6bd32433fc12",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7148ae56-3902-4f39-9a9d-b05991ee17c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b48f020-4313-4777-a444-0eb18ccda040",
        "cursor": {
          "ref": "70dd9a3d-b420-46f8-ab33-cb6c6f03229c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3bcbbd87-be79-41e0-b76d-74ff296dcc57"
        },
        "item": {
          "id": "3b48f020-4313-4777-a444-0eb18ccda040",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "13277fd7-60cc-4586-97e7-7ddcc08c193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0838a8-319e-4e64-9364-fa5564718cc9",
        "cursor": {
          "ref": "f177c07f-0a42-4feb-9949-6446a902739d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5743275b-f9db-42c8-baab-2b796b903df4"
        },
        "item": {
          "id": "4d0838a8-319e-4e64-9364-fa5564718cc9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e81ccd8-86fe-4fce-b4d1-a4abeba1f682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c640a73a-c7c1-4b40-b7b1-caf5480c2724",
        "cursor": {
          "ref": "703c94c5-bb66-4f9d-8e51-722b2e3e47db",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5b9dbadb-8295-4fe6-bf36-4d409c5d4a28"
        },
        "item": {
          "id": "c640a73a-c7c1-4b40-b7b1-caf5480c2724",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f00b6b6c-0f80-4531-acba-9db19806a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9805ad27-d06b-41dd-ba76-71a54051ddbd",
        "cursor": {
          "ref": "58260634-10f3-4822-99be-845f406e65ec",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "780b6dd5-d231-4ef8-99a5-775c340da612"
        },
        "item": {
          "id": "9805ad27-d06b-41dd-ba76-71a54051ddbd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8863073f-e0b4-4121-9239-36ae5e010d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fcdca8-e9aa-4b85-b8b8-1d193d28da4d",
        "cursor": {
          "ref": "8ebb990f-74c1-4bba-bdb4-ff30f9832486",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b792eeb7-533e-41c1-9975-3045f67cfb9b"
        },
        "item": {
          "id": "b1fcdca8-e9aa-4b85-b8b8-1d193d28da4d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c9f8b121-5adf-4d67-8de3-1548e80b50b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e736faf-0e65-4b08-9069-f77a680ad99d",
        "cursor": {
          "ref": "eb7a43bc-96dd-4a6b-aed3-38556c6bd7f2",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "112629b7-f1ab-4c27-9e7a-61c5025e6f24"
        },
        "item": {
          "id": "1e736faf-0e65-4b08-9069-f77a680ad99d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "df0627ba-c232-459d-9296-a510283412ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c2c61d-95d0-4032-af54-0afe31664544",
        "cursor": {
          "ref": "183edda9-2952-478c-9569-911adb74bef6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f59ff047-938f-46a1-aa4e-7e577c9b44e0"
        },
        "item": {
          "id": "60c2c61d-95d0-4032-af54-0afe31664544",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9df4c2e1-9784-4515-bece-78188d2d8eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c70577-9110-4983-83de-1cb08317e45a",
        "cursor": {
          "ref": "77957daa-85cb-47a9-8d4a-83fdf155971a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1387c17b-bb47-4dd6-a3db-1e60b183879d"
        },
        "item": {
          "id": "06c70577-9110-4983-83de-1cb08317e45a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "21b08f3b-0daf-4eb8-8908-97218fdbbf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3cd335-95a5-42da-8367-2aae8a32d898",
        "cursor": {
          "ref": "6a7e6239-beb3-4a34-b8a9-8ae813d0995c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a450247c-4bb0-43dc-9201-1b7840dc7e95"
        },
        "item": {
          "id": "fb3cd335-95a5-42da-8367-2aae8a32d898",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "10174dd6-d217-40e5-837c-8f30addb63af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32152dcb-c1ab-4158-8f37-bcc4c7180c5f",
        "cursor": {
          "ref": "f7a719c2-11c4-4812-be3b-92e51ee7cbad",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c9e6360b-f052-4629-b603-1bd457482daf"
        },
        "item": {
          "id": "32152dcb-c1ab-4158-8f37-bcc4c7180c5f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "23aee73e-958c-41d9-a47d-f4e9adc86870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd44cfc1-62d8-49b2-b765-6f398ee8fe95",
        "cursor": {
          "ref": "6811fe5e-443d-4073-abd6-e8c505b29650",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "92f47777-27b4-441f-8272-3e4beb751d29"
        },
        "item": {
          "id": "fd44cfc1-62d8-49b2-b765-6f398ee8fe95",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f1e933a-3ec8-4f55-9b4d-904eb77c3698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2e2f78-2b1f-499d-9fad-3c8a5c67b8bd",
        "cursor": {
          "ref": "46921504-e59b-407c-bf86-241c2e2f920b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "538202ec-ce2b-4bbd-88f6-254b31fb931a"
        },
        "item": {
          "id": "6c2e2f78-2b1f-499d-9fad-3c8a5c67b8bd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5c303fb4-a9f2-420f-aa67-b8dc6a1b429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac79911-6e58-47d0-8132-f1f94e90cd36",
        "cursor": {
          "ref": "224d6000-7c73-4baa-ab19-62bb561714c3",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e46cb02f-3094-4464-83c8-016221a47d5e"
        },
        "item": {
          "id": "cac79911-6e58-47d0-8132-f1f94e90cd36",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "55e42a3a-8bc7-461c-bbe9-d891fd1aa044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e54aa77-0404-4a0e-8808-33619ce1b32e",
        "cursor": {
          "ref": "b36b5eff-a288-43d7-acd1-e1772ef078b1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "423387a9-f168-4982-8c20-d6b5f7febcf5"
        },
        "item": {
          "id": "9e54aa77-0404-4a0e-8808-33619ce1b32e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb2a2331-5bd4-4338-8ba7-04b7e5861d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890fd1d4-039a-430f-9588-8e807be1a8db",
        "cursor": {
          "ref": "533d9026-99f6-46b6-b7cf-d402805fd19b",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d3cf7c36-0a32-4cef-a363-42cabff4bc45"
        },
        "item": {
          "id": "890fd1d4-039a-430f-9588-8e807be1a8db",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "edfc81d1-ce1b-4d8b-b0ab-9dc1bb1e0a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e56f05-68d6-41ab-8ec7-ec44763bce5a",
        "cursor": {
          "ref": "5c76d39a-2c2c-4920-bb6b-5e3ed1f9f668",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1cf2f5db-c6aa-419b-8010-d85d3aa14beb"
        },
        "item": {
          "id": "e1e56f05-68d6-41ab-8ec7-ec44763bce5a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "08d3be46-512a-456d-92b8-c52f4ab69287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b533be41-63cc-4f6b-a4ae-a4cc900f0e03",
        "cursor": {
          "ref": "773c2d26-a82c-4253-9dd5-b86f1e4b59bb",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "df125bd0-4086-4b7e-b798-6f14a4d333b8"
        },
        "item": {
          "id": "b533be41-63cc-4f6b-a4ae-a4cc900f0e03",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc40d19e-874a-485c-974a-0c86aedbae45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5923702-160f-450e-a6ac-1b32247a0241",
        "cursor": {
          "ref": "4f4d5521-da0b-4b02-a039-98db25a51471",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2ab1a743-0bf9-4663-abd3-532d7b89d144"
        },
        "item": {
          "id": "e5923702-160f-450e-a6ac-1b32247a0241",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2764ffaf-f862-46b9-be86-8b60d0299720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5a1d82-ac50-4409-9692-a09fb9a66eba",
        "cursor": {
          "ref": "ddc67813-1668-4611-aa19-ac4b72f4eda6",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a85c1ad6-721e-4a10-8fba-2d335be27192"
        },
        "item": {
          "id": "ae5a1d82-ac50-4409-9692-a09fb9a66eba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47d07511-8360-497a-840d-819d5850cec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036e4b29-29c8-4091-958c-7da3eea7a8ca",
        "cursor": {
          "ref": "446b4cab-e494-4204-80a9-40089004d05f",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a0c85f67-5ad0-4dd6-9951-1671b55f2ed2"
        },
        "item": {
          "id": "036e4b29-29c8-4091-958c-7da3eea7a8ca",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "df327cfc-bb76-4f61-a017-52dc806e1410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e30023a-e74d-4ffc-923e-65c28892b435",
        "cursor": {
          "ref": "06698cc7-5141-4542-8847-e2d0d49dd43a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bc28528e-09a7-4bc9-9c9e-78f9d682cf05"
        },
        "item": {
          "id": "7e30023a-e74d-4ffc-923e-65c28892b435",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4e17a22a-e729-4250-9f07-275b5796d6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69bb5b6-bfdc-4892-a9aa-ed86d93e6b46",
        "cursor": {
          "ref": "f960e681-d2ad-4593-9192-b42298ddb1ec",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eb4da9cd-129d-45fa-ae98-49d00128768d"
        },
        "item": {
          "id": "b69bb5b6-bfdc-4892-a9aa-ed86d93e6b46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3d430082-7500-4abf-bdea-49b22d6619f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8df9f5-97ee-4e80-bb85-c08164377d0f",
        "cursor": {
          "ref": "1e077eef-9e42-4d6b-8904-0bf17dda5d15",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afeefbcd-9bc7-4501-a56e-686246dc4a12"
        },
        "item": {
          "id": "ed8df9f5-97ee-4e80-bb85-c08164377d0f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a071e94a-2bc6-479e-a68f-c9dfa3297d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150e1867-55e5-4419-b087-3a7110951c55",
        "cursor": {
          "ref": "80e58343-35be-4171-b034-1156f2030e27",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9bb01bb1-ccff-46c1-8eb6-938723587bbc"
        },
        "item": {
          "id": "150e1867-55e5-4419-b087-3a7110951c55",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4bab64fb-bdc5-41ad-bb9d-b4bef8d8bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d52dfe-8047-4745-bba4-bd3c7ba8c6f5",
        "cursor": {
          "ref": "e74a6f90-0352-42ff-957b-d4291f16c890",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "64a22d9f-e6c4-48fe-81b2-dcc30799eb43"
        },
        "item": {
          "id": "83d52dfe-8047-4745-bba4-bd3c7ba8c6f5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0466df60-1538-4ccb-bf05-06d37dc73988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999d2c8b-83b5-4c55-ba7f-5704d1e02ca2",
        "cursor": {
          "ref": "9d32c010-8858-4a53-b3a6-3ded5dcfc357",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c794d29c-e9af-451b-b2ed-139ccbf5b3d6"
        },
        "item": {
          "id": "999d2c8b-83b5-4c55-ba7f-5704d1e02ca2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a25910b2-bd7d-4cfe-a21f-bb8f9af352a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0333c0d0-f104-4eb8-bfc5-3c32780e5762",
        "cursor": {
          "ref": "8fd436f8-424f-4cf7-8e40-c1802fd4b2ab",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "10cda1d5-232f-4191-b873-3aa51952b2b2"
        },
        "item": {
          "id": "0333c0d0-f104-4eb8-bfc5-3c32780e5762",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5e5a60c6-d54c-4b27-800d-a86326b78ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12dc087-1edf-47e7-8a48-8619f3b9a304",
        "cursor": {
          "ref": "f817d540-df17-4ff9-8547-00a23605ac80",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2dc093d6-7944-4c87-82db-185cacd9f5e6"
        },
        "item": {
          "id": "c12dc087-1edf-47e7-8a48-8619f3b9a304",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2c3fc4df-9a2f-47c1-85bc-b7789deb72cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab68cea-5d73-4691-95e9-c26e4a3ea94f",
        "cursor": {
          "ref": "6c5d1b52-69c5-488f-b51d-af2c6953a9a4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8b302017-6f21-4257-ba24-691a805b1a8f"
        },
        "item": {
          "id": "bab68cea-5d73-4691-95e9-c26e4a3ea94f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2a43c2c-0dbd-4564-9160-5d1dacb67503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d98867-f23e-4328-af86-091229059482",
        "cursor": {
          "ref": "17433218-c364-478e-80a9-9c03f4388002",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8bf1377d-e409-409e-bd16-fa758d488751"
        },
        "item": {
          "id": "04d98867-f23e-4328-af86-091229059482",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e557642-d2f2-4397-a08d-e4f7396cc4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc971de4-c018-45f9-8f84-097e96cc57df",
        "cursor": {
          "ref": "76bc9d7e-421e-4dde-abc8-381603a88ffe",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9fcb2d8e-b931-4749-b1db-5274f35548b1"
        },
        "item": {
          "id": "dc971de4-c018-45f9-8f84-097e96cc57df",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "850d49d7-b2ff-49b7-a516-7835f8573bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb6873a-8c6f-4045-a45d-27a9693ec64e",
        "cursor": {
          "ref": "b9aeba21-6ff4-485d-b5f4-beb518287949",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e222288c-b9b2-4dcb-8de2-965e6ec594cb"
        },
        "item": {
          "id": "7fb6873a-8c6f-4045-a45d-27a9693ec64e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9f32ea5f-7c39-4cec-814b-ae423b493d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e8c228-4032-41a3-a15d-6086200043e0",
        "cursor": {
          "ref": "ae978458-3769-488e-a6dd-b4817e293c39",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c77b26dd-5aac-471d-9b7c-1b24e275b94c"
        },
        "item": {
          "id": "81e8c228-4032-41a3-a15d-6086200043e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e55947a8-c5e4-4b59-9130-b216513630a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7128c86-6626-4210-9b19-53c20574043d",
        "cursor": {
          "ref": "96f7302e-e3ff-4b2a-8ab5-3eb3aa559834",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a569a4e4-1a33-4d38-b676-0d2442ea9eb3"
        },
        "item": {
          "id": "a7128c86-6626-4210-9b19-53c20574043d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8fa6f8c6-8eed-4da6-844d-d384a80d0e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa450f2a-40a6-4d81-b259-09d8db9097ae",
        "cursor": {
          "ref": "22b9b766-485e-4fbb-9b17-cfaa21244deb",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "85be0bf4-3c0c-4b52-adeb-37f2edd8e197"
        },
        "item": {
          "id": "fa450f2a-40a6-4d81-b259-09d8db9097ae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "151428ec-cdcf-4c8a-9ce2-b230416fe88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7838a6b-cff3-4148-a14a-2a98e49a0f8c",
        "cursor": {
          "ref": "ff19b6dd-705b-485c-ad2b-e7dffcd6a12a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02aa0049-ccba-4fa9-aa28-a81f2a47443a"
        },
        "item": {
          "id": "c7838a6b-cff3-4148-a14a-2a98e49a0f8c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f1bb76c6-1caa-4a69-ab63-9c4b40b61691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d141bb2-bcb4-43e3-8596-8ac60b46874b",
        "cursor": {
          "ref": "0505b2df-ccf7-4a19-99a8-a0c4d3d5f48c",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "94569d0d-4527-4875-b084-08a8732fa6b5"
        },
        "item": {
          "id": "9d141bb2-bcb4-43e3-8596-8ac60b46874b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4282079d-6b32-4cb1-afed-a8ae06b4a6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6539089f-fee5-406e-8246-2e22314db7e7",
        "cursor": {
          "ref": "432ca432-1c41-4471-8d75-2bb68bd21098",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "22423027-5f85-488f-b8f0-114a9a7f5095"
        },
        "item": {
          "id": "6539089f-fee5-406e-8246-2e22314db7e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "38b7145b-5238-442d-8f1f-efdc254fdace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf153c48-6a2b-4d66-84eb-376e04da7cd7",
        "cursor": {
          "ref": "0a4c5226-a0ef-4d60-8b53-eade44a26540",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a89cd8d8-3e16-4522-88af-c1da39e75785"
        },
        "item": {
          "id": "cf153c48-6a2b-4d66-84eb-376e04da7cd7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "08e5eaab-bcfa-448c-a144-6d50afbcac81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1382f21-c41d-4b37-bae5-13c56c480caa",
        "cursor": {
          "ref": "9082d7d9-0300-4ad2-a631-de9a2743b1f9",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d2c5d026-7397-44e4-9cdb-0230f0d7ca43"
        },
        "item": {
          "id": "f1382f21-c41d-4b37-bae5-13c56c480caa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f4926be4-1e15-49c6-b8dd-06626f36e89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bc06cd-cc1b-46c5-918a-f00402df218e",
        "cursor": {
          "ref": "f6fccfdc-b9ca-4d14-a98f-678a4ce17de2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "403e64ff-81ca-4f6d-8d7a-8af2c89eaa2e"
        },
        "item": {
          "id": "87bc06cd-cc1b-46c5-918a-f00402df218e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b7083aad-90dc-46e0-86ea-007e5ff26441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b2e42-d478-4535-9553-279c8860365f",
        "cursor": {
          "ref": "ae99b028-3722-4ae2-b468-4c1c4beabb13",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e0de9bef-ec89-463d-9435-fdd12261e0a9"
        },
        "item": {
          "id": "c03b2e42-d478-4535-9553-279c8860365f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8c6463d8-e595-4273-a5f7-a5252e0a567f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55135a0-7f62-4698-9b70-0dea6941f00f",
        "cursor": {
          "ref": "d964986e-dc37-4bc7-aae9-e1ca73d52595",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "50a1b911-3dc1-438c-a60f-c0facface7d7"
        },
        "item": {
          "id": "f55135a0-7f62-4698-9b70-0dea6941f00f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "48088758-d52a-465f-bdd9-2199339311e1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b7e24-fb08-417c-b0de-e6665cd85c4f",
        "cursor": {
          "ref": "cf2ca7b0-0a7e-4d51-873e-d054bb23f4bb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9c96c606-49cf-4cc5-84ad-726121316d3e"
        },
        "item": {
          "id": "da2b7e24-fb08-417c-b0de-e6665cd85c4f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1271ad05-844d-4155-ba47-d20be5cadddd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "26112099-8cfe-46e5-9f4f-a72964e7b12e",
        "cursor": {
          "ref": "509d9421-8473-4b38-beb8-3bbb920f69f5",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "707bf179-341a-4057-8863-edc2cf59e3df"
        },
        "item": {
          "id": "26112099-8cfe-46e5-9f4f-a72964e7b12e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "311abb9b-0e90-4df7-9d9d-195572d5da4a",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "749ad85b-800b-4ceb-895f-22ac89a3a341",
        "cursor": {
          "ref": "17bff678-aef8-43d1-9ec7-8e65684de0ec",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "61e50158-7511-4c09-ae55-a74e7d534925"
        },
        "item": {
          "id": "749ad85b-800b-4ceb-895f-22ac89a3a341",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fda20a16-3a33-4c88-895b-0cb96a473d27",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
        "cursor": {
          "ref": "0408b55b-0b75-46bb-a746-087e2880779a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d615a796-157f-4f76-98a5-563d557489a2"
        },
        "item": {
          "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6906b30d-5c04-486b-a5de-3d6fc9f54060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
        "cursor": {
          "ref": "0408b55b-0b75-46bb-a746-087e2880779a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d615a796-157f-4f76-98a5-563d557489a2"
        },
        "item": {
          "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6906b30d-5c04-486b-a5de-3d6fc9f54060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
        "cursor": {
          "ref": "0408b55b-0b75-46bb-a746-087e2880779a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d615a796-157f-4f76-98a5-563d557489a2"
        },
        "item": {
          "id": "87fc20c4-751a-43dc-b16d-5fd64bf41d78",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6906b30d-5c04-486b-a5de-3d6fc9f54060",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd96b18-289d-44fa-be8c-9958155e89d2",
        "cursor": {
          "ref": "ca896a48-d83c-45e5-81d4-3906cd403b5c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a26f2867-d8e4-4b57-962a-75032b4611e1"
        },
        "item": {
          "id": "8cd96b18-289d-44fa-be8c-9958155e89d2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "68810ea9-8e0b-4f05-8dc9-db0f17cc1b86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68d977-da3f-43b5-8490-66fe86fb78a8",
        "cursor": {
          "ref": "9f8a18e1-3ea7-41c8-b8f9-20cbb55cee0d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa15dbf3-f037-4774-8f32-722d59f82cd7"
        },
        "item": {
          "id": "cf68d977-da3f-43b5-8490-66fe86fb78a8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96270a88-997b-459e-82cf-8253e12ca547",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68d977-da3f-43b5-8490-66fe86fb78a8",
        "cursor": {
          "ref": "9f8a18e1-3ea7-41c8-b8f9-20cbb55cee0d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aa15dbf3-f037-4774-8f32-722d59f82cd7"
        },
        "item": {
          "id": "cf68d977-da3f-43b5-8490-66fe86fb78a8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96270a88-997b-459e-82cf-8253e12ca547",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7817d038-2249-4385-a89a-7439b9a7540b",
        "cursor": {
          "ref": "fb71c0e5-a45b-4d76-beeb-cb16084e0189",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce67426c-1574-4c68-b65d-d1dacda61817"
        },
        "item": {
          "id": "7817d038-2249-4385-a89a-7439b9a7540b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d1b6fe7b-772d-48c3-a23e-51ccfe7b9c82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b9f6a-dad9-4398-bb7b-b314a1e5ad85",
        "cursor": {
          "ref": "0a7c11ab-84f3-464c-aa07-26038d0b6569",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "44459381-3f00-4dfe-b3e2-7b387646a3a5"
        },
        "item": {
          "id": "f87b9f6a-dad9-4398-bb7b-b314a1e5ad85",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "469db2c1-8ce2-40ac-8486-79292d257f5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b9f6a-dad9-4398-bb7b-b314a1e5ad85",
        "cursor": {
          "ref": "0a7c11ab-84f3-464c-aa07-26038d0b6569",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "44459381-3f00-4dfe-b3e2-7b387646a3a5"
        },
        "item": {
          "id": "f87b9f6a-dad9-4398-bb7b-b314a1e5ad85",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "469db2c1-8ce2-40ac-8486-79292d257f5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec0854e-f489-4551-9fa0-bef3f2cdcbd9",
        "cursor": {
          "ref": "956c0952-8730-4500-92a7-0660ba3cd24c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "479f9672-d3ad-4098-a8f8-17af73eabf26"
        },
        "item": {
          "id": "dec0854e-f489-4551-9fa0-bef3f2cdcbd9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "71d2f144-973b-415f-be73-4ecbf1ec056c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}