{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "96666ec8-bf83-4fbe-98c9-9d674b900004",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2246e6bb-efec-4941-a3d6-a222450e8f62",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9af3c4c1-86aa-40e9-9312-bf6e66e59f0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ca40c0e-2b9b-43e2-b32c-91a45f4b64c6"
                }
              }
            ]
          },
          {
            "id": "98b3add1-7bf0-4782-a3e9-659c7b194e59",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dde944f-1a29-4a65-89bf-9353a898cf3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e556cea6-04ac-4234-b7f2-da6a22eeb962"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1fa93dcb-8f73-4193-aaee-c9c59fdf54d2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "32cd5431-43f6-46f7-8291-f0334d73de6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "780586f8-827a-4788-a1d0-127f2e80a33a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "366ba52e-cffb-43a5-8bf5-3269ad0ec48f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c62b8b9d-c65d-4a52-ba98-08377673a7fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2eea45d-b605-4a36-aa7f-9bacf8974f44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd8c6eaa-281f-42d7-8321-df756ccf9d0b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "970c6f25-0c8b-40ea-8817-09b9cc62b19c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3c6a187-6f20-4196-9f53-77e1cec0c015"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b0ced5d-b536-4073-942c-5006f833d7ca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9bfed9f2-0ccd-4d8a-893d-f9310b171784"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0d84b3e-38dd-428d-8be1-118fabacbdb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "536aaf11-b256-404a-84ef-f2cd5887e94d"
            }
          }
        ]
      },
      {
        "id": "7338b30d-dabc-45e5-9415-1053502429f3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e7c80a50-7862-4588-a7f3-cd981dfb25ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c71ed42-5891-4d48-bbe5-94759e0ac498",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4865a57-972b-4ca5-b5f3-b11e9b71fecf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e0897-1471-41e5-bf01-10a8c3a90370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79ffc171-4c82-4e2d-9604-903f104c9145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec76e76-87c2-4bd7-9eb0-7ff3bf23fcd5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b69e3-783e-4de1-b30c-399ede631219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef8e6320-2f12-4176-bb85-c14bacfd73aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06cd8f5-9693-4f74-9995-982bfa224e33",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83859e11-7f91-4a07-a759-7e8a4c474486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "625496dd-b519-456e-bd88-e6aed3943189"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4413feb1-c51f-4127-9a62-787dda6cace2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40431d87-3787-4506-8aa1-e727fd2bfcd8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8882c631-075d-4749-b09b-09d8473744ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce2e0155-a2e1-40ee-bee9-d559100f1ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f6439b-c908-437d-b581-a488625a1310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ff4196-b0c2-49b5-ba7c-a129fd858966"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45ccb220-e776-4fb9-aed1-1bce1f4fe3be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee0481d6-c8ff-412d-b2b9-30d4a074d825",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc9168e-4366-4c48-a139-7fcf6ae0af83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "84631cba-3d87-4e22-92b8-934a8cb30b56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf04d75e-3894-4c75-887e-97ad8cbca8c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d85861a5-33c3-4734-a53c-f0fbc8e12d64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5812c52-64ff-4591-a188-ef33dc4a5bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13ca7aa6-58d4-44e8-a9fb-da9951f66d7b"
            }
          }
        ]
      },
      {
        "id": "4aca7457-2bdc-4f9d-849c-dce9ba3c805d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "edb73667-75e2-42da-9ade-0bd24f178297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593b7a49-7c77-4ea0-9101-5e035599e441",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d08c0612-48cb-47dc-afbe-bf510d044ef3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9d0866-9fd3-4e6e-ad83-782ca8a21953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f423089-57af-4f47-bde5-b854dc6169e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ad7f97-6b1d-4e9f-8112-df40e733e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9620910a-3bfd-496a-9c2f-bf36a3c86c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003b581-fba8-45d7-8386-b0c467dd4d40",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed794344-67db-4b41-88df-20f822572d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59897abe-69eb-4294-af2f-09567d8c925c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9314b90-82aa-4ed0-bf66-4b67e2c5740f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1377d40-7761-4495-acd2-44f037ba8506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58072ae-fb15-428c-9915-12feca659fa9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7689b6-fb76-45f0-920d-16fce9951896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ec8f73-178b-41a5-b9a2-f4b9f3d3a9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229d2e6-1406-44a6-9f7c-338592cfda89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f12dea08-a435-461f-93b0-272a7d12b6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b53d9e5-784f-48a4-88b0-0b5fa671a398",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd4c5d1-6f34-4c09-abba-cc4d99a2ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a385eb-d21f-4f08-86e0-2e9790712849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ab444e-eaac-4151-a893-183a7227fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e2c0cf2-94e7-4579-8a75-7c813c512fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3827e894-96c0-43d4-b815-41149b0fbcc0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3e11f1-e0c5-4c01-a2c8-baa1997c5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84be53bc-665a-497c-b5ab-7d595aaede78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995ebfdf-e8d7-4aec-921d-99b396d64400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7922f33c-b049-4fbe-a46e-c32aaaab5dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6858c8ad-a290-4077-a96a-2b1e507cdb88",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591bc3d8-6086-41ca-8528-2faaf6f5e041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f3465-a85b-47ba-8400-1a4b4c54f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d46f1d-5b8f-4f29-aac8-fa490846fa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16298910-7073-4d20-802b-5e39e15438f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d26ed-3499-4026-8048-cf5e80607637",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b0602d-eac8-4f9c-be5d-b9a4afe397fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c73e0-484f-4a8a-a8ae-93eb07f7eda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0203f8b1-6dca-4b29-ae66-b9d319bf4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd26829-319a-4e14-8d20-4da92342547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01563b8e-7db7-4d55-92c0-4806f7ae1470",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47acd35c-72b1-4c92-9650-3263efe96548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf2ef55-e554-4527-ad2e-fb6415676e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3922bd42-d38f-45c2-930b-54839bd1291c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf2ca30-d995-4e72-a227-27373c66989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d24f468-9544-400b-ad94-7ed374056fbe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3e7611-0220-45a0-b6a5-bf5573eac9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8322695b-dc41-44d2-8969-ed0810302b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754fe390-f39a-453b-9a6f-a316e13e2498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e34069ea-7c10-4c40-b39f-8c2b84a6d081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab39b3b2-9cba-447a-b5b3-291dc3d4521d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b01fe0-8a2a-4ccb-ab62-89a883a998ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4229360a-f0b6-435c-9899-f90674a861b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8523ac5-ea92-4ef5-b3ea-7ca5cca2737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dedbb467-08c0-4262-bae4-d3ee0a9a026f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f373fa63-539e-4cb4-baad-668b149a9299",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f20b0d0-639c-45dc-ba80-3df396494847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dea7cef-1cdc-4d63-ac1b-363b342c65c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e360ff-1b80-4b62-8775-69bcbf0cf5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fbd1b92-e72a-4a51-b666-790d2cea8930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353e603-59dc-4b38-befd-fb0f2e3a2608",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b99d7-c0be-4e19-8078-c40ba4d4d080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e100c6b9-1d4c-4b99-a15b-fa77b093610e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb21299d-5fb2-4271-8022-c3d8975f8377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "325a4b1f-6397-4b92-a019-129c51ad2a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c24f09-d92a-419c-b4c1-0ba96c011f66",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdddb81b-02a6-4060-b2c2-bd7459141ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d362c7e-3384-4656-aa9e-463f919a39b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf8d6d5-9f0c-487b-8414-2fc905f93d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0561787-8cd2-499e-9718-7fc9b547da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f495a2c5-770f-428c-bbd3-30c72fb8af8c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a732833-1f3f-4091-9ff6-56b9b7d92050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58afd8a0-5930-4c90-92ba-1551516e4f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53ee32-d3f3-4bfa-a196-14d1c13165fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b451e0-e688-4c71-bb29-62af6301cba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c23b628-a03d-47da-b5f9-c9d76feeed1a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9394c9ae-d124-495d-9655-2b290264a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8003666a-6429-413e-a5cd-5a3cf549f290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0167e866-d3d2-4fdf-847c-675f7fcfdf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f515c4-dd4c-4a49-a542-87532cedf60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051463f6-7605-4827-a794-b55f0a3f8e5e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36749d0b-05b9-41a0-ae1d-51e3a5d26772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29aaa44-a531-493d-83cd-b3f080e40afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae9fc02-1b2b-4272-a18a-59af2df08c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52696b6b-1a51-499f-9763-05dabfca2699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13c89c0-c034-4ebb-a465-03904b4f382c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533814f0-cf71-48e9-9cb4-5143ba7099a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13749c7-531a-4ab3-b1df-103528614da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c94c8e4-ce7b-412f-8fed-6f3b75681968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a1ebb45-69f7-4d2a-924f-606091b082d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7813f9a8-7e39-4c5a-afe5-3cf07c5e38f4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8a8d37-2cd9-4bc7-8fb6-d972b443b0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9249bf96-ef91-4a4c-8124-916d76988795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992f0415-5849-4dd1-99b9-d59d1bc5b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eff7c0-0e45-4f9a-a796-7583f946f3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f67393-4b8f-4ffd-9dc2-0823054445c8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d5f737-055b-4736-a7df-3f85b619fd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5360cf08-b410-4cb2-a869-635f8e17b7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb56d6-d43e-4a3d-b9e9-86d0a4340a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd1c2e0-d37e-4af3-83af-dc070d9a1e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eff04d8-28eb-41a1-bbb8-f85b58fccc7a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e06ca7b-e962-423e-8c3d-75c3611400df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3336a952-0218-4f12-8bca-74f562088fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce26b08b-e805-41cf-8f6c-15fea407cc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e34be20-05f3-45ee-a94f-09d057b624b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55460afb-7c9a-4dd0-acba-e6ffd8bbcda3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2facbc1-922d-40cf-9a76-f4e77a216111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daad17d0-dead-480d-811a-03270749344e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb17056-5032-48f8-8973-425f1bb545e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97655793-b94f-45df-a5ed-11415609e49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56abd2fd-9cba-4056-be56-4a31a7c56145",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3757860b-cbdc-462c-a890-1257ddcfb1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d35a98-4086-4a2c-963e-ddf2dd067f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606a4bb4-49a1-49e8-a107-12ca8a1a4b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed511844-7a56-4584-b10e-991c39a2e3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca5f4b-8db3-4a9e-bf69-4e3ebbdc7b5e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6fde3c-f653-4188-93e0-07e8032396f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c46fe5c-9d11-404e-932f-81606054e478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b24695-ab50-4b01-a35a-9654f891d62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b079ef1-d060-4512-aa32-86e62b1a8d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1ea074-01d0-4843-9975-bae3e8f817a4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d64ed3a-a5ca-4598-933c-339a707f9487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0933b73e-ae53-41c0-8b33-7f641aac78c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd900fe0-c24a-40ce-a231-8bcc64dd2ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7916bbe6-c746-4206-bed4-f34dc454a6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2cad33-5360-4255-aafe-7adf38ef79de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380b1b69-f8eb-4f04-b2ab-471bdabac124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8f023f-b4ac-4208-ad9a-b3397695b0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5240c887-9950-4c38-81d7-52a9362b02ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fc9262-901c-406b-ae8f-3ff1130b16d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad0107-8eeb-4085-bc18-b8a2e9298216",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158b71c9-33cb-427d-a6cb-f8e07a72c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18056921-0f73-4ab7-9d91-695ae1da9b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd04af9-69da-435b-b6b6-7afc5971035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b71ef1-1288-4c30-b070-592a8ae1e708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186f10ba-db3b-4074-82c5-38c739199765",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286a59cf-0e17-4237-9498-abbbef43c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00df176e-0c7e-4622-a467-bea5303741f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae3f827-cf28-4ff2-a6a0-627e110d5870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ba7d31-eea3-47ef-bc2b-6d67087c9be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a03f3-d19c-48b5-b979-6c58e24c420d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0cca7e-390f-4a06-b97c-811fb134b9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ae2aa0-242f-4564-9bc1-ce955e381c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a1d2c7-c782-4f00-913e-9e88cfb645e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bb0844-fa3e-4b0d-933a-141cd69fa615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b72192-3fe2-4c57-8f37-bb5cea72f854",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8179aa-3d65-4e4a-bf95-96cb7d9782f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e672d17-8085-44c5-baa1-382d67fd1871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c16c76-f2b8-4561-8262-dc4eea73f2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0fcda7-2ee8-4dce-9aab-3de80f91b5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a27bf3-c930-4298-96bb-a993b5246aa4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f5d1c-455d-4937-9b8d-7c0e829e68bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35279084-cf6b-4402-8b47-3f816b4db339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c68a7e-d378-407d-a9ee-422b282bcbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2978cd85-b94e-4389-be32-299d00dfaf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2998e224-72aa-4707-a96c-59c5edbe829c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3f27ab-7a8d-476f-a90e-0d9f93029782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bea7b0-6c01-4cfb-9c56-3445d59551d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d20d87-da14-4969-9521-6e210e65cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5a27ab-545f-418e-ac1c-930fd5de03d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5fb4ac-6951-45b2-ab0f-81e85e4eeedf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd709e79-abe0-494b-ab7d-8271732740ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a46eaa2-a2a1-4ca7-be9d-e0e712386d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a0200-15e5-4b85-b538-d752563f4510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07977cf8-7108-4f82-8046-42800a9d372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3b4cd-253b-413b-aa0b-ee3cc1bf1756",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35042a80-7b45-490b-9a7a-610d0fe789c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27326163-fe46-42f1-9d16-03b09fb3d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169e43be-9aeb-45a7-a55b-b84f30efebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b191e3b-c357-4680-9aa0-3321b073a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0a54e6-576c-44b2-8b40-5fba463c06fa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48371c-2d8c-46ff-97fc-6e2d40459f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2001be1-09de-409d-9668-13533fc58d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb939e37-b067-409d-ad91-a8f6155a9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead6c39c-726f-4cac-9e33-be34f9b321d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd3fc86-0b1c-4af7-aac8-ec8d3d40e743",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07fa8f0-a9e9-4773-983c-28032f1a3019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cd0200-6575-4406-9886-69e46dfa5962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6208a9-c30a-4d16-a667-ec3888e18c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e71a012a-3047-443f-9dba-8618dff571a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76441847-c9e2-4194-94f8-1172c1c97cf7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6528279-a3d9-411a-806c-0d07721fcca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49879a80-5aa9-4f0a-9ba4-97f0899a8f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f83aea-0fc6-46e5-90cd-dd5606929741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "590f1844-3d86-49b1-a6f4-d8fed5e8a081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc778f2-6732-45ff-93d3-e86821ea8766",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b5a155-2911-4ed0-8a75-c865152d6070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b266402-461d-458a-a8d1-e8e822941fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b55ecae-b75a-4402-8cce-bb512368ff14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d1bdb6-f3a5-4342-8a2f-f1e356b4717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1787171-60bf-48d5-9553-db7dfda67850",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96899c0a-da8f-4b62-a33e-577c3574bb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b95c66d-99a6-4377-b493-1d73dde2fb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025fef94-684d-4acc-88f2-a91a81722799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1acdf556-53d8-4a03-91cb-8ff36bfc3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8bf252-64dc-40a5-b2b0-769b892fed3e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d7647c-cdd4-4660-9a53-c4cc27203332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58082c48-3b40-43a5-bfee-61838d17c589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c356fc38-3e63-46bb-91db-76e352dded06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "505116b6-30a0-4ead-a9ab-5ea0da62cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cf1f8e-47be-4d4e-8096-52888ef166ef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8411654-eabe-4f99-8887-814bb04bc0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7092ad38-38a8-4dc3-83c6-8a2379ee5643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e29e24d-e20b-4ef7-b8b9-53ac9a6c7e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2abe7396-5b5c-4d22-a15a-3fd0d9b796ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ba99e-0660-4e34-9546-3ebce3164563",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e173a8c-e5f9-41c0-bfeb-8d3d1ea3a790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceae7eb9-3b3d-4988-9949-b3899bcda460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fe9483-1ed0-4931-a8af-a9c1c3096b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88cadd1c-1a52-4b37-80bb-2ed911763a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447be2b-15ac-4417-8453-742ea33275eb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d498e07d-4463-4ce7-bc7b-aa89ef65ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58da684-f06e-46e4-9742-05ea6252aef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b491aa-8bdc-4b16-a173-8077e72b5f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6adb324e-d85b-4725-aec9-faf41d357887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a689c-ddb6-4912-afa9-6ad6b7b528c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26511913-a5ff-435a-a5ad-88a73fcd8939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5e4989-2125-4d37-9b59-e882c48a0977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb456b8-b27b-49f9-8cde-ede0b27eb8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb366712-e025-462d-8471-8b1667026976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7217173e-49c2-4920-8955-b580371e9494",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4800317-8f52-4f6c-85a8-0b1bcf4b3e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790200ad-cc62-4134-a9f2-d4164e6457be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef2159e-9f6f-4c52-b7af-afa9b25eae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e59eec80-386f-4a88-8c3a-9c4fde1e5e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61ef240-46b5-4e68-8d88-db64ede49c45",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a141d26-4794-4705-8344-6b770d9f730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77849a70-d3cb-4a05-9f4a-7040125dd064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b1c536-330b-4427-9e9f-1d3480354c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11150d0d-7084-4480-8534-c85da3de0deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd57285c-6ab5-4b69-9bdc-bf002604d333",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e36db4-e447-43a9-aa6c-d6f425be3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f32acf2-9d71-414d-a4e8-2e33afd785d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7b70e-5198-4ed6-b40b-0206e15ba2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9308ce9-eb28-4e4c-8d05-b9f2b5862a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb00615b-a136-4c41-b430-04a2580d3479",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb4ecec-c764-48fd-954b-a67bbd94f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a4534e-2c29-4f69-a34b-f016766ccc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3318081d-7736-4b54-8c8e-a971fa334b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b12b43-10a7-4a85-a858-289a3835dd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faf8cdb-575c-48f8-8395-8c7bf17de7ba",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac46e580-9fdc-42ab-8e93-72e6f5c9ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffed9f15-5ec5-4144-a419-16e4dc058db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e7175-dedf-47bd-9431-f0f36a83f2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe9667f-6f0e-41a4-ae54-3238e3529cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfd8b1e-2daf-48ee-ba24-8582c9247575",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534009b9-b0bb-4c76-b254-24fcf7449329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fcc35d-f81a-4023-ad68-1237f8364325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d8526d-e41f-4cae-b6f1-39466afe9c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80122a59-58ec-4058-9a82-a2aaea91ad4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2ffe56-e0ba-4c18-9015-39d5384d4d4c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af61f1e-66ea-473f-b8e7-f154d08f5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65116fbd-f5e4-462d-a69a-152c0e0952a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5e6fc7-a79b-4c6d-83a7-19bf29958309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88f9674d-138b-40de-9d62-0e4c305fce75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6174f17e-2289-4db2-b76f-1f21455f2ef3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791ca36e-d0e3-490a-9354-e71cf7945290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59c8a26-a8b0-4c84-baf3-c58cd3b8a721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd684234-9849-4393-a35a-3de3c2db5bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee8f1dd-749f-4f66-bb1e-7b1e4cf6668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7d036d-10f0-4f67-b184-c63eba9e9887",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5856dded-5af3-4f78-bd5f-56875a43260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b0f5de-45e3-4a3e-abe7-e9b144582c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039df174-2cb0-429b-af1b-b08bb91ed6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7543647e-2f51-4291-aea5-13da589eab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fae5ac-8109-4b03-b0de-e6de870b0670",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394e015-9eca-4962-8d4b-02eabb8ad598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48158586-6e61-4f71-a968-146d19f5ae7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3aa62-4f7d-4458-9012-ba44be67551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "884fa9ce-b3f6-4532-a55c-7f91581a07c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daafaa0-c462-4cd0-bb6f-8ee35523faf7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd20a6b-d9a6-478f-91cf-7a9f62972360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829b68b1-9e43-40c5-a61b-8686f6ebc773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e184eea7-3550-479d-ab86-f90c02ed704a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7ef00d-7e84-4ee2-abe6-fc1c820d258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc0e7fd-ce84-4c28-a335-b2b394df6cdc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66853e70-4039-4883-ad7a-c3288d903e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0740513-1089-4cc8-87ad-f59f5bd3473c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50557849-fe12-4737-823b-e9453a69830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2fea53-b317-4d4c-9603-b256fccbaa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f1b5b2-b3ec-4028-b029-b6221de5d2b7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2481716a-0a70-468d-8e6c-f702da6a0d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7db72b-a725-4c5b-acde-4e53d59722d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45114438-796f-4f6e-b4e0-791844f24027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "93dea94f-70c2-4788-866e-4dd71b8a5501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81df8805-5a4e-4c55-ae52-6f7bc73d12bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70501c7-beaa-485f-bda4-cbcf302a10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599d82fb-b47e-4147-a0a5-dbfe38c907b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b92136-2806-4da4-bf79-c53b0d2bc1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b18e70-497e-4239-ab93-9e731a5cd331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e75da2-16ae-4a40-9a63-336c6a13ce0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f755b471-71ad-4ee9-9937-a9bd1708c731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377d36eb-48a3-4760-b63e-ac8c07851e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9dba1b-d758-4843-91fa-ce39b906259e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11572b07-45c3-4b62-bdff-d377f173bd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e490e-ddd4-4c88-882a-2b8608dcf4ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db876c4-6125-47f6-8dd5-bdf002276d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b163a70d-a494-4593-aaad-7bbcbb73f69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316a8bbd-3466-4043-89b5-1df0c539eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39881e73-eb8a-4552-b412-813b3fac516d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0856c050-fd15-4576-89dc-e36f6883f445",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924790de-b28a-485f-923c-36e375cdfba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d222dd27-67c5-455e-91aa-630e76a3e49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f31729-224b-4d55-898a-904c1a0ea23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "210f3b11-df34-47e2-be34-354e4b7e3a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44083ce2-d0d1-417b-9161-9b7295ee2051",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa3a343-14a9-422c-a786-bba728d1ec54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40594c8-1206-4f9a-a303-ff710ef4b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76dd6bd-b14c-4464-a2f6-82e7e86b1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0838f3c3-9623-468e-823b-3476cddf276a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb4e047-0388-465a-8761-e4daeb02c471",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d84f55-8cc5-4adb-b928-5e1afbaf01dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484ad173-afd8-41e2-b51d-43c628961e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea45624-c425-4d17-8da5-6009d9423361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0665a39e-180e-4bb8-915f-50c42115b1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3484c180-5516-486d-89b2-033de80fdd50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607b9c19-65fc-4095-8a11-249404d740ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c26f53-c5c0-4eac-9a3d-bc063dade017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18aabcd-50e6-476c-a383-c973bd0d5686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a321e3-cc13-4fd5-823b-f44c81f6f42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f738d258-4d05-43eb-aa74-7f96eea30f7c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d4d38c-80b8-482f-a046-54fbd91e2113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a5ba65-4929-4d93-86ac-b617043921a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190cf6c6-832f-474a-8f2f-e9cdef574de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e142b-9d8a-492c-85a9-1cd26aa9bab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d95601-6d30-4814-955b-9cd675a9ec09",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc7a74e-05a8-46d1-8c7c-43b0d3d8cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1171ca49-b853-426d-aab3-486ba8349f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9263173-b50a-41dd-bb0c-78e26708c878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cf3854-2977-4c85-a951-d769911ecb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f0962-7987-4967-91b5-d6daa2ed8d9c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11ee13e-cce8-475b-b951-72b84fb3fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aed4931-e3f9-4346-8fa4-26b6bd42042e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb52dbb2-cc80-4713-a327-4faa92a1fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3c005c-0d4f-4092-aa54-c1c378c7b053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051a3ede-e367-41c6-8603-123b031cc905",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04910d4-92f0-4f30-a310-1b60c8541e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a67f74d-375e-4387-b791-1f86a0db209c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a742bec-baf6-4261-b2c6-fe62bbeec76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b67ddcd-7ef5-411f-a2ba-2e7fca0a60bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dca7fc5-fe39-4154-8e0d-b622f90c2914",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d960cb81-d35c-4cc1-a8fa-d066276f1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6136ba-589b-423b-a045-252048a7bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a263d78a-f3f7-4a84-af54-7db79ef995ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1377c97b-bdba-497c-b27b-2e4263888634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede1356a-52a2-4a00-b2fd-af61f8f83a25",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d02a0-7fea-4b92-a17d-95189191f038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4126df94-2ed8-41ad-a602-4eab064a9c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183b31c8-78b5-4512-a69e-0e7d466d72c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a325be8c-e5d6-45de-8aa2-3ad77446614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6421d3-0dce-44e5-98b5-cd1a79f4b9ce",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7442c828-fe9c-45e8-b69f-fadb71f307f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2c9f4b-cfc5-4214-a620-61ff95ef0717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc81818-b40c-45dc-9b16-1812b606210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "549ac50b-2cb6-489b-8175-dd8a1ee8c691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419dad17-9b3e-4acd-a7f2-3ee866fb9f3e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad012e10-8d88-47e5-a4ba-fa388ef16e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cff5f4-1bbe-4001-8e2c-86f443517e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac422bea-4123-4da6-b27e-fae535a29364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35b378c-58b0-4248-846f-af4e7ba25d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad4fa99-0755-4278-8f03-8a2243ad2f8a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef57c9-1f59-4da4-a3d6-e0be10aef4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b7c7dc-e0c4-4909-9965-837b37d96a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f8c91f-dd00-462e-8ed2-520f06ae7b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02634ae-b9a2-4c20-a66e-038e95e6829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d918d-956f-4366-987a-76fa336f0628",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afdf552-5316-470e-a664-d687854e0872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528ea888-7774-49bf-a838-d367b07fe5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba3f43c-6c9f-4b00-8447-28c63623d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeca34c-477c-411c-abd3-13a2b8dc4968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67539c1-53de-442c-a91c-5d631a68568e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badccc98-998d-4c62-9894-b2714bc013a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4c09b6-2fc5-446b-8361-bcd895f4560c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ed6aea-2cf6-49fe-a473-16fd85e7701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66306af8-21c1-4557-a89b-fbf869d3dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53383819-52af-4d9e-a2aa-f0a95260a99c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3384a5-bc57-49d9-b3b4-45b34c0a7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1aa2cf-27e3-4f75-a33d-daf55bb89e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43f2917-269f-4eec-8645-249a559bdf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a949d98-89a0-4cf5-b943-cd8b28176ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d464f47-a197-44f8-b8af-710fdd64fd04",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a69c2c-385c-487d-9cc2-434884f60056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21c8aa1-6e0e-4bfb-850a-ca3195589563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2078fa-6c04-490b-9819-df2f844aa77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "565bf96a-191d-41ec-957b-1059d3204136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e112f44-bccd-409d-b515-0ba0d61d7d91",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bace448-4cf9-482a-86e7-1e8538c2da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61da2a4d-bc52-40f5-8d96-b0ddad1489c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f4593-7f23-4f5e-aea8-c6b04625edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7b34e8-c9ae-42df-b526-d7fd5f3cfcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50ea637-e47c-42d1-9e2b-44fed8ed0f7d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3859f0d0-226d-41b3-8f54-3d5b94c80a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6074a426-2eef-4bdb-a191-18f73a3e9a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d330468-00e8-451b-ae69-87929d009269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b40e3af-20f6-428a-90bd-43b410c402bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c370a56-2b29-4f07-a624-f6b6a73a2fa2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab199a88-84df-43a4-8c07-87348b7fa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2076d901-ad4a-4cef-8348-cda2fbbfe4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414db92f-7aa3-4a6b-b8fd-dd90fb92dd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb84f7b3-27db-4b83-a38c-c2725c34cb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac9dfe8-0149-4dc5-b870-d29002d21895",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f79ed58-ab14-4b39-90ca-f2e3e4900f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a534ea-52f5-4387-a89e-41f8349e2f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbcc087-ca1f-49a3-9222-ac0a523c78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76796743-a0db-4120-a0ba-56a271f1a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f759154-4d3c-4ced-ab6b-f64a70d399c7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddf6d2e-4788-4a05-b5b9-2bdc24f1f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8290da2c-9f19-485f-8230-1699c51d3752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9403aaf0-576b-4d4c-a11f-49f3c6ab5482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaa469d-3987-45cf-80ed-f5d69d5b0294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1fb811-c57a-49a4-8203-95ff6151401e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c21eb0-a42f-4af2-8894-d647bf3ead18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d70466f-e6fd-416d-be9a-2123509fdd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb00cd6-c4a2-477e-9d08-17d4bdb7ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03beee1-53f4-4945-b1e5-00cc801f41cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f42bcc-2b4e-4260-93fd-04a6b5b2a27a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d2f82a-17a9-4211-b576-811d735bbc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd8e8a3-61e5-4b79-9648-ff641add0bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9405c2-96b3-4cde-a276-4ae66bcee34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81737a41-239d-4d2c-b410-3238faf70136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334c9731-9725-47ff-8e08-b38748390585",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6cf1ad-be5a-48f6-8bc7-b76c46167a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80ffa0a-2d90-4eb2-bb9f-344386b0b006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc39be0-04be-4a8d-8ba5-fd426ec0f44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "885ba0ba-7eca-4d96-b7a3-c1f088322f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf7ea59-0cec-4320-b877-c2c8c86c4908",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9465f62e-e69f-4307-82f1-6424448a3dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5736e02-ff6e-40e2-a0b5-c6867bbc42de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e4011-3587-4c83-92c2-78d076484dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aef3f0dd-9037-4b59-8c71-963b5c4fa8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ae2365-e948-44ac-80f8-96e3f0a52f81",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a97cc-d495-4654-8b6f-9e4ba4c81c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52b0c14-3a54-4e79-8eb8-a2f49051f968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20728707-af37-49be-b102-ad60779b1af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd8b462-9ad3-49df-af3a-d96b380a09db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d05224-9e7c-465d-889a-0be35252dd58",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5e3c71-7bb4-43ba-95ae-23643cced51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d07407f-65f7-44a7-8de1-14c6d6c1a623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc8839-fdfe-4c86-8bab-46abf4de5e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cc5dd8-fe59-4e71-b862-7dbb93f32cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf30b95b-e321-40d9-be9f-4ffc590cc781",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c293c52b-fa97-44d8-9863-7186361a892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a116debc-4a4e-4605-aeda-15bf1d53fe54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9869316-1746-44e9-aef1-67773ae6132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c4b9ea-2bb3-4169-bf75-1c9e46f158b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572fcd4c-8e1e-4eea-a188-280459ec272a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f07d0-313f-486d-98b8-0c0aed569786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041b3e4f-ba41-4c13-bf1b-4996a67c1ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48251f2-be44-450f-9561-09e8815ec04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c029357-76b4-4990-af83-a4ac25e925e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af23960f-d49f-4426-a41a-83bf17f85c4c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379a4431-0660-402a-9fac-bef089e1879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51ff516-7e87-4ccd-8c2e-139154d47719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a87f82-cf4b-49c1-b8cd-5065f72b66aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d90bc88-b203-4caa-8827-2bc688c86c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c3a394-534a-4c21-8b28-70b2ef0688c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb5bad3-3824-4716-ad91-c19e286a9db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f7434b-35ab-4427-abab-7fb1d0ff6398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea74bcb-abe4-4789-8567-326bad18159c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22b86b6f-f63a-4643-9983-f8b5bd0cd875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a6d6e-0b94-4712-8298-675e34801e03",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c572e250-6997-4286-b8b0-4c46c5c22d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e48b5de3-23f3-4a4c-a2d5-86c59d2e5540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863b51db-110c-4936-aee5-da36b6f18435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "202bf4b4-0d68-4c4d-aaf5-922b8039ecaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbdb801a-ef7d-4c12-952e-28ecf5b975d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "651c3fdc-cd5f-4dfd-9394-6e9469c0fea6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2373d6-0dc5-48c6-94d4-564057fbf32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c72c5d5-88ab-4487-98dd-eebb5aab4b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b8d4f1-017a-4b71-a95d-5bdca98da3ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358f1432-ec7e-4bdf-8a91-ef7eb006d520"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d07ee326-0e2d-416d-ad8c-78382ab8b852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7021c0cc-f46f-4558-8411-455343b87402"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d3c4571-b84e-41ea-a2a0-f523d9d0b17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f387c07-d250-44d7-808a-ff400001edd8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d40b9e96-b134-4845-9f41-ee1af27babbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2542fd81-280e-4122-aed5-93cfde123820"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "211c7e3b-cf8c-4a97-9c1a-47152da2753d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a73f737-57ee-4967-b002-92ecfafbc433"
                }
              }
            ]
          },
          {
            "id": "8794a688-49d2-4122-9cb1-1652fd3b1bad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c1eee29-debe-4456-9e7f-ad57ed419a10",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d8cce14a-4ef6-4a4f-a034-33b0ca1f9267",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440b5dcd-16df-4ffc-ad08-a12302ec5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2d2abc0-c369-4f14-8e12-512c9950f5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da14fbf-9fc2-44e4-a932-723c294582eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f460afe-fba4-4337-899d-0b6333ce7149"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3c620c9-c2dc-4760-8655-9eda1860c82d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "812b3272-27c8-4cb7-a86c-411546cd38e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93fdb940-7d9a-4e95-8314-e9f78a857d82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c9c261e-d88f-4c02-abfc-c8c0203f9950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57e0409d-cd34-4713-b0e3-69e883ffc3b6"
                    }
                  }
                ]
              },
              {
                "id": "16a228d8-3160-40db-9e8e-c4990e08f9ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ed06c4-2d32-4b29-909e-bed2ad1283b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e2b212d-ffe1-4bc0-a5ec-40f95c4d970d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fe118c1-b388-4ed2-9d16-b2fbbf0ae12e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92eac39b-f938-4f88-b1d6-9fb48f15d53c"
                    }
                  }
                ]
              },
              {
                "id": "9b177638-40be-4a34-b725-614706c5fa8f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea36d1c5-41ed-42ff-a193-0817fa5ad615",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce3500a9-8137-47a7-a2a7-84ad300ff2d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e634ffa2-c2be-453b-af3c-0b401315fb66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3464e100-27f5-4cd4-b029-ade37a453aa5"
                    }
                  }
                ]
              },
              {
                "id": "a5b0a08d-22cd-4437-8693-7595d9fc184d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e474b983-ce30-4322-aec3-f27a6adbff16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cb2c60a-00cb-428f-a141-69dc1be62eaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e02c4878-3873-4284-bbd8-1ec94f0dfffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5417be59-0387-4777-bae6-1c5e04b9402e"
                    }
                  }
                ]
              },
              {
                "id": "def146fe-91df-407d-bf27-ba4e0d7280e6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b977f13-c586-498a-9ea6-a744bc2b91bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea4fd1c-e25c-4cf6-aafe-df8038847563"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40a25cea-80a7-451a-961c-ef10495c775c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9bf6cad4-db54-4ca3-af89-ca2ff5318616"
                    }
                  }
                ]
              },
              {
                "id": "cd2faca0-6d04-4a41-90dd-e4edb0eda712",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e67221-8c62-4726-92f1-24c2419f9de8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42630bec-ecd1-4bb7-aa80-c06dbf980558"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552e6bba-2574-4db3-a3a7-7db3b873b644",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa7cba61-dcc2-4771-95ff-308e0bc275f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89fc13fd-ded7-4dc8-bc7c-13e651e86a0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87172454-bab7-462d-a929-60d4e2c12085"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "095ba280-76e3-4285-bf21-cbe4fd980e94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1b7a87b-0a1b-45e5-b7e1-bab3688dcdf0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "981db999-dd69-46f8-838f-2d422bf78e7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "18118e82-6c29-4a09-88a8-a4d597ac7ceb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd27885f-bee6-483b-82c9-912d29a40594",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce2d9193-317b-427e-bc4f-ce1b46a4f1da"
            }
          }
        ]
      },
      {
        "id": "68f67d84-9b90-4b9f-881f-3fd0dfcb20bb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c7b5dd7f-dc27-4f32-b840-3f792654486a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbc5c250-4dfd-4aa5-853b-0dbb943e6962",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4993bbb-ab5a-40d1-9134-f112846efd9e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4554128d-6209-4943-8bed-ef4cd7306a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70df6b9-eef3-4f48-a80d-902ec887a641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886f8aef-5dd7-4d61-ad42-bf2e6c31944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0025419-2211-4d06-b865-94153698ac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206170e3-6b60-40e1-ac86-f52fcf81ceeb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17252eb5-612f-4c8b-8cc4-3fce78be6ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6c862a-136d-4bdf-9311-d4abc5eac3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac599166-d065-452c-9101-9a0c0efc951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d41b332-d6cc-433f-8a9c-cd7eb19af275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2514607-ef6c-4462-96b7-2980c0dad350",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c1f755-c2fc-4432-87e7-505ec76a248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23510f7b-6871-4543-9f6c-12e473efe5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf0e971-14d6-4e10-a1fb-6aac0e8f4de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef82ba78-42b4-4bee-a87f-e50219c1aab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d277a07c-81ac-4886-a074-88093cec7956",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb68df97-ac57-4387-9aaf-1d6cd1116e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf2c7fc-066a-4338-b6a9-ed2655d0e0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c51624-9c92-4b3a-a0d9-8aa58e1b9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7fce0e-31ee-4bd8-ba59-790fc83e5326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca29533d-222a-41b0-9034-3943f0e6eac2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edfa571-070f-418f-8090-18b2886b40ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e02ad6-e4a7-4d39-943e-c9cd99cd7eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db93ac4e-d2f1-490b-a295-64e0fe0b5b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "685a4a3e-52cc-4391-a9f8-fde803a1fa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc86f6-412a-426d-b944-ab48fb508631",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5cbaf7-4140-4be9-ad2b-eb41fd06a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd264e78-4c8f-412e-9c57-c17911e494b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e413ab3c-8443-499c-9397-272fa81aad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b1ce81-ab4d-4e51-8931-bc51620b2e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a6cfe6-1315-4128-abec-bb9f58de2662",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd9b5e6-e97b-47e0-8e26-a58efad42dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b407bcba-85b2-4c51-b5b9-4475c9f9e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c5515e-66df-451a-9c84-0a24792b28d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dde59ed-e9f8-499a-a04c-cc82feb8024f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983c9c75-41ac-4150-acaa-12771f747a68",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8c97b8-ea80-46ad-b710-b1d2c91ba854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9a0008-eae6-493d-9a11-3bc8a570372c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb5b005-f190-4b23-b4b7-06bd2b788cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9451ae-0cf9-4593-a216-a5ccaa26ce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a47a38c-d614-4c55-ab6e-2babdf1c285a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad33444-ff97-4822-8ece-66277e5922d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18a5870-cc4c-452d-bb78-72b3e5e06871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3bbb84-9817-49eb-b052-ea48211011e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5975a0d1-c124-47ba-8584-937493976416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab339d2-185c-4b60-8740-b3f358dd422c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb1d7aa-e3b2-425b-913a-e75880e314d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ecea84-217f-4590-a313-cad29fdace3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62418d7c-626c-47c6-92f8-524140471c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d02a02c-5bee-4f13-9547-cea5b6b1d672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d4eb10-6c89-47ed-9df6-dfeadb6ce182",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ab74bd-2a22-4d9f-92d8-1e4ed4397e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c325692-26ba-4dda-afe9-aa4e7b18d324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dce1585-6d93-4b31-aafe-be315aa6ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d34666-fb1e-46b4-9f67-53e76e03175b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66d276d-1517-4796-98ee-5b2054bf1642",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a61e02c-e699-4851-8777-2cc00fa5b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523540de-4251-4e08-958d-89096b6df8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2d616b-366c-4b5c-9b1a-58d285a4b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d950b4a-2cd6-4c09-ab33-49273360606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aefb51f-fb7e-461d-b05a-210988fc6e83",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c93161-77a1-4913-93a9-de03a7550c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dcf72a-c884-4657-be3f-5cb1a8df30dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8794115-7bdf-472c-b759-aba6a869bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "134b912c-ed99-41d8-afc5-b4c289edfe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47140c7-3820-4cc8-a0a1-85bf9b8ae419",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d9a960-4d8c-476a-9737-9e55080f319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50b9165-d0f8-45d0-bb43-18b7b36aa458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4cb3a-21a6-43b6-95c2-09fa870b7fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd69c4ae-fa74-4639-9784-04ee408ff144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f396dcbe-41dd-487e-8004-b3129bab4532",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb92aa87-4559-4ca5-a19d-367417e4f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4183cb6c-e633-48fe-93b4-989a246f5472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5b8ea-1874-4638-bb20-fb6888a8b6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "205b9e96-6c9d-4212-a3a1-127fe80f36f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f672d5d-e0a5-43cf-9c82-7eb8ab297514",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc33934b-f14c-423b-9777-56b6c738506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb55729-78cf-41f2-8f14-885ff3117949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc3ca30-37bd-4f91-8e19-4b51efcb7970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85dbef7e-b5f3-495b-ad7b-01b19d6daa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aadf34d-7650-47de-929c-4bbd83a83dd8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c289d5-c4bb-4744-9fb2-f8fd63fcda65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb9c773-da44-498c-b103-cf36e57ea7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1110ec20-eee6-4687-8209-e33aa1d9213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a32e06-89c5-47f7-bd3a-c0f3b739bd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b627d-0677-4f48-a4f1-820618e4abed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10c4b16-af22-4398-aa14-eeb799e28cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13ca25f-15f3-4bc2-aa4f-58c2680c27e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deff744-94d3-423e-878d-47623a85cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fe834e-4733-4723-91e2-e120e62ad86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac78650-440f-470b-951c-567baa36b79c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d112b24-3fba-4ed5-bd63-0c78bf197ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e5fff4-c53d-428f-a4e9-0fd52eee4b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dffcf3-1a68-4296-b120-9f0a41fd52cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d689596-dbbb-49dc-8d6b-a57201eb18e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a941d64-d429-435d-8724-ceb0f9c190cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b928737-4633-4041-ab1b-6efd0f49d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e72694-816f-4f19-9162-2109e9b089f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7580e575-770e-41e1-aeaa-d05a791e00d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "633d1621-ce75-4a2a-ba6b-02f60e13db1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f1a3c3-9b7a-4160-a799-28cbeab8ec3d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d0efba-fdbc-4d84-8974-4bd8f174c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d504646-8fec-4311-bed3-08f833d286d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dac761-c17f-4588-a878-01af1b3afc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94421381-01c7-4e62-a38b-1176bdfe5369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9bc659-f39b-405d-8ac7-825322ea63a1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b4daa-336e-43bd-8ffa-406948fe595f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6648a5-e77b-40dd-b063-4c50f3cb69b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27931d80-0acf-45ac-a56a-c01524e8fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ef83c8-8c1c-48af-8511-f8a9832b36bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cd5416-611a-4185-9c19-9f449ccaba67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8809c6a6-ecb6-4a51-b6c7-8636e4091b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e3000b-642e-4a8c-a7b8-d358ae86ddc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8fab9-4896-4cb0-9a44-bf4e654b0d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3472ee5c-9baf-499e-9a09-8b488f3b155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafee5e1-7052-4b48-9c5c-12f5a12d24da",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b9359a-8a86-40d5-9abf-590507a94aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0545ccc3-c7f7-4620-bd39-4c7ee92bf4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce115fc8-9f00-49d7-92c4-c2b921e30420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f659e9c0-0e78-4f8a-ac94-cc5857d9c294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7911fe2-cf6a-407d-b8b6-fe3c74036326",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c106ae3-7f98-473d-81ee-3dad41373028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0deb5d-2854-4cca-8fbf-335bfc442aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78495b66-ae77-4c3e-b9bb-16f5d5b2c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7502ca6-bc35-4b2b-aa3e-b3803dd59ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d723ebfc-866a-4d30-acd5-6bb28a419f8f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29d55a3-112d-4fd3-a405-ec10c86f2e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f83c5c8-ab34-4cd9-9442-a1929524d0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f5364a-a281-446e-8692-b4d5848c7aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6508c1cc-0a7f-4c1d-8efd-91b764071430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebe7600-60f0-49ec-9162-a48ae535eb30",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7feeb5c-f24d-4460-af3d-047d60e53f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bda8c66-e118-4485-930d-cc8a7454bf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f6c934-b835-4101-a42a-6cec395acdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2901013-d8f2-4da9-a7a3-35ad08bc713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20682e84-60d9-4fe9-b9be-594c12a8315c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf221ca-0ce5-4326-b3f6-67a6e1cd1095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cf5606-a8d5-47a8-ad46-3893d64413da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db844b76-0975-4dce-bde7-e29b87e4033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d191bea-e3ba-47a3-b0ac-10636fa91ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef6dfb7-f2b3-4408-b293-36266561fdf1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc73c8-fe36-4135-90a6-bcdddff2ccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba9f055-ec9e-4fb2-b57a-18c12e3ffe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce029d1-487a-432a-93fe-77345c065ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15938dc-17a8-4321-a9b4-499554abef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30200b01-33c5-4282-a6de-00f824752a04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9988af-0712-4a4d-8c88-192934ca5a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69befbe-1d9b-4dc4-b96f-fcec038ac839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b620b3-3df2-42ba-8e05-dc66b87f63d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103e9fa2-43e0-4ddb-8053-abc50a707a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23978fb-3c71-417f-ae30-efe0f3100c72",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251b11fc-5a53-4a5c-8662-d9a531fd2483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a81b53-35e4-417f-946f-454218b52839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116bde61-e9c4-45bb-a024-69a8f9a966c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572c49a4-8195-42b7-b494-e4556a43348d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b7005f-ba0c-46b4-99a8-4aa3f44c687b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0dc458-f0ca-4ca7-8860-3ad57255435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0fa80b-35a2-4115-a62e-00f0c7a2a09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a2aad9-5987-4866-874f-500fe517d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf4c771-f73b-426a-b19e-a71a648ea08b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43e33780-85d8-4f31-8bdd-6cd21713b591",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a3e3045-04df-4ca6-b274-b7209a3abac3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e42d03-5986-4ab5-8c8d-574577bef1f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01d526d0-16b9-46cc-947d-b53b318b2723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3950a28a-4045-4746-97bd-6a0d9b42bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7011c3a5-75aa-470c-aee6-1d3b2e525f5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7cca14-5b5a-44f9-b845-551d928c535d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3cd87b7-7746-40d3-b488-c5045217e709"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b6e1f0a-4a5c-4558-b42e-6e71094996a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aca7389d-cd68-4798-b5da-13785332ca71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5523bee-75de-4606-883d-aeb2af3a5a8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc948bc8-62ab-414f-a673-754d5a58b44d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44903f89-5b4d-4173-bf15-375eac2da242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b54e360-5b73-47b2-8ef8-4988a623ea2d"
            }
          }
        ]
      },
      {
        "id": "96d32288-96c5-45de-b662-daa7e2d503bf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "248858fd-8675-4376-9760-a35e1a28798e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afe25b10-a4cd-4ab5-ac6c-1e0d1ea37da1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95111b52-6f4b-4f6f-805d-e1782e8e31a0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7372d3e6-3d96-488e-af4d-c8b391a0eced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b547c48-5b1a-45b1-a5a1-57fc2cf77596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcdac13-a1a5-44bb-ac2d-475ad6f69532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0d8f84-9dd2-4d47-8bff-b857d6411f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162f840d-f506-4206-b120-e3a70f277ea3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c9fef-bbae-4b61-a29b-d66b23b46179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac5207e-d81c-479f-8b80-0f29ad057f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f654a9cf-18ce-4bc4-a459-1ba9189d6ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed44f96-4d35-47b4-8a22-ee542b639f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c834d-7a1e-4d0b-a6f3-d2bb4672ff4b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9443e5f1-9fdd-4467-99c9-e7bfd9fb0499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4892ff8-dfc8-435c-ba3d-c5a630ae6efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59efa77-519f-4414-b654-7d13f5f2efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea84c632-e166-4d8e-a2e3-0f3dd1ffafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8bbf2-ce3f-413b-9683-1a2775cec5c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a62ffb0-031c-492e-be51-3c86dbdc1478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94d9e79-c4d1-4b80-adc0-6f0aa28e0dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b3eb99-31dd-47db-a2fa-91ff0bebde63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b602134-6150-48aa-a18c-de97145311fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb0c24-7d13-4aa1-b04a-23fe267de1fe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2723f838-fbbc-4e5c-8dba-c69f859f5ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef008071-1c9d-490b-bb40-dfb927f9a2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c249f99-17f1-4023-9b71-3e78251fc608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c2e21e-cca9-4a35-81dc-ab3b9a9b8ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e6fdbd-7a43-439a-9ef1-2c0320c1772c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d599733a-19cc-4277-803e-2329280cc3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45ee1c5-c1c2-4aba-94c9-e968cb32224c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b0adc7-80ad-4607-ab80-aeb89764b505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "976e4abf-560b-4abd-8627-0943c8f3bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb08aa9-01b8-4d50-998c-dfd18b9e2a37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f7a09f-6fa5-4eb4-bbc8-8d7457273bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f9d33a-b5ac-48a7-a4d7-98159704d33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8af163-a9f9-4eee-b9ee-a46969de6f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f994ee88-73f5-4cc3-8072-238b78b8c855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6944191-898e-4a05-acbb-416bd0d125eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c00e9d3-1798-47d7-b8bb-1259615fecae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363054cc-acc0-4ba5-a598-606c8dd1998c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342c6f91-4128-4ee5-9023-f743d6fa3745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb049bd-a0c7-4bc4-b212-6f064d6f609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420224ec-a2db-4b2e-b999-2829e0cd575c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e747921-aeea-4247-8bdc-732e7f487473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a551b0-1de2-473e-aab0-44d628082457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a16f3cd-5187-4169-9d38-6b706986f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bd048e-1317-4725-b0f3-b257f0bec96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5d0bfa-74a1-41a2-8d12-8a2bb3907615",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e09c39-cec3-4770-9d5f-00a5fba385ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731880cb-af75-48e2-bc6d-b885ceeb4a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195b67aa-3a12-47e6-81cb-0ecb2048aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfca1ec7-affc-4964-99b8-19a1f33c2727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5abb9be-88ee-421b-abdf-aecb3cf1123a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ea3856-5c1b-4f35-8d5a-11d9784fe429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a47b83-49e0-418a-82e3-69b7b19c04a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc56ed7c-896f-4841-a409-8a142bacd791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae47397-2a63-42bb-b59d-1b5b34194dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43eb68f-baaf-40bc-8b19-1a04e01eb91a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90afac7e-4b66-4b9f-9e53-e5c70dae48ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac71310-ced3-4f7d-9f64-d00a1381f2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5f6958-cb6d-4bfd-bd1d-ecd06690df5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f97f7794-2679-43a8-8104-992a9dbe91f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1bb7e5-62fc-4abe-82a6-fccd8fdec9a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e43852c-bf8e-4555-8d89-0d6ab6493f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e3e362-7adb-4f85-acdb-e26a9a62d247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7a8a74-ed5b-4541-b90a-6f38f2096caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "010678cb-169d-4d0f-8d03-30efca8e3905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c63ccb-adff-4c81-855b-ab37b4945016",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2279d9ed-b242-4e5d-aacf-387ab85e20b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693b30cb-c614-414a-aa3c-fcce56ec4546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c210e24-5228-4969-994c-cc88ee3519bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb242c-f37d-45d3-b1c6-49fc9a0bb40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faed55af-cbda-4869-986a-d3f8ae694d2d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd632dc-95ea-4b20-853f-9dd588366f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d652c0a-366d-4b11-a0a2-f9af4b3847b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0ac0b-6b0b-412d-a5b1-27cc2d5af461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa5305b-707f-4112-97ba-8baee7530ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba057749-b934-4c54-aad1-b0aa0313059c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdad405-af99-4c15-abfc-15fdfd5f9ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71a08b0-7b72-4490-916b-1cff9e56c6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fea450-4233-4126-a672-337c3576a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "390dd273-0ada-4bac-a171-f051a637b3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171f097b-82e1-4207-a001-b844ecfbe2c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fda850-30d1-4544-80ef-5df487a2d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64837b05-9d6b-415b-9f5a-056a5cb8f3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3bb584-cdde-49c8-8717-bc53d1cd3f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "084af442-36db-4d1c-8656-96d3a76cfa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4856be2f-3340-4550-a1fd-2435bedad8dc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ec849a-125f-46c4-b96d-179f06ae26ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2681d5-0c9d-4bf3-ba20-47b5336d18c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a995e7-4d3a-426e-8936-3386e234a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf74ebd-3a17-4779-9bf7-b41f937b8e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b194c811-dec1-476f-af1e-88768d8bbffc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376a5441-28e9-45ef-8e9a-a84dfe84c643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bec0e7-6a99-41ed-b59d-ea036506e93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0218144-ea0c-47b6-962d-cc2b763197f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e3bfea-7664-4bd9-8655-6a5a9f8baab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b1775-88d6-4856-8198-d41818da77a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370beaf-4fae-4084-a1c5-a67598071a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f448e5-42cb-4563-8fdf-9537767fe340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4b1b55-4baa-4212-bb7a-cce35d6a02cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86a2447-438f-40aa-b779-81a8b60d5f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9044454d-d6ca-400c-9eb3-529b158425d4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95a7e1-447e-45b8-a677-885eda331c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cb45f0-cc68-446f-a3a4-589eeba4aa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c01a02-8cea-4c20-b39e-4dbcb6c03f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280d903c-9e32-4e1d-9e4e-ed8cc5226b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74fa99b-6a6a-42c1-b03f-35caa83a37f3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd1816-e1a0-478a-98af-398c8c038486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73936ffb-4d62-4276-a337-8a05a8bb8f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3082f1ec-65f6-4938-b1cc-3fe62b1a5d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce6b132-6255-442d-9944-f3a724db3138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415c7f2a-3b28-4dbd-8353-4618ecc31858",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ae409e-d202-475e-86fc-2b99e005ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a3fbbf-967c-499b-8103-b423ad5786ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b967e94d-c5d5-4493-a543-262a70b77cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9bf7b5-e253-4780-92b7-ef72d0bf4532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5646664d-5d70-4ed3-a6d5-82ead9f9c261",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac205191-b324-4626-b49a-1d374e947132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d303a8b3-33e5-4fbf-8e33-e7c6ee07c6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d112fc9c-95aa-4396-8075-ff5d0a0ac9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7b66ed-3db6-4ef6-8d25-001f5e09df97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c4d91-1972-4ab5-b991-d5befad34afd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c30e4da-1f08-4828-a035-28b61b1f522c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f937f3e-5954-4baa-abde-b5f783039718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52110a1c-3a59-4632-9b76-08da1bba40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f20438-350d-4049-a495-6a58c3a6f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf79fe9-1cf7-4417-8ab1-fbff3a719775",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7459ab99-e5e7-425f-8e0c-b4d62cf4604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3188b792-c5e6-4303-a622-3d391f00747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adae7c1-bfaf-4a01-9b90-436f8f8ca79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e58724-c883-4ebc-a009-0b726498c759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d24d35e-d3b6-418b-93cc-11a70977162d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d591f7c-c75e-45af-9ac6-7aab15b26e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd48ee-92d3-40e3-b86c-18fc33e94c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7ee552-6f39-415c-a257-eac942d92164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4c10c6-7dbe-4216-9650-8c84acf96563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082339d2-539d-4f9f-ace2-4031f1987529",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d537e-6129-44a7-aa79-2245749fd872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb0ec55-7b97-4359-82d7-1bb853ffe437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e87566e-bd93-4b2e-974c-539a53724589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36c88e0-4d2e-4f53-9679-7b1547a250e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dd8334-3669-4e32-9500-e71332aa723b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca5931-3fe2-4800-a097-b419338c4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9f8442-ae84-4f6b-b521-d3621f21fa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0c0fb6-b60a-4fb1-a4b5-69198db3216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f221fb-43bc-419f-ae84-86b93be42f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c14f296-f453-4d3d-9c42-f3122adfa7db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcab7343-bc5a-4b6b-aa49-253b97c8fc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c883ccdf-8769-4d58-8072-17de36596f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6cd83a-f5d1-4e80-a097-18e0164fcdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55da16cb-bb15-4ab0-a724-1eabd40f9380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdd5a87-1214-4355-90ed-32e87f67c849",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a640824-fda0-4e4a-87b0-03a6baf24e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e65ca6c-be1e-49f8-b221-403ca644fcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3ac6b4-5a59-46d7-bf28-bfbc64b4a526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea12b9d9-b08f-4634-8bde-8319bee04cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baaa09f-3608-4091-ae6f-8e416d7b3ac3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da39069-9f00-4c5d-a7e3-2e6b0e794a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce60d71-9a6d-437d-8795-f4a90f7ddddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d55e48-0ba2-4ea6-a3c0-7b761c933855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b881c91-365e-43f4-9c98-a353b2af57e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b01428a-ebbe-4561-a20c-1265e0bc4988",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d84d6bb-9409-437d-8553-8a0098517dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cce899-4091-4f59-bbf7-faf98eae58d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b06c0ce-6c38-44c5-95d9-554a07dfda2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a39a1a-e196-45ca-a670-b12537a273cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4b77b7-61ab-4b72-8e9c-4a10f6798a2b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7bba4b-e45e-40fd-9f82-132497b5a775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bd47d5-cf68-4112-9c08-d866bec7b1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fefdfc6-5a8a-4ae6-aecd-936ff2ead6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9653b419-a9d8-4c41-ae31-ddd4fe651aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca4fdb8-5889-439c-9fd6-14cad95ee7e0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d4a7c8-0cbb-4bb6-97d3-4933a9db403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73543590-d44b-4d30-9b51-e640dbc3bae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870434bf-4811-4e5f-900b-eeb342a5fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fef611-fa90-49f7-998f-c31258ec9639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17aa3088-70d7-4c91-b73b-e66a45c0dd36",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc393b71-7321-42da-9292-31c14641ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da47fca-7424-4fd7-8ab1-cd1e8d7e01d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0645b80a-6927-483e-af5d-fd955b62c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527daad9-11e8-41d4-a636-30eacd3e4c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a93ecdd-b43e-45be-abbf-d67439eee93f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bce3615-31b4-4c19-a701-0e94ebfd0540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df897b5-4108-4331-9a4e-1180fbb6f4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69972e6d-8bcb-4b48-9769-f4becbf5eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39df94e-7103-4549-accf-8bf66a40ac85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "533c9bcb-3abc-47c4-9a69-aead63d3fb29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2dec85f5-9fc5-408b-b9f5-b07c294bc559",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a297e9e6-4680-4630-8629-ffee1365f51c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f327422-5b66-484b-a542-fc20591da594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe71c05-a65d-498e-a01a-b4c0bbc1b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ec682a1-eead-484b-940f-c4d52dbed437"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e85b9eb-ca49-479d-9283-b96d7b439b94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68c1c57-406b-46ac-9a29-5966fc6a6789"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "722e5b59-cb55-4010-9582-96176aa35bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f706ed4-113d-4469-a3eb-30de5331a8d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd4633eb-ab0b-4ee0-ab30-3fa14da7da8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dada5a26-fda9-4e93-90a6-b0c35a6c1ca5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "242aa97e-bf60-4283-ade4-c9277706321c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a791ddd-d756-47e4-ba67-ca4292865520"
            }
          }
        ]
      },
      {
        "id": "0aae58d9-25de-490a-8c6d-72e91445fcbf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "425227b1-ff54-4a65-a617-4d4f10a73515",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62b1571f-d83a-4ffe-8119-d1689c35238d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e71c5854-7497-4346-bece-667f30f0bee3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f0839b-895a-4af2-b6fc-00ce273832da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb640a1-6e8b-4e2b-88b2-0108e338030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d3df0-a424-4da5-8470-2647398bcd68",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e666c-267a-4440-96ef-06fc5cdaf308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ce2eeb-22b4-483c-af69-abc811aafa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7424ded0-e7ae-41a7-b5da-ef1f1d4fc748",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35f1cd-5f90-42a4-9d66-37e0bfee2f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d98de7d-55b5-4ca1-96d0-4f7946941ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806857f4-3e9c-4d46-8f58-0d184a2828a8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38da3553-55d0-468d-9c5b-451d3f1706ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bee48b-9b4d-451b-b882-c52afec1f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f121dcc1-bec9-4d25-8035-d3b047d4d025",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80028738-1b9f-4212-a9ee-3da8ea8bb51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f0c1d9-9fd3-4b81-9b3e-6dc897584b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a2231f-28f4-4de7-a197-458b98ad617d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a543b72a-d70e-42cb-9db4-4d6c1c168ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72334790-8a8f-4f90-9fe7-4b12e0ed6ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c92b0-6908-494a-8684-5994281f111a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6405e60-6847-4329-a19b-9ddaccdc19af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644538b2-a64e-4698-9e76-39b8b895b203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d9af53-f5d6-4b7e-bb9b-fa4f8ffe3e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a291b65-e483-4238-98bc-7792e0f64f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1cd6a-f718-40e6-a02e-342c2a98fff0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eacb04a-4b63-4e53-a067-31a81f72b0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335ea753-f3f6-4682-b4ed-bcbf90640413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19460213-c14f-45e6-9a9c-b7d13460df33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99045761-8e11-4a22-b51d-8e536fd26e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d59f7-f4b1-4b6a-a730-c8575660528e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee8737-cd50-4abe-9745-613f21922068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22bb3ad-f540-4f5e-9fca-671b11b9090c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62a7c36-a15c-44c1-9e3d-3ae94263e524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59281362-50ad-4bab-ad47-e78889e9752b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec16595-3f26-419c-ad80-89c88a5e3cd8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e874523b-0524-4e82-aae2-fc0c5aa32f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6cf8374-88d9-468b-a7b8-2785e111275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9268bc78-d101-4889-93dd-6c8dcf05836a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64840710-cb1e-422b-a2fe-86edc7ab2435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd56044-5495-4424-91a3-1ad7e7afec75",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc64af2e-4d83-48a1-8518-ff72aa2acc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be39db1-535d-46ab-bb06-d50144010d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f3934-e33f-4703-b10d-18ad13450054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c2fcdb-5ddf-4ab5-8c33-47871339e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d16eb7-1b51-4f70-a140-e4a6beea2554",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a434d5c8-3a47-4960-8bed-dfb8dde04fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a944764-ccc1-4fb6-9857-6ebe16d80560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff306834-9647-436e-a16b-94fbea4e0977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae715798-4215-4f65-862d-d7fc0f7bfebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31e7469-efd6-45f0-b171-990c4e047c2a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3bf6e3-6ccb-48ce-a1c7-ae952de549a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5ad119-1d58-4b86-a03f-6cd5b65bda5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5749cd63-e02f-4084-b0e0-7421cc30ad4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fde6fdc-b6c9-4a73-bce2-d54b51115845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e396f4b-147f-4097-93a6-84f211312409",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23583d04-21c2-4525-84fc-39786aa1486a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b831eb8f-5c20-4b07-9be7-91ef8843bc4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a237f2-911d-4da3-858f-f262bc7a59be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bc9b1f-875d-4ccf-9574-04108785df04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87727c4d-1ac8-4428-9419-222fea9487d5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3af0e1c-3f49-4d42-9011-df18dffe9ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddf281f-fe9f-4a32-967e-e4582acb8875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56dad67-65ea-4979-87ef-184e441918c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9232f0b1-54e7-48c6-96e9-6b1cefdb7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09448dfc-9a40-4e49-af15-1357034192e3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7b7859-8912-4498-b0b0-220e1890b391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4fee9be-6042-4a61-8888-71eef4e74532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dacec1-b932-4be9-bc65-2a13323518ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa972586-d3ce-43d1-895e-604dbd70d6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9778fc0-a403-445f-93a9-6c3c6de5db15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757203c3-61ef-489e-85e6-8bf8f0b30a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed4fc49-cc90-4d02-8002-f812a98fbc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332cf49e-45d2-4c95-bdc7-0ac67bfa611c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69676a73-a590-4ce2-b96b-8f1e62987c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cb94b6-3a8b-4984-8e64-732884be48c4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff4c00f-dfc3-46b7-a4fc-5de8607759f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8534f21-001f-45e1-a999-aef025a37adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3cbd52-0fc9-4fbf-bdc1-b9be8bff6e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d8a56-35f8-4f3a-a431-137f761eee68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976223a0-c93d-4b8a-9b0a-9a432cdeddeb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38df27b-657b-4af0-9d52-87292113846a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24af22a4-59d1-48b1-a3d0-7356363159dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f18080d-9eb3-488f-9992-bc2dcd9d76a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e56aa92-ec33-4017-9f7f-781edfc3769a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daed06dc-2fcf-497f-9c25-075324b3a15c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7465854e-7b1a-4fdb-ada9-a98b5b6c1f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20282b3a-d7cb-454b-b34c-8f0f94b1afa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55260b3f-f0d6-4747-825e-9b5ae65f550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3a0602-1dd5-4ee4-82b0-54594cdcb027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebdc537-acad-4301-9b75-db458f4ee2c2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f1abf8-4031-4047-a519-4c044306fba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cc0c08-ad41-4a6d-bb86-b77413cee737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e4cfa2-2361-4c3b-8aee-fd79b1412d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b70ef-8e7c-4633-bc15-1c34fa87c5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25528bd0-7bfe-4227-b8cf-eeb1ce00fdea",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b450533-8491-45d3-974e-0e48f8ea267e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61832a88-da8d-4943-abbd-a8f901059640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5685a7-299e-4cb6-b6ef-fe32c40f9248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bbea8b-bb5e-4c02-9695-1afcec9d7b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880f0b19-c16a-4eda-a050-2c394d91d185",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340898d9-0843-436e-9410-c755deecab7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fa98cf-c9f3-4489-ac67-148188e04d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99422eac-e099-4bc1-a1d6-3a1cdeaffec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dff7dd-38e7-4a52-8e95-036bb709c72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf9c902-ccc7-4406-bcbd-cae7af6bd549",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169af84b-a09f-4836-a4e3-1541379cf71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1d1143-5150-4fd5-a5d7-5328494a97c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc05ca6d-d367-488d-801b-6bad8b909516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e0166e-e38e-4022-bd1a-1c10caf24a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6dae71-6e84-4709-b58f-530ad83eb155",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eb0606-3056-4448-8a67-539707e25a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984a1f05-d610-4273-b6e6-a60548aa9c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f184f7f5-1c5e-4c4b-b219-697dc9861358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91476806-13a6-4211-a73b-83d8289b83bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f62b5f-fcdc-484d-9b31-fca5bf8cd6b4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ebd644-e138-40e8-82ea-d6c2ec936a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc897d7-70dd-43a1-9bf9-421b88f7c3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e8d3a0-556f-467e-9a6b-92f93fec6510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecadb01-fc27-4a68-b4ef-f18582ddca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9463185-2e30-4986-b902-394c8ed7cda7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94545b7-07d4-4854-a7c9-95a0bf2404df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b862019d-a174-4913-b9b7-32c3a9dc4771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bd6f9b-3208-413f-98fe-be751a880e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2ece45-a79c-4538-9e83-fc1c73e675b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d847ca9-5e21-45cb-90a3-518d5d0489ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21bbf20-1b2c-442c-86f5-46c4808faf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1aef4-2915-4c69-9117-968c96927d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12263d25-8fc9-49a4-9dbf-36592f61a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d2567d-6b02-4297-9bdb-c3a046d3c68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed9d8d6-69b2-4db4-aa35-58bc46cbecc5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cd47b4-3d51-478d-a46a-a93a4886e459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3356e62-d0dc-4eef-97fd-397f27a1c97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9616c9bf-243a-4660-9f67-b1cb6084da4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cb8a0f-fc83-42fa-8892-291eb5f11bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1eef38-c834-4d34-9f43-93412b544295",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f9f1a0-ac39-4857-9d63-28a681c6d6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d66540d-f201-4762-9eb5-2ebba8232e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd2df19-b86b-49e0-afd6-01be1668bab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fed0c4d-0b97-4bb8-9b98-4de5e3dde955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741df8a-02e3-4334-af32-5bda8eb5a8cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339a951-d67e-4b3d-b981-dc4c964dbfdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6f9740-4737-4bb9-a446-46f95b770aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cd754e-d8bf-498d-a63c-fab9f0e3c617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26b771c-97f2-4d35-a4c3-442927f50b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0055a3f8-8b5b-49b6-98c7-ec78356cc781",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49e8c1d-2a0e-4157-a0e7-9b2aa7d3e015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07fc47b-bf72-4abb-b39b-6c33acb44013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd3064b-d261-47b7-bbda-5d37f175cbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4776af9-92de-4a12-92ef-1b4effcfa254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e551f764-341e-47ae-a13d-020d3ad991e2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b1c8a6-2128-48ab-81f9-7ac6f0ff2446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f09baae-a91c-430c-97c8-7f7168a29044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9397a420-466e-40f5-a6c9-a5231f3d1360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a569c3a-f962-494d-9b72-01a98eac5288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756f1694-2ff2-4071-b700-6262a7de573d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc557346-9289-4e7d-a0ac-665d263cacab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4b1f0d-0f46-487b-b2dc-9228a7ba275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6862f2-9a17-49a6-8f54-837a9e71febd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c0f3ee-6227-48c8-adb9-11845f7871bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84625872-c9d4-4298-8ebc-7e2602f6ef58",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e07cd4e-1233-4d0f-87aa-df86102e3b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df8f2ff-1cc4-4db5-b437-1580c74643d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f4a2c7-17a6-46c7-8999-b872c7229858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9e01d9-e855-4042-8115-af72aeb295c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e118d2b1-e094-4bec-b03e-0a21c24818a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdb5457-27d0-45f4-8f40-cc41476a0c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91be0266-5a1a-475d-8850-0752117ec9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c9ffb-6474-4b4d-8715-10ce31b9a7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c0b794-3a91-48f5-8e3b-a1872c9a1931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0067d8b-436d-47e6-bfdf-194ed83a0c96",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f611aa-a676-42e4-b0f1-dc36fafe3830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cfcfe9-16f7-4723-a9ba-bcafad5093a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad398f60-5ea1-44d9-99a2-136c5dc30c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe22e01a-620f-48ce-b642-9c796449ed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d68017-f746-4487-a63a-1fb08e24f615",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977636ac-11c4-4580-9d7a-8b3498c2cfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b65dadf-6c9d-483e-b0ce-3b8f6307f577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ddd814-e213-4385-bbd1-5de48e529eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ddfa18-8afd-4b33-bb10-8a0a3f785bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c068c8-0c8a-4481-aca0-e9af70227382",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27420cf9-9f0c-4cf3-a898-5f155392cf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d996707-56d0-434f-9ed5-f42e524ee796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe57a08f-b5c6-4faf-9d98-8a8253ead9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750d7753-367b-4a2b-91b3-26073c8fc7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5ecc62-1eaf-4f6c-9bc2-c121e242632f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1aac31-3665-427b-9181-e16c2d163685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127d7d88-1f3a-4c6a-8754-95a4004b00d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c4cf3-29fe-4ea4-85ea-7f9f76a03f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe2bddc-963c-4c65-91a1-f410f1d7fffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aac5dc2-a6c4-4143-861e-01d2b992cb98",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea006066-e809-4ff5-abb2-a32d940c6914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e78e25-ec57-4a5a-a896-1f7984b1afce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c05869-91b9-4d36-ae37-a591eafef980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac05516d-5ad9-4513-ba8c-80af78de8ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625fdc42-ee39-409b-8336-ce22d1d79e35",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30097eb8-8780-40c4-8abf-8fa3047e9db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403bba9e-3753-45e3-ac47-54aee5f92a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a15b3-278f-40de-b5c2-a09e461a190e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d720731d-e902-4369-8e6f-524ad563d526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd36478-d1b1-42d7-90ae-40c3c4d7c20c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471da3bc-1d56-4df9-a757-d1abe9484600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5cea44-e870-4219-9ca0-d77f0b8df847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603aa234-bf28-456c-afb6-2a9e38c11795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a360f7d-5c5a-44b7-9a45-d88a8129bb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36e2ed1-becf-431d-b2df-1b63c202e389",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab86f1b-859b-426f-805a-b0fd47b00070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86d6c0f-ddfe-44eb-b9d8-cf9f323d563b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa34057d-8440-481a-81f6-925dd2c9f3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9969710d-d55f-465a-8ae7-20c3c90f75c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddd7d70-5c1f-4cdc-ba0c-eb084676a45b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76057e14-46b6-443f-8c28-bd5152a66496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0dca75-facb-463f-b2b7-45c02afe5f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca01e8d-e995-478d-90ae-ebc33628639b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8e77b9-2ede-4b4e-b748-2fc6b7fdc952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57247a90-76f0-44db-a4ad-077cfb99801e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe592c4a-3a5c-445c-9930-281845d29936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa774daf-2525-499b-8863-22127b59c681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51544646-c70b-46f6-bd36-707cc0f3f836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb281dc-dd9e-4cc4-a519-471001b6ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b10a9f-76c1-4175-ba78-d6f32a5e3bfd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab2b4d9-7f7a-4c0b-9e22-837449523904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2a9540-3a62-4a47-bfc8-f325aa1a465c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52738159-6b90-47d6-97bb-9975e9810078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d858d8-23a0-466d-95ba-008b6e7d4401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059a599b-9300-4c64-a943-7165416fba30",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d9e8a0-6c5b-4df0-a5a3-ece92ce009d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4190acd-9beb-44ba-b69e-3f38c84fb66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad58bba9-0cbf-45f7-8f26-355f28300a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7a561a-6f3a-4024-90f0-1b4dad25916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c72818a-7be0-4488-a868-4b57a307c372",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2281df-7a9c-47c5-a197-c24d7f3ec3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c25f77-b310-469a-a2c0-46933e368a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203e57ac-caf8-4b03-a683-f7de6c874ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e5211d-b267-46de-afa7-4bea1a7c5d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4400b7-c94e-45d9-9f56-92f3a16568ac",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49b388-6f6a-40b3-afda-8072d50c54e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4e0fd6-1859-4d8c-87b9-f8ee01cb2c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2cf15d-b803-4f23-a0fe-8661cb65005f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8386fa4d-3978-4669-85ee-2f0111dcdd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ef536-6024-4d1c-b549-aee914dad226",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b68a8c-fb29-4809-9890-8de0a47ce485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4b59e1-0ac0-4cfb-b7a1-8d5632f8d5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2ea381-d748-4a19-9779-b3e6d3788a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ce6c20-43c1-4a17-bec4-ce0514e58b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2464b2-f2f8-45b8-acdc-37e759384fa0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7c1c4b-b18d-42d0-96a5-bc39e2ca43f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9998a4d1-0f1a-4b8d-ac44-1f34c7ff8fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1700e450-327e-4880-af61-b9fe95f44d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892def86-f7b3-421f-83a5-2da34094f792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53477388-9910-4e55-bfe4-4847c2c98a8e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cf8ef4-78c6-4268-ab1e-3b37f7121756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce0f642-c825-46be-b1c7-c63625e22525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7115b0ea-1453-4f55-b5f0-f3772a5a8389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be971eb0-8ace-478f-b931-df37775bd600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36151aef-2465-4a43-85c2-b6163968602d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79d30c-afeb-465e-9272-2e0a6e8385b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafd9969-9b5f-47bb-9c24-7ddb6e5d8b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251fffa7-56ef-493f-b54c-5f06f093f183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8bfd80-edb0-4a31-b5d1-ff78294b936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350b769d-c2b3-41b9-81f6-6b8e7b6829e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9338d24-b2d8-4997-9849-0b3a78e457d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7068077-d254-4d33-919d-35e2115a70ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629fe782-d1b5-443d-895b-1b06aa121606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b78c87-e99b-43c9-bdf8-5ccfbd0c10cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367ff6c-1787-4e85-8a4a-3fcb21b11d06",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e3d8c-6071-490c-9f71-a2139a0acf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36508bbd-fa9a-412d-8b27-84716d6488e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204cf37a-299f-4afb-b8ea-99d48851b416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1859cb39-0fa3-44c3-a6b8-6d36c77f5815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c76e132-efd0-4f29-9c65-0c8ed4b51fb3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07541223-bdfd-45e5-bc54-39b7b90957a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcece93b-4329-46a9-8a0e-010177aa4245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e8e3f3-d10b-4306-affa-f6def359f2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500d4154-da0c-42fc-97f4-3f44707465df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a48a25-e7ef-45a5-b611-b3e3b4d6fbb8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe1114-567e-4543-a73f-cc400ca605ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f130bde-60a3-49ac-9bc0-88d89234ccec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b93dac7-2b9d-47a5-8112-09d8d5746f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b426d87e-efe6-4692-8b37-7f16abe4d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c06ed91-4ef8-4283-8928-99c4403e6808",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3333926-a08f-4f5d-96c4-467233f31dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63156ecc-c1c7-4ab8-b8d7-b3e15748ce74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3c7297-36df-4c58-8e75-e66211bf1dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea35b7d-81a6-4eb1-a9ad-3794e8fb367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faea532-34a0-49ba-88a6-1c0034d70116",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5342b612-2070-4581-b385-b2386a352ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c265e-7420-485c-b8a4-ea13f24e7f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7979216-1e07-4101-a234-e0debf61e793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a660abb-d246-4a70-906e-0e7a9502b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52735fb0-54c3-4ab1-8890-2573173e7cfb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfd852b-5e39-4fb2-bbb1-77560460ebc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed3179c-d4b6-40dc-b43e-5a1d55de71a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd707bcb-2b8a-4520-b330-c5c8ae877770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6836cd67-03ac-42bb-a25e-bebff8cd47ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212935a9-b94e-4194-b861-05f8ed9e68d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eca21d-f4b2-439e-8c2f-27913109ced9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83c6d79-c368-4175-a37b-1a8c94506d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41b805-9049-4391-a752-5a1dee052710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a36d76-7657-46c4-aea7-04a820ce59f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130186bd-3dc8-478c-aa8a-ac6411fa5ffb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46b8577-a846-47a9-af99-83dded42be12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b194fb-d47d-4ae1-a7a8-15c0bc2a2804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17e44ca-22e8-4946-8926-e24c5ff4a0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666e38e6-c206-4f89-927d-5f54b0d0fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0f7445-5042-4315-abe7-c3ea79d9bef8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be686a7a-c7ad-4c5e-a4b7-e62f9a87c80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8483f2c2-3446-4dfe-8787-a703e64e65ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4492d74f-fe9f-4af1-9955-964a0c2ffcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac81a05-e8e2-4997-bbc5-82ddadeb728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db02587-4994-408b-8150-b34c5a9124fe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c192c6-9916-4bbf-9742-accbb076bf15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe1ef14-6f3b-4b3a-b103-db59abcfa81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32628ba-27d0-4927-b765-35895d73705c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e268f1cf-cf11-40bd-b585-bbf2c51bdef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fafd464-6f0e-4fc1-8a23-0462b050995a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0521d53-b3e4-457c-b296-de7f4fae74dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb91728-645b-4f96-83eb-563a97aaed24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b09e80-ca9a-422f-9578-325bc3c85e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a86deef-244a-4d1c-a5c4-85a031044016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc56de6e-4417-4cc1-99c9-fd2bd89d4749",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288dd6ab-74dc-45a1-a719-a162e4d1ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ddef52-bb5a-41cd-bc4f-c8dd793bc8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3fd356-74f4-49d5-9ad2-a7433ab3951b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ad8438-ba40-46fc-976c-d6f3844047d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e61ea1c-a1c3-4720-84ef-999ac57f0978",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56726e0-994d-4d6c-8bb0-52dd78aceba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed311534-7022-4ef0-bbe9-aa6eca99d8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f182cc2-fc3c-4aee-b0c6-385328b6a53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9937f277-2549-4878-a98a-57ee29eb7813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cafca03-6712-4f92-8770-5eaea97b5c2d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc64b1-291c-43cf-bc58-d86847950257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce1d147-3ed2-4df1-b00e-329bae205dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f664b34-dbdd-4c46-9bdc-fe303873794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40bc165e-ce4f-4b0e-a60f-22d3fd8561c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9a5bbf-7de9-4a9a-befd-d7789650deaf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a560c372-ec31-43fb-b18a-6cbb4a35f1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c4c9a3-4af9-4971-ac37-2d466e959f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5bf921-898b-4ce3-9bc1-19d7bf708b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e32c1b-88be-4ddc-ad6b-9305cdf1cce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ea06b-a835-4164-ac5c-9ff87d42e2c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4f25cf-fe76-44a1-ac40-c330e83139c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c697da7-b69d-45a3-9702-a13a4e7c0bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e05dc4e-6a6a-48c8-89e8-2d809217df1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c10efe-4d75-4018-ab88-f4b33c89594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b060208-30aa-4f33-bb34-47be60f1df7f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8b4d34-dbef-47a5-8f05-4fa46c372200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e15044-ea8e-45dd-ba3d-55e388c4c70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f4207-512b-455c-8d94-3af22bf780ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb2c721-25a9-4535-8bfb-40b11a5c684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c78444-0027-47ef-ae74-8610b0f70760",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11039905-37d9-46f3-9a9f-0bd9cee481f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9397d565-6343-4795-bd96-d1067b3fbc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac14bd9a-e6a1-4e0a-9f2c-ea6b672d123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89adac5-14de-4201-81fd-da9f02a22e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361fdb65-74cf-44b5-88b1-e8cf44a9b7f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91f4cd-7f7a-474a-a7eb-53e1c0312ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df79abaf-3da9-4250-8ab4-8e4dc35a16d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c79dec-1c0b-488b-9709-e2126dd87c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d4d000-1f5b-4cb0-9d6f-fe6d4f1ea940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd99fcb3-16a5-405a-94eb-3f50415bfdf0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49af147-5685-4946-b0f1-1ae878b07a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3464af-743d-4370-b976-9672f6faaeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423ce81b-c8da-49a0-ac37-34eb6d09e830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bb738e-dba0-4aa7-ad9d-0b49bc15c827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e5e48e-047f-4f1e-ab39-f5fbebb7db31",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b057845c-96fa-4a4d-857b-1134363fc51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f1d09e-1502-47d3-939d-f169ca17d2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad73d9-68ef-4493-b557-dfdb87c600fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee585676-f1e1-47c9-8f7e-0dd7bb58dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7431b7-f9f6-4b7f-bec6-ae9a441e4047",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78774aca-98c2-4ead-ad7f-66555c18cf97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5dc0c9-2453-4e22-8802-65563f7741b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f13ea-b529-49b5-8924-388302492447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf6fe5f-0e16-4bb4-9b2d-5aaac9fd7d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7d5f20-c77d-4c97-9fb3-7d2997f451f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de85afa-5199-43d7-8065-661ea4f67690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c97511-9b47-42e5-b2d5-a50d99483464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf7790c-4589-488a-ba44-ff1e5a1c36a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5581b04a-caf6-4331-99b3-b73d935dc3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c62fd8-f50b-459a-ac80-d3a4a1abcad9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f373d5df-f6c8-4068-9514-79f95eedc5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5431c59a-20b3-40f0-aef1-802468f17bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addbf1d5-259e-429a-ac6a-9953e7bc5c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1011da-506e-4731-bbae-819a520dd1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4adacd0-3623-42fa-9930-398d9cd2ab4e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01115e94-1b4e-44c6-897a-5a157f389882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7197f28-4039-4e18-a929-bc32095f50b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e0b4e2-f922-4f8d-921b-5d3045e917c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d848cc-152d-4c18-9f7b-9444d7cce743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f954cbf6-4d49-4c67-ad41-bd3a2506c7ae",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199f56e3-45d2-4892-b959-138bc71e15dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc92257e-436d-43bb-9080-694e00ed0ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e357d15a-a5e4-4f8a-9e8c-35b911e3064a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b821053-51d1-491d-9045-33067ebe11a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488965f6-85d9-4263-8fc8-0721bd6b67c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bdb43b-fd4a-4f5b-8fb8-b3453498c91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733e6b52-e7bf-4585-ba7d-ebdaee3db492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aa66ac-3c64-4bdb-81ca-40e9f44f23a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbefea0-e692-41f7-bd77-cf00008dce31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8af851-be40-4cc1-b997-ab4e08a75c79",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877d817b-80e1-442d-96f5-9442076b6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdca1ac-3cd5-434d-bb6b-79a5aa16fd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f565b00b-f22b-40f7-a939-c052d24d09db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d359a928-851f-496c-9912-a672e45db174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c10396c-5c1f-4992-b074-3c655ec01229",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9ea5b7-bb9b-4ecc-92d3-45d45d414098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1e454f-c6c1-4d70-a07f-27b10427f489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7f4d4-3842-4899-8a43-f78d46b37ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b3965e-761a-45e0-b488-7817b526f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217a518-2b1b-4c40-9708-3624c5799a7a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9d1fa2-a27c-472c-939d-5f8f7f4e9c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b255e1-3186-4933-8333-ad07523ba4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d261329-3702-4783-a219-11d26d1f2941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36a75d9-ba69-4fec-8939-a57ca7e1456b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee87351b-6913-4d05-804d-b77062cae0fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7618a86-c05b-4a94-956e-5b068d988424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df276b14-8e6f-463a-8c75-f3461f6066eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da171ff-be95-49ef-8ce4-3cc89f6b0a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2331698-7798-4232-a7eb-2bc6b3670e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad289e1-cd8e-4b66-9e0a-f86c66eb7280",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b742d26-a37f-42f9-a59b-7a00552b329f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c94c5ba4-928e-4ba5-b13c-20902df8d065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bfb1d7-0116-491c-8c44-928e54554951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a27508-aa59-40c7-82c2-ff994a02f9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa29b442-c1df-4ae7-b05f-9328bf4989cf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d128ef-dec9-49d5-9a5e-d3ab4d720d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38ef66d-b993-4aa2-a6fe-13a4cba8d20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464fe874-38fe-44d8-9d44-f4acd3f2abdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2293777-5890-4014-ba04-7f127769468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6954616-166e-4cdc-941d-040ee9a261fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf52894-2221-44aa-ad4f-084d5665e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70ad0dd-4b4e-4a05-9c96-586a1913ba76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba34eb15-92e7-4499-b6fc-d61f33ed1012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561a561c-3769-4a92-ab2a-33fcca551bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18f9a10-5fbf-4295-84f3-8d3c85ae13da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637ae981-53d8-4bd2-8514-8584251a0137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9c64db-9b91-4ed9-9e6c-e86064a78c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aae673-d798-46df-9b09-bd8eab8ffc16",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108cfdc3-fd98-477c-9721-eca6f1eb4c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34522282-e50b-4fb6-9660-973fec13f242",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f248a-a69d-492c-b400-8ec10a541f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5bcfe3-a18f-4773-b386-04176665b260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98092890-de74-4f41-8a1c-151e24fd32d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06609c9b-fa3e-45bd-8096-a98208a8bc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a6d931-468c-4ea0-8c32-0e0d61edaace",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88a5328-e7cd-47e3-ac94-4fa5c9d1bc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce9dd2b-a6e5-4073-8903-6b4a04423ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd770d5-cd77-4813-bf41-85a37ddd4f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215624ac-f900-40e8-8fbb-94f050b20cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2e4186-bf1e-4830-8bf1-d17799f9e26c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6472b9a7-ad87-421f-863f-2aafd13b911a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c956cd7-d9fb-4b1a-b70f-3987071b2230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8034fe35-4bb8-4b08-ac8b-903dd9f18d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55108ff-4549-49d1-a0b1-eec2d4b02e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c23d071-e603-4910-88f2-07645295eaf9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401da280-408d-40cd-974c-57c15402f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f88e3a-d8b3-4672-b717-7fd3caeef6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698da02a-6ebd-4ab6-ae25-161d2789204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675a0d2b-6956-47d3-b0f6-e607f75e2fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd62e3-7bfe-42aa-b4d5-fca66aa3618f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652ffb43-5e8b-4814-90f5-a0173d80495f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed94650-304d-4eb7-a770-09a82103b52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e6d10c-bb6d-48c1-ad0d-b48d17305766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37d4647-1a72-4330-958e-f5c9915644aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b55b65-3ead-461a-8833-a1cdbc2918e3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3795250-35fa-4d2d-bc45-703fe20c9fdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3451795-dd89-4f19-965e-3c7e8e6d7b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35bb75-e59c-421a-a8e4-57021f589dc6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f658895-f027-4c2a-8413-021efb3bc86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e9137c-b6ec-420e-bbe3-7b656d65fefc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c59129-1fb1-4d5a-b3ee-0afdaf522ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5f1ee6-a778-4095-acd9-2b2a34778d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce95631-7bdf-4efa-8651-57f35056809b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8c6a4f-8c9f-497e-9619-37465b5709bc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb5b4383-0e71-4bbf-85b9-4405827bcf98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eaafd27-6629-45dc-960a-497b88ff40b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fc85c89-aa1e-4c58-95a4-7147aa62eb16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff15552a-be3b-4a54-b8a9-142ce49153e8"
                    }
                  }
                ]
              },
              {
                "id": "6918c956-bac7-45a3-853a-f2d42ddbd38c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1f837ea-2f76-4cd2-8e94-0f59d6f41146",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1500bc2e-636b-4d9a-8dc7-d3366fd1cee9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4bb90c92-988e-49ac-8dac-0fda35e592dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8c692-297d-44f8-bc61-497af20d748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f9b9ad6-6ec2-4a24-9618-7c2da4c7134f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b772d8a-18f0-4f03-9bad-fad41b084fb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "388efe1a-025b-4ba9-9885-f06090bb0e87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6ed3f34-ec18-4445-99d1-b1100a195313",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "447bf440-5137-441a-80a5-f17ef304d78a"
                    }
                  }
                ]
              },
              {
                "id": "3606cfb2-4c93-43c3-b472-d6cb72a87737",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6bc3f122-3add-4390-b7fb-29c94346dcae",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4adf75-5296-453e-ab0f-12b73641beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d311ab7f-9085-4c5e-99d6-9136b446dc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22703cda-6732-4309-b6d8-356a1ef839af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe62200-7165-4a41-b635-6fe8daba2ff0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd295144-0b9b-4e0a-aebe-ebe768816d93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3049e962-0b62-407d-9abc-bb9dfe6f69a2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3591f2f-df03-4875-8e85-de7561bd7a82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6da808cc-246f-437b-824a-6c9ec5350adc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed8385bd-a838-4e16-ae8b-2352105246e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bbdf4bd-9bf3-4a48-890c-b2b1305b8d9a"
                    }
                  }
                ]
              },
              {
                "id": "6565bc99-c9aa-47a9-bf27-dc29cfb048c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7509930c-fa5c-4b0c-8711-96dc0753f304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "502c35ed-f7e3-4c98-8dcc-d2e56bfbe9e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8182b3c0-267a-43c1-a2b0-90bab0b6746b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c674e5a1-3630-4fde-8517-e13fe288dbff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e759d16-d4f3-4f72-9900-b33e209bcb86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7fd3518f-1dcb-43dc-ad5d-ca5711e0e049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6386b73-bab8-4121-b687-6d02767ec46d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e49ebb02-2597-4ad3-ba4e-52f36e5c5a8f"
            }
          }
        ]
      },
      {
        "id": "6a710181-a57a-4029-884f-5604d3c8a530",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "10be3bc9-0a78-40ed-981a-ed10b12c8383",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3306ae99-2b87-4f10-b9b4-3fbd94c9bf1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4bbe639-640a-4c2c-8fc5-fbf11c0f9352",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2a126e-939b-43e9-b8b9-085818f398b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "49c1a760-083c-44c5-8649-be4fac3c3f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5456f2e3-d4e6-4a31-b5d8-484955d028bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04eebb1-5fa6-415d-86dd-90d2dcb506e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b015c7d-477e-46e9-8e2f-c7c436d1bbeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2599e773-d730-4767-96da-e38098516688"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5358a828-f051-4d83-876d-c063e68a374d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4419c59-4bae-4196-80ba-164023f2e367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "706cc49d-5115-4488-86c7-58f99dbe4d40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "17260328-8b86-4fc0-9dc2-0560f31e4708"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6559b6a6-cded-4369-8da8-970e32f6a39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d931f705-f774-4eab-9546-a4a98141c21f"
            }
          }
        ]
      },
      {
        "id": "cccef2d3-6125-485d-8a4c-2b79857cf772",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae767851-7858-4a8a-b2d0-e8e789bd6eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91affd2d-9b59-496e-b4ea-c78bde876058",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5eb4e4c-9edb-4449-97d0-38ab415defbc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e16b5e-8427-4328-a253-cf1f41da2855",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3db78fa-00ed-4b3c-9e1c-ff64dac3cfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2abc7d-a5bc-4a9a-afc8-5b4348292be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c2211a8-66cc-47be-aad2-aa060869aa71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0d0015f-9708-4eb7-84b5-92a9124f9bf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43e2b48b-cde9-45c8-907d-6847f614eee4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6780c53e-f1fb-46d5-aa13-692278663af3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e1b9baf-826f-4823-a106-707a52bb3aa1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3eed9c73-13b2-4d8c-8ba3-739f5dbeebcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12c3d74b-f901-4549-a430-127f4bb044f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c350f9e4-fe21-45bb-821c-0f6d7195ae45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d592d43f-5419-4729-96ca-a807c12f97e1"
            }
          }
        ]
      },
      {
        "id": "ff620793-8d4c-42ae-a824-4cd7b26df736",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "084d65f7-ff0a-4cdb-8b42-c817f67dbb64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5a09b7a-1690-41dc-9ebd-8b0302745762",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "467bd4f4-3f25-4d28-90ae-386912bc1591",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd96314-d666-49cf-b8cd-a076208203b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b113548b-129f-4bff-ac14-7aac8981a775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed9eab-0704-48e2-ab1e-b880daa4c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddfb560f-c5f3-44a2-a6d1-067ad7a9186c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbdda578-2ea3-4c91-adb3-7e40e4b601f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a40ba1b-ad74-4563-a9bb-6dd7026471c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "923eca94-8412-473d-9f7f-71cb730dfeb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4505e7e7-7e90-4332-b5cc-759aaece171a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d625b11-9b0c-4c76-ad4f-8ff066bca198",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e8d7a31-299e-4b4c-a820-60316be2097d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28453e80-c1d5-481e-8600-9b655622c50d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8780c0e-5a36-4b34-993d-ff8a5926821d"
            }
          }
        ]
      },
      {
        "id": "c9eefd3e-1b0f-4fa8-a8cc-ddc68d6bb8b7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66d19143-1c09-4c0a-b07b-4e581fd2b6ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a9d708b-8bf4-42c3-885f-40e327a2be91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8fd8719a-4a9f-48d8-a45f-fc165e3db075",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a0ec5a8-ea9a-4f33-8954-f44342dd1e70",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99c94df5-34b7-4cd7-996f-a793e229ccd6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.42456140350878,
      "responseMin": 8,
      "responseMax": 243,
      "responseSd": 24.247526773512277,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700613437657,
      "completed": 1700613455091
    },
    "executions": [
      {
        "id": "2246e6bb-efec-4941-a3d6-a222450e8f62",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ea9cadd2-d6fb-4d40-91c4-9186486b9af2",
          "httpRequestId": "26d5c500-ff92-4205-99ab-f1ba541cc3a4"
        },
        "item": {
          "id": "2246e6bb-efec-4941-a3d6-a222450e8f62",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a8689808-d7ae-4882-b71d-a9149be2a22b",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "98b3add1-7bf0-4782-a3e9-659c7b194e59",
        "cursor": {
          "ref": "9740e4bc-38eb-4c51-a222-6d31e24fa43a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e3903fca-b623-4ba0-ae12-0913635799e3"
        },
        "item": {
          "id": "98b3add1-7bf0-4782-a3e9-659c7b194e59",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bd84770a-325f-4ecc-bf0f-87868b511827",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "780586f8-827a-4788-a1d0-127f2e80a33a",
        "cursor": {
          "ref": "84f2f4d4-201e-4273-920e-146c5871c771",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fda10c6f-e687-4e38-a10b-1575b13efed5"
        },
        "item": {
          "id": "780586f8-827a-4788-a1d0-127f2e80a33a",
          "name": "did_json"
        },
        "response": {
          "id": "90fdd763-51b8-4b2f-87ba-c6099e0a7847",
          "status": "OK",
          "code": 200,
          "responseTime": 243,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4865a57-972b-4ca5-b5f3-b11e9b71fecf",
        "cursor": {
          "ref": "ca2d73ab-0458-410d-beaa-10c5238c9b5a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e63a2731-b831-403b-a6fb-ad63cfce0a3f"
        },
        "item": {
          "id": "a4865a57-972b-4ca5-b5f3-b11e9b71fecf",
          "name": "did:invalid"
        },
        "response": {
          "id": "57c99ee2-e40c-485c-9848-9381ed155cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4865a57-972b-4ca5-b5f3-b11e9b71fecf",
        "cursor": {
          "ref": "ca2d73ab-0458-410d-beaa-10c5238c9b5a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e63a2731-b831-403b-a6fb-ad63cfce0a3f"
        },
        "item": {
          "id": "a4865a57-972b-4ca5-b5f3-b11e9b71fecf",
          "name": "did:invalid"
        },
        "response": {
          "id": "57c99ee2-e40c-485c-9848-9381ed155cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec76e76-87c2-4bd7-9eb0-7ff3bf23fcd5",
        "cursor": {
          "ref": "b7e38f36-fa71-43b9-b06d-d03e5933ebe6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e5f5e11d-ce11-4192-844c-1577107f9bb9"
        },
        "item": {
          "id": "0ec76e76-87c2-4bd7-9eb0-7ff3bf23fcd5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "79e1c8d1-0c6e-499c-bd35-1d95cd6fc995",
          "status": "Not Found",
          "code": 404,
          "responseTime": 132,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06cd8f5-9693-4f74-9995-982bfa224e33",
        "cursor": {
          "ref": "e05ad09a-3ae3-466d-8eb2-b104cf14c3ed",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8443ab6a-1761-4624-a772-a78b4b11f3a4"
        },
        "item": {
          "id": "f06cd8f5-9693-4f74-9995-982bfa224e33",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cf8b8152-d6d3-4901-a63f-cb465e7f8ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40431d87-3787-4506-8aa1-e727fd2bfcd8",
        "cursor": {
          "ref": "832a03a1-1210-466f-bbb7-c36716760e05",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "81ee467c-d1c1-4a72-b80b-3160353f0e8a"
        },
        "item": {
          "id": "40431d87-3787-4506-8aa1-e727fd2bfcd8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b1cc1fd3-cc5e-43f6-93aa-d8242cba066a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0481d6-c8ff-412d-b2b9-30d4a074d825",
        "cursor": {
          "ref": "36bdb941-c77f-4c01-b1a9-79c6baa8a596",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "44d642bb-a553-4b18-b355-5e2d5ad5d8d3"
        },
        "item": {
          "id": "ee0481d6-c8ff-412d-b2b9-30d4a074d825",
          "name": "identifiers"
        },
        "response": {
          "id": "58285fd2-6a2b-48be-b215-a0e7a8446088",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08c0612-48cb-47dc-afbe-bf510d044ef3",
        "cursor": {
          "ref": "28ed4c61-90ba-4be3-b95e-857759891ada",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6d67d574-62e3-4a65-a30d-36fd1e198659"
        },
        "item": {
          "id": "d08c0612-48cb-47dc-afbe-bf510d044ef3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "86baf7bf-ae9a-4223-a83d-22910a008286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003b581-fba8-45d7-8386-b0c467dd4d40",
        "cursor": {
          "ref": "cfc2ed94-bfe4-4a83-a230-d46058c6325d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2889228a-4c9d-4e02-a32c-23a55da52d26"
        },
        "item": {
          "id": "2003b581-fba8-45d7-8386-b0c467dd4d40",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9e8b1721-e526-414f-ac2d-d66f65278d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58072ae-fb15-428c-9915-12feca659fa9",
        "cursor": {
          "ref": "9fdf1758-2e1d-4bcf-acac-5793ccf9e782",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "27bda937-7089-4c8f-b0c8-54bc12fe617e"
        },
        "item": {
          "id": "f58072ae-fb15-428c-9915-12feca659fa9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bc5b8a7f-a2dd-4f32-b70a-49315056472a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b53d9e5-784f-48a4-88b0-0b5fa671a398",
        "cursor": {
          "ref": "fd3f445f-bce2-4916-9e9a-dcf95de82681",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "194fe162-e424-4c16-a419-2207f61388a5"
        },
        "item": {
          "id": "2b53d9e5-784f-48a4-88b0-0b5fa671a398",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "12f58152-d1e0-42a8-8a23-1ad746bc3055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3827e894-96c0-43d4-b815-41149b0fbcc0",
        "cursor": {
          "ref": "9c182dbf-642f-436e-bc83-49ae78a442b8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4dbe14f6-a118-4c3d-a59d-29b09d67a763"
        },
        "item": {
          "id": "3827e894-96c0-43d4-b815-41149b0fbcc0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87cdfd04-0d9e-4376-b196-d53aaf709716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6858c8ad-a290-4077-a96a-2b1e507cdb88",
        "cursor": {
          "ref": "3f727d47-51f9-4320-aea2-71fe8464cda0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "113f1369-501a-4324-b441-b32ef37b2bb7"
        },
        "item": {
          "id": "6858c8ad-a290-4077-a96a-2b1e507cdb88",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a804bb07-9836-4418-b2c0-51452520e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d26ed-3499-4026-8048-cf5e80607637",
        "cursor": {
          "ref": "a827c095-bfa9-4ef6-a973-2c9de92ab33c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f3808442-78d6-439d-b84d-f0eb315de5e8"
        },
        "item": {
          "id": "ab0d26ed-3499-4026-8048-cf5e80607637",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "17575936-3f22-459a-b4a0-d7cb28f6681d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01563b8e-7db7-4d55-92c0-4806f7ae1470",
        "cursor": {
          "ref": "b97b16dc-6f33-4b5d-b0e3-51d3f42297fa",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7cedc499-01cf-4ea7-a402-0667b9b7358e"
        },
        "item": {
          "id": "01563b8e-7db7-4d55-92c0-4806f7ae1470",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75f28d9d-b527-48dc-9717-a00c3b879d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d24f468-9544-400b-ad94-7ed374056fbe",
        "cursor": {
          "ref": "81566321-672a-40ec-8f38-7af77acc9534",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04801337-6406-4378-accb-dd998198338e"
        },
        "item": {
          "id": "4d24f468-9544-400b-ad94-7ed374056fbe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b60c6cd8-9013-4e7e-81e5-496cc1142174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab39b3b2-9cba-447a-b5b3-291dc3d4521d",
        "cursor": {
          "ref": "ffd64d91-74f8-4ace-bf8a-bacde0c66ddb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4b6df8fc-bac0-4c23-bc89-7a7f3130941c"
        },
        "item": {
          "id": "ab39b3b2-9cba-447a-b5b3-291dc3d4521d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d5a4d39b-c55f-4bfe-bb98-83c087f32743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f373fa63-539e-4cb4-baad-668b149a9299",
        "cursor": {
          "ref": "5d93d825-c149-4f9f-b3cc-ee84680e5280",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "93df868c-817a-44e7-ac76-844e5232a65a"
        },
        "item": {
          "id": "f373fa63-539e-4cb4-baad-668b149a9299",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c2ef2740-4a00-41f1-b79e-d479e73ced6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353e603-59dc-4b38-befd-fb0f2e3a2608",
        "cursor": {
          "ref": "904a7164-5ebd-4c49-81c2-a39bb7727df2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4d6edab0-623b-46c9-b1d2-1a4e19217eb2"
        },
        "item": {
          "id": "0353e603-59dc-4b38-befd-fb0f2e3a2608",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "89255ad5-bc4b-44c8-a9db-b2551964e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c24f09-d92a-419c-b4c1-0ba96c011f66",
        "cursor": {
          "ref": "d496ff83-7613-4e88-ab21-e4e1adb54cef",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8868c596-ffdf-4934-ac5e-3e60b2fbd7ec"
        },
        "item": {
          "id": "58c24f09-d92a-419c-b4c1-0ba96c011f66",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46a243fc-9cc1-4fc8-a5f3-31ec66240303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f495a2c5-770f-428c-bbd3-30c72fb8af8c",
        "cursor": {
          "ref": "88f63bf4-a450-448f-b99c-aaa9c8984f26",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "96aca65d-a7ee-430d-9193-1069fc4baa41"
        },
        "item": {
          "id": "f495a2c5-770f-428c-bbd3-30c72fb8af8c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4246f099-a537-4fb0-86d2-631695cc3a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c23b628-a03d-47da-b5f9-c9d76feeed1a",
        "cursor": {
          "ref": "84feda27-cd5f-4faf-a2cc-c6a08947f7a0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cabcca7c-f5f1-45ee-8122-a49430e44de8"
        },
        "item": {
          "id": "9c23b628-a03d-47da-b5f9-c9d76feeed1a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d6295611-c6d0-4eb7-9b63-5ae62cbe4c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051463f6-7605-4827-a794-b55f0a3f8e5e",
        "cursor": {
          "ref": "8e895483-0b86-4483-a17a-ab2d7028734a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "38e75947-17e9-48fd-8e5f-cb432da3da02"
        },
        "item": {
          "id": "051463f6-7605-4827-a794-b55f0a3f8e5e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0e7a4caf-5370-4379-a7d2-ff51da5e97d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13c89c0-c034-4ebb-a465-03904b4f382c",
        "cursor": {
          "ref": "f2094a9e-35bc-4b6f-8418-c3f7ed08d811",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6189b912-0fd1-450d-bf55-0fb242f0c896"
        },
        "item": {
          "id": "b13c89c0-c034-4ebb-a465-03904b4f382c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b2f4a480-22df-4d6b-8e6b-18082b7a4898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7813f9a8-7e39-4c5a-afe5-3cf07c5e38f4",
        "cursor": {
          "ref": "e2e7cc01-fbaf-473e-8f34-a068356ddcff",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d399e839-34ba-4b31-9058-e4bd6922383c"
        },
        "item": {
          "id": "7813f9a8-7e39-4c5a-afe5-3cf07c5e38f4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "333cd6f9-08a1-4aff-b3fe-b3a605eb4a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f67393-4b8f-4ffd-9dc2-0823054445c8",
        "cursor": {
          "ref": "98ea6fcb-be58-4e1a-b186-5a69ab0bc930",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2479cf36-3013-4636-a372-d33f9fbb9be3"
        },
        "item": {
          "id": "c3f67393-4b8f-4ffd-9dc2-0823054445c8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b5db768f-4ed9-483b-8940-b8f8661d9bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eff04d8-28eb-41a1-bbb8-f85b58fccc7a",
        "cursor": {
          "ref": "e4a4f49b-039b-4baa-a67d-6a4e344deff3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "443404bc-30a8-41db-8a7c-c5889fed979e"
        },
        "item": {
          "id": "4eff04d8-28eb-41a1-bbb8-f85b58fccc7a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3b06ad01-7a9b-4222-a8c7-a56416f1e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55460afb-7c9a-4dd0-acba-e6ffd8bbcda3",
        "cursor": {
          "ref": "2d2df92c-dfe9-43af-b635-4dddbeacb9b1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3ac9ecae-fa1f-4c40-ba89-73f5d380876d"
        },
        "item": {
          "id": "55460afb-7c9a-4dd0-acba-e6ffd8bbcda3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "62fd375f-9a93-4386-b409-2562120ed00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56abd2fd-9cba-4056-be56-4a31a7c56145",
        "cursor": {
          "ref": "82430530-e4dc-4e1e-ba98-82786c68de34",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9de3f0a4-9a00-46b9-b7be-4ea3065864a8"
        },
        "item": {
          "id": "56abd2fd-9cba-4056-be56-4a31a7c56145",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "14394aa4-4dcb-41bc-9e21-e853af019e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca5f4b-8db3-4a9e-bf69-4e3ebbdc7b5e",
        "cursor": {
          "ref": "fffd933d-1029-4d08-89e4-228682f9998b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0d1f7f9-144a-45ec-b136-b58aab8aeabf"
        },
        "item": {
          "id": "9eca5f4b-8db3-4a9e-bf69-4e3ebbdc7b5e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80f94a7e-9f5f-4c43-800a-6180e4288bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1ea074-01d0-4843-9975-bae3e8f817a4",
        "cursor": {
          "ref": "23fda93e-1b6c-431c-9849-bc273aff9683",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a609823f-c578-4278-ba27-835b253bfd6d"
        },
        "item": {
          "id": "2d1ea074-01d0-4843-9975-bae3e8f817a4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9ff8c98c-a0c2-45ba-951d-5fcb7806d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2cad33-5360-4255-aafe-7adf38ef79de",
        "cursor": {
          "ref": "3c1bebe4-3889-4f91-9544-826ff2ecaed4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ddb5a14f-d989-4358-8257-3a6b54e11bd1"
        },
        "item": {
          "id": "ca2cad33-5360-4255-aafe-7adf38ef79de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "43b3c5f6-78ed-4bb0-ab9a-1caa7fa5b20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad0107-8eeb-4085-bc18-b8a2e9298216",
        "cursor": {
          "ref": "200438c4-fd09-4c13-9dc8-df7c64bcfea3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "88e7c2b3-9d3c-4eb5-831c-0754a9c79fae"
        },
        "item": {
          "id": "1dad0107-8eeb-4085-bc18-b8a2e9298216",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a40a4ab3-091e-45ae-8e71-bdfb6ddd5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186f10ba-db3b-4074-82c5-38c739199765",
        "cursor": {
          "ref": "3b5df4ba-6a45-425e-ba8d-3f8e21a7247f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6dd0610d-8cd9-4a8b-8f2a-9fdeab6dcdb7"
        },
        "item": {
          "id": "186f10ba-db3b-4074-82c5-38c739199765",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f8300c50-ee04-43ac-9c9c-1cc82d19ddc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a03f3-d19c-48b5-b979-6c58e24c420d",
        "cursor": {
          "ref": "c951dfe0-01b6-4266-83e7-adddebd39dda",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cbdbbfb7-2813-4237-b5fb-28b339c84d1e"
        },
        "item": {
          "id": "434a03f3-d19c-48b5-b979-6c58e24c420d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "79db3b84-6456-44f5-a5b3-fa8edd2857cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b72192-3fe2-4c57-8f37-bb5cea72f854",
        "cursor": {
          "ref": "ccbc2f74-a3c9-406e-9a73-fd99b3bf3e4d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "090ffa01-f988-4976-a086-60d9cd22984b"
        },
        "item": {
          "id": "77b72192-3fe2-4c57-8f37-bb5cea72f854",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81d55835-289d-4ae2-aeac-2cd7a0b3cd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a27bf3-c930-4298-96bb-a993b5246aa4",
        "cursor": {
          "ref": "36983b26-c29f-4578-8558-14da6a09e2e5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff9b512d-878b-4bb8-b078-87317fed80d5"
        },
        "item": {
          "id": "f2a27bf3-c930-4298-96bb-a993b5246aa4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b66c84b2-4f72-4ba8-84d8-7e899436e416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2998e224-72aa-4707-a96c-59c5edbe829c",
        "cursor": {
          "ref": "706b7bcd-f712-4131-ac0f-1d939edb9f88",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "32401c77-4ffd-402b-9c3c-972e4b60f5ed"
        },
        "item": {
          "id": "2998e224-72aa-4707-a96c-59c5edbe829c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7aec8bd-22b6-496b-bfae-c9a48cb9fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5fb4ac-6951-45b2-ab0f-81e85e4eeedf",
        "cursor": {
          "ref": "10e1be5a-d204-4c16-9572-4be353555c60",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c884424a-2b0c-425e-98c2-68bcf1d107f5"
        },
        "item": {
          "id": "9f5fb4ac-6951-45b2-ab0f-81e85e4eeedf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b70bb00-4e27-42c7-9de4-0926fa9f8587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3b4cd-253b-413b-aa0b-ee3cc1bf1756",
        "cursor": {
          "ref": "abaa1ee8-2c93-42ca-9378-ec5dfc90e397",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8ebdfe95-f224-4e4e-8ae7-c123d99b06ca"
        },
        "item": {
          "id": "1dc3b4cd-253b-413b-aa0b-ee3cc1bf1756",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76179c78-0d2f-4507-891f-02dec1e9d6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0a54e6-576c-44b2-8b40-5fba463c06fa",
        "cursor": {
          "ref": "5118e1d4-6641-4e4d-9bec-7a5bc9b99a89",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9714cad4-5d82-41b7-a021-f09b6b540ef4"
        },
        "item": {
          "id": "5a0a54e6-576c-44b2-8b40-5fba463c06fa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "933c0714-e8ca-4009-90c1-0fb6a6e241d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd3fc86-0b1c-4af7-aac8-ec8d3d40e743",
        "cursor": {
          "ref": "1ff4c0a8-ba7c-4efe-a8fa-233433cb133c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "152eca55-3c03-487a-95af-470cfad75d49"
        },
        "item": {
          "id": "5bd3fc86-0b1c-4af7-aac8-ec8d3d40e743",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "900c845f-221f-445d-9249-982970edfddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76441847-c9e2-4194-94f8-1172c1c97cf7",
        "cursor": {
          "ref": "43b52aaf-d4a1-44aa-9262-4a463eb08dfa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "32a51b74-8239-4e9f-9aba-f78a03fa2f0f"
        },
        "item": {
          "id": "76441847-c9e2-4194-94f8-1172c1c97cf7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80a32738-72c5-4736-9a97-e3ecd3295041",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc778f2-6732-45ff-93d3-e86821ea8766",
        "cursor": {
          "ref": "b3a50e7f-8649-47bb-95d8-ad0713e78dc1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5a508c8b-c88c-4e26-a255-6cfc1422290d"
        },
        "item": {
          "id": "ddc778f2-6732-45ff-93d3-e86821ea8766",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1101e4bb-ac5a-4875-bbfc-4388a69c2791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1787171-60bf-48d5-9553-db7dfda67850",
        "cursor": {
          "ref": "dedaa423-6d1d-4ff7-8b58-f350e95c09c5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "452f39f2-4114-4aee-af84-ea16c14a7095"
        },
        "item": {
          "id": "c1787171-60bf-48d5-9553-db7dfda67850",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1cb4510d-2d3a-41eb-acc1-70f93b05db88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8bf252-64dc-40a5-b2b0-769b892fed3e",
        "cursor": {
          "ref": "4472c081-df70-4bc3-a584-8482b602b1f8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "de54a2bd-dc27-4564-8bb2-47ad74b69387"
        },
        "item": {
          "id": "5e8bf252-64dc-40a5-b2b0-769b892fed3e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3badb4f0-e100-4aee-8bf9-14d483614aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cf1f8e-47be-4d4e-8096-52888ef166ef",
        "cursor": {
          "ref": "c6b11798-f981-4513-a712-ada87255bc3e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8164882e-5ce6-41fa-b5a4-809593c5a21d"
        },
        "item": {
          "id": "86cf1f8e-47be-4d4e-8096-52888ef166ef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "632a45dd-b313-4b5e-8fe9-69d2adee150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ba99e-0660-4e34-9546-3ebce3164563",
        "cursor": {
          "ref": "74e7c2c8-5926-4e7c-9eb3-79919a6e8951",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27f41b40-a006-43b3-bdd8-03bb67d8bb0e"
        },
        "item": {
          "id": "bd7ba99e-0660-4e34-9546-3ebce3164563",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f63ca2f9-437d-464b-932f-f476024854e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447be2b-15ac-4417-8453-742ea33275eb",
        "cursor": {
          "ref": "656e05df-edcf-465c-9243-a2713612d696",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d558efd-6d3f-416e-9796-aa782d8777ff"
        },
        "item": {
          "id": "2447be2b-15ac-4417-8453-742ea33275eb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d18b72f9-6e9c-42a2-956c-179a8bee5f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a689c-ddb6-4912-afa9-6ad6b7b528c1",
        "cursor": {
          "ref": "16d90b6b-3157-4d4d-a230-a41991f9f7f3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "21bab906-9b8e-4309-822c-beb875126ef2"
        },
        "item": {
          "id": "e72a689c-ddb6-4912-afa9-6ad6b7b528c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e9fcb462-90a3-43b3-8be9-286834e308b6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7217173e-49c2-4920-8955-b580371e9494",
        "cursor": {
          "ref": "1a3b5198-f3ce-47cc-a66b-d8cb0ae4bcb8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9bd2195-2834-4136-89bc-9d56f027aa5d"
        },
        "item": {
          "id": "7217173e-49c2-4920-8955-b580371e9494",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6f02d8e9-a5e1-4e01-b49a-e6e1d502bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61ef240-46b5-4e68-8d88-db64ede49c45",
        "cursor": {
          "ref": "79daebfa-c889-40b3-8db5-50448b8bba0d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "625cdad2-ce53-4b5c-aa84-4bb2ff6eb0e2"
        },
        "item": {
          "id": "d61ef240-46b5-4e68-8d88-db64ede49c45",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b438072b-4ab6-4f29-b604-253032f08ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd57285c-6ab5-4b69-9bdc-bf002604d333",
        "cursor": {
          "ref": "f14c3bcf-00c2-4b75-a183-2ec58c7e34c0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "46e979fd-fb9c-42d0-8286-888c05a736ef"
        },
        "item": {
          "id": "bd57285c-6ab5-4b69-9bdc-bf002604d333",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "938874ee-e95b-4ffc-9eff-31ff04dfedc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb00615b-a136-4c41-b430-04a2580d3479",
        "cursor": {
          "ref": "4112c036-8298-4f0f-b1d3-17aa6a13ed95",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0c9d786d-9c45-4b0b-8f82-731580a041b6"
        },
        "item": {
          "id": "eb00615b-a136-4c41-b430-04a2580d3479",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b47e2158-f0a0-4243-94d1-50122c4bf471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faf8cdb-575c-48f8-8395-8c7bf17de7ba",
        "cursor": {
          "ref": "8098b9b8-7114-42dd-a297-b39f6fc99c13",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1758270b-5688-46bd-830b-2da7efffdc9a"
        },
        "item": {
          "id": "2faf8cdb-575c-48f8-8395-8c7bf17de7ba",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9d65b14d-962b-4ef7-b1bf-5c7bf5c4ffe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd8b1e-2daf-48ee-ba24-8582c9247575",
        "cursor": {
          "ref": "ee494285-0f00-4d08-aad7-a9dacac07292",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05df8b6c-8825-4558-b756-fedc4925b1be"
        },
        "item": {
          "id": "3bfd8b1e-2daf-48ee-ba24-8582c9247575",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a9459bc-ae65-47fa-a9b7-6f15c534b60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2ffe56-e0ba-4c18-9015-39d5384d4d4c",
        "cursor": {
          "ref": "b542002e-c8b7-4235-92bb-a67f15752e18",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1169d046-226a-4c1f-a11a-ffcece792b12"
        },
        "item": {
          "id": "fa2ffe56-e0ba-4c18-9015-39d5384d4d4c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1796de4d-4ef7-40d9-8fd0-4463281e18e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6174f17e-2289-4db2-b76f-1f21455f2ef3",
        "cursor": {
          "ref": "8a90f924-bef3-4ae0-a3ec-6ebc0e578814",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1771d782-fea6-4ff5-a03b-0baf55a3c437"
        },
        "item": {
          "id": "6174f17e-2289-4db2-b76f-1f21455f2ef3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b50522d-a2fd-4c6d-a04f-e1be4863ab95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7d036d-10f0-4f67-b184-c63eba9e9887",
        "cursor": {
          "ref": "fc89f244-755a-4397-822e-8e32cb46f634",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e666e501-75a7-409e-9f9d-067bf4e40594"
        },
        "item": {
          "id": "1b7d036d-10f0-4f67-b184-c63eba9e9887",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c6c966b-13cf-43e0-8635-608240554248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fae5ac-8109-4b03-b0de-e6de870b0670",
        "cursor": {
          "ref": "4d09f245-3c5f-465f-bc51-417c46a90463",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "30547166-c624-4439-893d-59180938ef03"
        },
        "item": {
          "id": "f5fae5ac-8109-4b03-b0de-e6de870b0670",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8c4226fc-c160-4bec-97fc-34870f7c37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daafaa0-c462-4cd0-bb6f-8ee35523faf7",
        "cursor": {
          "ref": "5daa65fc-7777-4b41-a079-5e5dd505012a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f6584d90-7404-4e6f-a2fd-33d26de7a117"
        },
        "item": {
          "id": "6daafaa0-c462-4cd0-bb6f-8ee35523faf7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "33bd4ae3-3ea9-4964-9ecc-017955fc17c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc0e7fd-ce84-4c28-a335-b2b394df6cdc",
        "cursor": {
          "ref": "6bb7a0c6-fe9d-4c2d-b092-f1c7b7872d71",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "022f7ab6-f20a-42da-b0af-269fc30fbd70"
        },
        "item": {
          "id": "cdc0e7fd-ce84-4c28-a335-b2b394df6cdc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "471faab6-3aee-4de0-8ef1-bbcba832d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f1b5b2-b3ec-4028-b029-b6221de5d2b7",
        "cursor": {
          "ref": "da246347-a95c-4f66-a7f7-85225dd0f31a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "00e5c623-3ff6-4c8d-9c13-7f219a754bd9"
        },
        "item": {
          "id": "b5f1b5b2-b3ec-4028-b029-b6221de5d2b7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f7aab2eb-ce41-42a7-873f-85d77682c024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81df8805-5a4e-4c55-ae52-6f7bc73d12bb",
        "cursor": {
          "ref": "806271f2-60be-445f-ae52-8daade2eb7da",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98f532a4-ae00-48f3-a4c1-8e472b054d8d"
        },
        "item": {
          "id": "81df8805-5a4e-4c55-ae52-6f7bc73d12bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9a175f13-03f1-4aae-8b35-89226b96c5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e75da2-16ae-4a40-9a63-336c6a13ce0d",
        "cursor": {
          "ref": "218a2c39-e666-468a-924b-01b63e56e709",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dbb51d65-ae33-4379-bbda-5c90131b1812"
        },
        "item": {
          "id": "45e75da2-16ae-4a40-9a63-336c6a13ce0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "833d12f6-bc9a-48ab-9db4-42744ee2bc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e490e-ddd4-4c88-882a-2b8608dcf4ba",
        "cursor": {
          "ref": "7d44331b-020b-4d4c-b9ab-76912b2fc8b2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8f91c3a8-cb74-4762-ac4e-29153ffaabdf"
        },
        "item": {
          "id": "e40e490e-ddd4-4c88-882a-2b8608dcf4ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f27c728c-1ec2-4341-b90f-36f93b60f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0856c050-fd15-4576-89dc-e36f6883f445",
        "cursor": {
          "ref": "60dbda27-fbc0-4d20-864f-8eb7a33abbc3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "42c88d4e-c89d-454b-b162-221c14d46a41"
        },
        "item": {
          "id": "0856c050-fd15-4576-89dc-e36f6883f445",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8efa965d-010c-4156-a327-b720aa472fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44083ce2-d0d1-417b-9161-9b7295ee2051",
        "cursor": {
          "ref": "df7ba073-05c6-4183-aae2-7ed70275a7a1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7f62124c-1f17-487e-8010-2d2fe86905e8"
        },
        "item": {
          "id": "44083ce2-d0d1-417b-9161-9b7295ee2051",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d4363b69-3716-4f30-a2e6-4d20b6e5bfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb4e047-0388-465a-8761-e4daeb02c471",
        "cursor": {
          "ref": "6abfa3c6-20bf-4cec-84e3-d51b9f2b89da",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "56efad70-0bfa-4f49-93b1-7904a8fef8d3"
        },
        "item": {
          "id": "7fb4e047-0388-465a-8761-e4daeb02c471",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4f7e9075-3ec5-4660-8ae9-b7bdf7909811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3484c180-5516-486d-89b2-033de80fdd50",
        "cursor": {
          "ref": "a5a696da-e438-47f1-8951-1dcfd420ab8c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3fcc5288-3e0a-41be-b8c8-c2d464f37da4"
        },
        "item": {
          "id": "3484c180-5516-486d-89b2-033de80fdd50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9ab2aaaf-b2a3-4bcc-ad00-61e7abbe6b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f738d258-4d05-43eb-aa74-7f96eea30f7c",
        "cursor": {
          "ref": "39f228e3-d6cd-4cca-911c-f4e2cc09fed3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e431c913-8a8b-4606-a25c-6eb5cc72f667"
        },
        "item": {
          "id": "f738d258-4d05-43eb-aa74-7f96eea30f7c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d7fae68b-cc76-49ea-84cb-0d784ffffab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d95601-6d30-4814-955b-9cd675a9ec09",
        "cursor": {
          "ref": "b9519731-e085-489f-9e1d-2df61a40cd2c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3f49c710-11f0-48f5-8348-72a21e26a7ab"
        },
        "item": {
          "id": "21d95601-6d30-4814-955b-9cd675a9ec09",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "870f2011-712b-4ad6-ab14-7b113b02b66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f0962-7987-4967-91b5-d6daa2ed8d9c",
        "cursor": {
          "ref": "fa4a6ad3-7cce-4ca6-ab1d-d06d0940c625",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d20291a-e2ac-44ae-bd5d-61f829fe52f7"
        },
        "item": {
          "id": "b44f0962-7987-4967-91b5-d6daa2ed8d9c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a106eaa8-0327-42f3-a49f-9ea34ed74222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051a3ede-e367-41c6-8603-123b031cc905",
        "cursor": {
          "ref": "942a9503-e77e-49cf-9965-9c18e0710e33",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e6b7f04-5d83-4650-81ee-f37716420528"
        },
        "item": {
          "id": "051a3ede-e367-41c6-8603-123b031cc905",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8a885b27-ef8f-4a5c-b32c-add66b181310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dca7fc5-fe39-4154-8e0d-b622f90c2914",
        "cursor": {
          "ref": "cbcedab4-f4a2-438a-a9ee-c6254012dd71",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "10db1fc3-f42d-4e73-a556-32401a4b0267"
        },
        "item": {
          "id": "3dca7fc5-fe39-4154-8e0d-b622f90c2914",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8d0054f8-05bd-4d0f-8ec3-408b8ddd4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede1356a-52a2-4a00-b2fd-af61f8f83a25",
        "cursor": {
          "ref": "13f55aa9-fcee-428a-9e39-880a1c937516",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5f7a8fd9-b944-4e99-b83d-3817dccfd8cb"
        },
        "item": {
          "id": "ede1356a-52a2-4a00-b2fd-af61f8f83a25",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7ec1370c-650e-4feb-a8ff-20402f137e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6421d3-0dce-44e5-98b5-cd1a79f4b9ce",
        "cursor": {
          "ref": "f5327eb3-0406-4b76-ab4f-963324ea11d1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "11f11982-73c4-4932-916b-23fc042ea9a0"
        },
        "item": {
          "id": "8a6421d3-0dce-44e5-98b5-cd1a79f4b9ce",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ea1fe663-04c5-4b4f-9d51-08deba639380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419dad17-9b3e-4acd-a7f2-3ee866fb9f3e",
        "cursor": {
          "ref": "d784786e-2a86-4789-9339-e33649d7c1c4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "69b9a56a-487b-4adf-ba6e-d448b8a8534e"
        },
        "item": {
          "id": "419dad17-9b3e-4acd-a7f2-3ee866fb9f3e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7841de7f-ffdc-40c9-b653-5088782b19f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad4fa99-0755-4278-8f03-8a2243ad2f8a",
        "cursor": {
          "ref": "1f0f5e25-a166-4d2c-a21f-4dbf6beec949",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4428ed4f-f812-46fa-84ce-40bf21d26d90"
        },
        "item": {
          "id": "4ad4fa99-0755-4278-8f03-8a2243ad2f8a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "19c49214-e680-417c-b4ae-8ebf5863fc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d918d-956f-4366-987a-76fa336f0628",
        "cursor": {
          "ref": "3f6c6924-44b0-424c-b64c-675a7b0f87a2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1b74991e-cafe-4de1-8e55-80bedeede702"
        },
        "item": {
          "id": "d50d918d-956f-4366-987a-76fa336f0628",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b336f3b-5bc6-4479-887a-308cbd6871cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67539c1-53de-442c-a91c-5d631a68568e",
        "cursor": {
          "ref": "834c4fda-0c46-44da-b213-ff201b9c86e5",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7713d594-70e7-44f5-8212-86a3c2911b2c"
        },
        "item": {
          "id": "e67539c1-53de-442c-a91c-5d631a68568e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "46c59679-709d-414f-bec9-5990edb6bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53383819-52af-4d9e-a2aa-f0a95260a99c",
        "cursor": {
          "ref": "5c5d2e25-db41-46e6-bc98-01bdebda88e0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ebf3f49e-8ce3-48d9-aade-b0a43118b77d"
        },
        "item": {
          "id": "53383819-52af-4d9e-a2aa-f0a95260a99c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4d5360a9-6560-45b0-a596-9d85592afbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d464f47-a197-44f8-b8af-710fdd64fd04",
        "cursor": {
          "ref": "e8fe3059-82e6-4a91-b6fa-b8b51ebe703c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c2bcfb8e-d438-40e9-9f78-9ee0c158a146"
        },
        "item": {
          "id": "7d464f47-a197-44f8-b8af-710fdd64fd04",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c1820af5-8cd6-450d-a0c8-023f04738c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e112f44-bccd-409d-b515-0ba0d61d7d91",
        "cursor": {
          "ref": "ed18bee2-fe58-4c28-b538-a41315165c17",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d15544cf-3f4e-4d4d-8590-ea35c3a7b64d"
        },
        "item": {
          "id": "6e112f44-bccd-409d-b515-0ba0d61d7d91",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "032d0b23-9704-44c1-b73c-4718a39b68d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ea637-e47c-42d1-9e2b-44fed8ed0f7d",
        "cursor": {
          "ref": "44c1ee33-ba85-4ddc-a050-dbb91609c004",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a133071-3a37-4be2-81e0-b1a43373a29d"
        },
        "item": {
          "id": "f50ea637-e47c-42d1-9e2b-44fed8ed0f7d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "009151ea-529a-4d76-ab28-6ccff18ec44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c370a56-2b29-4f07-a624-f6b6a73a2fa2",
        "cursor": {
          "ref": "3b3c8189-9227-4e6b-a192-4ecde414ba7b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ad69b97-511e-4ccb-8796-c83b086d842b"
        },
        "item": {
          "id": "7c370a56-2b29-4f07-a624-f6b6a73a2fa2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a9e1eb23-3e08-43fe-86f5-1cbe1cc9a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac9dfe8-0149-4dc5-b870-d29002d21895",
        "cursor": {
          "ref": "d1821724-7671-456d-993d-961968500620",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b6a67b0c-894d-44ee-8b03-8ae4eb858ee6"
        },
        "item": {
          "id": "1ac9dfe8-0149-4dc5-b870-d29002d21895",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f120add-0ae1-4681-99f0-3eab1ffe0717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f759154-4d3c-4ced-ab6b-f64a70d399c7",
        "cursor": {
          "ref": "5a21b9ee-b45e-4701-b78f-fa7c51df1b72",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2f28b5bc-d640-44da-baf7-12320a830258"
        },
        "item": {
          "id": "7f759154-4d3c-4ced-ab6b-f64a70d399c7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a6caa613-0634-40d4-b984-ae7d306316f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1fb811-c57a-49a4-8203-95ff6151401e",
        "cursor": {
          "ref": "0b2dc22f-19a6-4d99-bb98-935efa6648df",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f9803d6d-0f2c-4e44-829d-5bb3641cc5a6"
        },
        "item": {
          "id": "de1fb811-c57a-49a4-8203-95ff6151401e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b3e6fa7-9a9d-4ec9-b108-2bb168093dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f42bcc-2b4e-4260-93fd-04a6b5b2a27a",
        "cursor": {
          "ref": "05ae0849-befe-4750-bfb9-e5712c55fdb3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "019f2f4a-bceb-424d-8a73-4c266aa8c888"
        },
        "item": {
          "id": "04f42bcc-2b4e-4260-93fd-04a6b5b2a27a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fceccd00-14be-46ce-b739-6ce30f7ef1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334c9731-9725-47ff-8e08-b38748390585",
        "cursor": {
          "ref": "0845c2c6-174b-4c3e-b375-8769e75d06ef",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b26599ad-71cc-4d93-aa07-cbf3263e9d6f"
        },
        "item": {
          "id": "334c9731-9725-47ff-8e08-b38748390585",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e27b2598-5acc-46d4-ae7b-4521b75ad4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf7ea59-0cec-4320-b877-c2c8c86c4908",
        "cursor": {
          "ref": "5c67d1f2-085d-4eb2-99a7-4a9243edd4a4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e87f8d7-a8b7-46d6-ada2-ee796e95006f"
        },
        "item": {
          "id": "5cf7ea59-0cec-4320-b877-c2c8c86c4908",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "839c6bf5-9fa7-462b-b488-d10bc5f77c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ae2365-e948-44ac-80f8-96e3f0a52f81",
        "cursor": {
          "ref": "063ee1a1-3ce9-4f6e-9529-bf3bf89bcba5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c25af530-5a7b-4ed7-8d03-6da7b6ce2aa3"
        },
        "item": {
          "id": "b3ae2365-e948-44ac-80f8-96e3f0a52f81",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fec5e5ae-b280-4965-86d0-6d3fafeec99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d05224-9e7c-465d-889a-0be35252dd58",
        "cursor": {
          "ref": "19be8bcb-36fa-4515-8ddb-dafbaf2e4218",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd2a98f7-2041-4a28-b1ff-e6b785f0bbe1"
        },
        "item": {
          "id": "c6d05224-9e7c-465d-889a-0be35252dd58",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7670260d-eb4c-49f2-a376-e0a46280d0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf30b95b-e321-40d9-be9f-4ffc590cc781",
        "cursor": {
          "ref": "a7407550-4205-4123-af04-e18512f07625",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5e188608-792c-45dc-b39b-fbb5cc368fa5"
        },
        "item": {
          "id": "cf30b95b-e321-40d9-be9f-4ffc590cc781",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6d52f5f6-f3a3-4997-9226-87bbbf5bcc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572fcd4c-8e1e-4eea-a188-280459ec272a",
        "cursor": {
          "ref": "3992bf26-29cd-4d2a-a5a9-5037da678f8b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce7ad52e-7ec1-4a56-b7c8-929f69a30c34"
        },
        "item": {
          "id": "572fcd4c-8e1e-4eea-a188-280459ec272a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c2bef73-9711-442f-9da9-60ec9ef96fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af23960f-d49f-4426-a41a-83bf17f85c4c",
        "cursor": {
          "ref": "b8860976-92e9-45d5-8b04-621eb5985b5d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5df4752c-4744-4604-b1ca-43e196f135cb"
        },
        "item": {
          "id": "af23960f-d49f-4426-a41a-83bf17f85c4c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1723e891-fab1-4dea-bd67-3474a1022bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c3a394-534a-4c21-8b28-70b2ef0688c0",
        "cursor": {
          "ref": "421c8f0b-d341-4c68-b056-94b2ddf468d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b633e2b3-566f-475f-a21a-6aa7fc7db8d2"
        },
        "item": {
          "id": "62c3a394-534a-4c21-8b28-70b2ef0688c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c7cf9abb-c4c2-435a-8bf0-0bcb2935059f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a6d6e-0b94-4712-8298-675e34801e03",
        "cursor": {
          "ref": "b9c18178-68db-486d-912b-3eb2e3d05042",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9581d030-260f-48b8-9aae-abda3b8d0fa3"
        },
        "item": {
          "id": "db0a6d6e-0b94-4712-8298-675e34801e03",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "210bf601-1437-4e3a-8d78-0d94ca1804bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651c3fdc-cd5f-4dfd-9394-6e9469c0fea6",
        "cursor": {
          "ref": "8191c25f-bde8-4dd6-a6f8-e7c59568dc71",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78aedcbe-2e13-4be3-9511-f6b41ba643c3"
        },
        "item": {
          "id": "651c3fdc-cd5f-4dfd-9394-6e9469c0fea6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d9b037d1-d75a-4f86-ad03-cc52ef5195b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cce14a-4ef6-4a4f-a034-33b0ca1f9267",
        "cursor": {
          "ref": "d529cfb1-63d4-4f0f-b784-9ee0e101be95",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9a9c0f30-560e-475d-bd3f-ddeb22a83b06"
        },
        "item": {
          "id": "d8cce14a-4ef6-4a4f-a034-33b0ca1f9267",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d57a2f27-4ade-4e62-b687-612e92e8588a",
          "status": "Created",
          "code": 201,
          "responseTime": 118,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c620c9-c2dc-4760-8655-9eda1860c82d",
        "cursor": {
          "ref": "23b9bf6b-e3ec-433f-bd50-12f21c110968",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eec21e71-1a23-4dc7-9153-f15ac98b0f9a"
        },
        "item": {
          "id": "b3c620c9-c2dc-4760-8655-9eda1860c82d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e33dc6c9-a3e1-4fbd-989d-2031da10ebcd",
          "status": "Created",
          "code": 201,
          "responseTime": 117,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a228d8-3160-40db-9e8e-c4990e08f9ff",
        "cursor": {
          "ref": "2c1d347a-27cd-4310-9ae2-7213e82f2532",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "93c29a15-00ad-4e23-ba3c-ab1732d6a40c"
        },
        "item": {
          "id": "16a228d8-3160-40db-9e8e-c4990e08f9ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "29fa06c8-084e-486f-bb71-b059d155462a",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b177638-40be-4a34-b725-614706c5fa8f",
        "cursor": {
          "ref": "601a310a-6397-49ec-94c5-fbdc98b2f216",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fb127803-fd13-4bde-9c3a-ceefc11b9b21"
        },
        "item": {
          "id": "9b177638-40be-4a34-b725-614706c5fa8f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9a82476b-c20e-4ae4-9bfa-413abfd045d3",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b0a08d-22cd-4437-8693-7595d9fc184d",
        "cursor": {
          "ref": "db083a2d-1f5a-4513-b985-9551e88586ab",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d510a948-8153-4276-9873-11025bd8c198"
        },
        "item": {
          "id": "a5b0a08d-22cd-4437-8693-7595d9fc184d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cdb4cd69-2a39-41d0-a312-82d2d4ef398d",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "def146fe-91df-407d-bf27-ba4e0d7280e6",
        "cursor": {
          "ref": "b8b8445a-08cc-4438-959b-4f9c1ef23829",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6e11d73a-886f-4b9c-b2aa-65ca79a5061b"
        },
        "item": {
          "id": "def146fe-91df-407d-bf27-ba4e0d7280e6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ab5d7dbb-165d-47fd-89c0-9519f5eaa470",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2faca0-6d04-4a41-90dd-e4edb0eda712",
        "cursor": {
          "ref": "be5f7c50-7af1-46ec-b145-0bae1017fe28",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b5c7182a-4137-4629-9cdf-304af0ebdf63"
        },
        "item": {
          "id": "cd2faca0-6d04-4a41-90dd-e4edb0eda712",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "241252c9-a4dc-491f-be1e-2a01be919afe",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4993bbb-ab5a-40d1-9134-f112846efd9e",
        "cursor": {
          "ref": "3c88bdfe-307d-4cab-a550-d4e2a923bbd9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dd6358cb-e45c-465c-a74a-c088f80317a3"
        },
        "item": {
          "id": "c4993bbb-ab5a-40d1-9134-f112846efd9e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "df39d511-dd5e-45b9-bc5b-e9d753a87505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206170e3-6b60-40e1-ac86-f52fcf81ceeb",
        "cursor": {
          "ref": "44b7e6c3-7bdc-479e-9887-0c69721dff1d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a9f9bca3-d82e-4697-b538-1ffeee8f08a2"
        },
        "item": {
          "id": "206170e3-6b60-40e1-ac86-f52fcf81ceeb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "857b4c75-fb86-4053-91ee-ff0b1eacd88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2514607-ef6c-4462-96b7-2980c0dad350",
        "cursor": {
          "ref": "81dab49c-0b52-4cd9-abf8-f642c28dd60e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cd9a484e-60ae-4e50-b431-b8fa69e0055d"
        },
        "item": {
          "id": "b2514607-ef6c-4462-96b7-2980c0dad350",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5e712fd9-079c-4ea9-af65-9fb643f1b01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277a07c-81ac-4886-a074-88093cec7956",
        "cursor": {
          "ref": "14cf6316-935a-4efb-9d30-08a6c076c395",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "03f62061-c8af-4270-a363-aac77ee87944"
        },
        "item": {
          "id": "d277a07c-81ac-4886-a074-88093cec7956",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b69a18c-0fe0-4f89-ac1a-f9458a332e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca29533d-222a-41b0-9034-3943f0e6eac2",
        "cursor": {
          "ref": "fab968f9-70ad-4aa9-b4ae-03d865fbccec",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bb93ce3e-9ce9-4524-8f9c-4967bd0a71e3"
        },
        "item": {
          "id": "ca29533d-222a-41b0-9034-3943f0e6eac2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9d9106a-126a-408a-aea4-b000b64f4b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc86f6-412a-426d-b944-ab48fb508631",
        "cursor": {
          "ref": "b809d48d-8061-49f7-bdfb-cb92113a61ac",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "22a30b32-bc20-488e-803d-a9fe903fd478"
        },
        "item": {
          "id": "7acc86f6-412a-426d-b944-ab48fb508631",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "95239358-007a-4a23-9303-560743824ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a6cfe6-1315-4128-abec-bb9f58de2662",
        "cursor": {
          "ref": "cc7f81f9-3ecb-4198-98ec-b38b9e2558d1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d56be50e-0678-470e-ae7d-0f03cad10985"
        },
        "item": {
          "id": "59a6cfe6-1315-4128-abec-bb9f58de2662",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1d8aef62-d845-4636-9770-1cc79fbb935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983c9c75-41ac-4150-acaa-12771f747a68",
        "cursor": {
          "ref": "50261aba-3c59-4290-86bb-613a2f9424ba",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d98b409-5b34-4b88-8695-aaec81144cda"
        },
        "item": {
          "id": "983c9c75-41ac-4150-acaa-12771f747a68",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "398cd4e1-efa2-4cf7-9ddf-7ba8a8946301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a47a38c-d614-4c55-ab6e-2babdf1c285a",
        "cursor": {
          "ref": "4fdf074d-7df9-460c-9d85-762d86770f2a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "01db4f5d-a4b4-47d1-bf22-3c099ec62cc6"
        },
        "item": {
          "id": "0a47a38c-d614-4c55-ab6e-2babdf1c285a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dc8ff478-9d47-4a03-9e3e-d48c112e1044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab339d2-185c-4b60-8740-b3f358dd422c",
        "cursor": {
          "ref": "cfe440bd-dbee-412c-881e-6b8cceb06271",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "45f47cd4-5ec1-42e6-ab47-432bbe898ffc"
        },
        "item": {
          "id": "fab339d2-185c-4b60-8740-b3f358dd422c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b37303f0-f3df-4313-b88c-c544511fa9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d4eb10-6c89-47ed-9df6-dfeadb6ce182",
        "cursor": {
          "ref": "82330cf3-c2b8-414a-8403-75011a4656c6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b1efada-c9bc-4b17-a224-608ee27524d9"
        },
        "item": {
          "id": "d9d4eb10-6c89-47ed-9df6-dfeadb6ce182",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6b316a2c-6f24-4a67-a696-01b95de777f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66d276d-1517-4796-98ee-5b2054bf1642",
        "cursor": {
          "ref": "286104a7-e951-4c24-81d9-3f78d7899791",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3ed866c7-91c1-4beb-9d53-79316ec31a81"
        },
        "item": {
          "id": "d66d276d-1517-4796-98ee-5b2054bf1642",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aa89fde3-db9d-4fdc-9b2b-2b9da8db05af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aefb51f-fb7e-461d-b05a-210988fc6e83",
        "cursor": {
          "ref": "78833555-2cbd-400d-8974-881e3d5a8294",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "74ea9dd0-1b85-400f-8a93-fc8c4c68f703"
        },
        "item": {
          "id": "0aefb51f-fb7e-461d-b05a-210988fc6e83",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ee879b3-5b21-4d77-bbf8-13e21c6ec4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47140c7-3820-4cc8-a0a1-85bf9b8ae419",
        "cursor": {
          "ref": "02d1ee28-c497-4664-a420-ea90d11bf511",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1729a37-8036-4862-9485-2f41282a5491"
        },
        "item": {
          "id": "f47140c7-3820-4cc8-a0a1-85bf9b8ae419",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fe40e1c-209e-4766-84b2-6d77b7852927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f396dcbe-41dd-487e-8004-b3129bab4532",
        "cursor": {
          "ref": "1427764e-8071-43e8-bcbf-29d700de1fff",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c4745cfa-3cbd-4f67-8a07-1c062cacef52"
        },
        "item": {
          "id": "f396dcbe-41dd-487e-8004-b3129bab4532",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e19cabe1-d4d6-453b-bd7d-a2835e740d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f672d5d-e0a5-43cf-9c82-7eb8ab297514",
        "cursor": {
          "ref": "6675efe0-8816-4e6e-aa1c-f29277ae75e9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bd502b00-13f2-40f0-a54a-d06de0df8ee1"
        },
        "item": {
          "id": "8f672d5d-e0a5-43cf-9c82-7eb8ab297514",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "82cfc14c-5c00-4b28-b0af-073d78037af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aadf34d-7650-47de-929c-4bbd83a83dd8",
        "cursor": {
          "ref": "f0ae5917-af49-4e1a-9cf7-d8a5c1b94a2d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "22afef1c-d147-471b-9c35-3ad049d11358"
        },
        "item": {
          "id": "8aadf34d-7650-47de-929c-4bbd83a83dd8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46bf2304-519a-4972-8c63-5dd445593789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b627d-0677-4f48-a4f1-820618e4abed",
        "cursor": {
          "ref": "4df88300-b7b9-48b3-846a-7d472e181691",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9e64eb7-ef51-4cd0-a77f-6af7121fb9af"
        },
        "item": {
          "id": "f58b627d-0677-4f48-a4f1-820618e4abed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ca8ec07d-e2ac-4e65-808f-86505e47fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac78650-440f-470b-951c-567baa36b79c",
        "cursor": {
          "ref": "ad55e498-ff42-496f-a913-ecb3d1bb38e8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "39f21fc8-6e77-4539-9ab0-0e2b4fe6412e"
        },
        "item": {
          "id": "cac78650-440f-470b-951c-567baa36b79c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "09e4a816-7f54-4157-8ebe-059d666a27de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a941d64-d429-435d-8724-ceb0f9c190cb",
        "cursor": {
          "ref": "1dda7bbd-a2e3-49a7-b4b7-dbbfe6276a17",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eaa99f6b-34dd-48f4-82f1-9e631616bd36"
        },
        "item": {
          "id": "2a941d64-d429-435d-8724-ceb0f9c190cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3219f581-b010-42b6-bb74-1980db782f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f1a3c3-9b7a-4160-a799-28cbeab8ec3d",
        "cursor": {
          "ref": "727f4ff4-933d-4cad-9883-7fda6eb6f992",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f9b171c-ee2a-4ebb-b48f-ff29780fa9c9"
        },
        "item": {
          "id": "e8f1a3c3-9b7a-4160-a799-28cbeab8ec3d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c84d7ef1-a12e-4dd8-b0e8-b672c596dc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9bc659-f39b-405d-8ac7-825322ea63a1",
        "cursor": {
          "ref": "aec95ef0-0ed1-4f1a-b70f-03c3ffc3dc85",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e86a21a-3ac1-4f7d-bf94-9510b9df491b"
        },
        "item": {
          "id": "4e9bc659-f39b-405d-8ac7-825322ea63a1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fd13e119-d1fa-4d69-99bd-2c1a69b5d726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cd5416-611a-4185-9c19-9f449ccaba67",
        "cursor": {
          "ref": "3b393b54-cd1c-48e1-99b2-aac1d62b9808",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "17661a60-fc96-4b0c-93aa-5c2f0b5c69cf"
        },
        "item": {
          "id": "77cd5416-611a-4185-9c19-9f449ccaba67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e24f596c-5b9a-4e54-9965-4f0a9a8497cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafee5e1-7052-4b48-9c5c-12f5a12d24da",
        "cursor": {
          "ref": "a24ccdf8-a6df-4e0f-ad18-567b2fe43152",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7d474deb-3b8d-4db1-8196-1197a482028e"
        },
        "item": {
          "id": "dafee5e1-7052-4b48-9c5c-12f5a12d24da",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "08bd6d74-a3c8-4e43-b362-065185ced855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7911fe2-cf6a-407d-b8b6-fe3c74036326",
        "cursor": {
          "ref": "e6f7cfba-a887-4277-a638-850c40a92de8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d5d306ca-aaab-4f4b-beb1-60af23393a60"
        },
        "item": {
          "id": "e7911fe2-cf6a-407d-b8b6-fe3c74036326",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9ff2494-d4f1-4ec4-a671-649c367c6ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d723ebfc-866a-4d30-acd5-6bb28a419f8f",
        "cursor": {
          "ref": "75f9d4ef-377e-42dc-9e8c-0e01b9ca6ace",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f1c088cb-4604-4a35-be5a-62fc0fcdca51"
        },
        "item": {
          "id": "d723ebfc-866a-4d30-acd5-6bb28a419f8f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ace03e87-e8ee-4cf7-9d09-8297b61c0df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebe7600-60f0-49ec-9162-a48ae535eb30",
        "cursor": {
          "ref": "75c1301b-c1e1-4685-829b-0df09ea67e91",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "72d176e7-ea63-42e1-a1a3-8738a3b537ad"
        },
        "item": {
          "id": "bebe7600-60f0-49ec-9162-a48ae535eb30",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0c4e078-0e3c-4878-a7d3-d2ce74e39766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20682e84-60d9-4fe9-b9be-594c12a8315c",
        "cursor": {
          "ref": "3c051bd8-d896-41fc-ad2c-55af088e0a98",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f41cbde-f7c8-4ae4-8d73-b01e953be31e"
        },
        "item": {
          "id": "20682e84-60d9-4fe9-b9be-594c12a8315c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9def0882-b029-4370-995f-0a0f1ac59d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef6dfb7-f2b3-4408-b293-36266561fdf1",
        "cursor": {
          "ref": "f434719c-65e5-4b48-81d6-a87130bb9c7c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f02bf63e-e970-4732-a4af-3ba369caecd9"
        },
        "item": {
          "id": "6ef6dfb7-f2b3-4408-b293-36266561fdf1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5c943e8d-75f5-4089-a80d-36bdf58d3727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30200b01-33c5-4282-a6de-00f824752a04",
        "cursor": {
          "ref": "0eb9e87f-8ee1-4e70-989d-c193a3f1dbfd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ebbef67b-8a8c-4770-8360-e19bb913d333"
        },
        "item": {
          "id": "30200b01-33c5-4282-a6de-00f824752a04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af9251ff-0ef1-481f-998c-177ad4200278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23978fb-3c71-417f-ae30-efe0f3100c72",
        "cursor": {
          "ref": "e3812e9b-fa17-456d-be0b-c3cc83164275",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "49ca22c5-c968-4f18-bb66-9f01f7aefb10"
        },
        "item": {
          "id": "b23978fb-3c71-417f-ae30-efe0f3100c72",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "666bd9a5-0c7f-449d-8dc8-09298214197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b7005f-ba0c-46b4-99a8-4aa3f44c687b",
        "cursor": {
          "ref": "078d07b8-d13a-44a9-af99-d826d17a9b1f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "74710dfe-c29a-40a3-86a0-f90e2c162800"
        },
        "item": {
          "id": "56b7005f-ba0c-46b4-99a8-4aa3f44c687b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "48a51fd7-b4d9-44c9-b74a-410d149892c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3e3045-04df-4ca6-b274-b7209a3abac3",
        "cursor": {
          "ref": "31185e5e-5061-41ad-bc61-efafe1705c7b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d131892f-dcbe-4244-a0f1-2ea95a052e15"
        },
        "item": {
          "id": "4a3e3045-04df-4ca6-b274-b7209a3abac3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5543228c-e6a5-4189-9d84-37ea9c3e9bf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95111b52-6f4b-4f6f-805d-e1782e8e31a0",
        "cursor": {
          "ref": "986167ad-ed30-4622-82e8-d2a7a5c0505f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cf6fd3f4-a319-4745-9318-f516b0d8de90"
        },
        "item": {
          "id": "95111b52-6f4b-4f6f-805d-e1782e8e31a0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9942cfb8-0c9c-4985-aebf-ec6f92c3b4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162f840d-f506-4206-b120-e3a70f277ea3",
        "cursor": {
          "ref": "dfb9d302-08bd-4c80-8824-d55ab1597872",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e679fff-b989-41bd-8176-78f0f9cc25e9"
        },
        "item": {
          "id": "162f840d-f506-4206-b120-e3a70f277ea3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "648d5fec-e875-4d2d-9c78-af72d1bbb615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c834d-7a1e-4d0b-a6f3-d2bb4672ff4b",
        "cursor": {
          "ref": "322be8f0-883a-493d-90a4-d4fb2c09d41f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9625ab97-0175-4d45-b318-64508de7b6b8"
        },
        "item": {
          "id": "077c834d-7a1e-4d0b-a6f3-d2bb4672ff4b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0d478e46-748f-4870-99d9-3839ae7a2211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8bbf2-ce3f-413b-9683-1a2775cec5c3",
        "cursor": {
          "ref": "9965b21a-3374-48bc-96d0-05541b02f428",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4299630c-2636-4876-bddb-c6fc50ff4043"
        },
        "item": {
          "id": "d5a8bbf2-ce3f-413b-9683-1a2775cec5c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3b685cd8-b429-4f4b-aaae-353100d2ea00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb0c24-7d13-4aa1-b04a-23fe267de1fe",
        "cursor": {
          "ref": "edda01dd-f2c7-4f6d-8abb-d79300c7d9ee",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9557f082-4d8f-4925-9dcd-b8d60399c76b"
        },
        "item": {
          "id": "0dbb0c24-7d13-4aa1-b04a-23fe267de1fe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab7c7902-5cd9-491c-86bd-880dd6c1fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e6fdbd-7a43-439a-9ef1-2c0320c1772c",
        "cursor": {
          "ref": "6eefc992-8451-4f71-bf43-7aa52411166d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74aafd27-4de5-4754-b403-259354841d06"
        },
        "item": {
          "id": "91e6fdbd-7a43-439a-9ef1-2c0320c1772c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc5cc46b-4a3e-445d-84f7-487dbbd41369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb08aa9-01b8-4d50-998c-dfd18b9e2a37",
        "cursor": {
          "ref": "4a3dc5fc-96db-4245-8200-3dcc6332f530",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2ed177a0-3295-492f-bfe2-21614760fdb2"
        },
        "item": {
          "id": "5bb08aa9-01b8-4d50-998c-dfd18b9e2a37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5c8f83e2-0b87-41b6-9899-4cc6c0da7fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6944191-898e-4a05-acbb-416bd0d125eb",
        "cursor": {
          "ref": "8492fb4c-eb87-4128-8370-09f5221ecda0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "63719405-8cf7-4093-99fb-47beb1c1e3f4"
        },
        "item": {
          "id": "a6944191-898e-4a05-acbb-416bd0d125eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b5c08d80-bd85-42be-9dad-70038c51a751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420224ec-a2db-4b2e-b999-2829e0cd575c",
        "cursor": {
          "ref": "92817855-2aae-4aac-ab9a-3a444d814f93",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f8b9be95-d153-45e1-a973-1b6ebcbea281"
        },
        "item": {
          "id": "420224ec-a2db-4b2e-b999-2829e0cd575c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fbc4a53d-e676-4d4a-a21e-d126eef3a383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5d0bfa-74a1-41a2-8d12-8a2bb3907615",
        "cursor": {
          "ref": "a4878b5f-616a-45a5-9c94-500f46884614",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "66b3ae5e-5937-4bd8-be51-1afec51b1c4b"
        },
        "item": {
          "id": "ed5d0bfa-74a1-41a2-8d12-8a2bb3907615",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "043b317b-0e5c-42e3-b15e-0af5112dfd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5abb9be-88ee-421b-abdf-aecb3cf1123a",
        "cursor": {
          "ref": "1d3ce6fa-ed4d-4834-a1c5-1b2472ba0445",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5c6d3e63-d995-4ded-8e25-5cb04aa585b8"
        },
        "item": {
          "id": "d5abb9be-88ee-421b-abdf-aecb3cf1123a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d6aab907-4b2e-46ad-9c63-d9e761e1db70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43eb68f-baaf-40bc-8b19-1a04e01eb91a",
        "cursor": {
          "ref": "15ae40e3-c464-44dd-89d3-452bf560e78c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "98ef8a06-6bda-49bd-aba3-8091f71dc42e"
        },
        "item": {
          "id": "d43eb68f-baaf-40bc-8b19-1a04e01eb91a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8503c40-b971-40e6-a604-8188bbf111e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1bb7e5-62fc-4abe-82a6-fccd8fdec9a5",
        "cursor": {
          "ref": "af7fbd04-9d4d-4c3a-b666-8fa3ef38c549",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dd03266f-602d-4a6c-ae24-4b63edfa5005"
        },
        "item": {
          "id": "bb1bb7e5-62fc-4abe-82a6-fccd8fdec9a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ab99080d-8e64-4cc1-97c1-7ceb85e56d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c63ccb-adff-4c81-855b-ab37b4945016",
        "cursor": {
          "ref": "5a4d4983-e57d-4478-8032-6d276b773215",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fdfc9bb9-0048-4444-8261-f436ec615a33"
        },
        "item": {
          "id": "a5c63ccb-adff-4c81-855b-ab37b4945016",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33bdcc2c-c61c-49cf-a013-34bec9bb3296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faed55af-cbda-4869-986a-d3f8ae694d2d",
        "cursor": {
          "ref": "e6d37257-3946-4542-88bf-4afccde18363",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbf500a4-bfbc-4357-881b-5d9852683d15"
        },
        "item": {
          "id": "faed55af-cbda-4869-986a-d3f8ae694d2d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5569fd9a-5751-4aa0-b272-eafa5686b1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba057749-b934-4c54-aad1-b0aa0313059c",
        "cursor": {
          "ref": "33ceacf2-4821-40ec-9423-c0574e74df56",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "643a1b66-f9a3-4286-9968-40dc104013b8"
        },
        "item": {
          "id": "ba057749-b934-4c54-aad1-b0aa0313059c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c0ee614-ef8a-4e69-9093-1cc64cc257e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171f097b-82e1-4207-a001-b844ecfbe2c4",
        "cursor": {
          "ref": "0ea1e6f3-393c-4a97-8301-975322bfeca3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "83f6331a-616f-4512-a936-0463687f8a7e"
        },
        "item": {
          "id": "171f097b-82e1-4207-a001-b844ecfbe2c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42055474-5230-4301-8324-2e10f955735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4856be2f-3340-4550-a1fd-2435bedad8dc",
        "cursor": {
          "ref": "3678413d-b57a-40f7-ab8e-f913cb176204",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4351b1c3-f629-4307-b31d-1af0fa0f23c7"
        },
        "item": {
          "id": "4856be2f-3340-4550-a1fd-2435bedad8dc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f156f87e-10e1-4db3-a88e-431add7e52b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b194c811-dec1-476f-af1e-88768d8bbffc",
        "cursor": {
          "ref": "d37cb6e1-4e29-47c7-b09c-2aba637bdfca",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b1f1f135-6a5c-402a-b394-bd6d291496b6"
        },
        "item": {
          "id": "b194c811-dec1-476f-af1e-88768d8bbffc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f07251af-7cb0-4bc9-8ab2-34232ccb49f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b1775-88d6-4856-8198-d41818da77a7",
        "cursor": {
          "ref": "66c1416a-4104-4cdd-90d7-ecba2a4f6706",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "17e9c16e-5b1c-47ba-9e3b-2868e01c1c51"
        },
        "item": {
          "id": "ed3b1775-88d6-4856-8198-d41818da77a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6ef2550-bacf-425e-8a89-75b9779526c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9044454d-d6ca-400c-9eb3-529b158425d4",
        "cursor": {
          "ref": "51ac850c-308b-4976-bf26-53a1411f0a44",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0bbea8ec-6476-41bd-89c5-0e0c52ae2419"
        },
        "item": {
          "id": "9044454d-d6ca-400c-9eb3-529b158425d4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "079ef88f-7778-482e-b519-7ace93e320a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74fa99b-6a6a-42c1-b03f-35caa83a37f3",
        "cursor": {
          "ref": "e3a62131-3c0b-44df-aeb4-ed8ad10a3531",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5a180b3f-a505-4b71-adf1-c92b9f89e57c"
        },
        "item": {
          "id": "a74fa99b-6a6a-42c1-b03f-35caa83a37f3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f92d33b2-13ff-4708-bfa8-8a130cb2fecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415c7f2a-3b28-4dbd-8353-4618ecc31858",
        "cursor": {
          "ref": "481d3588-0382-49fd-8482-49ef797f56e6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1096e9f0-a5e6-483a-a738-a8517a322130"
        },
        "item": {
          "id": "415c7f2a-3b28-4dbd-8353-4618ecc31858",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5a55daac-d866-495e-87ee-61adfed414cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5646664d-5d70-4ed3-a6d5-82ead9f9c261",
        "cursor": {
          "ref": "a8808523-e645-4d80-b9c8-c40b27b21cfb",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6429d23e-8628-48f0-b94f-61da92decca9"
        },
        "item": {
          "id": "5646664d-5d70-4ed3-a6d5-82ead9f9c261",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5f358686-fd2c-4c12-9a0a-e049e62bb1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c4d91-1972-4ab5-b991-d5befad34afd",
        "cursor": {
          "ref": "202dc748-cc82-4fe3-b733-4828e5c55cb5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a75d1c8e-c6c7-4dc7-8836-45754b9d9c11"
        },
        "item": {
          "id": "725c4d91-1972-4ab5-b991-d5befad34afd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "75f3d0d4-b6a3-458a-a086-f8c55ec7ff9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf79fe9-1cf7-4417-8ab1-fbff3a719775",
        "cursor": {
          "ref": "923a5b8c-ec5b-454b-8b58-c4ea375b458b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "db667589-1d9e-4aca-b862-692fa1e9d8d6"
        },
        "item": {
          "id": "cdf79fe9-1cf7-4417-8ab1-fbff3a719775",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c468cb97-1257-406b-a3bc-e97cbf8926d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d24d35e-d3b6-418b-93cc-11a70977162d",
        "cursor": {
          "ref": "889a64e6-68bb-4558-be53-b0a70b115c4f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63e2c5c2-0a0b-4b0d-bf3d-03e8c9d26a75"
        },
        "item": {
          "id": "2d24d35e-d3b6-418b-93cc-11a70977162d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "93921a6a-d18a-4025-87aa-6805e0cd76a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082339d2-539d-4f9f-ace2-4031f1987529",
        "cursor": {
          "ref": "52cd94ba-4d2f-4065-8f89-a0b4df891f3e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0b94f54a-8727-4643-b0cb-e1fbb837e278"
        },
        "item": {
          "id": "082339d2-539d-4f9f-ace2-4031f1987529",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bb844e7c-b50b-4d5a-984c-f247b50c4f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dd8334-3669-4e32-9500-e71332aa723b",
        "cursor": {
          "ref": "bf59fe43-ad9a-4aaa-a750-194559638597",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "06a07436-a03b-4fab-9f78-aa9c3fc5c1d8"
        },
        "item": {
          "id": "e8dd8334-3669-4e32-9500-e71332aa723b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "acfa39d0-6bda-4c1c-848b-552961a8baca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c14f296-f453-4d3d-9c42-f3122adfa7db",
        "cursor": {
          "ref": "1cba76be-dedb-4798-b2d8-51e13ec82fb9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "76011c73-666c-4bea-81b5-f18f6689c979"
        },
        "item": {
          "id": "1c14f296-f453-4d3d-9c42-f3122adfa7db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "218564f3-6264-48fe-948d-01478fd8f431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdd5a87-1214-4355-90ed-32e87f67c849",
        "cursor": {
          "ref": "4d773bfe-90fb-46a8-9359-f2fe5e80574e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7502eac0-e6d4-4e4f-8bf5-909f80e9bac7"
        },
        "item": {
          "id": "8bdd5a87-1214-4355-90ed-32e87f67c849",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "359f628b-3f2f-4efd-a1ad-6207d4035f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baaa09f-3608-4091-ae6f-8e416d7b3ac3",
        "cursor": {
          "ref": "8651ec3c-d3d0-4ebf-b79d-22391435e6ff",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3ef3717e-1f61-4af4-bf81-ce415d9ab8b0"
        },
        "item": {
          "id": "6baaa09f-3608-4091-ae6f-8e416d7b3ac3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f1aa1291-8d2e-44b1-89f5-349eb65a6533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b01428a-ebbe-4561-a20c-1265e0bc4988",
        "cursor": {
          "ref": "1cdec5b4-3b03-446f-a92b-ca96f71cf512",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dc261ddc-5dad-4b90-a6cc-8f3ceb825709"
        },
        "item": {
          "id": "9b01428a-ebbe-4561-a20c-1265e0bc4988",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c238b586-1e1e-4ebe-9c45-fd1ea669c6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4b77b7-61ab-4b72-8e9c-4a10f6798a2b",
        "cursor": {
          "ref": "b398c2bb-5ac1-4f59-bfd3-c985b8972e20",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05f9547e-266e-4916-bc33-81d1452011bf"
        },
        "item": {
          "id": "1a4b77b7-61ab-4b72-8e9c-4a10f6798a2b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e65b69df-74c3-45a0-a67a-867a162d619f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca4fdb8-5889-439c-9fd6-14cad95ee7e0",
        "cursor": {
          "ref": "2239545c-8fd2-447b-9a78-6c74e00bc320",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "578e7107-1b09-458d-9cd6-cb7b17476eb9"
        },
        "item": {
          "id": "1ca4fdb8-5889-439c-9fd6-14cad95ee7e0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "21723ac9-bb98-4dcf-aac4-c61e621043c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17aa3088-70d7-4c91-b73b-e66a45c0dd36",
        "cursor": {
          "ref": "1436168b-9f55-40ab-a383-bf2dea151add",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "55ba7593-dc5d-4aa4-bef6-894444231f2b"
        },
        "item": {
          "id": "17aa3088-70d7-4c91-b73b-e66a45c0dd36",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "12421e81-2cc5-4502-9d45-eb97ff4557de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a93ecdd-b43e-45be-abbf-d67439eee93f",
        "cursor": {
          "ref": "e7548a62-3562-4d2b-8d91-d3292fbdd76b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd2bd4da-db89-4126-993b-df7b9289189a"
        },
        "item": {
          "id": "0a93ecdd-b43e-45be-abbf-d67439eee93f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "57477878-8bfa-42f4-95e2-b71cbda210aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dec85f5-9fc5-408b-b9f5-b07c294bc559",
        "cursor": {
          "ref": "0129518f-b04e-4546-bff4-e04497ee004b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6f7de953-01ff-4d46-833a-28f23f33177b"
        },
        "item": {
          "id": "2dec85f5-9fc5-408b-b9f5-b07c294bc559",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b9255265-ad38-4184-849a-5fd420b6a143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71c5854-7497-4346-bece-667f30f0bee3",
        "cursor": {
          "ref": "b1a09aac-e682-413d-b20e-10b73ce85299",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c6752aa8-7c7c-458e-9ed6-704489b67eab"
        },
        "item": {
          "id": "e71c5854-7497-4346-bece-667f30f0bee3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2027df4-7dfa-4edb-a863-ea224c46e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d3df0-a424-4da5-8470-2647398bcd68",
        "cursor": {
          "ref": "1c2cd312-e3a1-403e-a8f2-a8ec25e9db2a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "22227529-2c2e-4403-a57f-5c7190464637"
        },
        "item": {
          "id": "1b5d3df0-a424-4da5-8470-2647398bcd68",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "03d02daa-727f-4c76-bc39-370f491987f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7424ded0-e7ae-41a7-b5da-ef1f1d4fc748",
        "cursor": {
          "ref": "61ea9ec5-cafc-4077-b672-665cfb1df1e0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4521968a-8de5-4c7a-9301-d51c9639cc1a"
        },
        "item": {
          "id": "7424ded0-e7ae-41a7-b5da-ef1f1d4fc748",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c4b3afc-d04a-408d-8664-dfb3af45d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806857f4-3e9c-4d46-8f58-0d184a2828a8",
        "cursor": {
          "ref": "a1a8b3f5-4141-4a10-8023-db0a773c30ee",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9fde9161-305c-4334-94b7-324813ea3f5e"
        },
        "item": {
          "id": "806857f4-3e9c-4d46-8f58-0d184a2828a8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a073ca89-550a-4999-92f6-fe3f310a35c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f121dcc1-bec9-4d25-8035-d3b047d4d025",
        "cursor": {
          "ref": "b2c5a3e2-a047-437e-bfb7-c608e8052bb3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "60d1d958-3700-4b12-8342-19339fdb171d"
        },
        "item": {
          "id": "f121dcc1-bec9-4d25-8035-d3b047d4d025",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "20c00353-44d8-4560-8e98-3d25783bbe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a2231f-28f4-4de7-a197-458b98ad617d",
        "cursor": {
          "ref": "c6b3d83e-bdd3-4057-91a1-58e35ac2ffd5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7bf93f10-32ac-424c-a981-36c3dbae9b5f"
        },
        "item": {
          "id": "58a2231f-28f4-4de7-a197-458b98ad617d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "218779ca-f0ee-46fe-a995-651cb2e5dbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c92b0-6908-494a-8684-5994281f111a",
        "cursor": {
          "ref": "8295d252-a7da-4d6c-aa97-150a8e60d546",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ea0013c-5e6a-4c81-a652-86560d42eecd"
        },
        "item": {
          "id": "ea7c92b0-6908-494a-8684-5994281f111a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "53ad0685-232e-425c-a038-9cf508d917be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1cd6a-f718-40e6-a02e-342c2a98fff0",
        "cursor": {
          "ref": "8141748c-0693-4edc-856d-98010f6a3192",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4a202cb3-f0b5-4dc1-853a-e0f655d825bd"
        },
        "item": {
          "id": "12c1cd6a-f718-40e6-a02e-342c2a98fff0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2569f2fd-db7b-495e-b617-80c7189800d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d59f7-f4b1-4b6a-a730-c8575660528e",
        "cursor": {
          "ref": "56f184c0-fcde-475b-be54-338c50e81e3b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f8fb9f39-ff61-4545-bc91-7066be68d586"
        },
        "item": {
          "id": "ee7d59f7-f4b1-4b6a-a730-c8575660528e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "52f97492-75d5-46dc-bac6-f5b63d34eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec16595-3f26-419c-ad80-89c88a5e3cd8",
        "cursor": {
          "ref": "2a37251b-9b1b-4e00-adbf-c15e222dfa9f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "75eddc7a-88b7-4612-a75a-e32899e7c79b"
        },
        "item": {
          "id": "0ec16595-3f26-419c-ad80-89c88a5e3cd8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1af18919-0dde-420a-8b7b-f3f90049de2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd56044-5495-4424-91a3-1ad7e7afec75",
        "cursor": {
          "ref": "f28df438-563d-4de8-8a3f-43a682fd11b9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb75aced-9ac3-4f32-83d1-fac4f92d0ae1"
        },
        "item": {
          "id": "4cd56044-5495-4424-91a3-1ad7e7afec75",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "80ecdd27-8a07-4030-82b8-21242f77d068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d16eb7-1b51-4f70-a140-e4a6beea2554",
        "cursor": {
          "ref": "0d05fd52-b8d6-401c-9e00-d99e8c09a253",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2865b414-15b0-48e7-91d8-40f1f5e15143"
        },
        "item": {
          "id": "a1d16eb7-1b51-4f70-a140-e4a6beea2554",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9bf5ade0-271b-4b9a-9f70-74edc2377faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31e7469-efd6-45f0-b171-990c4e047c2a",
        "cursor": {
          "ref": "e7f22418-1c07-4ca2-bdf8-52f412b4a16d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b3e0391-3bc7-40c1-b052-4fa0b649f234"
        },
        "item": {
          "id": "f31e7469-efd6-45f0-b171-990c4e047c2a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7472466e-2a21-4720-ad66-67ed87fe5b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e396f4b-147f-4097-93a6-84f211312409",
        "cursor": {
          "ref": "67ce447c-0612-465b-bc04-68673a23be16",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ad410768-6489-46e3-bc33-a7a90d112f4a"
        },
        "item": {
          "id": "4e396f4b-147f-4097-93a6-84f211312409",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "17ce0045-19ff-4216-986f-fe1fe8b92c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87727c4d-1ac8-4428-9419-222fea9487d5",
        "cursor": {
          "ref": "c05801e7-5384-4b12-800d-fb75cbfb3746",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fcd4c1b7-dd02-4cfe-ba28-efa62d0174a4"
        },
        "item": {
          "id": "87727c4d-1ac8-4428-9419-222fea9487d5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "caa9f18f-b11c-4b92-b237-4eeb6cda0c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09448dfc-9a40-4e49-af15-1357034192e3",
        "cursor": {
          "ref": "3272300c-1996-484b-9874-404386cdb86b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14455e17-a1f4-485a-9bfa-1facd97c6194"
        },
        "item": {
          "id": "09448dfc-9a40-4e49-af15-1357034192e3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8c22352b-20d0-4a22-9742-afde53d742fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9778fc0-a403-445f-93a9-6c3c6de5db15",
        "cursor": {
          "ref": "4b4828b1-8d01-4096-85e8-a7ba6eaf1050",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bfd6160b-ecfb-4113-9ddc-d56e926e9500"
        },
        "item": {
          "id": "b9778fc0-a403-445f-93a9-6c3c6de5db15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ef72ce26-c923-4531-9e57-0e2ad55f20de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cb94b6-3a8b-4984-8e64-732884be48c4",
        "cursor": {
          "ref": "14832f5f-75b5-48d3-8c4f-75dba5c041de",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a916c409-5589-40e6-880a-29262baada41"
        },
        "item": {
          "id": "21cb94b6-3a8b-4984-8e64-732884be48c4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "410f7a3d-94df-44ad-8990-90af0e960e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976223a0-c93d-4b8a-9b0a-9a432cdeddeb",
        "cursor": {
          "ref": "2fe4c70c-6a3c-4aee-a82c-fab3cc2ab847",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3c94a1a-8472-4acf-82e0-f4080af4d8fa"
        },
        "item": {
          "id": "976223a0-c93d-4b8a-9b0a-9a432cdeddeb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2848e524-7c65-43f4-8977-6695b69c55b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daed06dc-2fcf-497f-9c25-075324b3a15c",
        "cursor": {
          "ref": "fa44499e-bddb-4bb7-aa89-9f477fef1de3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "da0acc42-1d67-4d33-831a-348db763dc9c"
        },
        "item": {
          "id": "daed06dc-2fcf-497f-9c25-075324b3a15c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "553c46e9-8fe4-4500-8138-8481dabfb4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebdc537-acad-4301-9b75-db458f4ee2c2",
        "cursor": {
          "ref": "1e60e39e-25ff-4858-a671-6abb8aaa93d8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d44db00e-03dc-478f-a0b9-b15de504e6cd"
        },
        "item": {
          "id": "5ebdc537-acad-4301-9b75-db458f4ee2c2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9c5deec6-9c0c-4792-87dd-df9f5742e199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25528bd0-7bfe-4227-b8cf-eeb1ce00fdea",
        "cursor": {
          "ref": "31eacab5-1154-4ddf-affb-5cc1d10897ef",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d3cb1447-3873-40a7-b720-29e291c4bea7"
        },
        "item": {
          "id": "25528bd0-7bfe-4227-b8cf-eeb1ce00fdea",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d7f57ed4-8be5-4538-bd06-08682e20a7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880f0b19-c16a-4eda-a050-2c394d91d185",
        "cursor": {
          "ref": "1b5f6ae5-912d-4f2a-b564-be487cf3e781",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7d3b865f-2f08-451f-aabe-26a470702df3"
        },
        "item": {
          "id": "880f0b19-c16a-4eda-a050-2c394d91d185",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8c025202-57f5-4942-858f-43c328c610df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf9c902-ccc7-4406-bcbd-cae7af6bd549",
        "cursor": {
          "ref": "3c8a7e3d-b871-4d0e-8fb5-760602d8407d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "84f0dc36-1051-4537-ae8a-f6bf2a559a09"
        },
        "item": {
          "id": "bdf9c902-ccc7-4406-bcbd-cae7af6bd549",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "68c714e1-3f96-477e-a0f5-be8b13c8d42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6dae71-6e84-4709-b58f-530ad83eb155",
        "cursor": {
          "ref": "6d55af70-8393-4354-844a-5d15acedd275",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bb2be54e-0eff-44c5-aee4-b66325f3f9ca"
        },
        "item": {
          "id": "1a6dae71-6e84-4709-b58f-530ad83eb155",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "afe5abf7-2933-439a-a1df-723d81aed97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f62b5f-fcdc-484d-9b31-fca5bf8cd6b4",
        "cursor": {
          "ref": "f934d709-5bf8-4fcd-87fc-cddbca3e6db8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "af957368-a6eb-4e50-89c7-b2268270189b"
        },
        "item": {
          "id": "60f62b5f-fcdc-484d-9b31-fca5bf8cd6b4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "578f5f52-dee6-41e1-9180-8a78488ac875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9463185-2e30-4986-b902-394c8ed7cda7",
        "cursor": {
          "ref": "bbfb88d0-0eed-405a-9e92-ea5334124326",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4c480be0-fd6a-4346-982d-e9fed77a5c1b"
        },
        "item": {
          "id": "b9463185-2e30-4986-b902-394c8ed7cda7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9da21427-b19e-41ca-b95c-17de2568d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d847ca9-5e21-45cb-90a3-518d5d0489ff",
        "cursor": {
          "ref": "785a28af-3896-463b-9f08-8a376b7df92a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "78b25146-acc7-4515-a28d-8a10dba0e55b"
        },
        "item": {
          "id": "9d847ca9-5e21-45cb-90a3-518d5d0489ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2049a660-4f8a-4ce3-8210-bc2b797c0432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed9d8d6-69b2-4db4-aa35-58bc46cbecc5",
        "cursor": {
          "ref": "baefc747-64c2-4ac3-a537-7ea1d891b761",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8db160de-b224-43c0-9c7b-feba7c59e925"
        },
        "item": {
          "id": "4ed9d8d6-69b2-4db4-aa35-58bc46cbecc5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "221c3195-423f-4bfc-baf8-8ca9128face8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1eef38-c834-4d34-9f43-93412b544295",
        "cursor": {
          "ref": "9e0c5860-0c33-4ded-ba3b-c15c24dfdeff",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b2dd276c-1b10-488c-aebf-f36a504a099d"
        },
        "item": {
          "id": "4a1eef38-c834-4d34-9f43-93412b544295",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "01ebade1-e7b8-4d32-9b83-a43e00ca2c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3741df8a-02e3-4334-af32-5bda8eb5a8cf",
        "cursor": {
          "ref": "706d717f-b458-447e-8c6c-8a35f3b44b36",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "42bd9f27-3629-45b9-9cdc-e3c4a8901402"
        },
        "item": {
          "id": "3741df8a-02e3-4334-af32-5bda8eb5a8cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7a90c16b-ac8a-4192-8daa-a8e52564d186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0055a3f8-8b5b-49b6-98c7-ec78356cc781",
        "cursor": {
          "ref": "95a649f9-80bc-4935-920e-e9c160ea83e9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dd18bc5e-019e-45a3-9725-16c04f1b2026"
        },
        "item": {
          "id": "0055a3f8-8b5b-49b6-98c7-ec78356cc781",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e33bf5fa-90e5-49fd-95b5-d4d064b20667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e551f764-341e-47ae-a13d-020d3ad991e2",
        "cursor": {
          "ref": "77805e31-e7e4-4ee2-9e52-667a99dc5b7f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ecfe898f-2624-4d64-93f9-1252c16854d9"
        },
        "item": {
          "id": "e551f764-341e-47ae-a13d-020d3ad991e2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8fa26d12-903f-442e-abaf-30ad7f57a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756f1694-2ff2-4071-b700-6262a7de573d",
        "cursor": {
          "ref": "940fa0ca-78b6-4d4b-8fc3-e723d7d44e57",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a7a78c10-b3e0-43ec-8312-bc1e319d1cda"
        },
        "item": {
          "id": "756f1694-2ff2-4071-b700-6262a7de573d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d9c7aed4-3899-4b87-9a95-c8daa5b9d501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84625872-c9d4-4298-8ebc-7e2602f6ef58",
        "cursor": {
          "ref": "6bbf7dc8-b997-4743-887c-6585103fe4d5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0be5af3c-bd13-4cc7-b16f-4eeeb1673cb4"
        },
        "item": {
          "id": "84625872-c9d4-4298-8ebc-7e2602f6ef58",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "df010c83-ddcd-4146-84b0-b5782ac44bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e118d2b1-e094-4bec-b03e-0a21c24818a1",
        "cursor": {
          "ref": "6f9d1456-a425-4b81-97d5-311e1acef89f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6df7badb-e9fd-41bc-962b-dca393256a2e"
        },
        "item": {
          "id": "e118d2b1-e094-4bec-b03e-0a21c24818a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1dd0cd6c-fe72-4539-beb7-11956cf60730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0067d8b-436d-47e6-bfdf-194ed83a0c96",
        "cursor": {
          "ref": "1edbe641-9691-4f1c-bc19-4a132c3e5f07",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b1866a5d-00af-4237-9ea0-05198f8fb33d"
        },
        "item": {
          "id": "d0067d8b-436d-47e6-bfdf-194ed83a0c96",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "72cd4c82-c8fd-41ec-9ebf-80ea9d0d7289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d68017-f746-4487-a63a-1fb08e24f615",
        "cursor": {
          "ref": "91fefe2e-3c4f-4dce-9fce-64ba6ccdf9e6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a61fb995-718e-4cf3-a35a-6e4d35b98902"
        },
        "item": {
          "id": "d8d68017-f746-4487-a63a-1fb08e24f615",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3c7d1df-4078-4547-8e96-0cb2e2a31ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c068c8-0c8a-4481-aca0-e9af70227382",
        "cursor": {
          "ref": "cef495af-7653-4d61-9805-185bba93d3ee",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "28406ec1-8dcd-41cd-aa79-e69257d0bf9b"
        },
        "item": {
          "id": "93c068c8-0c8a-4481-aca0-e9af70227382",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a784b6b0-408f-4a49-abd8-1ba48f30668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5ecc62-1eaf-4f6c-9bc2-c121e242632f",
        "cursor": {
          "ref": "dc7453a9-31f4-44dd-9137-6d8df8de9c11",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cdcdf9a3-5e38-4d40-9ea6-f1352bdb248e"
        },
        "item": {
          "id": "fe5ecc62-1eaf-4f6c-9bc2-c121e242632f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cb8f5908-e036-4dd8-a3a2-bfbf94b6e42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac5dc2-a6c4-4143-861e-01d2b992cb98",
        "cursor": {
          "ref": "58a65b01-b590-4913-91a5-e9177078956b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc408a7a-ad20-4fca-9e51-5b820a9738a0"
        },
        "item": {
          "id": "9aac5dc2-a6c4-4143-861e-01d2b992cb98",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65546afd-d699-4b63-990d-9c64195c926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625fdc42-ee39-409b-8336-ce22d1d79e35",
        "cursor": {
          "ref": "e2d2a0a2-cc81-4153-8f9e-de775f9768ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "43ace52b-fbe9-4e23-88c0-d2e3bfbd9912"
        },
        "item": {
          "id": "625fdc42-ee39-409b-8336-ce22d1d79e35",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1a856bd4-f8ee-4217-8e42-d69587c6eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd36478-d1b1-42d7-90ae-40c3c4d7c20c",
        "cursor": {
          "ref": "fd298c32-35c0-4433-a83f-55ea3fd65466",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "377a89d7-c4e7-4870-9087-eafadabdb8bd"
        },
        "item": {
          "id": "bfd36478-d1b1-42d7-90ae-40c3c4d7c20c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ed81ecc-ad5f-49df-b439-d2eed54bd2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36e2ed1-becf-431d-b2df-1b63c202e389",
        "cursor": {
          "ref": "c3e4b767-2fa3-4b2e-99f6-0a8824e91284",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6b77071b-5346-40c7-b983-d86949f8e775"
        },
        "item": {
          "id": "d36e2ed1-becf-431d-b2df-1b63c202e389",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "654cf1e6-4ef0-48f3-9d25-75ac221a2804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddd7d70-5c1f-4cdc-ba0c-eb084676a45b",
        "cursor": {
          "ref": "09f69963-691c-405c-9133-bcb0aa255270",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff21ce70-815a-448f-a3fa-f77146b1533b"
        },
        "item": {
          "id": "fddd7d70-5c1f-4cdc-ba0c-eb084676a45b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "950baa48-0189-4484-bebf-b32d10de2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57247a90-76f0-44db-a4ad-077cfb99801e",
        "cursor": {
          "ref": "a24a5f05-c4b8-4986-adf6-5242585c1ca6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "67c1f920-2af7-463f-b6ac-c3e94e72818c"
        },
        "item": {
          "id": "57247a90-76f0-44db-a4ad-077cfb99801e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5307dfe3-5cdc-44f9-92d1-f12e2a569ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b10a9f-76c1-4175-ba78-d6f32a5e3bfd",
        "cursor": {
          "ref": "6d65de73-9617-4cbe-ac0a-b70476de8b91",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e5aad57e-c123-4774-b795-e6e221a39840"
        },
        "item": {
          "id": "18b10a9f-76c1-4175-ba78-d6f32a5e3bfd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e4ebed81-1fa9-4d18-b7f5-2aeb48f385bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059a599b-9300-4c64-a943-7165416fba30",
        "cursor": {
          "ref": "0eaaac1a-1268-47ba-9275-61af6d9f5c99",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa9d749d-f8ac-46b6-82a0-c887bce8a2be"
        },
        "item": {
          "id": "059a599b-9300-4c64-a943-7165416fba30",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7a6c1ef6-aae0-467e-8d54-5fa8d46fc7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c72818a-7be0-4488-a868-4b57a307c372",
        "cursor": {
          "ref": "c36662b0-f611-41ae-a1ae-a1db5b40155e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ed2ccd45-90eb-43e5-a849-7ae4102531e9"
        },
        "item": {
          "id": "9c72818a-7be0-4488-a868-4b57a307c372",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c10a4ddd-c284-4552-b7be-bcf11cf219e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4400b7-c94e-45d9-9f56-92f3a16568ac",
        "cursor": {
          "ref": "a5127750-77a6-4bc2-948c-7e0ce058c36f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5fbcfb16-ef57-49bc-9714-3c618b89ceca"
        },
        "item": {
          "id": "8c4400b7-c94e-45d9-9f56-92f3a16568ac",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2fca8964-1543-4cb3-9241-f812e961c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48ef536-6024-4d1c-b549-aee914dad226",
        "cursor": {
          "ref": "dccb09a8-73be-4c3d-aff9-fd8a2995e3e3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f155f749-ae22-4940-9473-03ae00795ff7"
        },
        "item": {
          "id": "b48ef536-6024-4d1c-b549-aee914dad226",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2213cd57-c895-4c7e-a604-1f1717236947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2464b2-f2f8-45b8-acdc-37e759384fa0",
        "cursor": {
          "ref": "6f466bd3-6c54-431a-b55d-f1b4c71fa11d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "94702b71-2d9b-4933-8c69-583305c52d7d"
        },
        "item": {
          "id": "da2464b2-f2f8-45b8-acdc-37e759384fa0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b1bd5eb9-2507-46ef-a3b9-37563df9ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53477388-9910-4e55-bfe4-4847c2c98a8e",
        "cursor": {
          "ref": "103e6d52-4a78-42f3-b36f-79f60ab9ed27",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6ed6fda1-52c9-4337-a05d-9c4b724c9da4"
        },
        "item": {
          "id": "53477388-9910-4e55-bfe4-4847c2c98a8e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1fae718d-81f3-4e81-b7ed-867e4722b8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36151aef-2465-4a43-85c2-b6163968602d",
        "cursor": {
          "ref": "455d228e-7819-495b-a0c2-f911a18987e0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "69e7a198-f517-48f5-9d0f-d679bebd3647"
        },
        "item": {
          "id": "36151aef-2465-4a43-85c2-b6163968602d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0913f7c9-4b0a-4c08-b58b-a07e679c0b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350b769d-c2b3-41b9-81f6-6b8e7b6829e1",
        "cursor": {
          "ref": "c446ed76-a101-4959-9503-e0ca6a361d90",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad3e06bc-8db5-4061-9fac-3f02413b08ca"
        },
        "item": {
          "id": "350b769d-c2b3-41b9-81f6-6b8e7b6829e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1fbdb6d-a685-4d97-8154-a7d9cf1a419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367ff6c-1787-4e85-8a4a-3fcb21b11d06",
        "cursor": {
          "ref": "a9e37f17-7d9c-4817-8f0b-a763bb7ad0ef",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "52108480-ef81-4aef-a6fd-4e59d848d099"
        },
        "item": {
          "id": "e367ff6c-1787-4e85-8a4a-3fcb21b11d06",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f7d96a3c-b5ea-4e14-a1ee-de26874b5257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76e132-efd0-4f29-9c65-0c8ed4b51fb3",
        "cursor": {
          "ref": "859cf701-b0b7-4d29-9543-ea553ffacfc5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0c079bb-06af-441f-8bf8-b7140a1a7a1d"
        },
        "item": {
          "id": "0c76e132-efd0-4f29-9c65-0c8ed4b51fb3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4ec355c4-536e-4a82-88b9-2542b3369ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a48a25-e7ef-45a5-b611-b3e3b4d6fbb8",
        "cursor": {
          "ref": "ae86fa16-4de0-43e0-bf59-bc24207cacf2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa608281-7968-4cad-8da4-3a2a7aba61f7"
        },
        "item": {
          "id": "d9a48a25-e7ef-45a5-b611-b3e3b4d6fbb8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee33e056-cb66-4306-8267-34fab8fd039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c06ed91-4ef8-4283-8928-99c4403e6808",
        "cursor": {
          "ref": "528511e5-0bb0-471c-96a2-6813a447da12",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "85e632ba-6bb7-4f9e-a18c-69c17f980358"
        },
        "item": {
          "id": "6c06ed91-4ef8-4283-8928-99c4403e6808",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d1b454d4-5891-4fd8-a37a-70e5cf48c289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faea532-34a0-49ba-88a6-1c0034d70116",
        "cursor": {
          "ref": "8f0f7cd0-06df-4567-b7f2-ee96ec4a3678",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c40ce9e-abfe-441f-bc33-005cd3fb688a"
        },
        "item": {
          "id": "6faea532-34a0-49ba-88a6-1c0034d70116",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4a52ef8f-d54b-45e9-a171-7874b7ba558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52735fb0-54c3-4ab1-8890-2573173e7cfb",
        "cursor": {
          "ref": "b37bd2fc-05e5-402c-b6f1-cfdcc0372dd5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5a39f87-51ac-41f9-b9c7-010a9c011720"
        },
        "item": {
          "id": "52735fb0-54c3-4ab1-8890-2573173e7cfb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d814930d-7b8b-4ac1-a903-8ae9016b056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212935a9-b94e-4194-b861-05f8ed9e68d4",
        "cursor": {
          "ref": "18a39778-1aad-4c26-a835-22757cc52393",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0fd1f034-a943-4493-8e52-752fc9a3eff1"
        },
        "item": {
          "id": "212935a9-b94e-4194-b861-05f8ed9e68d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "360df112-ef5a-4fb3-91f1-ff727178de50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130186bd-3dc8-478c-aa8a-ac6411fa5ffb",
        "cursor": {
          "ref": "a2a964ab-b908-44d9-ba31-4a80b739a22c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e2c3a2e-c3a8-4125-b933-821207d50a88"
        },
        "item": {
          "id": "130186bd-3dc8-478c-aa8a-ac6411fa5ffb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e71d493c-7b01-4279-a5f8-e2d4251d8529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0f7445-5042-4315-abe7-c3ea79d9bef8",
        "cursor": {
          "ref": "91652902-ba30-4dc4-85d3-d455ffd28a95",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "07e3f547-e554-427b-a84d-fb3bab770e9e"
        },
        "item": {
          "id": "1a0f7445-5042-4315-abe7-c3ea79d9bef8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d3f93ae8-d2ae-42d0-8a81-85985a0c229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db02587-4994-408b-8150-b34c5a9124fe",
        "cursor": {
          "ref": "680dfc07-44ea-4308-b355-c35ebe0a88e8",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fdc6eecb-fdc8-45ec-ab0a-1f94e7ba5cac"
        },
        "item": {
          "id": "7db02587-4994-408b-8150-b34c5a9124fe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "129e9e4c-64ce-4ce8-bc39-af7f413e44a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fafd464-6f0e-4fc1-8a23-0462b050995a",
        "cursor": {
          "ref": "bfa7b0f9-94b9-4c0a-a1ba-51619f767e24",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4d762572-5cef-4719-86d2-597dec8a1591"
        },
        "item": {
          "id": "0fafd464-6f0e-4fc1-8a23-0462b050995a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e06db3a2-8ea7-4876-96f8-6840988fc90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc56de6e-4417-4cc1-99c9-fd2bd89d4749",
        "cursor": {
          "ref": "f09e1b5e-3325-41ef-a013-356704a74f63",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aa001310-b94f-420c-b6ad-8f26e7b8a2ce"
        },
        "item": {
          "id": "bc56de6e-4417-4cc1-99c9-fd2bd89d4749",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e1387f09-c29d-4962-a370-89f8a6d828c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e61ea1c-a1c3-4720-84ef-999ac57f0978",
        "cursor": {
          "ref": "54592c95-109f-4ca8-b262-73a769940603",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4fd1433f-60ae-4db3-8d51-fea3f709dc0b"
        },
        "item": {
          "id": "7e61ea1c-a1c3-4720-84ef-999ac57f0978",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8bd82bf3-6639-4b04-9fc7-31643496839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cafca03-6712-4f92-8770-5eaea97b5c2d",
        "cursor": {
          "ref": "599df660-ae2c-45df-88de-1f75630b6edf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bef6dced-e154-4728-9f55-d49d90860bc0"
        },
        "item": {
          "id": "3cafca03-6712-4f92-8770-5eaea97b5c2d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5b5322bb-bf9b-4804-b2e4-a2b0358c7161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9a5bbf-7de9-4a9a-befd-d7789650deaf",
        "cursor": {
          "ref": "3d825d88-07f0-46c8-8169-6c06e96ac688",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5c406c2b-5497-4313-9165-95fa6d5e541e"
        },
        "item": {
          "id": "4e9a5bbf-7de9-4a9a-befd-d7789650deaf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7216e0a6-f055-4982-a341-dfcb245d609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ea06b-a835-4164-ac5c-9ff87d42e2c8",
        "cursor": {
          "ref": "fc601cb7-7bad-4d6d-b683-1593a6c375e0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5fa48b61-73f1-4050-8da1-733aef0efcf6"
        },
        "item": {
          "id": "150ea06b-a835-4164-ac5c-9ff87d42e2c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "48d9c19a-66ff-4ca4-bbf4-a00959b146ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b060208-30aa-4f33-bb34-47be60f1df7f",
        "cursor": {
          "ref": "546a5639-9446-4a25-b8ca-f599bf566d6a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5fbf5a0f-f08e-4334-9e38-1dd5aa1deca3"
        },
        "item": {
          "id": "0b060208-30aa-4f33-bb34-47be60f1df7f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3e0c6176-1af1-47f0-b674-84500e2d99b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c78444-0027-47ef-ae74-8610b0f70760",
        "cursor": {
          "ref": "b2f1f916-327d-498b-84bb-4aa44fca357f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a0bc0d97-78a7-4929-97f3-6b2fd80e8014"
        },
        "item": {
          "id": "b6c78444-0027-47ef-ae74-8610b0f70760",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77e2a393-2104-4770-af58-617bc73eef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361fdb65-74cf-44b5-88b1-e8cf44a9b7f8",
        "cursor": {
          "ref": "d0a1c24f-153f-46cf-903c-4cba40d0b449",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bbe12970-6297-47ec-abef-548d244ebecf"
        },
        "item": {
          "id": "361fdb65-74cf-44b5-88b1-e8cf44a9b7f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bf025e9c-44e5-48cd-9247-6d588df33570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd99fcb3-16a5-405a-94eb-3f50415bfdf0",
        "cursor": {
          "ref": "fb4cb3d2-e4f9-4084-ae3a-194b119bd0a6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fd1dc254-4c99-4bc1-8d29-6f58ee08626b"
        },
        "item": {
          "id": "cd99fcb3-16a5-405a-94eb-3f50415bfdf0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7eaedc96-bafc-434f-80ab-71bbad0ffc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e5e48e-047f-4f1e-ab39-f5fbebb7db31",
        "cursor": {
          "ref": "825d4930-65f0-42ae-9cce-3c2dc0e76cad",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f618abb6-5eb2-45ff-a4ed-53af0c3e0c8e"
        },
        "item": {
          "id": "e7e5e48e-047f-4f1e-ab39-f5fbebb7db31",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "61a67e4f-211b-4b54-ad2b-0c1fc81d9942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7431b7-f9f6-4b7f-bec6-ae9a441e4047",
        "cursor": {
          "ref": "76bf9cad-85a5-4ca5-b77d-1a6428a396d4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "92a885b8-f178-45c5-9134-6baad0a5e5c3"
        },
        "item": {
          "id": "5a7431b7-f9f6-4b7f-bec6-ae9a441e4047",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cfd62963-5c61-44af-a688-2a06d7a873ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7d5f20-c77d-4c97-9fb3-7d2997f451f0",
        "cursor": {
          "ref": "e46a3664-d720-42b9-b0f5-a344d48667e2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c31931e8-f061-4e2c-8a59-c439534ec982"
        },
        "item": {
          "id": "ba7d5f20-c77d-4c97-9fb3-7d2997f451f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "548abe97-4e7c-49eb-9f94-833de4c68305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c62fd8-f50b-459a-ac80-d3a4a1abcad9",
        "cursor": {
          "ref": "7aa1ae28-f290-4381-9f93-cf39a13b55de",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0abce136-c617-4280-8c7a-8e8f019e39d7"
        },
        "item": {
          "id": "75c62fd8-f50b-459a-ac80-d3a4a1abcad9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22a4ee32-86d9-4cf3-819b-322496daecbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4adacd0-3623-42fa-9930-398d9cd2ab4e",
        "cursor": {
          "ref": "2f591cd8-6d2f-41d4-a666-938e15a5b3bb",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "db49a99c-8194-4aef-a848-0a4acc966e5a"
        },
        "item": {
          "id": "e4adacd0-3623-42fa-9930-398d9cd2ab4e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "aa177e0d-91ed-42ff-a5f6-bc4073272a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f954cbf6-4d49-4c67-ad41-bd3a2506c7ae",
        "cursor": {
          "ref": "b8122e19-444a-4989-ac85-d0c05da1f37d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4ddd845e-7bbe-440a-aa13-2929d3605ebe"
        },
        "item": {
          "id": "f954cbf6-4d49-4c67-ad41-bd3a2506c7ae",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e9451974-d76b-48c5-b55e-5c3e395b3e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488965f6-85d9-4263-8fc8-0721bd6b67c8",
        "cursor": {
          "ref": "54734a9e-85b1-43eb-9a4e-e82afd46e231",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1d202434-a619-4913-9d2a-6cbe6ddd0e90"
        },
        "item": {
          "id": "488965f6-85d9-4263-8fc8-0721bd6b67c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4f6ec6f8-339b-48df-8fe7-d0102693c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8af851-be40-4cc1-b997-ab4e08a75c79",
        "cursor": {
          "ref": "0814cd8d-538c-455d-8ef9-3e7781aadfe6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1e960df2-0bd2-4d26-a9d7-48d59cc1b2af"
        },
        "item": {
          "id": "0a8af851-be40-4cc1-b997-ab4e08a75c79",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "61ca2987-e294-4955-9fd8-725fccbed60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c10396c-5c1f-4992-b074-3c655ec01229",
        "cursor": {
          "ref": "00ebcd53-0921-43df-9ee6-f49b348927f4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "084ea500-547e-4fbb-a105-ca93d8cee78b"
        },
        "item": {
          "id": "2c10396c-5c1f-4992-b074-3c655ec01229",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "457dd949-5451-42bd-9ec7-65876b3c275f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217a518-2b1b-4c40-9708-3624c5799a7a",
        "cursor": {
          "ref": "320d774f-3c3d-471b-9eae-ec060ad341c0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ac71f610-9f0d-4470-aeae-d98ad63854a0"
        },
        "item": {
          "id": "3217a518-2b1b-4c40-9708-3624c5799a7a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "51ec0618-5c13-4ac1-93dd-dd7e4d5d77cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee87351b-6913-4d05-804d-b77062cae0fe",
        "cursor": {
          "ref": "9fc51b8b-7095-4a03-a7da-a4a1bb136c1c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "28f5ced4-2591-4b7d-b13b-f0a726fb9cc8"
        },
        "item": {
          "id": "ee87351b-6913-4d05-804d-b77062cae0fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "84b2bea0-9f25-44a0-8ed2-6833224946cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad289e1-cd8e-4b66-9e0a-f86c66eb7280",
        "cursor": {
          "ref": "5408e6d6-4735-44c0-b6dd-6e7221c9635b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "22bb6398-5bab-4c79-ab4e-3b94a25ca539"
        },
        "item": {
          "id": "4ad289e1-cd8e-4b66-9e0a-f86c66eb7280",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b314162a-31a4-440f-91b9-aef2039c12e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa29b442-c1df-4ae7-b05f-9328bf4989cf",
        "cursor": {
          "ref": "f73c88a6-625f-4aad-ab68-c3ea8d16d29b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "77a30446-34cb-45d7-9dbf-02e87d91cff8"
        },
        "item": {
          "id": "aa29b442-c1df-4ae7-b05f-9328bf4989cf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d58b889b-b618-4d92-aada-e6e743979bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6954616-166e-4cdc-941d-040ee9a261fc",
        "cursor": {
          "ref": "44d678eb-1bf8-4330-a4bf-fccb16c3cd48",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3c081b9d-bca4-4d7c-879b-c2822c53ea43"
        },
        "item": {
          "id": "b6954616-166e-4cdc-941d-040ee9a261fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bcc054fd-92eb-4bfe-85bb-02c878b48224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18f9a10-5fbf-4295-84f3-8d3c85ae13da",
        "cursor": {
          "ref": "875c625c-029d-498e-b0b1-2b616b463ba8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4433d515-ab72-495f-8c20-5ec314b6022b"
        },
        "item": {
          "id": "f18f9a10-5fbf-4295-84f3-8d3c85ae13da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0bf71c50-ea86-4732-8d31-014f33d374c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34522282-e50b-4fb6-9660-973fec13f242",
        "cursor": {
          "ref": "4dab1d43-0742-47fb-a5d0-aba330fb7369",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ec4e4e9e-02d2-4dce-83b5-2abf394d92b7"
        },
        "item": {
          "id": "34522282-e50b-4fb6-9660-973fec13f242",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9095eb94-5103-47a3-b715-7533469c230d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a6d931-468c-4ea0-8c32-0e0d61edaace",
        "cursor": {
          "ref": "46597485-4e70-4f0a-9d54-cef7b2ec854a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dfdd3697-91f1-43ab-9678-654471c54543"
        },
        "item": {
          "id": "f7a6d931-468c-4ea0-8c32-0e0d61edaace",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f38029e5-dd60-4814-8725-47598c855047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2e4186-bf1e-4830-8bf1-d17799f9e26c",
        "cursor": {
          "ref": "3248b34e-4ba8-46d8-85a0-637ab09e24a3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fa3b010a-76a4-4dde-8478-1729d4c6ff8e"
        },
        "item": {
          "id": "ae2e4186-bf1e-4830-8bf1-d17799f9e26c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f81559a4-a84d-4898-a4e6-b0bbe84c5832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c23d071-e603-4910-88f2-07645295eaf9",
        "cursor": {
          "ref": "9e809a5b-402d-4996-a372-2baeae66c762",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cf390be9-076d-4047-a0e4-66311fd854ef"
        },
        "item": {
          "id": "2c23d071-e603-4910-88f2-07645295eaf9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0c6cd869-ecee-4e3f-9534-32fc4962412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd62e3-7bfe-42aa-b4d5-fca66aa3618f",
        "cursor": {
          "ref": "b0ea433d-bb5f-415f-ba52-7b79c523481b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "23cccb24-0f2f-441c-bb45-ca25e939fb3e"
        },
        "item": {
          "id": "a1bd62e3-7bfe-42aa-b4d5-fca66aa3618f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a879888-cd4d-40d0-8df1-f0962d65514c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b55b65-3ead-461a-8833-a1cdbc2918e3",
        "cursor": {
          "ref": "917e9aed-eb52-4ecf-acff-22296bee36d4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3d4ae72a-3e87-449b-a9c7-9997f88d834d"
        },
        "item": {
          "id": "d6b55b65-3ead-461a-8833-a1cdbc2918e3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "72dcec2b-72ff-4e03-9256-940467a6d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e9137c-b6ec-420e-bbe3-7b656d65fefc",
        "cursor": {
          "ref": "d55471be-676f-4707-8d8f-1bab82147ac8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f0d255f4-ccdf-41bb-add5-dc5e090cc5d4"
        },
        "item": {
          "id": "56e9137c-b6ec-420e-bbe3-7b656d65fefc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3801643b-08a8-47d7-a8b3-bfe86375ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f837ea-2f76-4cd2-8e94-0f59d6f41146",
        "cursor": {
          "ref": "ee5ccb92-9af8-4db5-89c7-970319543043",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8874d28d-3980-45c6-885f-ae4fe3323b70"
        },
        "item": {
          "id": "c1f837ea-2f76-4cd2-8e94-0f59d6f41146",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0694add8-b3b7-4d18-a083-55691bfe2fe3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc3f122-3add-4390-b7fb-29c94346dcae",
        "cursor": {
          "ref": "f0a1026e-0e0b-4a8a-af1a-747179dfacb3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8f68228c-025c-40e9-a056-e6e738110552"
        },
        "item": {
          "id": "6bc3f122-3add-4390-b7fb-29c94346dcae",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "086471ea-6119-4486-92aa-8a17d60f8bd1",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3049e962-0b62-407d-9abc-bb9dfe6f69a2",
        "cursor": {
          "ref": "46f4de53-591d-4d5d-8482-3e93b14b345e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cd0c4457-0501-4591-9313-a01a75cc7723"
        },
        "item": {
          "id": "3049e962-0b62-407d-9abc-bb9dfe6f69a2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5d663288-20a6-4d86-bd82-a6f21e0160f9",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6565bc99-c9aa-47a9-bf27-dc29cfb048c8",
        "cursor": {
          "ref": "548050b5-e9fd-4903-a606-20bd0e2497d7",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5dcd8924-1c1e-445e-9dd7-753b0adff3dd"
        },
        "item": {
          "id": "6565bc99-c9aa-47a9-bf27-dc29cfb048c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "85e11655-9fee-46f9-81eb-3e4d7ab9b5e0",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbe639-640a-4c2c-8fc5-fbf11c0f9352",
        "cursor": {
          "ref": "4e079940-89bd-44ad-ab9c-c82a6cb86074",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ad5e72de-b8b3-44a1-aa3f-a5b86b447cd6"
        },
        "item": {
          "id": "c4bbe639-640a-4c2c-8fc5-fbf11c0f9352",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3003bda3-6715-4dec-823a-c200926268b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbe639-640a-4c2c-8fc5-fbf11c0f9352",
        "cursor": {
          "ref": "4e079940-89bd-44ad-ab9c-c82a6cb86074",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ad5e72de-b8b3-44a1-aa3f-a5b86b447cd6"
        },
        "item": {
          "id": "c4bbe639-640a-4c2c-8fc5-fbf11c0f9352",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3003bda3-6715-4dec-823a-c200926268b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb4e4c-9edb-4449-97d0-38ab415defbc",
        "cursor": {
          "ref": "89042d64-3964-409e-9860-614ec508239d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ed1cf5c8-612c-475a-b71f-247211215cd3"
        },
        "item": {
          "id": "e5eb4e4c-9edb-4449-97d0-38ab415defbc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "43290709-0f8b-4c30-af4d-9065636bfcf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467bd4f4-3f25-4d28-90ae-386912bc1591",
        "cursor": {
          "ref": "bcdea7fb-e324-4f94-bf7c-b6408c7184ef",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "16035a73-06d3-4baa-a7ec-8005d519a546"
        },
        "item": {
          "id": "467bd4f4-3f25-4d28-90ae-386912bc1591",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "19642c78-92be-4550-a4e0-476ec95c1a78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}