{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "94676ea1-9b51-43fb-95f1-e310c4570955",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5fab853d-2054-45db-b4a9-b96c2efdec42",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dec3f5ac-021d-4173-b9be-35ac2929c695",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46b4b23f-d3a4-4a70-abd1-12a89911f814"
                }
              }
            ]
          },
          {
            "id": "baf89a5b-2e19-4d09-a59e-385500e8b333",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8427cacc-5f88-482b-9ea1-5842c57123a4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8e5a2f5-17ea-4614-ac49-cad0cfe945b0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1ca83e51-43fa-4cb1-b8d1-db6016025617",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a433edd1-4fec-4ff8-9ad1-79358d4c25c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e004f8aa-5f96-48c5-a05d-c590e4510762",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aae43fb-f9fd-476d-9d72-e30b670e589a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acefec3e-a8d6-4652-a37d-2798bee5eda9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "636a7a9e-5926-4536-98ab-d4a4cac3caa7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "481d4bef-94d3-4af0-8c38-ddcbf5df8109"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b8712d6-e8c1-4109-b00b-94f57a0a1e6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d786210-f492-44a0-8c56-a246cd821d74"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efe030be-4aa9-41e9-bb36-0112339ce23e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e2df98bd-72ae-4408-8e41-0c7dd920fd48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2808102-5db1-4d26-a76f-0dd6fd047a73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b690a40-c07b-4ac4-bb35-bba29ed717b3"
            }
          }
        ]
      },
      {
        "id": "9cea9e37-c55f-4a98-aa47-ccb324cc8e73",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1f020c97-e256-4f37-8985-99d32d28c6d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c924c1b-ae0b-437a-b880-157b3da855dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b22a6995-ec2a-4fe1-a015-71b847aa18ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8ed4d-ab22-48ad-937d-133c49b4bf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f42e075e-e0d4-4d6e-8d13-9bcb1db31b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8358db0d-308f-450e-9836-ab00fe57f9da",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee330ee7-b355-4bf6-af62-5014535c3e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a81e2e36-a7a2-4f85-903c-d2feded1bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad9b039-fdde-4f26-bac5-a45776279fb7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c80d12-e5b5-4ede-9f63-f338d198101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2233551d-17b2-40a8-bee0-ba40f80f778d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4377a090-3118-4730-ae1a-9c34da882f7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea034f32-76a0-4996-89d8-86842a10d002",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42338a1d-8ee1-41c0-8253-48559cbfca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c29e41-5f0f-4fac-98c1-df04b5f56585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c9e3f-67de-4df2-a2e0-d9a8e9124646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712ac320-3e67-48e5-89c2-b5ea629252dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "005a60cd-65e1-46fb-868c-4a8d16daef42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c52fb087-c882-429a-913d-65a9aa29ffa8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a24fac7-18c7-4a0d-9511-7f9c44146c58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "275fbba4-5340-4d13-bdd0-82859d695015"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14e45bae-a53e-4370-bc9f-81cc985c00a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "87c850f0-93a4-4984-b662-5d24a126aa1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea67367-3cbf-4b23-a01b-64a9ad6ed27c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a2bd310-18ab-44ab-9868-74c46b13e979"
            }
          }
        ]
      },
      {
        "id": "c6e08dc0-a3d8-486c-b42b-798c6d5b74b2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0be6a730-ae4c-4ede-bd13-38d9a66c8ea3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95e9c5f2-3d20-49fa-b1ff-d46bda90348a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d3e6b7ab-a4d8-486d-ba3b-cb001ea3edcb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a834868-2d0d-4629-8fb1-b8e7247e3263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c20a76-47e8-4624-91c1-8ce39eab2216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4e70e5-22b7-4c01-9c82-c6173f713963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2345077-44ab-4a41-988f-8a02961a28b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6900916-6562-4dbb-8b9d-d36da19ed53d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff14a50-01f7-4978-a92d-33583a1faedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb1a218-fc0a-4d19-a7ed-0a6ac2cdfd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2f41c3-1ae7-4959-bd4b-0719ecc34306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e51caf3-69b5-4641-9e66-d101e6769223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40657be-a302-47b7-88df-3d5cbad93935",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5410cd8a-1663-4ac2-b0a6-5730623b0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5f9fb6-84a2-4fcc-9ecb-8d80820754b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b5e3f7-8fb7-4e00-9edd-b8c2ace589f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ebfdb8-8180-4456-8520-c6a8e1a74c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8827a79-5275-448c-81e4-5bcc9f5f01e7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c4fe15-e0da-4d57-9908-8e4c5b8dcc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d60bc1e-287a-43ad-bf57-e11eb60805bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab92f33b-d4aa-4b13-9066-63081f472e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "826c22cf-da0d-44f2-9139-fe4f8d0ae55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dd2f09-8a1a-44be-916c-2515cd3ab186",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169004d4-9b96-4643-a152-47d3e528703f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5313daaa-9d02-49bd-8c66-704c2ee27fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1179f0-87f4-4ba8-b044-fd9c695225f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c50e8c7-32d4-425c-801c-e162f659794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaef7a3-2fd8-46fc-bf13-0fac20448e27",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1688714d-6665-4f94-aa10-6c6d20cc2cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07a1136-e947-4911-89bf-27ee061c618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dea5a2-3f50-4a86-ab58-ac84758822ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43ccefa3-d136-4c03-9ae4-a79c5bd5513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5b569a-076d-4633-8a1e-ae5ad75638c4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a8cdff-688a-4863-a9b0-f3520d6b89e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99029271-1b1b-450a-a583-8974b35e0174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819e1615-b4ea-4662-94ea-921e0983ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93289e5f-2584-452f-a26c-1692a1acf5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7aea54-27fb-4eed-8884-e45b588dc266",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf1f6d0-dfdd-42e2-aea7-2bfc71ecbc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fcef99-3f43-4a15-80f0-2e47c02ee9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45603794-ad2c-4f0d-962e-e9691624924c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c69531b7-0808-4de7-a5df-86bbff452720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e710c84-b73d-4c98-9e20-955381f85fe6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9b1cc7-5ae1-4443-a77e-e5bdafea97bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f180b000-19c5-43dd-9d53-d724669309b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b81777-b075-4454-92cd-0d5ea9d67c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d2117e-9404-470f-8140-4687811a5462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fbf3ed-bb09-4e1c-aced-b2437c85cde7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2c093-ec44-40dd-8ba3-ca458b549ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6a5975-d6c4-422a-8084-1e66bd422869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0684682-0dd5-442f-ad04-3d1e15a67ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49239386-0ddb-4023-8999-fc9fa0d04f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46966f07-a78f-43ad-b76f-258aeb89462f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4e71e3-1534-4ba6-a463-494678dece72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc62e0a-1a76-41cb-8ee8-c2b74ead1532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85a87bc-fe7c-4f5c-a0b7-1bb9fc68b54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48a088d2-e651-4d78-964e-aa30d3146ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a23ccfd-1228-40b9-83ea-310fac200b02",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f678e77e-c8b1-42e5-8dad-54d165945890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0e8961-403d-4fcb-be9a-32eb29732220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfbb278-2b3d-4d8e-9449-005568801ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a115bfa-8400-49b7-8e42-e58bcbebe3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de1d31e-428f-4fac-8a7b-f6c6d1c2d2c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0091d36b-a4fe-4597-aea4-22e1edbd0a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44ae8c6-dee2-47d0-bf50-986babd38009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6806cc6-2bab-4073-863e-9f6a2530d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887ec480-547d-43ff-98ba-fb98d0e59d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fae610-09ed-44ba-96bb-aaa17777caba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3268f0f3-8292-47a4-98a6-3eb53205a583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ec9f03-90cb-42b3-97d2-e635e5697235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bb0fde-fb28-4918-8900-2d21f382ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7dfaa16-ee6e-434e-b4b5-b0682a4113da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ea7614-8796-4365-afd7-857d64f02dc6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67518545-3e59-4a89-ba95-312c658ac36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bac2857-c7cd-466f-8f3e-f035e5965c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a9ffdb-1bef-4efc-af91-0ec979eee679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ab9539-5521-458e-9b39-7caa4ad571c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba79393f-485b-4ab0-8035-80849def8aa0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02f185-f7be-412d-a995-80f31f2781d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0516a49b-e24e-423b-ab78-eef341a99645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36da8cdf-d63a-48e1-8a73-b98aae72f5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3c70b57-312a-4b27-8d51-d1a3a398484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2e0428-a4b2-4946-acab-96b0d06b5e8a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab971025-29e5-4cdf-91ec-b5561fd81f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81c788a-26f1-44f7-9c1f-c2e4a4cc518c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c10e0f0-4f68-481b-b735-191561065655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd7143c9-02b9-41fe-8c5f-3ef7163f08e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae4a4f5-3ea8-45b5-9bad-47e1f33c8ee8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea84f2-f31c-4dea-b311-e69a10e0a00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d806573-30f8-47e3-ac7f-6116d501ed2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7364ffc0-78f5-4d73-b8d5-95fc2c9eb0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d967d74-6619-4b2f-abbd-6e156c95c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99082312-775a-446d-87a1-dd04a751b424",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f34aa56-3108-4019-9e15-d6c4b05bb559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e22f60-dba3-4cc5-a3c8-fa73a3b87112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3d9cf9-d445-4c1d-a7e4-331856fcb66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa2df9-95aa-4fb4-b059-11f29e4a826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f12f23-b296-4e80-9b6f-d192bbdde0ba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac926f-946c-4e10-bcb3-9e9637a050b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7674be99-9022-4081-a38b-e2a53796e924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e701e6-2b0a-4ae4-914a-4a566a8f8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c082b039-4068-445f-9edc-e94c2434ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce87297-9460-4a3a-be1f-c6f29c55263d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f967d7e1-2567-4d08-b62c-6898bc9d946c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6a6c9d-d006-4960-9ba3-c3b7763a0ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd297eea-b6f7-4a7c-8f2f-08f25b420ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2ae2b7-1bc6-43fb-9c2e-b93553cd373a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d797abc-b845-469a-a4f1-18e51913744a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e976a-95c4-4ba9-b6e4-fe02153b802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31feed13-ec4a-4ce5-8a7c-89c0a245932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48c787a-6bdd-492d-ba36-bdd452d0c119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01df2996-e457-4402-a5d8-587f990b0472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79beafe3-8a4f-4eeb-a049-9228689f8b97",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e97c28d-465e-4ad4-a098-86884f89ab8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282e3769-d061-4ae0-b690-da7dd1ed523e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0675755-c38d-4237-8655-0c27de14746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d5df86-8e6e-48b2-a745-24c3e87e0215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaabb66-9cb2-46c8-8df0-d860966fd9d7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a3888-1a85-45d4-b718-1c290b2aaabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd2958d-7cee-459b-9622-c926386ebdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f26eb-ae3c-4111-8c4f-9d1c292d27a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "faf4047c-972d-4efc-8c57-4dd146685a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e0abe4-945d-4796-b1e9-579f85b4dd3e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b0aef-ca48-4a8e-b56a-2072f7717fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2219b42-5598-468d-a0cb-0e0e7ac831f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b03ac1-fb33-4925-bc1b-e2391ef2989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a213e4d-95a7-4da4-b0d2-4bdff74b6d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a78b0-cdb9-4cc8-bc99-88343b035f40",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ae972-3ed4-4a96-8e60-af306bb460f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79836a89-2508-4ea9-96ac-b767fa90f531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e600816-882c-456d-a221-b17aa2e0e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fd6d37-85dc-42b4-829b-83a04690a892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0923cfc6-5e9d-4366-b5a4-1275f84182ca",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb81c702-9141-4872-b384-8550dc5eb17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0836b4-8450-4db6-b56c-8a7e93ccb059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb0c72a-d8d3-4aaa-ab40-09b6644096b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e65e6ef-63d6-4fc3-bcb2-433ea91bb2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c4ddb3-35c6-4c12-af83-de9c1cf2be5b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2da7583-a29d-46f5-8642-6cc8370ff4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fed939-b73f-44c3-bb50-a8b66e154a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cda042-00f5-4ce8-b2fb-9d4d04724e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8c935d-9bab-4023-8a26-f20e035cae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8c2302-e070-45cc-97a0-cafccd82c51c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d162c-195c-4832-8407-03f5aa412071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2839b34f-ef15-43b8-88bb-1e8c9a62cf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935abccc-b787-4632-b4b6-f6a4b05199c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a9a00a-f84f-4152-ab80-785cc34dc1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ed446c-a6f1-46f0-a87b-ac6c55c082a6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70cafd6-d166-41c5-a503-e36d307bbfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf018e1-3f25-44a0-a3b5-7ac6ab24f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42130ee7-bb77-422e-9246-0edb7880022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8623f73d-e76d-4981-ac7b-4e23a7e9a39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea1fc54-17ca-4b79-bfa2-91c991d6ec58",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1630865b-d619-4034-be68-7c79d4d6ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679dbe73-1073-4655-834d-8c592ff2ae09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e7768-f6b1-4847-b52a-472a8494cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec059bdd-4da9-4ac2-892b-41a3da68851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f03e3b-7984-4ffe-9887-24d198297008",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d37477-a118-4f0f-852a-cf03f07d8d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf7357b-f2ec-4eb2-b139-45980ea764cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855578f4-0f0d-436a-a3dc-8006d2fdea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd41df4c-835e-448e-aa1f-6c3879bb91f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3fc3e-54fc-4289-a2e5-10f4f3ca0f3e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3e6a4-be6e-4987-a1ac-4da2a93f2667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5009cfd-9c90-444a-94a7-2e707716907b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c00b66e-095c-45b2-8319-934d3513c553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05e3ae7-94de-4990-9a63-6f2f9b2ab2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb5662c-6168-43a9-be4a-f7edbb666102",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7559f73c-f271-4f10-bfbf-2ebea3eadd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de753481-3c01-4a64-a686-0e1d03884b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cb7172-c7f4-4376-b920-2105e685b34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bcef7e-a08b-4c28-af2d-49dc3a71071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c83059-0e25-42ad-9762-c1f01a2071ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c07daf-ad8c-4404-b1d5-5de49ab41742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440ad237-af68-4cc2-8c8d-311e431aa0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412fcd06-d432-4d23-a8a4-6d8e554fc718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "24e83de7-45ca-4f22-b37e-7f270e2debe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff6d266-c7ca-4263-aa67-e791ff81de84",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c11af7-705b-4121-b66d-11293931e524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64f10d43-b433-4f51-a344-577bd0197bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2a490e-b812-49ac-9446-a9d56e071b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c927ba2a-90e7-4d89-85c1-f5cdfbceb8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f04c4a-1a40-4316-b081-f9d73596ca4c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6056f957-1cb0-400e-827d-9cde9a2ae38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35266e78-cdd2-4470-9b45-f83f3fe6ce48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86efcc41-b0b1-44e9-9fe4-718d04cf2a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70047ac0-0518-4e70-be46-f7237b948365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e431eb7-3c9d-4156-b63c-70a67787b7a6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e3e301-679b-4150-8618-13e91017d74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72896487-3a24-4681-b0b2-6e27a7d33584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f50fd-5255-4034-83ae-dd451949cbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad97470f-2d42-42fe-a4d8-80eb13a28b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c492ef-670a-423b-a63d-94e87e89bf0a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc81b81b-7c91-4df6-822c-efc669ed1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a95e91-a7da-477d-a6dd-91317d2e5711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caffe924-d9bd-49bf-a499-08232b31b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c62af5-79c3-4b4d-85a8-37675bfc81bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8eba6b-384a-4462-93c9-d11c138a5fb8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7469d1d9-077a-425f-8802-8667a98401e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c6487a-4467-46e7-8de0-ad12015c14a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58105050-e258-4bad-9b04-06f8e4627e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d418e3ef-8ade-474a-a113-312914ba6b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb22c6-b2a8-4c17-9596-988ade0c0c64",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9131ee44-c398-4441-b8e1-cb58ee5be511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9ff2fb-1c94-4136-ae70-72451c126f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d0d75b-1f18-4b93-bf58-5bb66135ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e412417d-4666-4a07-965d-a214cccdc22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3518e705-5611-4a95-b481-53880c279969",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd8088e-58df-48f4-b538-5ec62a771c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2e0186-8a75-44f7-bca9-a05ae0c4b274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074e253a-5088-47f5-8d86-053a073c2263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "62a705a5-3a44-444a-9c80-b8a54be5bd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e1abd9-d345-49bb-9b72-6d386d22155a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f3dcd7-59d7-4176-808c-0baf71c30f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e81af5e-e9fc-4da2-97ea-7f0a543dab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66f4c3b-54ff-4501-ab2f-4cac332425f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99370ae2-24a1-4f69-8942-fc808fa44623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdfd80-6cae-4a2e-bea5-adb9f8db4826",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84ffb5a-dee0-4a1e-88f9-b10862a31ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f562ea-6499-4b7e-ae28-f389b130d133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446fccc-582d-4498-8eac-7f47425bba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d092d064-74fd-4f1b-ac92-e3eadd74753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120e7a8a-61d9-4b5d-86b0-2854636fac5c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719ef421-9323-4848-a959-c6b4b4b82b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29748af2-1574-4573-a356-8aedd391d8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3b4990-9df4-4eff-8ac2-d3a7f17c915d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf7214d-db64-4beb-9d8b-1807869fd7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95e4e1e-507e-4428-80c3-b5070c32a952",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd87521-b8ef-477b-8038-3fe5844c10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af0a4bd-875b-4b8a-b8ca-6402f37f5cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56910388-ec3f-4330-bcd7-76c306e168fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18bb307-668d-4805-a8f2-7bf67a995d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e81143-fa03-4889-a513-5da03f7a00b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0552a73d-8ce3-4339-a81d-76665f521610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4899f93-5c4f-4f50-b501-8cc6a831c401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2700508-e411-4d6e-87a7-b6401b16998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06402c90-bd06-41d8-8773-5b2cfcd5b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfee38a-fd75-40be-aef8-c3c9ca2ed308",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6b626b-d542-4452-a326-edb9da59c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7fa892-cf22-4639-9ce1-e7a68c768a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dda0f6-1d6e-4e8d-b7ba-8122d4e54821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3188224a-16ad-4b18-a85a-639e11009675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ee93df-91e3-4459-9f11-ab4df28d2901",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766995e7-0cca-4d02-9287-fca4092119df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144a6253-ffb9-4dc1-8f65-70925d8a1782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52376f9-20f5-4eef-86e3-d81265050d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "490c1ce9-9fdf-4329-b36f-68977a39e3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353ddb93-ee0f-4d89-9c08-a1a69d95cc07",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27835316-ad5e-49fe-b9db-9520e67ade6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41d5158-a6eb-4cb6-81f6-7b09f0478bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a013af4-279a-40f6-a83a-93c9471122fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc2238e-eebc-461e-a14a-077022d45394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d674a1ba-97e5-4a76-ad5a-d883c3972467",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe5c04f-1182-4fa2-aa91-fc15ca8a11b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8eee55-86ac-4920-bd78-46d1175d74dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21334a13-a3c1-4d99-a552-0cdb36fba6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1152115-bd60-4d74-9b92-9227f5bd482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a08a1a8-d95b-487c-b317-3ae95fdb62a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de9f6f-a699-4868-a2d8-61519d682010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b92d599-f8a6-4c3a-850c-870f05fb5c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5573f261-7ea7-49d7-9ce3-163944ec23cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ff326d-38b4-4ac5-934a-6f85348101f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b64b27e-f24b-43d3-94e1-582ad6c24fda",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21547e1f-8ada-4bdb-b1de-07369aeff95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc0ad4b-3939-4d2b-9cc6-82a443dfbe78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10203e-debf-456f-83cc-76ef7ca62148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8b644e-4b27-42fa-9e29-ea23a25e5448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eb50dd-dacf-4f57-b6bc-785eb730f18f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51074d6d-5951-455f-9324-e042f8f31510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705b4964-bd3c-4bc0-9293-95164f14bf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b92d49-1a3c-4b71-bc6c-9f1339ac2856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "993fc275-0900-4829-841c-c1708147e858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3695bab-8429-4975-a523-1a171894a7a7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef35d3f0-77a0-4ecd-bb2c-6b518ada9c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af86ee6-9edf-4ca1-b122-9d1841d1c739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1314cb00-4689-42ad-a98e-1fbf4b765e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e36863-25f9-4087-8857-5524d6d7400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aeb7fd-7995-4c71-8bf0-a849b9251d14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6433a-76ab-4150-8d96-d850edc9ec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840224cc-b651-4e7b-900a-46774d37ab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67870d84-ae17-406e-a1f3-3ca700b5be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9596b90a-8d35-46c5-9b0b-8cb35f518731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab41be8-0210-4f25-a47e-2f8e2cab2d24",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a582db9-e6fa-4159-98f2-2d7e8996c13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c614663-3167-41a0-ac8b-0f00c6a73285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ff3b1a-43cb-437e-bd77-702c6f099aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9a81d7-1617-4583-9bd0-6ce7cd221868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dd868a-7889-435a-873a-e9a304375a6a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba6d77-6517-4583-8004-71ac7e0b3928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fa70d0-6424-495a-99e1-f8cec8970970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559f77bc-4d0f-4c05-a242-48721f00f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30bfbafa-7437-4cda-bb35-01fdbf1e785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fa4cc6-ff09-471f-aa37-e36eeb14ec0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59212b93-cbf5-45a4-aa7e-6fc369cdac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8259f9d4-78bc-46af-8832-b0b078f8d6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5928ba-be28-419c-b631-32f1a0c2fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bb3f47-5e1f-4eda-a688-f02dd5cd2fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be10c7f-e608-44d2-8e20-1c7aa0204b3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dd7103-817a-4aff-a745-df70971d88eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb6dfbb-c8fd-441b-bdad-87abe7e39cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922720e0-75e3-4e8b-8133-059aca0d88f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f63443e-6c5c-4b62-b72d-fc8ab41f2ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b12a043-f6a9-48b2-bd56-1d2bdd2e6fff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac46b7ad-551d-4022-b739-b62039d4767c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01de4de5-1978-42d4-bbdf-94b29564d617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baf58d8-97c2-4f3d-b20f-6452c053ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "649ab2dd-bc83-4e12-806a-6eb5f8bedac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38afcc6c-98ed-4461-b26f-8de61136ab83",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0d83c2-9fee-41f9-8459-d71d4dcdf15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb41b9a-a997-4a5a-bb58-c3a1d3c5b1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e928feec-d14e-42f2-a91b-6fc13179f92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac567c24-5e96-48db-a96b-d8248d2e6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370f6859-069d-4a65-b611-ebd1ac7dee1b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789a4f2c-5661-465d-b0c8-5d0e3df28d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fc7135-70ec-4947-af98-a46d0bf6fdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968ca78f-a9a0-48e8-80d3-a6dac503fa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0d1a14-5e0c-4f1e-97ff-359b996aece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca4c8ac-4b23-46ab-86f8-2a340999e332",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f3c67f-d552-4510-937a-4e297539734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554e49ff-9f41-468b-b7db-ef544b2a40cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4434208c-4ec5-4a1f-8959-ba4430ac88c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc67fbb-1e68-4faf-a57a-52b314df767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de9f33f-01a8-49d6-9a3c-edf226191bb7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d13441e-e28e-464a-afb7-99db40eba686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf0b36c-c711-4200-9d8c-fa8b273e14e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbd4c35-e3a8-48e7-9826-1cc304f471f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea1928a-5022-4f5d-8f42-5f3fcb46782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31cc6ca-7783-4716-a718-01bc4151498e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aaa3d8-c2d6-4873-9e88-4562aed11640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0b74d0-7b43-492d-9b47-2a910219b5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145b351-dc19-47b3-9354-cd69a49a7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c812f66-5e5a-4ed9-99f1-a2696c53862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93ce749-ac1e-4cc6-94b7-d1127fd52454",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e8a7e9-1de9-4c04-ae6b-a5f6be8e554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05eff72-efd3-432e-8253-9a23b84698ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09f169-b5c3-4c03-a685-a2e12ce87abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cabcdc-82d2-4dd4-9189-6d729d1f061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeeaf0e7-ef57-4966-95ca-41135ff2f6c6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60b34ab-49c6-4999-9f85-68539ad48634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37553156-57ce-4a41-abee-a57fb2272132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce16867-e08a-467a-be63-318036382831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75472b86-73cd-474d-bf6b-369d2b3f0ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3e15d6-3936-4eb7-af22-3e42929a60a9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e572b4a-d970-431d-a0d3-b29f4e4743e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fcd61a-2ec2-4c9c-81e9-394c1717d37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefbb1d0-14d0-444f-9660-893731945090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41507c96-8e37-4eb9-afc3-6a36d7f5c047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b3d059-e954-4e1e-959a-13f69fbbb009",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be51dc9-7714-4847-ac1f-e44f88e25cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b962602c-c05a-417d-a64e-b8511d99fe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a68cdb7-c6d0-497b-9ea0-0214049133d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "408e16ca-12c1-4fe7-8eab-ec0598bfd233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e4b1be-fa5d-4b97-9c8e-fe953d9ca9c4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e3dd34-dcbe-49ec-a984-afefe022d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849b757c-fbc4-4057-bfb3-0053dfee9e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fcf5fb-c754-421a-b6fa-a6fd7fc4e492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd89c19e-b38a-420b-8fbf-aa540f359393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e58004d-2201-47c9-a4e2-3f73a22f1343",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780159f5-4796-40f9-bf6d-02a2316c6661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8298205-4d41-4503-972c-0a7c1a9fb77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82994f93-a406-4794-8876-a95cf261f354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a579d7-5655-4870-bd3c-ec7a3643aa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f5f411-a33c-4c63-a2a8-82bd9add8897",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc0a7ee-f824-4f99-8a90-a3ddb4c99cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ff3321-43f5-4a27-bd3e-9846d42c3a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8510e32-2683-456b-bf63-18fa2897883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5deabf2d-42e3-4cd9-99db-aa909d575208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3e826d-d790-43d1-b0c5-544b03ee47f8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a745a62-d5bd-4289-9762-65292a52a589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8468093c-288a-4df3-abab-e70bc4b156d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5cdcdc-6c82-4de8-a3d2-2b9e94129e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d04d7b42-4af6-44ca-ac32-9f23c1615ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab6c36-17d1-41e4-b86b-4404dbf6eed0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c46ff8-c8ae-4c99-b9cd-7ec763455801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa0a2eb-ec68-42cc-8bbc-e41e06b2e183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f5a4e-ae13-448d-b6ba-7275a4eca492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75593dc2-f1da-4bb0-a68e-01042c57a786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc979c3-6e46-4a88-96ec-38454da66ac4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde15c03-53ba-4e71-8e8b-e6046e99dfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07056174-afae-4777-a65f-21aab4be49d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79ff2a4-4392-470e-a5f6-1c9fc783f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bd45eb-592b-47dc-977f-6d95eaaf076d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ca0d36-4822-4e59-b9a7-da8e223b6721",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50cd787-dda2-4514-911c-764059a05771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66768716-42f4-42db-81a9-6d5a8bcf8ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8bb24e-10ba-4b63-a720-9abe6b20f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d7879d-46ed-4268-a672-e7036b0eb761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe512e0c-7ac3-462d-b7b9-b0168a379f9a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6164155-aa9d-4b86-a351-a0213de9ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9036a1a2-ceed-492c-9d3e-297e9e977245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aeb4786-45ee-4a90-88a7-611c3875fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8039a249-d553-4d6c-a1d1-a2e4c981b788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd27c64-705d-4e09-bced-84cc90e200de",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e65d1b-5cdc-4273-88fc-78b4fe246a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c105e6b-e6f3-4dee-a833-2b24fafd5319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f18510-bff8-4f3b-a43d-62ef8edfb844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34624456-d582-4776-9862-477a72538dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b4cfac-9982-46ce-aab1-95723d4c977d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63189f78-0798-4316-a617-cda0475129b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b2794e-30ad-4d7a-bdf0-bd5de2dca9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5d1884-a8e4-4916-b6ab-4eeaef85ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07b6620b-7bc2-4a67-9380-d069073453dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c643eda7-2fe8-490a-8a0a-d40d205d4959",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab705b5-99b4-451e-8b24-df79b7ac8b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584a065f-80a9-4379-b737-73cfa10bee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff2ceb-550b-405f-b532-a1a6c1a8de6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b2ea96-0fc9-493c-88d7-ad9ce7631bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba4c09d-2035-4483-8c16-9dbd1d671616",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612032ab-6445-426a-8e2f-3de7a1cfe902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a19844-40a5-4ed9-8f0c-8deb9a935dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e9cad3-3b5d-471a-96c9-b611fdacae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e5d172-d8ec-4e44-bec0-9937255c008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70a466b-f0a2-426b-ba00-65bde17fecb9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09cd344-169a-42e3-acfc-93ddd8370a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229eb067-d969-4a88-8a61-0934eae7a73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca4ed4d-68d6-4fdf-ae8b-a8efeff26c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a57f2b-4b97-4e00-8cd3-5d1e63c88f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe13e91-a024-44e3-829f-adc1b7c58fba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d0d3e2-edaa-4d1a-8281-a80c298f6531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec590610-83eb-4acb-bc32-0e96be297444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f0a0f7-fc49-4460-855c-7f166ae51d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "831ea74c-8e52-41bd-a9a5-4c878c1aa013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d82c8d4-92a5-4938-871f-b491ed721807",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f2285-31d2-4d51-8769-85ff89759246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84e536d-6a18-4afb-9abc-aa078408bf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386d8644-c059-475d-9237-6de410001f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cf7c30-663b-45e2-803e-223254ac5e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85205138-be21-4249-bf2a-4f669c7eb2be",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7406921d-d8b8-4e73-84f2-a717ed699225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6778cc3f-eb66-408f-9b35-ba9e11aa7f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5142c1d6-44d1-4949-97e9-12d8c90b18ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03de9f18-3684-4af6-b962-85d5c2e150d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bbabb7-aa57-40d6-838e-64200bf41598",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f5e98-c995-4fc1-ab08-f339a11eb741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a9a75d-733d-4797-9495-ff22446cf01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e5461-352c-4dda-9ead-43acf5b5d09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2e0690-6e4d-40cb-9d97-6ef6175ed53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d421fbc1-d0c0-4e15-b9a4-4583940b516c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e45b265-55bb-4920-afe0-6168bd40b7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99686aa-3b4f-4b34-a802-4e3911309a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd8222-5bf6-4d39-a6d2-29916b1cbab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb5b32e-20ef-4c5d-9e2a-23db33dc9a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeb53ab-6cc9-4e53-956e-46ef12f9ab10",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7467a131-47d8-4201-8380-503b07bf7eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f70fb8b-4c00-43a8-894c-94f169a31011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69f0151-e89b-48ed-9abd-396fe12cced8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce9f533-8b99-42e9-9520-5b2833ce1929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad25aab2-b2ab-46a3-beda-100e46a8c001",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee4431-3415-4d95-8a4b-ee97aac5f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83093037-dd4b-453d-86fb-893bffa7a4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e32ac7-518c-4f76-85eb-7f266e995a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "001f2876-fe1d-4866-a1cd-f4470b16f6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe24a4b-dc57-4feb-99c5-0ba951c3a6be",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a782d-fc80-46cb-a090-441b3ec0e24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea027cb2-4117-4129-be10-4c95df78c8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baac459b-da7a-4a3e-a220-4b63b92803b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff22182-2f1d-4a13-85a8-5047e53055e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a762229-86fd-4b69-a770-0e6fdb9a137b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f937bed-33b1-4e35-b6d2-08cfe4130137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcc33745-0c7d-400b-b565-3b320cd19299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c781c5b3-1f41-43ad-b721-43eeacfafe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c36a6f-1ca5-4a6a-9a17-787705f8bc3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc121c8e-9248-4ef7-8b35-d46a0b1cd6d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1cc2d08a-4099-4362-832a-fb6910361a07",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d937fa7d-67e8-47d6-bdd9-0c1509dd92aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "564208d3-c5b0-468f-a603-65494759ebbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b24ec7-8395-40d2-b789-607140576e2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "419f0e49-ccc5-48d0-acbe-ef40da0bbe90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b26fea75-8ce6-4f7c-8d0b-abf4a872b0c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86fc5e1f-c858-4580-bb74-52588d924ace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3197d9f-446d-4905-a1b3-6fb40bd89b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5c5ed3-4ff8-4cf9-9e98-d7e752b41298"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7abf5474-38ce-4464-b751-e23eeb087bbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "620e2515-f37c-40d7-91bb-4031d12607f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12191c71-36ef-46e1-acd2-c82107182592",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3b001f5-e898-4067-9a0d-7239ccbe2a9e"
                }
              }
            ]
          },
          {
            "id": "040b6e82-8565-4911-b0c9-3123cc0f3b6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20cc54d8-27cb-4b9f-a918-aa730dfb94b1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "275b805c-b51e-46fa-b700-9cb3ad9261b6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7506f20f-c853-4177-aa11-dbfb05754bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5057e40a-3656-4d26-a152-b38abe780416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cee54-fc0a-4a89-b40c-b1a234ae82a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a25521-5239-47ce-88ba-7d9954d300c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a2bd255-d7f7-46b9-ba0d-5e38195e93ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b0d8773-3879-4dfa-81f6-d512b60b416b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a1886df-acd0-45d1-a63c-a5d048e179da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aa9c38b-e021-45c8-ab3a-079f239d58cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af019d2a-7aee-4b00-9df5-56be582fd764"
                    }
                  }
                ]
              },
              {
                "id": "5c834a88-8ec0-4884-a2be-e97074f6856e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8365246-da42-44f1-abeb-0c73c84eefbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aae76e4-ee70-4c86-b057-2913adf93859"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3920cc33-8171-4cf2-9dd0-4a2daadb7c48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f18040f9-45fe-4131-bd7b-6520537ca3b5"
                    }
                  }
                ]
              },
              {
                "id": "60553308-2ee3-4efd-be48-74039b2b837f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcfc17c4-930d-40a3-979f-ff061914329a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9086d1f9-19bc-4a6a-8c6e-7662a1a8704f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0447edcb-4562-4e90-a012-7d5edfaa7198",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ef6875c-0146-4b17-964a-1c2fe714c526"
                    }
                  }
                ]
              },
              {
                "id": "c927f6cf-276f-477e-9459-07ea1ac1ffd3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "137fc4fe-d51c-4f01-9c64-ea8dd78c8865",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c150c2ca-cca8-400c-865c-2725e3c2c6b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d6ba26-1e7b-4b30-9cea-9df1ff40a467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3b7caf8c-83e6-46a6-af12-da13bf60c8c7"
                    }
                  }
                ]
              },
              {
                "id": "672bc2d1-c7e6-468e-96ef-cc8801105564",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08f61b66-3517-4f26-9f27-9113850a265c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f21abe3e-3168-4c5e-84af-79ff9534c1c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "610dfa24-625f-4add-920e-f2f5909f54e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "847a9c41-4076-429f-b902-1ac540641a9c"
                    }
                  }
                ]
              },
              {
                "id": "9ef8c712-87f4-4611-af10-0edb05d50c6c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb7eb1d-b813-4f88-bce3-f693debb0aa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17a82068-f641-4b82-8a26-ebae15d280b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c6b47d3-a063-4911-8019-92c616c22b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6388c683-b859-4e52-83a7-086720bdc04e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b7a043d-02bd-4074-93a6-c83002601f59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b15c9915-b2a4-44c5-b324-d2bf006cc24d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61cbb99f-b16b-47ba-ad08-505add8363a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6badc42-e224-485b-b89f-00b4e50bc701"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "547f5914-feb5-49a8-b5ee-5d6f3e9ab0ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f6418940-c6da-4758-b0d0-56ae6a49db1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84395ff7-d221-440d-a627-3e6a16b8d1bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c272edc0-dd3b-481a-9140-b0a832691956"
            }
          }
        ]
      },
      {
        "id": "61515b6d-3783-4704-af21-e00172cfd4ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "45bafb22-0238-4568-8b7d-e84c1c5afb89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67c30e6a-acf4-435a-b096-6e89e2faa373",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "becc1157-6dfa-4aea-accd-44f973cf0fa7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd9913-4695-41f7-bcd1-5cbd1cab8dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae147d5e-ffcc-4bc5-b0ac-9da7f023c0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe598dc-ab7c-435d-8872-b3bb24d6c2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7e864e-f1db-41cd-be21-fb50aafb5630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e42f4d-0ba4-491f-a3c4-103cd8ad0fdc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcff6667-ce70-4e7d-9ed6-78743bcc46d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d139650-8317-47de-bcb3-431d2636ab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f792ae0-017d-429e-84e9-d1ac40c412ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c54b2f-22e6-493e-b2b1-9822b5555a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9246a808-73c3-44d2-8cec-04aeec5ce862",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17efab45-5648-49f7-a216-c46bf03a7fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9e2a91-262d-405b-bb18-9728d94040ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1b2e66-3c5f-403b-acbb-f7d9da355b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0833c43c-cfa8-4ed7-ba91-dac0bb22c209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9e9526-f9b6-414f-954d-4bf3596bd45a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d86b3c7-a180-4071-a80b-084d270908d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0096e0-2af4-4070-9137-164df61fb125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f7ee62-8612-4128-86a5-03df5c92422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a461b82e-a73e-4c33-a65e-10f796922b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b176d8-6cd3-46a1-b526-6599d8dcec31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f34a9a2-88c5-4bc7-acc0-53dc7b1c9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41607d90-c115-4594-a2fa-7d655f9b1f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077f569b-6512-4612-9c06-e96e7aa613b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3521af94-2e84-4948-bb0a-3fe07b3c3f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a32d6f6-1e72-426a-9698-004b2d231295",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfbc83a-9f46-4e19-87b0-efcde1523471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3621b7-0966-4926-a608-722603817b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8d6c29-6a62-412c-889a-74b8a7bc443a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7bb564-3449-4726-a8d5-6ca8e1788348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431e3339-c7a3-4098-9816-333f2e5f9f8e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a80d537-9b35-4eb7-aded-3b61970878ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4574843-62ea-437b-a797-98a74937a76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e1c134-4ed0-4b9c-9c78-e34e3a6733f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb527501-6297-4357-b9f2-725568b6bb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d5325d-10a6-46de-af0a-aeba1650b7cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c245040-c642-4eea-9969-26e26891651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293aee4b-a163-472c-a74e-4be56e4af307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c079e97-8cd3-4d56-bdf4-53b775cf0d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c1c1ba-963a-4045-95f9-790baf2d5a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41db3cf-df57-4ee3-b347-13cbc897ff7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1458794f-8cc0-4ee0-a22b-b5bd8843d977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab2e185-f30c-4468-905d-1dded384862e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14165da8-4080-45fa-a605-2f37bd300e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46c2ff0-f189-4f2b-9500-786ef525b8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117eef1-3781-4eff-bed3-1eacf56b63bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9536d80d-0f49-43b9-b217-ad059c95256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c81df02-ebf4-4b78-af61-918be9340a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42abf90f-ba17-458c-b7af-aba63a8827f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4063f2c1-8854-4632-ace9-5842d1c1749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f85e0-e64d-43db-92c8-484e71228475",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14040bb1-a7b3-4765-b76e-15ebf1f51b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a687887-b301-40a8-9197-bc0313f81f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3845ee48-b0e5-4b34-a155-704ed704ada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "25775f7e-1b09-4b3a-937e-7b287f667bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5241c652-fab0-4f2c-991d-71faf813ce0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1967f737-bb9b-4f76-a1cb-ab983dc7853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e6b620-e896-4320-8dc8-e6eb0127f401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64843453-f0d0-4e30-916b-909790c2bc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3370a6-fe58-48e6-b96d-d4dffd45efc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcb24b9-8a00-4353-97ec-7252fef42245",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483f207e-eef6-4e36-8f3a-5974bf0ad31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42a05e1-2df4-4b7f-b449-779576a92f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a470e42-d9f3-4d06-a94f-fab69ea35c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "286f75dd-1163-4cdc-bd94-05ffd8dc1ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37b012-9351-439b-b4fa-24aefe2c6441",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96eacb7-d86a-4e9a-b9bf-586df803fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2721b0-83d4-4263-b266-bfd560cb4ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719258d3-9846-4328-b8c8-d26f566b465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a3597a-6d35-4001-aafe-7dbb087266ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d15b9ed-0523-4f68-8ba0-314a74f37d60",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f16261-8493-4e00-9da0-a367a4dcee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81886e8-83e7-41b8-bc08-dacb9e0c95d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382aa7cb-471d-4969-ac8d-07b071468f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8170fc08-154d-4512-9b95-850cd945f255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b706ae0d-fa04-4664-9905-3974eaa8b093",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c13881-785b-4551-b438-2a900202b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb427da3-585b-4f19-a279-ab1d2199c082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae886764-98ee-48b0-a1ba-e430444d5f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2424f5-5767-48f0-b0cf-ef1a56175c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1cc4b5-44cb-4cd6-9273-e151ce4dad65",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd40209-16e2-4758-adc7-7aaef048a134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cbb9ff-86d0-4772-8210-4e7e8823ec29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f032f5f-92de-4fc5-9f1f-4f6e316d4cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "697bb253-b433-4cc2-b782-069646e407f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113a0c55-1ecd-46dc-9db0-b42b777924d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aa64bf-d400-43fa-9ceb-2ec6e692068c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00a4eb7-af80-45a4-9c3b-0fb3f63dc1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ccae9f-2bca-4c03-8d0a-406238ab2166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ac94f4-fe69-4c67-a783-e2483f7191d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ac719-ca20-412f-964a-915363c4ecfd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b186cc-508a-4033-b67e-befd44a1515a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcc84ca-1ce9-42e4-9862-2f6323637f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818eba75-d24a-4bb1-80a4-ae93e8bd8d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "069e767d-c58a-4490-9947-47660783723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0435eb40-d54c-43d8-8480-a4e4f20255e2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14c34c6-fc5b-476b-bb17-202fc550a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20527902-04b0-4a72-ad58-e751c836aaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78bffae-b9e4-4234-a7a2-8491d4dcae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c686c0-04b7-46ea-b794-44dbbe0648cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b14bbb7-9b62-409c-880c-c68df3a1af0b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd35025-dc25-498a-957c-e12a98290c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0b223c-f15e-469d-8694-c68299ac361d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce1298-c8cb-41f0-94ef-a8e1d48dcb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa665a3-93fd-415c-9977-92c78c6f6312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61efcb3a-7fa9-4efd-9966-307f6cc39d1a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2c5c99-146f-4c40-9f68-846bf53d9655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406afdd2-b239-41c7-9d04-0dcb1d5ef142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46b188c-d775-4a66-9d67-b3d351ef9937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e28253-ffb3-4939-9493-642ed34dc6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a922d6-ce9c-4992-91c6-9c5e7fce354b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e37be4c-b9fe-4387-b220-0c33b1259916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4cf221-9a85-4c09-b08b-759c9dd11f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231b0e4d-6b92-40d5-878a-cb4ec99e6b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "941e4951-823f-4437-ba3e-272369e9caf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a6a22-9239-48da-8beb-5e4b5f55f633",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11cefd8-db6f-452f-b37c-bdb477e7f166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db36b4df-9f76-4822-bd31-f31cce8d8758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcc7e5e-349c-4e02-88c8-b94c52a70574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6366a2d-3158-44a6-b58e-af8b54fd76c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a20149-3330-420b-bfda-1ef6d0ad8ca4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407218a3-fd0f-48e0-9188-094dab1bdffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc506b1-3bc6-4610-9af4-f1b30a099c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f50bec9-d0d4-4089-a5df-60adeadeea58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8cfc30-bce0-41a6-9514-97ee2b3e14e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40531fa6-a1df-43a6-88bf-256249e93474",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758b388-cddf-46a3-b3e8-76ad08450088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0bc993-664c-48cc-80fd-b69754871952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb54c4-7146-45ae-8fc4-8c39d40b62a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6d3ead-c876-4d88-8c1f-1a58689de021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc3bbe5-ee6a-4975-9023-85453512972b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae12b25-f960-4008-aa77-f1f736a44e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41427e43-a15a-4612-89d2-6bf38e4d8f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c498c68-8982-47f9-809e-c1d2a123963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b338d846-e916-4829-88a6-3743eb7d4760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f22fe2-17b3-4a8f-8897-9dafd9249f52",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b696f14-66dc-4f27-a87a-0db96def4300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6cda42-1b00-433a-a837-852db10bb635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58707fb0-3f6d-4606-b1f3-5dd8c83f7dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b63d35b-22c5-4529-b100-7724dc3f5d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f610330-0780-4f30-9073-82c979993816",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91deb306-a3bb-4157-9839-d6b93d582e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fad729b-fc5a-4c93-80bf-655da7d32cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9fbc7c-056c-45f7-ad06-5f98f3171131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ea01ab-7d82-4d19-8654-3293cd9228e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be304679-4073-41fd-8973-7900720e80fd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11252ccd-e801-4fec-984a-e7af0c2b4d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a4edfb-0e00-4e14-888a-49fb24d8257a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8442b-1eec-465c-b1bd-ecf03d430a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6708f82-eb69-425b-80b2-41c672858d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2d0d1-0fb7-4b05-b2ad-d4c93a714c66",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1179d87d-de78-4d4a-a7c8-b6bd0b3351b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a160a746-1310-4e7e-8fd7-1683173e8ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f775079b-9a96-4f8c-ac39-a6b04abad7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c3a8d-2748-489d-9c20-9dbd43e11f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c1b6e2-6d35-4981-92e0-cc836e7eabc3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801985f6-8c22-4faf-a715-52ddb241a239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8641bfe0-7c51-4b4a-b9f1-a5762e85c520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24a7ad7-8e58-44d2-bf18-0f87fb8d0164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2a2835-ee45-4d59-b30d-b0268df433a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc76bd8-a46c-4286-8a2e-58228fff65d3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace71d7-fa95-4515-8023-87a23418831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f043832-081d-4624-bf10-9add183e51b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f1832a-779c-4088-974a-ebd005725ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3923d696-5399-4e42-839f-04dda611ae88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1f8c6b-4c75-4dd7-a62a-afd9ec29da78",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc47e80-4bc2-40f4-a0c2-1b0a73185da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a7d9a8-9b52-454d-9e30-67a2423cdb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb57d22-7223-4d9f-99f5-750f0bf85147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3014906a-3433-4540-a7e2-ded7cee04a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915cb0ed-582c-4a0a-bb8f-4574ec83295a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90744805-a6e2-4435-a7d5-cec62d91867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1c133d-0ab1-419d-bb54-bed0dc939191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab377bb-1ec6-44b7-a60f-2f000417b352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f5dc8e-2578-404e-a5fe-dc5ec67e9396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb8deb3-33db-4604-9a19-f68467de41d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7d76ba-7876-4ca1-94a1-33b622287806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee7d532-a4cd-4d87-b35a-6ab0354a497b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f859525-3e3c-42bb-b9ce-84852108653b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23973d4d-4bd3-4192-a79d-0c21ffbf3b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b52ce6-1960-43f3-8f93-2c3ea4ee6698",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed754536-bc12-45de-bdf6-547fc82ba8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fce3e8b-cab4-4fb5-8b78-fc96fe0d4fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e47f216-eb1d-4d8c-9f00-06c133f3aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc4a7a9-61a1-4c50-9d8a-1424835e62ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbc06f5f-4071-4c1f-8277-7ec864fb2bf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b9715ef-c2e4-4ee1-9bd7-51cca4ae78e1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72545a55-ea79-444c-874d-9be4612c0ba7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d56a5c3-1e48-41cb-ab8b-4c4187afa763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7997770a-b454-435f-8e3c-f7160a71bdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c38fdd71-b7b8-4197-889e-abb6b077a338"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "139a1909-6de9-4cc7-9940-eb7d0fc3db94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69b903da-5d69-4240-abd5-94fe6fa0cfc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0534b174-7547-485f-8248-d3b916aa9e01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6c69de4-cb49-405b-920e-d81994bcdf6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e296e063-64d0-4c8a-92c0-ccb7d36ad110",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d0355a0-fd5a-4054-866d-6c33ff721fec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7607b52-c200-4b35-9f25-f5a5334d8111",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72b0db57-5e63-40c3-8dc6-c0091da21122"
            }
          }
        ]
      },
      {
        "id": "59b87dbf-6b98-406f-bd08-cf637fe92ede",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2a8cc50b-c923-420f-b275-0f498e69fbf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaa46741-5685-4fd6-9822-e270928444e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "114abb0d-d0f7-49fb-b18a-9a69b3bf02af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9376c9-fe28-454c-a499-159da7507edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11283f1f-2a2b-46d0-9d10-794d355bc788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4709be9a-4bfd-42dd-a800-fec275665780",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f168f-6b68-45c2-a6d8-3eb3703e9fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64891b1a-fec5-40c8-a98d-0528705111a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9a57ea-3009-4fca-beec-2976c4c49f8c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab7df2-302d-44cb-a9d9-eb943dbf0c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d34912d-8952-4ff0-9786-f7096df52b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd94825-60ea-4ee9-bb95-ed0aaff96b8d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf5f1d1-4087-49dc-a9b7-db277c8205b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187b61a6-8863-4cc2-b711-bb5518fc87be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418509ab-e959-4a81-95a6-73bfd4670542",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b06f091-d0cf-4f91-8011-a8519710564d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aca1cc-9c82-4625-acde-40581ea38ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d607d4-6708-4214-93cb-3c17c82c4586",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b602f12-a5a7-4ff6-b13e-09b801c219a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7722f10-2714-4585-9cd3-313475dd55de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3541a8c-4550-4b92-83e7-a8d7a544aece",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951d5c3f-0b3f-4833-bf54-8058684d8756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a80f77-ebc4-4174-83af-4118756154e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d971fff-f6cf-46e9-bee7-bb6f6b981cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e30623-172d-4164-b832-2a9f9e442938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f529fa-87ff-43b9-8246-99074d09e437",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b585ce-06a3-455b-8262-166bb02a0b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85a2cfd-606d-4750-b86e-df6121edaf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b123c1-7ac0-4c95-8ea0-ab4f3a3b62d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3096c5c-f2c3-4b0a-963a-49f8854f80dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cf75cd-0ca1-4583-8716-faef8bbb19d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85559d84-23a4-4e76-89b0-c6f685f1a85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32259e4-e2de-4931-862a-27225c4870ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c25894c-302e-46b4-80b0-c01ce70e6061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924ec539-7c27-40aa-a6e8-1a2d97ace3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dbdc5a-f730-4178-aaab-55e9b54ea0e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a8177-892c-4e36-99d1-65dd6930a25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c732cc-a685-4306-9565-9a19e2964e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568d3400-10de-4fe8-b666-edf60a667996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdd6201-07d7-409a-8d0d-222951c7981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d5b8dc-4ff3-4e37-9d28-8f9afce775ae",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad538431-3a8e-47b0-9b50-5bd8b9701bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977499f2-6123-4e1c-9832-d56139168713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1a0e9c-fc1e-4b7e-9a50-df04c9376458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b357aa4f-5006-42d1-9fdc-6a7d0766223d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e730b-8ffd-4b42-9d36-85df2f772f6b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a62b91c-daa9-4b17-80a5-8fd56581b1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ba40da-92a3-42bc-ad07-e640ed511a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe06437-47f2-4c54-8a84-49ca7b7bc097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a784671a-4df3-4db7-8956-1cda7bece0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0832cf-66e5-4edd-b775-99478aeb31d7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55cfa3-9c06-4f93-8ce9-5e6fd55c4e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4edaedae-b2fb-4b93-bf62-833be7eba258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667b8730-bcc5-4fc2-add5-834f3facfd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665bc9d8-9625-4bbe-a185-766cda2b7daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9119274d-ca6a-48cf-8cb3-5b2db27bbb1f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb4b02-2698-4c4b-ac6a-65daba4b5276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f85a3db-8e96-4e6d-a2ce-53abda9fa017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dfeedf-f406-47d7-8475-6555249c2537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6edece-2605-4a68-b948-ac89b7de50c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d6fb83-1c45-4066-b04b-41856a9e8540",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc97808f-fbad-44ee-bfa8-555608035d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194c4f27-d899-4beb-afae-2474962fcdf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238f60ea-cdd5-4520-8899-4eeba2656a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c49fcf-39f2-43f2-af42-153ffa299864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c632f340-784f-4eb7-bb13-ada09fb717cc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91daa279-f82b-439c-8f7b-3022712f745c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "317c1c18-a0c7-46a8-b3bf-25c4a0ee6435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcd5694-a896-4d29-b445-3bda7342f81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2a5856-6ce1-4a2b-baf4-ab6df7767eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62943e35-0468-4812-a3b0-2824db706b83",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf6cb4b-478a-4d9d-83e7-2b3b8b48cc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973691a6-abce-4b5f-8b88-31925249c034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a414e41-6e2c-40ff-941d-54bc92e98546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f552f193-9664-4e4c-893a-eba04eac6c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc44b6b2-f2fb-4757-b21e-1d73bb61a84a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955b65b4-320d-4464-9472-0b7261820659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0254696-af5a-4a55-93bc-b586c586c3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d12691-d9df-4de2-9384-fb3fd8619e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9754dce-4597-45d1-b41e-0f3e33d72a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f8f314-927e-479d-b5e9-19b0b3900890",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5293356b-0e2b-4d17-a75d-f6059fdfdde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27296271-cc57-4cb8-bd58-fb833360a523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4078be-8ed9-406e-acb1-f97c10d2ca83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53460885-8c38-427d-9720-77d476db69fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5671419c-9cc0-4411-8a56-fdf47ecae061",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295be513-9b33-4ee9-9be5-e096098421f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49487a88-b936-4f2f-b27b-4bbcb9df26e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4060ff4c-1c2a-4528-85eb-ea73a48e50c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db04e8d-9105-4a75-8bc3-bc4792e1ec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697d05b6-d717-44a9-bdc3-ea052c7d564c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3d28b1-9c3b-4330-8c04-ba4bebc1c5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42192ed4-06d6-4323-b036-202bce41d0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ae49c5-db5b-4c09-968c-5848f3e22fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a9717c-f685-4d4e-aa18-9d48876de43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f8c40-12cf-4f20-bfcb-17209d071fee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9e547-0f09-4a80-9f4e-0ffa7c27c6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d09aaec-f4b5-4294-b4fd-0ebe9b4582d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2876a9e9-b14b-49af-9868-6113b6eeb984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee26022-ab23-4de4-a106-9a8b2e1a0a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d2b0a4-0c75-4d1b-a6f4-1dfc8eac4088",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ab197b-2139-4b75-904a-30981d175783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3362b5f-7104-4d1b-828f-af76839127d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c08bf4-de01-4fa2-a9c0-669ba3e7c2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e0ddfd-6bc2-4332-b83f-8455f0d0fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9d3f9-7e1c-425c-831d-1960945d4971",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82779e45-5400-4704-b148-fbbff8f7b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014da1dc-f3a7-49ed-96bf-73c7401b6417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ba7cda-b5e8-42fc-84ad-12ee325ec5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90bde3c-a879-4f9f-8c08-da589ed858f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326ff515-7ff9-4c7c-9f11-76be20dcc315",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cd0a78-1e1d-49b6-9d85-923d3385cf66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "530a4971-fc12-4e9c-b5af-22b3bd17f778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3491cb-93b7-4ed0-8ea8-3ab90eda4ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869ca05b-24ee-4f86-8eee-5c7cca166133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b782b5b7-6d77-41f8-8d16-e7f8663f4084",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ecb3ce-c6e9-4383-808b-e89d2ea0b01e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6dac27-f2f0-4127-84d3-14238b13c923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c577d7-36e1-493c-af11-dbd7ecee88fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998046b4-e0b3-48bd-9fc4-464eae0c21ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183d2be-c032-4f70-bfe7-7490ae14f964",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abef2dd7-ac5a-4fa3-aa59-454cbea72c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6066ec-2fea-4874-bf45-82eba68b1ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cffd2bb-e2db-4631-910f-0f53ea7d5e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a46050-4525-4308-a927-1734e395045d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059de9d-7fce-4aae-b838-4055543c6f77",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0679a23e-da67-4d51-9f7b-4a2174935fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fe999a-c766-47f1-852e-e77a1139c4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dd7c8b-e390-477e-ae3d-1424a4218900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68c8e5a-17f0-4e70-8aa7-e1506aadf9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a610e2-63f8-49d1-a031-0fdf153d6bd6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d1e59-e059-4df0-9094-23ff436b7e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a101ce-0e35-4a73-8338-aeee615c5ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d5a63-1121-4120-a723-5403accd32f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7d94c8-2232-445d-af67-efff21e48e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60806fb-3c55-45bd-8cfa-31b044c9b52e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c115a-bd57-4541-a375-e23ef0e8b808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0613712-79ee-4470-9f65-5eece12b4320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a720d3-e343-4d9e-9b21-07bffd29bbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d554bbb2-25c6-4021-b0e6-af499ecc1b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b832f6c-35da-487c-8271-a981703f60fd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba915a4-f9b5-4025-aaf4-e7ff5db4ada8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a112320-f4fe-4d60-8868-46823b4d129a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee90094-67f1-4b19-8c10-92eada2b26e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46671bff-d61c-4f60-90cf-19f7648ec2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945bd303-b7b1-4177-b9ab-ab79f4bdf104",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db41825-efa1-41da-8a76-b76ca072bf38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e16fdb4-7300-4dd7-99c7-56d1386d0919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d368e11b-a0aa-49e3-accd-e3229c93615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b2f722-b0d6-4cb0-96c4-f2c40f8b6883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec2593-2dc0-4fd0-92ac-720767784a17",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd4ac8d-aed5-411a-bd52-18389aa2f488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf66f7f-db27-46d1-9e43-52edafc16a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54168f7b-7036-43c8-abe5-8c8d6d5a9b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9176a317-c08e-45a0-b09e-93e80e161874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcb2543-b4f8-424c-80ef-248f224a63f4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af30bd1-c0c6-466e-b908-894ed5de889a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a96c70e-c22a-49e1-938a-847da4edc4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd773684-d9ee-4011-bc5b-fe32ccb1b0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76f44fe-80e2-4524-b69c-b3397f9ef876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dc6595-db6a-4c70-831c-c8c07db32030",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48bf28-9c0d-4c74-af0d-e21cc1634e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b95d51-0042-438b-952b-e3f17f24c477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54644ee4-77e2-45a1-9158-99b370f61f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef5229c-fa31-42b3-9f1c-e2703ce803b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8b1308-5446-446e-a413-cc90933bb65f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675635b4-1abe-487c-9f31-e3d730647628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0447b8c2-5e2e-4540-9aac-589ee77c1f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb98f175-2644-44c4-9b9e-2ccb122e1476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c55a893-be32-484e-97d2-cfe9bab4a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefae02f-9695-4c31-95f7-f4bb43ad7501",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94826f88-5dab-4bda-9134-222277ca787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fdc863-df36-4604-9899-e1c3e3a2b002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d5de2-49f6-484d-a262-ff7ffaada0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14854629-2fce-4ce7-bbfe-966a91958dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6344f009-fb77-4db6-b56c-571d0f6a5857",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76244bbc-4ff9-4ad7-a55e-a4f0bf6f6a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbebd6b-9ea0-4cdc-94b3-96a8bb36350a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da331fea-6632-48c0-8099-63144816e364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140e00e7-e955-4912-addc-ca5b71b0de43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca1b82d-45b8-42e2-ae0e-3d11ea8b3486",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6574c047-2082-4737-95ef-751f22c6a5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19e81d0-8b6e-41fa-9744-f7b2350db954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f242801-01e2-4262-bbd3-3bda0848b60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5dc1a6-d38b-4981-aaf5-3404e891cf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f062f1c-c76f-4c11-8f83-4964a6d82602",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700dfb11-a67c-4755-a57f-7a70add03805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff3f190-b177-4fd9-8449-79ad0df66369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da41d512-4702-4dea-976d-c96b921b0a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b37aa5-982c-40f5-9e51-3e651a4fee82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf83fea-45e0-4c7a-8b14-e9cdc0c85366",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faf06d9-8203-47bf-8833-7620aecee47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9456c0f3-d67c-4169-b5c3-2d154128e609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd92b2-617b-438b-a9f8-ba57cde77190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0828e3-b916-4156-b54a-816a2b018b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611cf54f-16aa-49ad-be55-962972f6d76c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b38680-3e7e-4b45-8094-7a44f67e8cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b9a6a1-f915-4a37-a5d8-85551a4c2dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6822e4-3672-49d4-9dc0-3103e4258eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5136933d-b97d-43ef-86e5-a6a4987efc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc415c52-d5ba-4717-9200-b32d5a6beba5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4052ea-660a-41a5-8d83-098dce756def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ce0d38-81f2-4d99-885f-756183d87585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c7dc6f-cf22-4eb3-acad-e8f263d16127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ef9714-c7fa-435b-ac88-1e021c175782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b555e11-90e1-4700-a9c7-2b6c135a66fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96e09e-d033-486a-a18c-f93708ea5ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acda1770-cf38-4bc2-92f7-50aedf4a21a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f94b6f2-774a-4dde-9d32-66432a6da1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48938176-0c42-4210-b555-1e91c7f9cb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81241fe6-d96c-43fe-91ce-52301c905b4d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32af630-22f2-4ed1-8efb-f0113e432fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f742c8f-eea4-4c5a-b989-6544f434db06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c245ca9-0379-43db-8185-203f226cd5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe23c7aa-81c3-4c9d-a920-94d7f68e52ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe2cdfe-905b-4303-8a2e-b45bc567b735",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da6b76f-eea5-45aa-ad0c-b0cc5efd7792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f7dae7-a46c-42dc-891c-5c559535dc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f15245b-b3c2-40b6-88f5-82c061c02d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c204a1f2-30e3-47e2-8191-dbe655b065b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576628c1-8a00-4acb-8ed7-7ccd0fcd4fb9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942bfb41-ad7f-4017-b73e-deff6357a073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7574337-82d8-4be6-b0b2-17be9115eab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eb1609-bb94-4eb7-9c42-5edb2ffa67c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9a6d57-d3bf-4fbd-bd9d-a6a48f9e745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734ff5ad-3bbd-415e-8588-e0723e91782d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cf7957-c00f-42db-ad25-60f690025973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62111688-a075-4e3b-9500-37ede1f304a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab1e02-829b-4fc4-8ffe-07b21e4d6782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219336bf-6896-47b1-98af-d2bdfcc0b594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af8ae43-691a-4df0-a6da-65cc92e00887",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f67703-224c-4687-91ef-00e19afa6e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6871ce7-7a43-4d10-b01f-a7047e013373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540f8847-1d30-473a-b295-f05628da2c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e3b957-5522-431a-9dec-f85c083b4369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c42afa5-659e-4401-9d47-37cca91e0db6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07830c38-7b6e-4c3d-baaf-7783de0a19a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc2229d-1c1e-4a16-8a79-3692d8764147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aad68ac-5d86-4a96-aaca-5afce4233470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e08c88d-8c37-4bd1-b3ce-08f344547f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96769d00-a071-4d71-a316-aed8164c1a33",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c7c191-a0d9-4757-9667-392ea7355f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc9fa1c-151e-441b-a05b-989d1085ccb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27e5aa-0306-40f3-97ad-f6a71afca2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3cc687-6b01-4f17-8120-5f48310d63cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05119a90-7647-4d23-b0b1-b2ef7f86fca3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337b84ae-0be3-40dd-b82e-89ce2bc8e700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4339203-e6f0-4e38-b46b-2c851c4736ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7609f860-4a47-44c8-984e-9cf83ae4f852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1937402-f014-41fc-855a-86fca2c0f182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f35f12-3010-4595-bbae-dada6f4f55bf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc9fb53-c604-4a25-b179-e2e9015f753f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ad8574-a61a-4e4e-bd64-fcec101d6141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3e6e2b-e04e-4103-bf17-9fbfa8698047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5046102-9266-43a2-9407-e73fcb296cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb7041f-4eab-4b54-82da-1f34906bb4c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4168966f-f62d-4251-9614-68380ae64bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31ef0d4-34d9-4f46-85e1-082772e77a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86897616-ab2e-43ea-8d18-c0b44ddab0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81368df3-17ac-4fe9-a87d-3c2b4772f201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f36f0-9f67-48a3-a8ea-5bbe3cbdb2b5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00569cd8-8e1e-40b9-b844-8e75aa9178f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72301eff-f052-4d52-af97-0dac89808b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe1bf8a-2986-4218-8ae3-f4f5b444d3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71857d7-13e7-4394-8dc5-74397ddd2e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2a09e8-79ae-43e5-b0f9-982ad435fb28",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b44d22-9113-4545-9b52-847096beeea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aee5c1e-6a61-46f9-b3ba-4911c82465b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2698720-841d-45e4-b3a1-b2ff8eb3f99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724ee82e-b806-46c0-bb46-b3695b0b8188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5313d681-adc5-443b-8ff3-515492422504",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651d5350-22f5-4854-b2b8-3f4d68f7efa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79dcd38-b7b3-4660-a9d5-4b2614cb4e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38460c6f-1747-4d90-94a8-2a8bb3457f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b5f51f-6c62-49e2-8833-8943f264af36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9ada9d-3259-4558-90aa-91525128f7a8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d3ed3-a8fc-4690-8439-9459d1ce30df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c1f0bb-8f5e-46b9-a57f-2168ddd63514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ffe74-9b5d-4c33-855a-a5fe6ce4bd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514d1322-3bab-47f8-bc35-9e00e31e35c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc648ab-d9f6-44f0-bfdd-c44863113ec8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2ada49-09a2-4ce0-a4d0-442129189620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d72a63a-9bdc-42b8-9811-5987f334824e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae575121-0d43-4d2b-8c9b-d0a28b8753db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb3f5f2-a228-4267-ab05-6b69dc22a3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c4fec-7c79-40c8-a7f1-b15a2ffe6e58",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe237a3-62ca-4794-befe-7be2c26bf721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ac0b66-e8fb-4f41-a797-012e85a3bb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb24ce53-bb06-4a51-9cf1-f05e88d6bd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acbe8d1-0e78-4f12-9447-60a08934d41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e062cb93-2d80-499f-806a-e468554eed05",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61080dc3-49ac-4ffd-91fe-8bdaf4da4999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ec1552-f11e-4a20-9914-af04829fb889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20b3a4c-5387-456c-b8cf-f2b38de8b954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb71a2bf-c8d8-4221-9536-4214c955d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908e2714-c4fb-4651-8b00-9b53dfc0a5e1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94470691-2d7e-4644-a0f5-a1631ac74c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7816a008-0bbe-4459-b864-2e6061e34a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce2df0f-91af-458c-9246-943b034c62dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd85f66b-79e0-4dd4-8745-4ca08b5ecf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d750a25-6984-486c-9602-ffee7743b406",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a0c9e0-4cd1-4188-9204-8f38a07e8718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b350c187-5637-48df-a7f2-c279793bfc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b55a8b6-02e8-4c00-b935-cccd21c6b667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2112df9c-7dbb-4af8-a2b0-3cd4b18b1de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74203a43-65ae-4e55-ba91-edc61a45c7a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131c13b2-d638-450b-8a2e-8c3c784b1b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b07b1f2-b384-4554-bcda-251bd432b6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1a06fd-ab12-42f8-9b17-9232dc8bd30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ecfc1d-01cc-4fe0-b671-cf3851d44dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f0cea-1561-444e-aa1a-ca732cdc3fc5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0731533e-7dd3-40fb-bb91-3227d5669cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a3856f-fdc0-4e64-a694-741b81bb426d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7700a703-1034-42c8-8537-c7941829cc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6db1d5-4f9c-4f4e-a2d0-7d25d6d614c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b0aeaa-2164-483b-914e-d0654cb18c20",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49be30e-e8ca-4f22-a1d9-c87cb11ffc71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5069affe-1ed6-4c26-afc4-d3f115722d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5853dbc9-37cd-4839-beb7-b8dc173d590f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7501f52b-a8b8-472c-b3fd-0ceb22915459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93966650-95a3-425e-8351-3597975ce7af",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16114c-164b-4990-b434-f2ac5baf6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fbb128-117c-42ae-bbc9-ea38167cf0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5598602f-89eb-49fc-b183-2d1d440dbcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57b8294-3894-4460-ae6c-e54498c7f531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10999ca-b127-4d62-9828-2b13ce11f815",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6e1ca0-8cf4-4bc7-9d94-87b874098759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759aa8a9-0272-4b0a-b846-7639fb556769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81b9ad1-3ff9-46fa-bd5f-db268a993b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d958bd-20d2-4505-aeee-457a9610253e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d085bc59-1bc9-432a-8c2e-58ff2e739b6e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060988e-459d-46a5-94e7-a9f1db2a49f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5c2b5f-3f48-4310-a7ef-ca5186f6901d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a904a5-7762-4d07-a04d-b07a94db4ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6668534a-4d73-4bd9-b640-9278fb12f0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54e8eb8-a237-4073-94d4-bd11c9675bc8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996907b5-8e7f-4e0d-9aaf-8018ee290334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653616cb-85f8-47b3-8bd6-8c50dcc0090f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a90f9bc-5ff4-4915-b2a5-b0b38ff11b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634fb382-a0f3-43bc-83ac-f6c2afa1e3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd81d057-7a45-4a68-a3b3-79e737fdfc50",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae1d82f-a523-4281-b994-046dce2d6ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366e1e3b-f773-4b9a-a64f-ab49fdc79796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712243d0-6d64-4282-807f-ea9c4dd1b79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebf62b1-a939-405a-91bb-5e0180265b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255336e5-a05a-4c3c-89d9-5b030fb8b56a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93677895-2805-4ec6-ba22-46ba4cb55465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4105353-7b7e-44d7-8092-f02d09de58c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c714e29f-46a6-4312-b339-f78333af9545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9392b369-9993-4c02-a2cd-5c2d9f035dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cfa764-656b-4c18-94dc-8acb218f2b54",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c48443b-e129-4610-9c2d-f4a16ecc2351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e0df9b-fb3e-45d0-8650-f8dc48ed4a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4575f1b9-4d0b-4f89-a060-30a54a461261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9148234-d37d-4fd9-8ecf-0c850a07edff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57b842d-30c5-4794-bd25-323d2bc09982",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9732a928-a15e-4eaa-be49-cb4f3e768e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20e44f7-17a0-4f67-815b-b7d854054331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fcd9ec-6fc9-4298-8a46-acc9f72751db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390fdc70-48ea-4829-a8d5-d4a8495fde3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0d8a8d-5175-4867-8a2c-4b301b733efa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58172ad5-b36d-44a1-b917-799109377f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e71df1-1400-494f-8067-0d79077ff117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f77971-52f3-48c7-8f1c-edf22c46970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7108b2-30a1-4d2d-badf-e2c3f196d138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255dfd7-e3a5-4b79-99c2-fdd372d90bd9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84bf2d4-74b1-4f32-96df-3696c2991cb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f26538-0e8d-4f68-8e1a-5b53bff6d8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c328d03-6ded-4760-90d2-885410d4d2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c7e9f6-c07d-49e0-bbc4-0a6dcc92f183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029542a2-aaac-4c30-a27b-1a4bf3a7c3ce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d880a5-5fd3-4301-bcf6-f0d867dc382c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4fb0f6-7ddb-43de-aaac-3b9dec00eeed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5790e883-a344-4c6e-912a-dfa0305934c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9280a129-db14-47c0-97cf-65b331ae656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483dcada-32ef-409b-aa2c-6e6da825823c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cc7afa-db20-423e-9ffb-cd95973e59f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc5ffe2-8c4d-4de7-81e8-4aeb816f62c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda9f7d6-382e-4a1e-97bf-e0e7382fa2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dbe45a-710b-47e0-888a-dbffbcfc9766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b513bb2d-aeac-4004-b74b-293b4c6c214a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e6c35a-1845-46f3-a900-e14ddde782fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9787c7c1-2cac-4eab-9b96-6a2d97d40008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1dc135-907c-451c-a708-e4d68806ca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e0f79b-3a98-4d19-ada6-692703d0248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ac149d-d5c8-4b07-9548-362f88c02f63",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a895ff-28f5-450a-8ce9-d9dac5f399ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eecece5-35f3-41df-92bc-31d138a3a192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbcf3e4-6063-4c7b-aefa-2158bce29187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a23433-2db1-4f65-b353-b2bd868cb464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4bf162-8cd8-49fb-a184-5b7289b2df32",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab706a2-0b5a-490b-afa5-86be93887c78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b980f5-6b26-40e8-affc-997caac1e2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be49a1c5-c3ec-4ec8-b997-c28161c626bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d38223-5591-4a0d-b0bc-8d31e0b36fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e88ab40-f312-46e5-a519-d594fc21f824",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e725c137-ae2b-4175-a312-73e674bec405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24a37e5-f4ac-4c41-a7f3-80ab76cf5b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa00d1-3c2c-49a5-bba2-ceb4a3a07669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bbc144-6569-4a10-a1c4-9a2f5c8b82f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10a5936-b4f0-41cb-a586-ea18af91dce3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db5c1b8-23e2-469f-bba2-54921d049d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea86fdf5-960b-4f27-b4b5-102991ac64e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78606cc-51d3-4164-a2f7-d2d794f5ad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5dccfbc-81a7-475d-b245-3ab0b104a7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdd6588-0060-4185-bc6d-c03d4fa7d096",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0094a493-939c-4556-924c-b898d989dd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87afd69e-a3ef-4c54-888b-b9f4b59109dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce16029-f168-49f0-b76c-990371f370d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40400004-6616-4572-bfd9-37eb5e727629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da2bb85-20f0-430e-ac8a-514a8ec107df",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8665a4a-d01e-4e9c-84c1-19efb81a4d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d255f9de-1c63-4bb3-bfcc-36c796bcdf88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c69171c-769a-4461-9209-a0dab7c18184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5edc74-ebec-42df-85c9-be247893640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f4060b-6f0f-40f7-ad13-747693345600",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab19e7f-08fc-4aad-8517-64a3dcf373aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581cdeae-3908-42ff-9970-b80ce05c6d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0a225e-b2f8-4060-b751-7339d6f61a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6067ae8-f032-4adb-9813-78d99fb3a161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7741ef7f-0e03-4470-959a-3d1a8dcc60cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5ac43d-610b-435e-a236-7f5404cbd34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d495c51-bf02-49b7-97af-5d39a2414b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926cd2e5-d6f3-4ea4-90aa-d65720d37f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3588f1cd-dae7-4a72-98da-ea17ed3824ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbce7e5-108c-4d8e-a96a-332c5bdb09ba",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7a8dad-411e-4d44-b3f1-585a7feb7786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167f586b-3779-499a-b6a2-c9e08b2127a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70884c33-5855-44b5-919d-b6d7696a346d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6318ed26-0f6c-427b-b596-3243c7e40d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f65bc95-0f6c-4a04-8d9d-a8029836921c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a0a863-3f9d-4802-a48f-fd84a7b88e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa61b28-93db-43ba-a402-77c02e652b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698a1ea5-0786-45f2-a0c8-d480e3ea1ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc719ab-d495-4d1f-bfdf-fa9b26feae9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38effac-12ee-4e30-abf6-e9afdbeeb761",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633fa927-85b0-4b55-8cea-dca9e685213f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735f9378-6b2c-4c97-bb43-464708b2e624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c1214-694f-45ca-8102-47c104fd79e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3580abb4-4eb2-4dd3-9012-cec79d8ce8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f74be6e-98ae-4f9a-a9c5-4078d08d80d7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc34fe3f-bb78-46ac-a20b-d3328f016f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d3c04e-f475-422a-a754-3bf6b8a10d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fa6df5-59de-4cf4-b6e7-f9786864923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f6d4a0-1793-4ab7-90eb-39459ac9ca45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aad342-264c-4134-b96e-b515793f52cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dbf2fb-1466-4bc7-8ea3-68e717101c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096e9983-0f68-43fe-bc28-73efd748ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54975d32-15b7-4691-98a7-13da2e19a12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5aefe76-672f-4f1c-a297-4a82f8b02d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52e5da-2479-443a-a34b-0662397b0ec0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c472c01c-90e1-42a4-b7a0-54858e62eed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c75957-8fef-4158-966c-87778a0058d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d42922-4a76-46b5-9fb2-880328e51c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439f08c1-2323-431f-a989-b71298eea1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce6a2c0-a748-4cea-9cb1-7afc26124659",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7b396-c5d9-4e60-934b-350e55fbb468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae1f0c9-3b6d-48a9-a151-1f2bc07e45a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5700c33f-2d77-4ab7-9a2c-56037586a0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae456c5-23e1-4e1c-8043-fbd51a15eaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2670a0-7f46-4a76-a3d4-dec9f588aeba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead20245-aaaa-4a39-890b-fa95eb153aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d776b9-fd39-4805-af68-b614236f6922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de8d1ff-76a8-429e-98db-643e3a7aa415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821f8ece-4484-4aa8-86df-6d1b419986a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c993540-4191-455f-854e-59a58376e55c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ff4543-6aee-4d09-a74e-a25543cf990a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6240fe71-36aa-4ac0-b835-dd772a4e7ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec62485-32d6-4e25-8df0-d580b41a642d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f83fcb5-4e99-4e4e-afe6-f44a2fd720c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a0f488-ea7c-4a7d-84a7-bd10c2e9ef5f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5044384-b534-414a-b068-39785d42a58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55267afc-1b21-46fb-a0a4-17344818f42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70c772-7d4c-498d-89f3-5ce96f2a475d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52543b9d-de6b-40ee-949c-05db05c712f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f01909-4851-46f0-8622-ee9a17755932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3914691-0225-4188-adab-bbd7e32623eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ef0eee-e0b4-41d6-bd53-ed82954c453b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebdc2631-0d96-4c14-b5a8-a4c6be79d763"
                    }
                  }
                ]
              },
              {
                "id": "576bf39e-9233-4510-9bf9-e7ad36cabb92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6c3a2ac-0e9b-4dd9-852b-c6c97d2a5f44",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0611b9d-c92d-426c-9ad1-edbf24dcccc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d99d915-8b7a-484c-a89a-fa8edb8ea100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4057c5f5-affa-4928-a769-4bb60cf4c511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c29b6936-b233-40ce-9523-6ad70acb10e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "310d057f-ef07-43b2-a217-d96fb7e0a496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b9aa76-4b4a-4cbd-a2b1-b3e0fcff7192"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d02264a-41cf-45c2-aa4d-925e5599c153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d10ac4ed-3be2-49c2-aa5a-94bb2225601f"
                    }
                  }
                ]
              },
              {
                "id": "992cb42d-7c62-43ca-b46d-4a17033a0546",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cee8b380-5d5b-4fa3-8c0c-760b94d50bbd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b546c9a1-11d2-41ae-a071-880400c09ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2117d4d7-1ef8-42cf-982c-5d3c3547fded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd940cf7-6583-42c0-ba50-d1596a0273a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fd58e4-5954-4a73-bad8-94d9160a2255"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25ba17af-300c-4c4e-8be3-79e15f1f0508",
            "name": "Positive Testing",
            "item": [
              {
                "id": "796ebc02-7814-4322-9896-84d0314ac11c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88775eee-ce2b-4c93-a2cc-7d2885d5e30e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aca00e82-102a-4e99-ab6f-deebb85b6208"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f09b50-a253-47c0-aec0-b2166ca6b61b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220773a8-b58d-430f-bd08-0e6bc2b6c105"
                    }
                  }
                ]
              },
              {
                "id": "f74c3122-9df8-48d1-bb0c-c42b924bd4ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f9f52a5-f85e-4446-bf3e-e885002087d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ca483d3-02d0-46e8-b7e6-256a659647c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13b2ff33-04b9-4cb7-819e-b68e115e6f87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3fcb815-709c-4759-9d77-b272e6ade9c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fe68c7f-6b7e-42a5-bcfb-69a8f6a8ca8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "484d16f8-e754-4560-8e7c-0d4bea0cb0ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54f8b113-238e-43a3-b3ec-e542eec47657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8921bfcd-80b4-4eef-af79-1437c8b74c7c"
            }
          }
        ]
      },
      {
        "id": "be9b5ced-c2cb-4f2f-9484-39852badb8f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8a42c4b2-188b-4bf3-acfa-ced4fbc6b3ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c10107be-0b79-48a4-909b-495e956ea9d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "768a1f9e-0fb3-406c-be7d-526961c2dcfb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fbc387-8750-4fdf-9769-60b70cfad161",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "284cb86b-4439-4c43-a607-843155937274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdac8a9-591a-431d-8ab0-ce9658a314ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4214a665-a01a-4f15-85dd-9d23c7be3d5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4389e09b-75bb-464d-adab-65ab4bd83644",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d219112d-3158-4751-9c09-23902ae5dd69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03c5cffe-bb11-4266-901c-769f0f2ae8c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8b7a232-9f65-4213-894c-5ccb5c97b91a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cdec9b0-3d76-49d5-86d2-71086da11165",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3dbaf92a-c91a-4999-bc17-22d433223229"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b3a22f6-7ea5-449b-8631-afaec044b222",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1555fa64-aad8-4061-b74e-3aec9f7c541d"
            }
          }
        ]
      },
      {
        "id": "c474a002-bc56-401a-9d1f-1d5199d630b0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "791ebc44-f3a3-41ac-bfa3-77815dd10689",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd794cd7-c2a2-4267-bbc1-0c455be32009",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f802ff0d-34d4-4a87-ac2f-1b0c807f95d4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ffe012-162a-434b-99c9-2a8a34d765be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a726d1-8eb4-47d0-8842-8b80130e4532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0147c61f-d013-4285-a3ca-b3e15d362277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35008886-e87b-4643-b24b-e792351417df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83e186d-5623-43bc-84cb-db2c25105269",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5804ea0-1ec3-4692-b1d3-a0d0903eddf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf9cf4a1-05d1-4907-8851-2f025071a044",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac5c6ca4-336d-4f81-ba39-ba3ebcbf6d63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f37e6e26-897b-42fd-961f-6d9e1019259f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3010b80b-30b2-4681-a7d0-c48671fbd0b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f6fb824-2de7-4a6a-aa91-61b856c4a68a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7a75b28-2a94-426b-91f6-29c04cbc8e14"
            }
          }
        ]
      },
      {
        "id": "8a334f4c-730e-4d2c-ace2-32aaafe83a10",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c5d1d0d3-0a5a-40ce-960c-05515b41b4e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71a28b96-f671-46a4-97ab-008e87b25cd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5ba6a35-ef5d-4fc3-8e35-2ebaef450800",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfc0309-236b-483c-b4ae-7cfc82047ecb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b834a489-53b7-491e-ba48-3851ba32150b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b80b3c-9303-48a6-a813-2d30f7ad6663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa961061-55a0-4a9c-b077-ad4a359ff139"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc5ed122-71b9-4185-95ed-0342e2d41905",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d78c5f5d-f379-45ae-9d8e-ea8ac89446a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c384de3-cc3d-4077-aaa7-c3ab33fd3dc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63017ca-7f84-4e34-adf5-bfb41087de45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3088cee-52ec-421f-a298-d23a9a68f208",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a3406bb-3e64-4ba1-9507-d7cea295cb0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bcff87e-14a8-41e3-ad50-c84259c068b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adf8d72d-34ec-41fb-80de-3b07ec6d4616"
            }
          }
        ]
      },
      {
        "id": "ba24bb31-6b0e-4c49-9fca-a10d0dbebc4e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed84c258-4047-47da-92ba-31d00ea358f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "131bcff5-d117-4082-86a9-7a9626f9533b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3faf6e2c-a351-4742-9fb1-1497b2fd995e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "977fcfb5-411f-4cfe-b04e-3593a906a931",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e998231-5f0c-432c-9dbc-9d803c0b8678",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 126.17460317460316,
      "responseMin": 11,
      "responseMax": 11388,
      "responseSd": 775.6069878955848,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722991244961,
      "completed": 1722991284994
    },
    "executions": [
      {
        "id": "5fab853d-2054-45db-b4a9-b96c2efdec42",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c4b97bb3-9eef-42a1-a548-458d87775632",
          "httpRequestId": "d537bac5-10c2-4660-b982-c80147c97f1b"
        },
        "item": {
          "id": "5fab853d-2054-45db-b4a9-b96c2efdec42",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "310c26ab-4945-471f-ada4-c8ce5b1e998b",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "baf89a5b-2e19-4d09-a59e-385500e8b333",
        "cursor": {
          "ref": "c14e39e1-af28-4e12-bd65-cd47a6b54c33",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "29981cb1-1cd8-4699-9c96-19be24f0077f"
        },
        "item": {
          "id": "baf89a5b-2e19-4d09-a59e-385500e8b333",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2b4457c9-ca7d-4c08-83db-ab27f28c2952",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "e004f8aa-5f96-48c5-a05d-c590e4510762",
        "cursor": {
          "ref": "ae7d9ec0-7a41-4b52-8369-183fb290184e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b63682a9-3bbb-4bcb-9a86-3b845352fae0"
        },
        "item": {
          "id": "e004f8aa-5f96-48c5-a05d-c590e4510762",
          "name": "did_json"
        },
        "response": {
          "id": "5de87856-1240-4224-a247-e2372068a8c0",
          "status": "OK",
          "code": 200,
          "responseTime": 282,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22a6995-ec2a-4fe1-a015-71b847aa18ea",
        "cursor": {
          "ref": "31da7f50-742d-4e04-bc4b-43efeab7cc23",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "957b8c3c-2d59-4009-98ed-d9a093d4beee"
        },
        "item": {
          "id": "b22a6995-ec2a-4fe1-a015-71b847aa18ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "60d61dab-b8d4-4812-b705-f78e897b1844",
          "status": "Not Found",
          "code": 404,
          "responseTime": 473,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22a6995-ec2a-4fe1-a015-71b847aa18ea",
        "cursor": {
          "ref": "31da7f50-742d-4e04-bc4b-43efeab7cc23",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "957b8c3c-2d59-4009-98ed-d9a093d4beee"
        },
        "item": {
          "id": "b22a6995-ec2a-4fe1-a015-71b847aa18ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "60d61dab-b8d4-4812-b705-f78e897b1844",
          "status": "Not Found",
          "code": 404,
          "responseTime": 473,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8358db0d-308f-450e-9836-ab00fe57f9da",
        "cursor": {
          "ref": "0fc7097b-51ba-47a2-aa32-53f1109a9a41",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3441964c-97d6-49fb-ae69-84206567fe65"
        },
        "item": {
          "id": "8358db0d-308f-450e-9836-ab00fe57f9da",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e4d2e8ba-a5f2-4f73-b84d-95edec92d062",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad9b039-fdde-4f26-bac5-a45776279fb7",
        "cursor": {
          "ref": "cc960322-a971-45f0-86e0-976c32b3075b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cd5de12d-5296-4c77-bfd8-b9ccbc0beb14"
        },
        "item": {
          "id": "2ad9b039-fdde-4f26-bac5-a45776279fb7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "63b14511-6eb8-4be2-a625-9e3a47a6d227",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea034f32-76a0-4996-89d8-86842a10d002",
        "cursor": {
          "ref": "0ec1cc37-d84c-4574-b460-efb02ece95c8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b3f4c88b-7faa-4a48-8b2f-1dcda1f33737"
        },
        "item": {
          "id": "ea034f32-76a0-4996-89d8-86842a10d002",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "92ec79de-6a13-451c-a92e-23afd63fada6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52fb087-c882-429a-913d-65a9aa29ffa8",
        "cursor": {
          "ref": "2be2df14-4e66-48d3-9bb6-24fc684327cd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a6c81620-9d5a-4dda-852d-a287944d2cb5"
        },
        "item": {
          "id": "c52fb087-c882-429a-913d-65a9aa29ffa8",
          "name": "identifiers"
        },
        "response": {
          "id": "4083f82b-6a27-49a1-a570-f3169205fa0a",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e6b7ab-a4d8-486d-ba3b-cb001ea3edcb",
        "cursor": {
          "ref": "d721c3fe-a2e8-4c16-b2d3-62fe1691dfd0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4660745a-522a-4ee5-8eda-51fbac7d7976"
        },
        "item": {
          "id": "d3e6b7ab-a4d8-486d-ba3b-cb001ea3edcb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8361ea5d-e4c0-4a9e-a54f-8447aa96c511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6900916-6562-4dbb-8b9d-d36da19ed53d",
        "cursor": {
          "ref": "1093ed36-7e69-4184-a461-90aa1b470461",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a494f3b6-5d3a-4f40-b2d8-a33b4530477b"
        },
        "item": {
          "id": "d6900916-6562-4dbb-8b9d-d36da19ed53d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c955a1a2-580c-4390-9951-2b98145262b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40657be-a302-47b7-88df-3d5cbad93935",
        "cursor": {
          "ref": "3e32ee1a-5d23-4342-b998-f7b409e963a6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e7b31716-571a-4b78-8715-8e122bed5874"
        },
        "item": {
          "id": "a40657be-a302-47b7-88df-3d5cbad93935",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "88baf0a9-fba0-4956-a624-de84794a5bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8827a79-5275-448c-81e4-5bcc9f5f01e7",
        "cursor": {
          "ref": "2a77e3df-167a-426a-bb42-2ee31bc77c8e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97bb2eb0-2be8-4f0f-9816-56dea7b40efa"
        },
        "item": {
          "id": "f8827a79-5275-448c-81e4-5bcc9f5f01e7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "59033980-f19a-460e-b854-5d2a71f844f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd2f09-8a1a-44be-916c-2515cd3ab186",
        "cursor": {
          "ref": "072d3ed4-4990-4637-8ea4-c1f19ebb1b62",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9c8e3eab-3935-4f07-a1ea-6629b367689b"
        },
        "item": {
          "id": "90dd2f09-8a1a-44be-916c-2515cd3ab186",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc15ca6d-881f-4647-be02-8f6bad0a38cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaef7a3-2fd8-46fc-bf13-0fac20448e27",
        "cursor": {
          "ref": "b7eb7b65-751e-483c-bd00-9ee419012ffb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2de3dbcc-a8ad-45ab-9934-b92df7875dc7"
        },
        "item": {
          "id": "afaef7a3-2fd8-46fc-bf13-0fac20448e27",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f8ac41dd-95eb-4fbc-90bf-4b21b4ca4750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5b569a-076d-4633-8a1e-ae5ad75638c4",
        "cursor": {
          "ref": "140bf2d4-a19e-46c1-a709-a5ec3de7b253",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "71c368dc-1b45-4b81-a7a8-559c44723a75"
        },
        "item": {
          "id": "bb5b569a-076d-4633-8a1e-ae5ad75638c4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3969eb5c-9c45-4783-8eed-65dc5ebed0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7aea54-27fb-4eed-8884-e45b588dc266",
        "cursor": {
          "ref": "39f8add5-3fab-42b4-a730-f37c083df593",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "411753a2-9711-4445-b694-d921c0188e24"
        },
        "item": {
          "id": "fc7aea54-27fb-4eed-8884-e45b588dc266",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dea0760f-b9eb-4951-bec1-abdc1a48251a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e710c84-b73d-4c98-9e20-955381f85fe6",
        "cursor": {
          "ref": "eaec66da-55e9-41ca-980d-77d250b71583",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f88ebb0a-8a7f-4cad-b31c-e16d45b61f44"
        },
        "item": {
          "id": "7e710c84-b73d-4c98-9e20-955381f85fe6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "61da3882-84e3-43da-93e6-c7a22f99b153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fbf3ed-bb09-4e1c-aced-b2437c85cde7",
        "cursor": {
          "ref": "bed6a47a-8171-4d72-b57d-55d23f008227",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "be46f558-f571-46ef-ad42-2094081fecf6"
        },
        "item": {
          "id": "18fbf3ed-bb09-4e1c-aced-b2437c85cde7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0a7d6a11-1bff-42cd-aaa6-389108b801c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46966f07-a78f-43ad-b76f-258aeb89462f",
        "cursor": {
          "ref": "c3a8f7a8-4977-4b94-bfa1-17433c0b2e7d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ea9aefbe-acb5-45be-b635-db7a17c10bc0"
        },
        "item": {
          "id": "46966f07-a78f-43ad-b76f-258aeb89462f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3aad8126-b401-4d90-8010-5b4d42af16e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a23ccfd-1228-40b9-83ea-310fac200b02",
        "cursor": {
          "ref": "8da870fe-9106-4e28-8723-4e07f15c1af0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "710a0f0c-22e2-446f-aa9d-52b21e36ba7c"
        },
        "item": {
          "id": "0a23ccfd-1228-40b9-83ea-310fac200b02",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2ace525d-27fd-4a7d-a1cb-ec9c55f4b41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de1d31e-428f-4fac-8a7b-f6c6d1c2d2c0",
        "cursor": {
          "ref": "8ee6f341-bb76-40e0-bf3f-84a8e15972bf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "77eaa6c5-214f-4a52-b1a6-a9f9fedad628"
        },
        "item": {
          "id": "7de1d31e-428f-4fac-8a7b-f6c6d1c2d2c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ca8f1580-de1b-4db0-93b6-cc074e61a187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fae610-09ed-44ba-96bb-aaa17777caba",
        "cursor": {
          "ref": "c63f2e08-9ec7-4828-a40d-2895c2535cfd",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "57842b82-378b-48f8-b87b-d55fa5500919"
        },
        "item": {
          "id": "a1fae610-09ed-44ba-96bb-aaa17777caba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d47b297e-d48b-4601-aa60-726b0a0054ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ea7614-8796-4365-afd7-857d64f02dc6",
        "cursor": {
          "ref": "d5500ac8-38e6-4900-a17a-104d7fd3a3cc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0dbc660c-0e55-4a13-9238-ebd66da1006e"
        },
        "item": {
          "id": "f1ea7614-8796-4365-afd7-857d64f02dc6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fbf910cf-c29c-4c6d-8efe-6acaec62b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba79393f-485b-4ab0-8035-80849def8aa0",
        "cursor": {
          "ref": "750dcf05-43fd-44eb-adb1-358261261ca9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cb24ae51-31c3-4f6d-a652-fb82ae1aa49c"
        },
        "item": {
          "id": "ba79393f-485b-4ab0-8035-80849def8aa0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "54ce2af2-7777-41af-b170-00048625e763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2e0428-a4b2-4946-acab-96b0d06b5e8a",
        "cursor": {
          "ref": "6bf82675-aa59-4f8b-927e-b2fdc83a3223",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6a344755-46fc-4634-bffb-3af888430016"
        },
        "item": {
          "id": "5e2e0428-a4b2-4946-acab-96b0d06b5e8a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "901d801b-ff9e-4889-a4ce-fe999299537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae4a4f5-3ea8-45b5-9bad-47e1f33c8ee8",
        "cursor": {
          "ref": "e856b71d-801e-499e-8b37-98ddc9b9d029",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "67cd9c3a-9673-4ac6-9997-90fc674d4134"
        },
        "item": {
          "id": "7ae4a4f5-3ea8-45b5-9bad-47e1f33c8ee8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "27f07784-87d6-4e9c-bf8d-dc66aad1a0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99082312-775a-446d-87a1-dd04a751b424",
        "cursor": {
          "ref": "2cd7226f-24d4-485d-8a0e-b0f36b6ad2c2",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eed786c8-b612-455d-9ffd-ca47d97b5a30"
        },
        "item": {
          "id": "99082312-775a-446d-87a1-dd04a751b424",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d2c9780c-8c3b-4242-8d17-45489bf6700e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f12f23-b296-4e80-9b6f-d192bbdde0ba",
        "cursor": {
          "ref": "6f906b30-653e-4da7-af6a-a35d048f473d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dfcd4eba-19ed-49b6-a297-7b7a816838dc"
        },
        "item": {
          "id": "d2f12f23-b296-4e80-9b6f-d192bbdde0ba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dc5c4dff-9b27-4f02-92f3-76ab0b5b8ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce87297-9460-4a3a-be1f-c6f29c55263d",
        "cursor": {
          "ref": "0a9e33d8-c9d4-4343-935d-c7f35e0bfaf2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2090d559-e195-4aaf-8d3d-ed5f4cf064ce"
        },
        "item": {
          "id": "1ce87297-9460-4a3a-be1f-c6f29c55263d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "959ddd3c-cb2d-413a-9079-4e6e27d57e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d797abc-b845-469a-a4f1-18e51913744a",
        "cursor": {
          "ref": "7250942b-5cb7-4bb0-9b72-9f597dc27818",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a16883a-0b10-47b7-9450-d9aab293735c"
        },
        "item": {
          "id": "8d797abc-b845-469a-a4f1-18e51913744a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0da7421-5518-43d8-9b03-80dac780f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79beafe3-8a4f-4eeb-a049-9228689f8b97",
        "cursor": {
          "ref": "9e93ba70-eaa0-432a-a386-5d5a4bef84cc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e391d53a-3c38-40e8-8008-f656f5c16d72"
        },
        "item": {
          "id": "79beafe3-8a4f-4eeb-a049-9228689f8b97",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "360d43a5-301f-4e1c-87c0-cf9a04130e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaabb66-9cb2-46c8-8df0-d860966fd9d7",
        "cursor": {
          "ref": "37da2d61-452b-4428-92f2-8e8a4eb55ae3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b449bd79-00d4-424c-a58e-a6e00620670c"
        },
        "item": {
          "id": "cdaabb66-9cb2-46c8-8df0-d860966fd9d7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6871f0ce-c450-490a-863d-c3cd9e96ff95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e0abe4-945d-4796-b1e9-579f85b4dd3e",
        "cursor": {
          "ref": "40da475f-1b19-4ae2-a54f-f78e5f9ee6ca",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6fc493c8-745a-4fe2-8f4b-277a77b1eca2"
        },
        "item": {
          "id": "37e0abe4-945d-4796-b1e9-579f85b4dd3e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eb65121b-320e-465f-97d1-aada0bac900e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a78b0-cdb9-4cc8-bc99-88343b035f40",
        "cursor": {
          "ref": "2d5c9960-1b18-4420-8aa9-9c444be5539b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d5cdc194-8a63-42b6-8730-08dbf8ec3f69"
        },
        "item": {
          "id": "841a78b0-cdb9-4cc8-bc99-88343b035f40",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dae0b5be-490e-4cb1-92f3-26bb1915f068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0923cfc6-5e9d-4366-b5a4-1275f84182ca",
        "cursor": {
          "ref": "f2517d49-10e7-4d2b-a00d-43186734f3a8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "21a26ce8-af90-4220-9bd1-8e2624b25493"
        },
        "item": {
          "id": "0923cfc6-5e9d-4366-b5a4-1275f84182ca",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ec161a3d-089a-4b04-ba2f-bf11420dc9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c4ddb3-35c6-4c12-af83-de9c1cf2be5b",
        "cursor": {
          "ref": "33e2bc95-7ee8-4b43-a243-f395c8853912",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7166f214-7bb4-414e-a2c2-117fc6f2b150"
        },
        "item": {
          "id": "18c4ddb3-35c6-4c12-af83-de9c1cf2be5b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b129510e-e391-44b2-9d15-90e4699e2da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8c2302-e070-45cc-97a0-cafccd82c51c",
        "cursor": {
          "ref": "6472cb7d-3652-4a35-b0cf-89c5b7db2272",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "803fc0e4-4e7d-45a3-80fc-df8705c75c59"
        },
        "item": {
          "id": "4f8c2302-e070-45cc-97a0-cafccd82c51c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1e4f415-b632-415c-8a6e-33ade6a5a2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ed446c-a6f1-46f0-a87b-ac6c55c082a6",
        "cursor": {
          "ref": "ef8e58ec-7a13-4104-803c-f9cc632e593a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a23d0ea4-0183-4961-bf86-798962e7724f"
        },
        "item": {
          "id": "92ed446c-a6f1-46f0-a87b-ac6c55c082a6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d7009244-12fd-45bc-b3a8-ff490b954058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea1fc54-17ca-4b79-bfa2-91c991d6ec58",
        "cursor": {
          "ref": "7c879017-7d23-4e68-a5fc-2c73b8896dd6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8eb2d0a1-0996-466d-92fb-427974660413"
        },
        "item": {
          "id": "5ea1fc54-17ca-4b79-bfa2-91c991d6ec58",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9da8eb32-2072-4181-8adc-19a72007a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f03e3b-7984-4ffe-9887-24d198297008",
        "cursor": {
          "ref": "0b1ccc63-611b-4455-beda-d078fda4a82f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "636ca18f-7cf2-498b-9b9e-a32eead1c4b8"
        },
        "item": {
          "id": "11f03e3b-7984-4ffe-9887-24d198297008",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "684845df-ff7b-468f-a66b-b19146477c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3fc3e-54fc-4289-a2e5-10f4f3ca0f3e",
        "cursor": {
          "ref": "68707145-c338-4ff4-9229-8168eb9206c0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ace8e7b9-fdc2-470f-997a-b5a248893dcb"
        },
        "item": {
          "id": "dbf3fc3e-54fc-4289-a2e5-10f4f3ca0f3e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4d4f55aa-1428-4dc6-a236-25b63c5a8741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb5662c-6168-43a9-be4a-f7edbb666102",
        "cursor": {
          "ref": "dbdf4172-3bf6-48ce-b0e6-9a4b64a0b42f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "40a49893-47fc-4be0-9f80-210ee7f42e72"
        },
        "item": {
          "id": "ccb5662c-6168-43a9-be4a-f7edbb666102",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3477050c-c0af-4826-8b88-890b1b85adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c83059-0e25-42ad-9762-c1f01a2071ab",
        "cursor": {
          "ref": "282bb363-2db8-4683-a738-c900a7bb5eaa",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "218257a7-0a0b-464e-a578-b76c9fc3578e"
        },
        "item": {
          "id": "a9c83059-0e25-42ad-9762-c1f01a2071ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0bd485ef-39f1-4cf0-bc08-837be36a2607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff6d266-c7ca-4263-aa67-e791ff81de84",
        "cursor": {
          "ref": "43f8c9d8-dfd9-48a0-8774-29bc44dd0d71",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "639e110e-e6f3-4f1d-8b2d-4bc52c835963"
        },
        "item": {
          "id": "2ff6d266-c7ca-4263-aa67-e791ff81de84",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "95022ee4-fc89-4df1-8298-72b43c88246d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f04c4a-1a40-4316-b081-f9d73596ca4c",
        "cursor": {
          "ref": "2ad68b4e-275d-44a0-b286-10f2571afc7a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "322463c0-9f4d-4066-a9c2-9e56bd28fad7"
        },
        "item": {
          "id": "17f04c4a-1a40-4316-b081-f9d73596ca4c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "56b664ac-7ebc-4189-a7b4-58551eacec05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e431eb7-3c9d-4156-b63c-70a67787b7a6",
        "cursor": {
          "ref": "71805862-5b55-4cec-b802-bb487e97c7e9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "959ebab6-2be3-41ff-add0-d997617177cb"
        },
        "item": {
          "id": "4e431eb7-3c9d-4156-b63c-70a67787b7a6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3594c5d0-fa5c-4f48-b29f-3824ffe1288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c492ef-670a-423b-a63d-94e87e89bf0a",
        "cursor": {
          "ref": "b51ed2f8-f124-4d94-aafc-75d974548b3c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f658758c-a443-4cc1-8cdd-d8f8359bd811"
        },
        "item": {
          "id": "e6c492ef-670a-423b-a63d-94e87e89bf0a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c7092e6d-3612-452a-a46a-580f03aec9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8eba6b-384a-4462-93c9-d11c138a5fb8",
        "cursor": {
          "ref": "1960bb5a-b257-4b96-ae3d-e741226e0796",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "54d2951a-9627-4fc8-a13d-48266fd9f372"
        },
        "item": {
          "id": "ea8eba6b-384a-4462-93c9-d11c138a5fb8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "eb04142e-0421-40cf-91b2-2509be65bffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb22c6-b2a8-4c17-9596-988ade0c0c64",
        "cursor": {
          "ref": "846906d2-bc72-4e6b-aea0-296bab5f0f7b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0851da84-09b9-4f64-a046-d1a1f30b1ae9"
        },
        "item": {
          "id": "96cb22c6-b2a8-4c17-9596-988ade0c0c64",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c08e47da-0339-485b-bf59-64d6143a5ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3518e705-5611-4a95-b481-53880c279969",
        "cursor": {
          "ref": "793a4ad0-e1b8-497d-b99a-da3bf4bff603",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "978d11c5-9e2d-4136-bc43-5c94e4549ed9"
        },
        "item": {
          "id": "3518e705-5611-4a95-b481-53880c279969",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23780d00-7976-4c41-88c8-4e7e82fc3a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e1abd9-d345-49bb-9b72-6d386d22155a",
        "cursor": {
          "ref": "ea5bac4b-db8d-42c9-8b52-f8493cfb3c02",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f947255e-0b7c-4b29-a5de-64ec9dea0c2a"
        },
        "item": {
          "id": "c8e1abd9-d345-49bb-9b72-6d386d22155a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0b97659b-26da-400e-b687-182ae93ebf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdfd80-6cae-4a2e-bea5-adb9f8db4826",
        "cursor": {
          "ref": "6dc0a855-9e7b-4c6f-b6f9-f1b3daca42e5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c18453a5-261b-4d7d-b2f3-21a2c9a640e4"
        },
        "item": {
          "id": "37cdfd80-6cae-4a2e-bea5-adb9f8db4826",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b76e603a-42a6-4086-914f-94c4f3240e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120e7a8a-61d9-4b5d-86b0-2854636fac5c",
        "cursor": {
          "ref": "c9fb4ff1-d895-4545-8ea2-b4dff84298b4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca42b865-d64c-4216-ac3b-2e4ac04ac73d"
        },
        "item": {
          "id": "120e7a8a-61d9-4b5d-86b0-2854636fac5c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f9de13b7-69db-44da-83b8-b4be63caaca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95e4e1e-507e-4428-80c3-b5070c32a952",
        "cursor": {
          "ref": "236bed91-6548-42e0-9af7-8bd14e0486c2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d9e2113d-5947-4fba-b668-b5e6a8c3a0d9"
        },
        "item": {
          "id": "b95e4e1e-507e-4428-80c3-b5070c32a952",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "22f6d8bf-dd4a-4e52-b4c5-2ff49f4a3d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e81143-fa03-4889-a513-5da03f7a00b4",
        "cursor": {
          "ref": "6ab14da0-4273-442e-a11e-794fccff45e3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9617aa8e-ab69-4d2a-a4b2-f0f1b3be6b4f"
        },
        "item": {
          "id": "22e81143-fa03-4889-a513-5da03f7a00b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "795483e7-126c-4cc0-afb1-7c3338e9a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfee38a-fd75-40be-aef8-c3c9ca2ed308",
        "cursor": {
          "ref": "96f7e9a3-6e91-483d-85dd-871fe149b1b5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c308c881-89dc-4acd-a943-9ad57d5f7f4d"
        },
        "item": {
          "id": "4cfee38a-fd75-40be-aef8-c3c9ca2ed308",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2897c0c8-3ec9-4257-ab63-baaa53918047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ee93df-91e3-4459-9f11-ab4df28d2901",
        "cursor": {
          "ref": "9ccc3bcb-81e5-4108-a819-0d6e9ceaa650",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c6a3be97-c846-426c-9669-d63b6f97c6ba"
        },
        "item": {
          "id": "70ee93df-91e3-4459-9f11-ab4df28d2901",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9aefa6ce-b2de-4e1a-905a-d34daece1ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353ddb93-ee0f-4d89-9c08-a1a69d95cc07",
        "cursor": {
          "ref": "7ce9d84a-6303-4971-aff5-ecd46d73bab7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "869358f0-2aec-49cc-abf5-1f3134310fc7"
        },
        "item": {
          "id": "353ddb93-ee0f-4d89-9c08-a1a69d95cc07",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2856d2df-793f-4151-ab98-b8427913dbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d674a1ba-97e5-4a76-ad5a-d883c3972467",
        "cursor": {
          "ref": "888f8c39-45df-4f7c-82ac-8f3826b404ef",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "23492dd0-24a1-4c12-9d60-139b8ad156d5"
        },
        "item": {
          "id": "d674a1ba-97e5-4a76-ad5a-d883c3972467",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b890f9c6-265f-44ca-8826-9f2097f1416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a08a1a8-d95b-487c-b317-3ae95fdb62a2",
        "cursor": {
          "ref": "6cd46945-3df1-4d0f-a5e8-a7853d659a1e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "21a5267e-fedc-4ca8-8492-a01de746728f"
        },
        "item": {
          "id": "8a08a1a8-d95b-487c-b317-3ae95fdb62a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4119a362-9091-4dc1-b6ad-0b7fa1b8a4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b64b27e-f24b-43d3-94e1-582ad6c24fda",
        "cursor": {
          "ref": "84467810-0cbb-4675-889b-20c4d7239895",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "25fb98d8-40b3-4c8b-b4f0-21cc5b5ee1dd"
        },
        "item": {
          "id": "4b64b27e-f24b-43d3-94e1-582ad6c24fda",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e9da8df-8f02-4e8a-98fd-eac5ac283c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eb50dd-dacf-4f57-b6bc-785eb730f18f",
        "cursor": {
          "ref": "4065e797-47fc-4215-a26a-6a4cbdbd0027",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9853044c-7434-4707-9a70-4b24d74cff8c"
        },
        "item": {
          "id": "b1eb50dd-dacf-4f57-b6bc-785eb730f18f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "19782aaf-bd7d-4108-acc0-24abbfa028c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3695bab-8429-4975-a523-1a171894a7a7",
        "cursor": {
          "ref": "62eb2338-0460-42f6-8073-bbd40d45689f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81fabe55-f01a-4eb1-b58b-9458ce13a340"
        },
        "item": {
          "id": "a3695bab-8429-4975-a523-1a171894a7a7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9aa4402e-0e59-4ea2-852a-8205bda3faad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aeb7fd-7995-4c71-8bf0-a849b9251d14",
        "cursor": {
          "ref": "d568a2ba-74f0-4416-84fa-55992dd288e7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "84100d41-8adb-4b37-821f-5426f6f9e159"
        },
        "item": {
          "id": "70aeb7fd-7995-4c71-8bf0-a849b9251d14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2e92e3e7-6136-4a91-8817-0cb4e0e793b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab41be8-0210-4f25-a47e-2f8e2cab2d24",
        "cursor": {
          "ref": "bcaf536d-e8fc-4cfa-be21-6341789d89f9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7c3349f1-0fb7-4261-9400-e0dc41aa2bec"
        },
        "item": {
          "id": "cab41be8-0210-4f25-a47e-2f8e2cab2d24",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "717fe29a-c017-4d49-a107-1e9792877c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dd868a-7889-435a-873a-e9a304375a6a",
        "cursor": {
          "ref": "4efc110d-03d5-4d16-ad82-831cbe5023d6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4dec7e9b-7765-4f80-be2e-90604ebca187"
        },
        "item": {
          "id": "b3dd868a-7889-435a-873a-e9a304375a6a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cdd2ece9-1891-4814-98e1-336cf2835d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fa4cc6-ff09-471f-aa37-e36eeb14ec0e",
        "cursor": {
          "ref": "166bb879-522d-44de-9fcd-b8097fab23f3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eebae86d-a01e-4e97-b461-d5ee9cf39c15"
        },
        "item": {
          "id": "62fa4cc6-ff09-471f-aa37-e36eeb14ec0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c3fc942c-5aa9-4ed0-8283-08590944c6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be10c7f-e608-44d2-8e20-1c7aa0204b3a",
        "cursor": {
          "ref": "4dba9f4e-eddc-4cbc-9723-e3aca386060c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95320f23-8aee-43d8-9896-d389aff666f9"
        },
        "item": {
          "id": "5be10c7f-e608-44d2-8e20-1c7aa0204b3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a0d6bb7-0fb2-4295-bdf9-30d2651e8c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b12a043-f6a9-48b2-bd56-1d2bdd2e6fff",
        "cursor": {
          "ref": "342c4ba7-d850-4399-9e58-1e1363f228f4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d33d83c0-1d1d-4a42-82d1-18661435c8f5"
        },
        "item": {
          "id": "7b12a043-f6a9-48b2-bd56-1d2bdd2e6fff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f0652caf-2380-4a08-a12b-dfae53e9e61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38afcc6c-98ed-4461-b26f-8de61136ab83",
        "cursor": {
          "ref": "9c7f09e9-d236-438c-b24b-0830af4415fe",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fc2c801b-c8e1-45a8-a28b-7f564c3b6708"
        },
        "item": {
          "id": "38afcc6c-98ed-4461-b26f-8de61136ab83",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4741dab5-92d9-4bc3-b54d-11bb21830855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370f6859-069d-4a65-b611-ebd1ac7dee1b",
        "cursor": {
          "ref": "9badfd7d-e177-47b0-98ed-5673c728f029",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "47c2231b-be2e-424c-a6b9-941169f2a5f4"
        },
        "item": {
          "id": "370f6859-069d-4a65-b611-ebd1ac7dee1b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db94ad1f-1425-4bf6-8759-58b85c0bbec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca4c8ac-4b23-46ab-86f8-2a340999e332",
        "cursor": {
          "ref": "7510ec5f-69d2-4066-816f-b2dbf5da89c3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "11dfff37-ffb1-46f8-b2a9-ce388bd9f355"
        },
        "item": {
          "id": "8ca4c8ac-4b23-46ab-86f8-2a340999e332",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38d6f5e3-9f7f-4479-bc7d-a15eb79c0e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de9f33f-01a8-49d6-9a3c-edf226191bb7",
        "cursor": {
          "ref": "662631a2-dd38-4b03-b73d-ed1ad42d4e47",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "80c74f70-872a-4b46-b399-dbc4f2fa25e8"
        },
        "item": {
          "id": "3de9f33f-01a8-49d6-9a3c-edf226191bb7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1fdf892a-ec9f-4130-a18f-2e50c81a7d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31cc6ca-7783-4716-a718-01bc4151498e",
        "cursor": {
          "ref": "22a9ebfa-3a92-4bd0-8d81-c5f916616a83",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "395b4184-d1e0-4f69-91a8-6ba19c162a3c"
        },
        "item": {
          "id": "c31cc6ca-7783-4716-a718-01bc4151498e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f247252-e7f0-4d9e-9607-d3e778e3a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93ce749-ac1e-4cc6-94b7-d1127fd52454",
        "cursor": {
          "ref": "fde9d6f2-a8c7-4899-8373-ba13384f718e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1b3ce751-a800-4995-9f84-9da1258bbeee"
        },
        "item": {
          "id": "f93ce749-ac1e-4cc6-94b7-d1127fd52454",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0106e83b-ca3f-439c-ae00-9fc230b15e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeeaf0e7-ef57-4966-95ca-41135ff2f6c6",
        "cursor": {
          "ref": "5f2ff161-a176-4ec7-a710-6df6ff005070",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5180b830-43b1-49c8-bfca-1c1403560e2c"
        },
        "item": {
          "id": "eeeaf0e7-ef57-4966-95ca-41135ff2f6c6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfc7f7f0-e9a7-45c8-923e-0472a4404b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3e15d6-3936-4eb7-af22-3e42929a60a9",
        "cursor": {
          "ref": "f25cbbb4-e41c-46f0-9a82-4c388e2d025a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "396b6e70-3a1e-4b05-82e9-82b9315676b5"
        },
        "item": {
          "id": "ea3e15d6-3936-4eb7-af22-3e42929a60a9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d34f41d7-6492-4f86-9acc-f4fc4f5ed21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b3d059-e954-4e1e-959a-13f69fbbb009",
        "cursor": {
          "ref": "56355e2c-eb80-44b4-8fa5-eb006fae6466",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "be30f182-fbb8-4889-870d-10e3e86c5ebb"
        },
        "item": {
          "id": "57b3d059-e954-4e1e-959a-13f69fbbb009",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a4bfc739-4420-4af4-a8a4-75106c8121f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e4b1be-fa5d-4b97-9c8e-fe953d9ca9c4",
        "cursor": {
          "ref": "0c73f3e0-092e-4a18-8ca8-7b15adee8fea",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a0b0eb9c-50df-465a-9cbb-1bed0da91fac"
        },
        "item": {
          "id": "d6e4b1be-fa5d-4b97-9c8e-fe953d9ca9c4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8500b3e5-dfb3-4594-85f3-6eac6964777f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e58004d-2201-47c9-a4e2-3f73a22f1343",
        "cursor": {
          "ref": "31fec7af-b451-4312-8ba7-f989620cf8f9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a1477347-1ac7-42f4-b0d0-a4168c3849c0"
        },
        "item": {
          "id": "4e58004d-2201-47c9-a4e2-3f73a22f1343",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fd70ed1a-8475-432a-b566-03a67d9ba0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f5f411-a33c-4c63-a2a8-82bd9add8897",
        "cursor": {
          "ref": "1f89386a-a005-454e-b349-157e12495b22",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b66b9dbf-1a99-4256-80f3-69f1394b13f6"
        },
        "item": {
          "id": "28f5f411-a33c-4c63-a2a8-82bd9add8897",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4421fd19-b8ef-4f8e-8ccc-ac624cdfa446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3e826d-d790-43d1-b0c5-544b03ee47f8",
        "cursor": {
          "ref": "9db24d6f-acc5-49cd-a324-32b7216b7b4e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d799905c-5839-4551-a9b7-d1a439953f07"
        },
        "item": {
          "id": "4f3e826d-d790-43d1-b0c5-544b03ee47f8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b161562b-4aa6-42d9-8c12-ff879bca5282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab6c36-17d1-41e4-b86b-4404dbf6eed0",
        "cursor": {
          "ref": "6e356869-fac0-4d21-b938-5f97f96a9099",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "146635ae-b293-465d-8f4d-79ecd2f73252"
        },
        "item": {
          "id": "25ab6c36-17d1-41e4-b86b-4404dbf6eed0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d90331fa-b440-4877-af41-fa4c1d5f787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc979c3-6e46-4a88-96ec-38454da66ac4",
        "cursor": {
          "ref": "646dc065-cd56-4b0b-88ab-fbdb98dcb56c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c94e78bc-03e6-492d-844d-58425d3eeca3"
        },
        "item": {
          "id": "acc979c3-6e46-4a88-96ec-38454da66ac4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4c529668-d4e3-4445-a147-b35dcdb3900a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ca0d36-4822-4e59-b9a7-da8e223b6721",
        "cursor": {
          "ref": "60d9beb7-5be7-4820-bc69-bfa9c45cf4a4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc5274b1-5024-4d20-bb76-1c236ab9000b"
        },
        "item": {
          "id": "f4ca0d36-4822-4e59-b9a7-da8e223b6721",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "57f2f6fa-a89b-45fd-9b80-9b14e0008aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe512e0c-7ac3-462d-b7b9-b0168a379f9a",
        "cursor": {
          "ref": "ce2789c5-5c7c-4146-b5bf-3fb6dd35ac23",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5f431e04-5ea5-4aaf-854e-d1d646d0638a"
        },
        "item": {
          "id": "fe512e0c-7ac3-462d-b7b9-b0168a379f9a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9ae853a7-02b8-48b2-8ef1-0a434c7b078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd27c64-705d-4e09-bced-84cc90e200de",
        "cursor": {
          "ref": "9844eaa3-7564-402e-bd7b-6e8dc7712f3b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c3306e68-f018-4145-bceb-7bd9022455c8"
        },
        "item": {
          "id": "1bd27c64-705d-4e09-bced-84cc90e200de",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9cac38d1-ef9b-43b3-9b32-531f4beb39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b4cfac-9982-46ce-aab1-95723d4c977d",
        "cursor": {
          "ref": "51e99acf-7967-48db-bd90-4d0e2e343c27",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cd5dfd74-c756-43ea-85b1-a19edba1809b"
        },
        "item": {
          "id": "16b4cfac-9982-46ce-aab1-95723d4c977d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "384ab49a-5bcc-4ade-aa53-ea60f2d8b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643eda7-2fe8-490a-8a0a-d40d205d4959",
        "cursor": {
          "ref": "deeaaa0c-d977-4411-9504-656bcba755c5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9bb1d17e-3d8b-4b39-b39a-4858f80b0540"
        },
        "item": {
          "id": "c643eda7-2fe8-490a-8a0a-d40d205d4959",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ef858586-29a1-4cf8-a3f3-c79b4a053067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba4c09d-2035-4483-8c16-9dbd1d671616",
        "cursor": {
          "ref": "53c447dc-6cb8-4f2a-8b44-ab838a8f1eb8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1024e604-35c9-4c14-bb52-e8b45b05a8e1"
        },
        "item": {
          "id": "bba4c09d-2035-4483-8c16-9dbd1d671616",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e5b8ac3c-8cde-4c2a-887b-30fd8391eca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70a466b-f0a2-426b-ba00-65bde17fecb9",
        "cursor": {
          "ref": "cafbfa85-3de1-4cd1-8ebf-1e23d136fccb",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bca5be48-3344-457e-886a-15af5dce5b9f"
        },
        "item": {
          "id": "b70a466b-f0a2-426b-ba00-65bde17fecb9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7ab8549-cde1-47b5-abcc-7cedfa590dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe13e91-a024-44e3-829f-adc1b7c58fba",
        "cursor": {
          "ref": "ffbe9d67-5358-4581-91a7-fce15771cb70",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b40b4a1a-ab6f-446d-bda9-6c18d3142460"
        },
        "item": {
          "id": "5fe13e91-a024-44e3-829f-adc1b7c58fba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "646d0831-ff38-4116-8b25-d6fb5ad43397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d82c8d4-92a5-4938-871f-b491ed721807",
        "cursor": {
          "ref": "c41071c9-db64-4222-80e8-365d3b4e1f65",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7be753f2-6789-49f4-b508-7cebbfa06e5d"
        },
        "item": {
          "id": "3d82c8d4-92a5-4938-871f-b491ed721807",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "748cc504-4ab4-4e51-b28a-076d54dc1e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85205138-be21-4249-bf2a-4f669c7eb2be",
        "cursor": {
          "ref": "7eef283b-5d7e-4765-bdb8-8e2344cb4082",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3b5b5bf9-838c-447a-bfb7-80f929ee3484"
        },
        "item": {
          "id": "85205138-be21-4249-bf2a-4f669c7eb2be",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "08f48644-3435-48da-9caf-0b7ba09dc796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bbabb7-aa57-40d6-838e-64200bf41598",
        "cursor": {
          "ref": "2d3c32ca-67f6-46f5-b3c3-d3d2aa3d0b90",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2e0e6e55-b1c2-49ff-ae07-8c0f73dadc8b"
        },
        "item": {
          "id": "82bbabb7-aa57-40d6-838e-64200bf41598",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9eb0accb-e057-4b7a-97f6-9cf40a836372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d421fbc1-d0c0-4e15-b9a4-4583940b516c",
        "cursor": {
          "ref": "b5ae0cc0-e3f5-4a50-82dc-d559529cc4d0",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "408c4ed1-1cae-4d59-92eb-c7cece3b6139"
        },
        "item": {
          "id": "d421fbc1-d0c0-4e15-b9a4-4583940b516c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0a0b7b00-e6fb-4deb-9f10-1c12101aa0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeb53ab-6cc9-4e53-956e-46ef12f9ab10",
        "cursor": {
          "ref": "599e8471-e208-4ea2-b16f-e5cee741a9a6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "31f9ff36-8aa0-4736-8683-de399c417004"
        },
        "item": {
          "id": "bdeb53ab-6cc9-4e53-956e-46ef12f9ab10",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "043d7d9d-6325-448c-88ad-06605c2311ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad25aab2-b2ab-46a3-beda-100e46a8c001",
        "cursor": {
          "ref": "6b40ec5d-d70e-40f5-89ef-83739d4bf59a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "33d06bf7-c2ca-48a4-9c1b-4d5381436e2b"
        },
        "item": {
          "id": "ad25aab2-b2ab-46a3-beda-100e46a8c001",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "db2fee65-2d53-4be3-a8fa-f035bf0b0ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe24a4b-dc57-4feb-99c5-0ba951c3a6be",
        "cursor": {
          "ref": "0d74e558-c840-47b3-b693-789f6c8fc0d5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d2408b57-a6c4-4430-9833-bccab082246a"
        },
        "item": {
          "id": "2fe24a4b-dc57-4feb-99c5-0ba951c3a6be",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "69ecfab3-3e45-45ae-ac20-a6a025ed6d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a762229-86fd-4b69-a770-0e6fdb9a137b",
        "cursor": {
          "ref": "743cd5c2-ad77-4113-998b-13a7357fe481",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e9045d4-bc80-4320-ab24-74359569e4a5"
        },
        "item": {
          "id": "3a762229-86fd-4b69-a770-0e6fdb9a137b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5c63ba97-5769-44f5-a2da-52ec11c795fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2d08a-4099-4362-832a-fb6910361a07",
        "cursor": {
          "ref": "a1076477-a754-460e-99b9-958631a7ecf5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bfdeb49f-b3d3-458c-be1f-7193997bc74a"
        },
        "item": {
          "id": "1cc2d08a-4099-4362-832a-fb6910361a07",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ccceb2b1-c42a-41d1-b346-81915c8b2f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275b805c-b51e-46fa-b700-9cb3ad9261b6",
        "cursor": {
          "ref": "2f6afcc9-c901-43c6-9b24-5689538802d5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9cf9d3ff-299b-4f7f-8ffa-7d8a2709fad9"
        },
        "item": {
          "id": "275b805c-b51e-46fa-b700-9cb3ad9261b6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "27a3da92-fdab-4a84-ba5e-c8a1d673702a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3a2bd255-d7f7-46b9-ba0d-5e38195e93ba",
        "cursor": {
          "ref": "6fb2653f-2fc2-4120-b7a3-6fd182afbf71",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9afee33c-30cd-448a-994e-07d676d52268"
        },
        "item": {
          "id": "3a2bd255-d7f7-46b9-ba0d-5e38195e93ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df999e0b-9c98-4ac1-9ef5-634e0df55b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5c834a88-8ec0-4884-a2be-e97074f6856e",
        "cursor": {
          "ref": "559dcd93-7467-4a30-b0ae-73cc62892afb",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "627cc501-deb7-49f7-a6aa-0da1e2d6affe"
        },
        "item": {
          "id": "5c834a88-8ec0-4884-a2be-e97074f6856e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6133ae89-88e8-404d-a0ea-81751f6a0d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "60553308-2ee3-4efd-be48-74039b2b837f",
        "cursor": {
          "ref": "e2ce407e-c643-4919-851d-1a901ff22fac",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "34a8646d-b700-444d-97dd-3a2d6715490f"
        },
        "item": {
          "id": "60553308-2ee3-4efd-be48-74039b2b837f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "50242915-c4de-43cd-9986-974a865265ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c927f6cf-276f-477e-9459-07ea1ac1ffd3",
        "cursor": {
          "ref": "815cf1c1-6f1e-496f-9470-d2d3eed80b73",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c307ffc6-c8b7-4c67-a5d8-23f065db6d95"
        },
        "item": {
          "id": "c927f6cf-276f-477e-9459-07ea1ac1ffd3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ac907d7-f561-45e1-b7be-d60f6bf74e0a",
          "status": "Created",
          "code": 201,
          "responseTime": 11388,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "672bc2d1-c7e6-468e-96ef-cc8801105564",
        "cursor": {
          "ref": "ab9663fa-e30f-43ba-8f52-d602fa160a5a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aef0d391-b645-4494-bbc3-aeabffff5cc5"
        },
        "item": {
          "id": "672bc2d1-c7e6-468e-96ef-cc8801105564",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dcab76d2-c947-4fc3-bde4-d03d81a4b161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9ef8c712-87f4-4611-af10-0edb05d50c6c",
        "cursor": {
          "ref": "a838fc3e-aaa1-4bfc-a399-b9635e0d12f0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ad6e3380-9efa-4c46-b756-49254781f184"
        },
        "item": {
          "id": "9ef8c712-87f4-4611-af10-0edb05d50c6c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f7ed133-f302-4f93-b69e-1409ae68c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "becc1157-6dfa-4aea-accd-44f973cf0fa7",
        "cursor": {
          "ref": "ecf84de0-98a5-417c-aaa6-3a20a38c029c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6d95d296-96d1-4e63-a6e2-668d945d12fb"
        },
        "item": {
          "id": "becc1157-6dfa-4aea-accd-44f973cf0fa7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "db6704e8-5d5b-4e6f-ae22-128dc8720f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e42f4d-0ba4-491f-a3c4-103cd8ad0fdc",
        "cursor": {
          "ref": "b4e3d3c8-1cc8-4703-b21b-180bbdea0798",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e518d5b-5ee9-4c44-9d60-28e1ce167dff"
        },
        "item": {
          "id": "21e42f4d-0ba4-491f-a3c4-103cd8ad0fdc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "673c34dc-3590-4e25-86e7-ccdf5562fab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9246a808-73c3-44d2-8cec-04aeec5ce862",
        "cursor": {
          "ref": "d482a4a4-244f-42d7-a2e1-d15f34b9ee98",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e85bbe6-0efc-4d1a-ba35-a25e7c86ac1d"
        },
        "item": {
          "id": "9246a808-73c3-44d2-8cec-04aeec5ce862",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "565b41ee-8fdc-4561-8032-f833ccd45b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e9526-f9b6-414f-954d-4bf3596bd45a",
        "cursor": {
          "ref": "59a27dad-8755-45f9-871d-737d3c95ec56",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "406c0866-46b6-4dc0-9c57-197fb4948e42"
        },
        "item": {
          "id": "3f9e9526-f9b6-414f-954d-4bf3596bd45a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c52cde37-665c-4603-8afc-382c522d3b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b176d8-6cd3-46a1-b526-6599d8dcec31",
        "cursor": {
          "ref": "5a9390aa-94b2-40ee-b12c-c085db8e83e8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cada5c5c-a82b-4ead-813b-f1f924352c67"
        },
        "item": {
          "id": "93b176d8-6cd3-46a1-b526-6599d8dcec31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bd63e6c7-4508-4fc2-9512-222e57b41f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a32d6f6-1e72-426a-9698-004b2d231295",
        "cursor": {
          "ref": "ef754df8-d3fa-4e5f-912e-0a9e1d32f5ca",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec1eeaf8-81c6-4d3c-8fda-04dea3628e8b"
        },
        "item": {
          "id": "7a32d6f6-1e72-426a-9698-004b2d231295",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "40bfb62d-4bbf-4c99-8ca2-c1af9fc57742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431e3339-c7a3-4098-9816-333f2e5f9f8e",
        "cursor": {
          "ref": "d1597508-a1d9-4dfa-8d32-b27e9c64cbf1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "08ad4e38-5f00-4054-b225-45207b39c000"
        },
        "item": {
          "id": "431e3339-c7a3-4098-9816-333f2e5f9f8e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4537cdb6-21f7-4a93-98b3-810750b046f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d5325d-10a6-46de-af0a-aeba1650b7cf",
        "cursor": {
          "ref": "2ff1f398-4a7a-4df8-a14a-2c6b77028a0f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "22bd68b1-9448-4a97-a506-ba8af2a64056"
        },
        "item": {
          "id": "c9d5325d-10a6-46de-af0a-aeba1650b7cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18159892-07c4-4dd8-a7c6-89f81f259907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41db3cf-df57-4ee3-b347-13cbc897ff7e",
        "cursor": {
          "ref": "2952becc-48f7-4d10-9ade-ae6fc464b351",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7776f42d-ea26-46b8-aacc-5b918b1fd0f1"
        },
        "item": {
          "id": "b41db3cf-df57-4ee3-b347-13cbc897ff7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e030ea2-5c60-4e6a-ab53-4b58119a60fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117eef1-3781-4eff-bed3-1eacf56b63bf",
        "cursor": {
          "ref": "2698dc91-e0ec-4d07-8b0c-0d97c5f77ff0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fdfa7288-109b-4955-b5f9-26c7278789c3"
        },
        "item": {
          "id": "7117eef1-3781-4eff-bed3-1eacf56b63bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc52ddf6-3047-4cf2-b4c1-eb549d1a626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f85e0-e64d-43db-92c8-484e71228475",
        "cursor": {
          "ref": "743cd1c1-025c-4928-8c53-9c2987e7120e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e1c0d6f1-e046-449b-87c5-17e7a0a8f8b5"
        },
        "item": {
          "id": "1e0f85e0-e64d-43db-92c8-484e71228475",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a140d4a0-4360-4703-83a0-87e03cbc6501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5241c652-fab0-4f2c-991d-71faf813ce0b",
        "cursor": {
          "ref": "e122f875-7e76-4262-b653-7b18a66601cb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a163667-b0f2-4796-87b7-2428cf02d2a5"
        },
        "item": {
          "id": "5241c652-fab0-4f2c-991d-71faf813ce0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d233c79-e927-431f-b7c3-96dee42320b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcb24b9-8a00-4353-97ec-7252fef42245",
        "cursor": {
          "ref": "1d33548c-1bcd-420f-8914-2ae84e020f9e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b2e7a69d-c77c-445c-81ff-628bce87c168"
        },
        "item": {
          "id": "4bcb24b9-8a00-4353-97ec-7252fef42245",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0aaa06b4-f38a-4490-92d6-5485d14dcd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37b012-9351-439b-b4fa-24aefe2c6441",
        "cursor": {
          "ref": "63b7c348-b3a8-4091-9601-af1e90416387",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b02c5a36-663b-469d-8638-b6bc16ab8695"
        },
        "item": {
          "id": "fe37b012-9351-439b-b4fa-24aefe2c6441",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "be0a51af-fd06-4827-bb52-d7e1a4c7d081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d15b9ed-0523-4f68-8ba0-314a74f37d60",
        "cursor": {
          "ref": "d2443d48-f74b-47fc-8dc6-5c02d17f095d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b180d47b-99b5-46fd-bd70-62a737ec5bad"
        },
        "item": {
          "id": "5d15b9ed-0523-4f68-8ba0-314a74f37d60",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "90259a45-88d2-4b0c-a3a1-9f0063f84355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b706ae0d-fa04-4664-9905-3974eaa8b093",
        "cursor": {
          "ref": "2103d3ed-c9ec-48a1-8806-8a9bb3508734",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "537b11cd-beb9-4476-8894-56358a94c0d5"
        },
        "item": {
          "id": "b706ae0d-fa04-4664-9905-3974eaa8b093",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af1742b6-b1aa-48f0-b035-d01e0182ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1cc4b5-44cb-4cd6-9273-e151ce4dad65",
        "cursor": {
          "ref": "09e1ed3d-ec2e-40d2-8e3c-f92f53c36bdc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d7111653-bbee-46c2-b5cf-7e212088d6b3"
        },
        "item": {
          "id": "fc1cc4b5-44cb-4cd6-9273-e151ce4dad65",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ccc24167-2173-4c77-907d-199e9418bd38",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "113a0c55-1ecd-46dc-9db0-b42b777924d1",
        "cursor": {
          "ref": "25e989d9-c4e5-40bf-a1c8-4bcafb1fb220",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ca4ebeb-9dd1-4bb8-92ee-1603b6a5f313"
        },
        "item": {
          "id": "113a0c55-1ecd-46dc-9db0-b42b777924d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3ce19a9d-f079-4ed2-a048-0c90fae4aae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ac719-ca20-412f-964a-915363c4ecfd",
        "cursor": {
          "ref": "f4249cb1-aa07-4357-832b-2bc404407490",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b7ea1eb-1f72-4c34-9ad1-a52d0c970e43"
        },
        "item": {
          "id": "d56ac719-ca20-412f-964a-915363c4ecfd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adc20ba2-6c2d-42fc-822e-62148b978f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0435eb40-d54c-43d8-8480-a4e4f20255e2",
        "cursor": {
          "ref": "a08f8a7b-82eb-4779-ac45-b3d674f44699",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "418d2652-0bad-455b-9f08-59b0929e056d"
        },
        "item": {
          "id": "0435eb40-d54c-43d8-8480-a4e4f20255e2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "abb9f63f-3679-40b7-8a56-e192fe263446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b14bbb7-9b62-409c-880c-c68df3a1af0b",
        "cursor": {
          "ref": "c78af804-931a-460c-aa8d-31a63e87a955",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42963e23-3c09-4b17-9247-96a0934f75a2"
        },
        "item": {
          "id": "9b14bbb7-9b62-409c-880c-c68df3a1af0b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1fa0eb77-5aee-4113-9730-d950a1142ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61efcb3a-7fa9-4efd-9966-307f6cc39d1a",
        "cursor": {
          "ref": "796101ff-b8a2-40d5-872e-4e78d85e80e9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "528b2e6a-b267-47a4-a01f-f573f29b5643"
        },
        "item": {
          "id": "61efcb3a-7fa9-4efd-9966-307f6cc39d1a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a96d2aca-47da-4041-b6df-97b23754fd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a922d6-ce9c-4992-91c6-9c5e7fce354b",
        "cursor": {
          "ref": "6a003475-1b43-4a15-8107-65bb4e1482e1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a5b3276-dac7-4e0f-9c73-b69c157bd44a"
        },
        "item": {
          "id": "e2a922d6-ce9c-4992-91c6-9c5e7fce354b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4167c38e-3593-4666-8dae-8eaa875f6624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a6a22-9239-48da-8beb-5e4b5f55f633",
        "cursor": {
          "ref": "42e551d4-ad5b-4b67-90f4-e6f66523409c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "00218ef5-1e41-424c-bf93-c73a359e608c"
        },
        "item": {
          "id": "c00a6a22-9239-48da-8beb-5e4b5f55f633",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6aaa33d8-e894-4159-90b8-d335472c7842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a20149-3330-420b-bfda-1ef6d0ad8ca4",
        "cursor": {
          "ref": "cbd185e3-af56-4f39-94ea-54b6bc352972",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "51d4bc1d-f51d-4ce3-93cd-0ac96c6514d8"
        },
        "item": {
          "id": "c6a20149-3330-420b-bfda-1ef6d0ad8ca4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "75bd6e48-c8af-4b67-8666-49bfb46f4c3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "40531fa6-a1df-43a6-88bf-256249e93474",
        "cursor": {
          "ref": "43d416d9-5f91-4112-b048-cde7b1b60cd2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "61b61e97-759b-47ed-83ff-b8b4a47a2df2"
        },
        "item": {
          "id": "40531fa6-a1df-43a6-88bf-256249e93474",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71928d37-133c-4dda-aece-407162c688af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3bbe5-ee6a-4975-9023-85453512972b",
        "cursor": {
          "ref": "04d60b78-ef02-414b-b1eb-790a117d6b98",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9d390309-f828-408c-ab64-0171d88efef8"
        },
        "item": {
          "id": "3bc3bbe5-ee6a-4975-9023-85453512972b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ad2627f8-eafd-4c50-8338-26f974924c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f22fe2-17b3-4a8f-8897-9dafd9249f52",
        "cursor": {
          "ref": "527eaae8-f002-4b18-9249-3e67bbe8e024",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d720e2a-0d8f-432d-ab6c-628198db76a9"
        },
        "item": {
          "id": "75f22fe2-17b3-4a8f-8897-9dafd9249f52",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4072a7af-0f0c-4e54-b9e8-53c22101974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f610330-0780-4f30-9073-82c979993816",
        "cursor": {
          "ref": "6c3526fb-5ec9-4eeb-b901-270ab5813321",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6bc6358f-1346-4261-ba8f-a6b016fda98c"
        },
        "item": {
          "id": "3f610330-0780-4f30-9073-82c979993816",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2027eb9-e143-4ffd-a518-60aca3fe68fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be304679-4073-41fd-8973-7900720e80fd",
        "cursor": {
          "ref": "48f71271-3d23-4836-9c02-2bc7fa306b7f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f981641e-2ada-4d06-9c57-76b5b2cce6dd"
        },
        "item": {
          "id": "be304679-4073-41fd-8973-7900720e80fd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5d07f34-0c3a-4209-9c90-63bff0bca982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2d0d1-0fb7-4b05-b2ad-d4c93a714c66",
        "cursor": {
          "ref": "276a1ead-f8da-4099-a357-ba67ed5a7582",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6d245a32-7926-4002-998f-82fe9cb11d29"
        },
        "item": {
          "id": "9ff2d0d1-0fb7-4b05-b2ad-d4c93a714c66",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "482800fc-6c3f-4af0-a3ae-28eeefd7dad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c1b6e2-6d35-4981-92e0-cc836e7eabc3",
        "cursor": {
          "ref": "70796ddd-cc07-4af2-8565-f904c6be764b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "65cfbef7-25b5-48a9-9040-7e22294ee34f"
        },
        "item": {
          "id": "a7c1b6e2-6d35-4981-92e0-cc836e7eabc3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e655798-59af-47d7-aff7-d8b5731cbced",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1bc76bd8-a46c-4286-8a2e-58228fff65d3",
        "cursor": {
          "ref": "e4dea763-1eba-4dec-a401-9094de13d812",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9e7bca95-0420-4eb0-8615-4280760cecdb"
        },
        "item": {
          "id": "1bc76bd8-a46c-4286-8a2e-58228fff65d3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d14b8676-2baa-4804-8f8f-4a89db76ce06",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "4e1f8c6b-4c75-4dd7-a62a-afd9ec29da78",
        "cursor": {
          "ref": "1f29dc5e-f7e7-4abd-862a-4771dec06aed",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d9d40f8a-0c4f-4ba9-8d3a-495a980c7183"
        },
        "item": {
          "id": "4e1f8c6b-4c75-4dd7-a62a-afd9ec29da78",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "71e1b5a8-6fd7-4a25-9561-07513b6e5f95",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "915cb0ed-582c-4a0a-bb8f-4574ec83295a",
        "cursor": {
          "ref": "c4371142-f976-4641-bcc7-2d2c9f128d5c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8088a7ce-0d38-493b-ae37-0512bf551d7c"
        },
        "item": {
          "id": "915cb0ed-582c-4a0a-bb8f-4574ec83295a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6cf54584-184b-42b3-b5b0-782359958417",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "3bb8deb3-33db-4604-9a19-f68467de41d6",
        "cursor": {
          "ref": "162e5cc1-67c6-4b07-b0c2-172a90e9b0f3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "633d2184-e4cf-4a3d-9211-3f54c222d55c"
        },
        "item": {
          "id": "3bb8deb3-33db-4604-9a19-f68467de41d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9d7711b3-bb0c-406b-a6a1-d5a4232531f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "13b52ce6-1960-43f3-8f93-2c3ea4ee6698",
        "cursor": {
          "ref": "18e8322a-2487-4c8b-9786-8c4b35d38b60",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fd62f5cc-8356-4be7-ae49-09f993ae83d6"
        },
        "item": {
          "id": "13b52ce6-1960-43f3-8f93-2c3ea4ee6698",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3b634a7d-0b64-4eb6-8ffc-d00749b2d03d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2b9715ef-c2e4-4ee1-9bd7-51cca4ae78e1",
        "cursor": {
          "ref": "a5cb6cf2-d2d4-4819-8888-676b0370636a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8c62741c-deb1-4470-9d2e-6f14c86441c5"
        },
        "item": {
          "id": "2b9715ef-c2e4-4ee1-9bd7-51cca4ae78e1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2e8b28c-e3fa-49ff-b69a-7f05c49e095d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114abb0d-d0f7-49fb-b18a-9a69b3bf02af",
        "cursor": {
          "ref": "8a49cc16-c163-4c6f-b79f-22c29bfe304d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9751b2f4-ca74-4e97-97c4-f84371889750"
        },
        "item": {
          "id": "114abb0d-d0f7-49fb-b18a-9a69b3bf02af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c3caf724-ef23-4f94-a7aa-2a139be75994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4709be9a-4bfd-42dd-a800-fec275665780",
        "cursor": {
          "ref": "01b0ae8a-56a0-48cb-9667-65ec96527959",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1caeba3b-ace0-4122-8d1c-7ef9ff9e8500"
        },
        "item": {
          "id": "4709be9a-4bfd-42dd-a800-fec275665780",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9066eb8b-5843-4607-ac34-2edf30c85284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9a57ea-3009-4fca-beec-2976c4c49f8c",
        "cursor": {
          "ref": "e6fff8c3-4363-4c1c-93b2-283399a7712f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f633eaed-9d27-4e60-9369-f4e751bc0cb5"
        },
        "item": {
          "id": "8c9a57ea-3009-4fca-beec-2976c4c49f8c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6589bb0c-98f6-4731-b256-ebe1e6759879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd94825-60ea-4ee9-bb95-ed0aaff96b8d",
        "cursor": {
          "ref": "f361d064-e92d-41bd-bbe0-7b65cd7e52de",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "12eea16e-6712-4059-ae4c-439dc741bb7c"
        },
        "item": {
          "id": "6fd94825-60ea-4ee9-bb95-ed0aaff96b8d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c55e4834-9ea2-427f-a66a-077b2693072e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418509ab-e959-4a81-95a6-73bfd4670542",
        "cursor": {
          "ref": "00e0073b-ccce-48e4-a089-670da641779c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ac4ec3a-ce74-49a5-b167-0b303271ee9a"
        },
        "item": {
          "id": "418509ab-e959-4a81-95a6-73bfd4670542",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ca722fc3-7fee-498b-9888-b18a1b085ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d607d4-6708-4214-93cb-3c17c82c4586",
        "cursor": {
          "ref": "1bb8c406-f884-48d7-9694-87779b15b647",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f3f8bc0f-8282-4f16-91a6-91fb36b25b8f"
        },
        "item": {
          "id": "46d607d4-6708-4214-93cb-3c17c82c4586",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66207f2d-f46c-46b0-ab04-b8b462ecab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3541a8c-4550-4b92-83e7-a8d7a544aece",
        "cursor": {
          "ref": "976305f5-2949-4a56-81d2-0441813cb4ac",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1958bec4-69df-433d-b20d-deeb6ba66014"
        },
        "item": {
          "id": "d3541a8c-4550-4b92-83e7-a8d7a544aece",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "af8f2394-f6fc-453e-a552-b46e6eb88792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f529fa-87ff-43b9-8246-99074d09e437",
        "cursor": {
          "ref": "981f77bc-a221-4454-843b-b7051014952e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cdcc01b0-d3a0-44e1-85ac-ebfc164d586b"
        },
        "item": {
          "id": "53f529fa-87ff-43b9-8246-99074d09e437",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "12b05991-bacd-460d-a675-c26717f37464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cf75cd-0ca1-4583-8716-faef8bbb19d0",
        "cursor": {
          "ref": "a5908a8e-648a-4a5d-bf42-30e6be590f00",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8c029167-8b53-4d27-9985-6f8dcf466e98"
        },
        "item": {
          "id": "15cf75cd-0ca1-4583-8716-faef8bbb19d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8f2d1484-da93-4ab5-bcf7-84eb719dd980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dbdc5a-f730-4178-aaab-55e9b54ea0e5",
        "cursor": {
          "ref": "ca5e3220-3e2d-409e-8748-14f8c31ebd3e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "83532782-e06c-43e1-b269-2c859afaf4f5"
        },
        "item": {
          "id": "02dbdc5a-f730-4178-aaab-55e9b54ea0e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ca4c90ca-6208-4e76-8e1b-3c4ec2cc8d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d5b8dc-4ff3-4e37-9d28-8f9afce775ae",
        "cursor": {
          "ref": "891fac62-af52-490c-a656-bf33d6a6a4f7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1685ac49-ba3e-4807-9542-9cb516211001"
        },
        "item": {
          "id": "78d5b8dc-4ff3-4e37-9d28-8f9afce775ae",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b7f22dc4-0748-477f-b228-9b2838cc8a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e730b-8ffd-4b42-9d36-85df2f772f6b",
        "cursor": {
          "ref": "f8a43e29-aea3-43f2-8097-5f87d7a1b914",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db8bc458-f0d2-4664-a32d-e0d28131a2f7"
        },
        "item": {
          "id": "0b6e730b-8ffd-4b42-9d36-85df2f772f6b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b9fab50-3f9f-4896-bfc0-bd1b1589a3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0832cf-66e5-4edd-b775-99478aeb31d7",
        "cursor": {
          "ref": "bf508790-6e62-481a-a5c9-4ebe31fe7cf0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc6c86f9-d404-4653-83cc-3cb8450ea3c8"
        },
        "item": {
          "id": "ca0832cf-66e5-4edd-b775-99478aeb31d7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ed75bec4-4d5e-4888-98d3-ca1bc5c0b846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9119274d-ca6a-48cf-8cb3-5b2db27bbb1f",
        "cursor": {
          "ref": "d310eb39-dea9-4fb8-96a1-fdbe454693e4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bf18a4c8-c497-4604-b2fb-f2ca48c0aa6f"
        },
        "item": {
          "id": "9119274d-ca6a-48cf-8cb3-5b2db27bbb1f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "79a3fbbe-2894-4649-96b2-3cb20fa846b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d6fb83-1c45-4066-b04b-41856a9e8540",
        "cursor": {
          "ref": "f17465a2-0e84-4047-8798-ea0c63fd9146",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72538bd6-4506-487c-a6f4-d677889c2009"
        },
        "item": {
          "id": "47d6fb83-1c45-4066-b04b-41856a9e8540",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "336927a4-4131-4026-8ace-929991a38eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c632f340-784f-4eb7-bb13-ada09fb717cc",
        "cursor": {
          "ref": "af1d54cb-7d8b-45d0-8be8-10bc380d57c3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f3415bb-3095-4860-a11a-4414ead1d7e5"
        },
        "item": {
          "id": "c632f340-784f-4eb7-bb13-ada09fb717cc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6aaed3fd-3543-4f12-b042-3ccdf0c81adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62943e35-0468-4812-a3b0-2824db706b83",
        "cursor": {
          "ref": "ad8aba55-7b27-4b69-9554-3b12a5547764",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b7e69adc-2377-4e66-84a4-261b2c32e2a0"
        },
        "item": {
          "id": "62943e35-0468-4812-a3b0-2824db706b83",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f782c7a5-9c28-45a8-a2f0-2248cb23d59b",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "bc44b6b2-f2fb-4757-b21e-1d73bb61a84a",
        "cursor": {
          "ref": "6e3ef2d0-d657-464b-828d-24d86d2c0d85",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d47121ac-178e-4016-a38f-4d3d1384ffec"
        },
        "item": {
          "id": "bc44b6b2-f2fb-4757-b21e-1d73bb61a84a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "680e37bc-5f49-46cd-986e-6d0f886e6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f8f314-927e-479d-b5e9-19b0b3900890",
        "cursor": {
          "ref": "8aa1ee4f-bd78-4fa4-aa4f-55d21bdbe8c8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ff1f1f78-a6d0-4a6f-b19b-2847c65e26e5"
        },
        "item": {
          "id": "b8f8f314-927e-479d-b5e9-19b0b3900890",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "195c85dc-938a-4a5c-aa76-8e884a56e4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5671419c-9cc0-4411-8a56-fdf47ecae061",
        "cursor": {
          "ref": "25cd4ee2-f8fb-4fee-9cee-1bca9bed07b5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "979d8bd0-b882-4a87-9bee-81d56949cecc"
        },
        "item": {
          "id": "5671419c-9cc0-4411-8a56-fdf47ecae061",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea051305-334a-4505-894f-aabcd6d7348d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697d05b6-d717-44a9-bdc3-ea052c7d564c",
        "cursor": {
          "ref": "2eb0cdd0-2812-49c3-a0b6-776f90235839",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f3763eae-1236-4e39-a062-30b46d24af7a"
        },
        "item": {
          "id": "697d05b6-d717-44a9-bdc3-ea052c7d564c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74c5e050-5681-45fd-b1b5-246c77692c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f8c40-12cf-4f20-bfcb-17209d071fee",
        "cursor": {
          "ref": "d4412fe3-0d0a-4ac2-9ddd-fbbfc6e51270",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfd837c4-3366-4f58-9052-778225b20ac9"
        },
        "item": {
          "id": "1a8f8c40-12cf-4f20-bfcb-17209d071fee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f84f9ef1-d823-42a3-a2e3-6e1c0a0eec21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d2b0a4-0c75-4d1b-a6f4-1dfc8eac4088",
        "cursor": {
          "ref": "4181b5bc-c10b-4b57-b767-00908ec895df",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d2eff83-47c6-4029-811c-680fcb189fe4"
        },
        "item": {
          "id": "98d2b0a4-0c75-4d1b-a6f4-1dfc8eac4088",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5d77b96a-28ce-49a1-aa5c-982759160ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9d3f9-7e1c-425c-831d-1960945d4971",
        "cursor": {
          "ref": "e8a1d38c-5fb8-4bf1-8782-b707a23f2f9e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a4ad039b-f768-422d-a2e9-84259d4e97e8"
        },
        "item": {
          "id": "31b9d3f9-7e1c-425c-831d-1960945d4971",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f67296bc-78de-4cff-92f4-9466b5f8eed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326ff515-7ff9-4c7c-9f11-76be20dcc315",
        "cursor": {
          "ref": "e6d1ca50-b220-4377-9d86-571db9a87557",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7c1d50d0-f6f5-4e7c-bb42-b0ade4f99870"
        },
        "item": {
          "id": "326ff515-7ff9-4c7c-9f11-76be20dcc315",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aaf97e77-311b-4a4e-a539-ddc1f9b43c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b782b5b7-6d77-41f8-8d16-e7f8663f4084",
        "cursor": {
          "ref": "c858e3de-296f-4afc-9668-1130264cf8ef",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3e33dad8-fc2b-4454-9608-de3ccb36fcce"
        },
        "item": {
          "id": "b782b5b7-6d77-41f8-8d16-e7f8663f4084",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1b06f256-40b4-42a7-bd54-217c289fe5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183d2be-c032-4f70-bfe7-7490ae14f964",
        "cursor": {
          "ref": "4ce61fd3-010c-454b-8271-49523f62bf85",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eb7397a0-6b38-4b45-a41c-bfd53bd5f70a"
        },
        "item": {
          "id": "1183d2be-c032-4f70-bfe7-7490ae14f964",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "32fdbdf9-3615-4aae-8a05-a77cf64f189a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059de9d-7fce-4aae-b838-4055543c6f77",
        "cursor": {
          "ref": "af3c0181-62ff-4e84-b0ea-d3d7c4f77440",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "32787a4c-b41e-40f2-a0ef-529edd63bf96"
        },
        "item": {
          "id": "3059de9d-7fce-4aae-b838-4055543c6f77",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8b2c26b6-ba31-4d03-bd7a-e255666710fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a610e2-63f8-49d1-a031-0fdf153d6bd6",
        "cursor": {
          "ref": "ab2c9e3e-edaf-420d-bf4b-dffdcb6f1a61",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "089b7dcb-40cd-4dfd-8186-11a21c42d708"
        },
        "item": {
          "id": "61a610e2-63f8-49d1-a031-0fdf153d6bd6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aae4b078-d70c-4420-94cd-db23eace2cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60806fb-3c55-45bd-8cfa-31b044c9b52e",
        "cursor": {
          "ref": "da9efa1a-8652-4f6d-90e0-b19bf7a70a72",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "277fe909-11a4-42de-b31c-343453764e79"
        },
        "item": {
          "id": "e60806fb-3c55-45bd-8cfa-31b044c9b52e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "add6b05f-c43a-491c-b61b-3bfd770d4ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b832f6c-35da-487c-8271-a981703f60fd",
        "cursor": {
          "ref": "82711f96-2f21-4ff3-91d9-ba9910b42003",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bc139835-a4a5-454b-be76-866e5c2c8625"
        },
        "item": {
          "id": "2b832f6c-35da-487c-8271-a981703f60fd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97346e3d-b1c1-4c8c-8fe0-e4e0f5f6785e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945bd303-b7b1-4177-b9ab-ab79f4bdf104",
        "cursor": {
          "ref": "be2e81dd-e96a-4452-81af-8f9e5d711cf3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e91e778-2e4c-4425-afd4-00c1979c0e30"
        },
        "item": {
          "id": "945bd303-b7b1-4177-b9ab-ab79f4bdf104",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0832228d-6087-4057-a6b3-02d7187f559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec2593-2dc0-4fd0-92ac-720767784a17",
        "cursor": {
          "ref": "ecc26984-4444-40b1-a17a-e418c3d3e042",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1a533b1a-c46b-422e-b1d2-2746a2f67712"
        },
        "item": {
          "id": "3dec2593-2dc0-4fd0-92ac-720767784a17",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "44476bf0-87cd-43cf-8dce-f60e18d6f6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcb2543-b4f8-424c-80ef-248f224a63f4",
        "cursor": {
          "ref": "e3244e8b-9403-46ba-ac06-4fb0f9742384",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d74365c2-3a79-4f44-a233-c34e69970316"
        },
        "item": {
          "id": "6bcb2543-b4f8-424c-80ef-248f224a63f4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c6c71122-2bbc-4265-9387-9be23efa4995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc6595-db6a-4c70-831c-c8c07db32030",
        "cursor": {
          "ref": "dc54da9e-f500-47df-875d-068a2dedda2d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "87ffef5e-56d4-4843-8a9c-2706c8829300"
        },
        "item": {
          "id": "18dc6595-db6a-4c70-831c-c8c07db32030",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8eb7c424-106e-4700-a835-0776ff9cf279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8b1308-5446-446e-a413-cc90933bb65f",
        "cursor": {
          "ref": "1d939785-324d-4f04-84b4-92cbc5d0a2e1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a8696bb-667f-4e7b-b614-5be2eaccb7c5"
        },
        "item": {
          "id": "de8b1308-5446-446e-a413-cc90933bb65f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b9afba81-97da-4e40-8a36-70a99de3348b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefae02f-9695-4c31-95f7-f4bb43ad7501",
        "cursor": {
          "ref": "8a6e4006-c2d0-48ef-bc2e-1aab89f516a3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "92159d2e-f5ff-4e33-9047-2164d40b21c1"
        },
        "item": {
          "id": "fefae02f-9695-4c31-95f7-f4bb43ad7501",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "51e44b5a-b98f-4b84-ab12-d1ecff15d530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6344f009-fb77-4db6-b56c-571d0f6a5857",
        "cursor": {
          "ref": "8b0a4f1a-a15a-4c5a-b0ab-ef17184abe53",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fec658bc-a0a7-4303-9051-bc82f5468a8a"
        },
        "item": {
          "id": "6344f009-fb77-4db6-b56c-571d0f6a5857",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f61ef22b-0674-4e4e-b34a-17ab7521591b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca1b82d-45b8-42e2-ae0e-3d11ea8b3486",
        "cursor": {
          "ref": "5b83c4cc-e435-4c0c-b96a-63b8f2b306e7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4fbea4d4-7c9f-4e5a-850c-9f319699f042"
        },
        "item": {
          "id": "dca1b82d-45b8-42e2-ae0e-3d11ea8b3486",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee6123fd-1ff7-482f-a204-ac0b5b707a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f062f1c-c76f-4c11-8f83-4964a6d82602",
        "cursor": {
          "ref": "265377da-2e21-48f6-ba25-45b1bc1b92e4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a66a95dc-988e-44c3-8cf9-a074e9933636"
        },
        "item": {
          "id": "6f062f1c-c76f-4c11-8f83-4964a6d82602",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4263a862-2a62-41bb-b2b0-22cc246f2851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf83fea-45e0-4c7a-8b14-e9cdc0c85366",
        "cursor": {
          "ref": "5d5d5679-7001-4bfd-80cd-053818e2d793",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9b3c1068-d219-4eee-b692-7ba27e001aa0"
        },
        "item": {
          "id": "eaf83fea-45e0-4c7a-8b14-e9cdc0c85366",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1d08b14f-8783-49c0-9e6c-f3fc4bc715eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611cf54f-16aa-49ad-be55-962972f6d76c",
        "cursor": {
          "ref": "577efa49-75de-447e-b54e-64411c1b4b81",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5b441c1c-c56a-4d31-886f-5e1571cf4f07"
        },
        "item": {
          "id": "611cf54f-16aa-49ad-be55-962972f6d76c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "23cb83e4-ddf3-4919-b91b-4a08a1d32d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc415c52-d5ba-4717-9200-b32d5a6beba5",
        "cursor": {
          "ref": "ca2f44a1-ff76-4749-ac91-820a7c4e0610",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "39660836-2abb-422f-981b-01da0133d569"
        },
        "item": {
          "id": "bc415c52-d5ba-4717-9200-b32d5a6beba5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dd5af35d-eeaf-476c-9dd8-584713415cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b555e11-90e1-4700-a9c7-2b6c135a66fa",
        "cursor": {
          "ref": "3d3d51eb-d66f-48f8-a0d9-453ca82501b7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "eb311a1a-b949-4959-9c78-3131c2f6c9b0"
        },
        "item": {
          "id": "1b555e11-90e1-4700-a9c7-2b6c135a66fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7f27e65f-877f-434c-a554-bd8865f6762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81241fe6-d96c-43fe-91ce-52301c905b4d",
        "cursor": {
          "ref": "c0607930-3260-4b6b-b109-cf2242f11a1c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "86660e5a-0490-4c43-95fd-b442b897eb29"
        },
        "item": {
          "id": "81241fe6-d96c-43fe-91ce-52301c905b4d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dfdc531d-6120-4bfb-a288-de2604cb7819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2cdfe-905b-4303-8a2e-b45bc567b735",
        "cursor": {
          "ref": "9619b713-ede0-4c09-a449-e47f6a43dcc0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4783973a-5e53-48fb-a67a-fc87b7dc93e7"
        },
        "item": {
          "id": "3fe2cdfe-905b-4303-8a2e-b45bc567b735",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0147ff2a-3d29-4681-93eb-2f4e7b7487fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576628c1-8a00-4acb-8ed7-7ccd0fcd4fb9",
        "cursor": {
          "ref": "39cf2492-6eb0-4fe6-bbe1-7d22637cbba4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bbc324cc-93a6-4bba-8dc2-933632f0cb31"
        },
        "item": {
          "id": "576628c1-8a00-4acb-8ed7-7ccd0fcd4fb9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2384fbd4-2d7e-4f94-a384-edb10cfd23ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734ff5ad-3bbd-415e-8588-e0723e91782d",
        "cursor": {
          "ref": "370a5fdb-8571-4dc4-a3fc-8fa714a9587a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e43e0efd-b6ff-4bce-b2d9-75313ae88a8a"
        },
        "item": {
          "id": "734ff5ad-3bbd-415e-8588-e0723e91782d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3f7a87a1-74d6-4d08-91af-57eae4011a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af8ae43-691a-4df0-a6da-65cc92e00887",
        "cursor": {
          "ref": "6ca4d065-b0ca-4c03-a4f9-96a80796e866",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5c61bead-fb06-4c36-a145-ad211c3ae51f"
        },
        "item": {
          "id": "8af8ae43-691a-4df0-a6da-65cc92e00887",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3bd05058-a4dd-4af8-a5e1-94841fe8aba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c42afa5-659e-4401-9d47-37cca91e0db6",
        "cursor": {
          "ref": "b2a51179-ee4d-4522-95a0-eb9ac22a3710",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d6b1083f-210f-4b9b-be88-89a6be32808c"
        },
        "item": {
          "id": "2c42afa5-659e-4401-9d47-37cca91e0db6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "916409b9-0193-4fab-a2cd-a23e95c955e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96769d00-a071-4d71-a316-aed8164c1a33",
        "cursor": {
          "ref": "a43347af-9a6e-46d1-a902-c7682539ad04",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ecd9e795-f676-4e28-9999-d4b4df0245ac"
        },
        "item": {
          "id": "96769d00-a071-4d71-a316-aed8164c1a33",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7fb1d90e-3b35-4ba1-8e49-b351d926a3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05119a90-7647-4d23-b0b1-b2ef7f86fca3",
        "cursor": {
          "ref": "985e9e7a-e1dc-471d-b93e-4ff150040196",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "158bcef6-4e8d-4e2e-a2ea-9f6ca87dd6ea"
        },
        "item": {
          "id": "05119a90-7647-4d23-b0b1-b2ef7f86fca3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5066b79b-11e8-44ce-b537-a210c2554fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f35f12-3010-4595-bbae-dada6f4f55bf",
        "cursor": {
          "ref": "50ce1da4-e75d-4155-a938-303c8a1697f1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "53d7bff4-909a-41e1-9603-82f4d81afb10"
        },
        "item": {
          "id": "69f35f12-3010-4595-bbae-dada6f4f55bf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c22678f1-2415-438b-bd62-5d07ecea7934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb7041f-4eab-4b54-82da-1f34906bb4c9",
        "cursor": {
          "ref": "777bfb0a-a752-4f61-ab7f-170c72c5c082",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "651fdb7e-0d28-47e4-95d6-90abc6357995"
        },
        "item": {
          "id": "beb7041f-4eab-4b54-82da-1f34906bb4c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d5f97a69-fc70-4696-a9de-02676dee25c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f36f0-9f67-48a3-a8ea-5bbe3cbdb2b5",
        "cursor": {
          "ref": "239283cd-c99f-41fd-804b-eaaac8161dd8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ac3cd738-4af6-42b7-824d-79a8102e34df"
        },
        "item": {
          "id": "074f36f0-9f67-48a3-a8ea-5bbe3cbdb2b5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3233086a-6102-4444-b1b8-040c3a5a959d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2a09e8-79ae-43e5-b0f9-982ad435fb28",
        "cursor": {
          "ref": "434bd5a5-ba67-426e-9bc0-1ccf98994b3c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6bb6dbfb-1e4e-4659-aa68-56494f5a1c47"
        },
        "item": {
          "id": "0d2a09e8-79ae-43e5-b0f9-982ad435fb28",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bc9606d7-0078-463e-beaf-4fda52ccc010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313d681-adc5-443b-8ff3-515492422504",
        "cursor": {
          "ref": "cbb7df4a-2920-43fa-bc16-49afeb0969db",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e59c6c84-908a-4eb8-aa98-18d39cae31cb"
        },
        "item": {
          "id": "5313d681-adc5-443b-8ff3-515492422504",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "47ece4e4-30fc-4d89-bd26-fbab368f6817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ada9d-3259-4558-90aa-91525128f7a8",
        "cursor": {
          "ref": "6e8648fd-bfd4-41f0-8a75-a3d602a8aab6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b9cc31a-4e09-48f2-bd22-02d515b7f46f"
        },
        "item": {
          "id": "3b9ada9d-3259-4558-90aa-91525128f7a8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7f471be-9ccb-41d2-99ef-d38463abf878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc648ab-d9f6-44f0-bfdd-c44863113ec8",
        "cursor": {
          "ref": "4c3bc62a-d38a-4051-9db4-61f39de2d564",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b8580e7-5c6e-4487-a010-d5784f3a9ca3"
        },
        "item": {
          "id": "6dc648ab-d9f6-44f0-bfdd-c44863113ec8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71dbaa7b-5baa-45f9-aedf-96ca392eadda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c4fec-7c79-40c8-a7f1-b15a2ffe6e58",
        "cursor": {
          "ref": "bbd32996-f3ba-4f09-b8d8-3958ac1c8371",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "59e7b591-6e01-4c06-a1a1-3dc0195ace3d"
        },
        "item": {
          "id": "177c4fec-7c79-40c8-a7f1-b15a2ffe6e58",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0b37ee58-bc7c-46eb-87b4-a715bbd6b3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e062cb93-2d80-499f-806a-e468554eed05",
        "cursor": {
          "ref": "7eed56dc-9736-44fc-9a09-6b9001377e27",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8e089ec0-cfe9-4fec-beee-ad1007437d61"
        },
        "item": {
          "id": "e062cb93-2d80-499f-806a-e468554eed05",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "45eafc5e-3270-4f5f-8180-4ad64486df90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908e2714-c4fb-4651-8b00-9b53dfc0a5e1",
        "cursor": {
          "ref": "b76363ef-9eb6-4b81-8549-2f089d99e0e3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2f1c3dad-a4c0-44f0-a910-b131f6fbdd07"
        },
        "item": {
          "id": "908e2714-c4fb-4651-8b00-9b53dfc0a5e1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0385fc3a-6abf-4691-8866-193521b072bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d750a25-6984-486c-9602-ffee7743b406",
        "cursor": {
          "ref": "08094893-7f5b-4088-984d-800804407d72",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "813d98ae-8100-4c7b-811b-1b9dd81837cb"
        },
        "item": {
          "id": "4d750a25-6984-486c-9602-ffee7743b406",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "867a83f9-e0dd-4a32-85ac-d7c056d62ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74203a43-65ae-4e55-ba91-edc61a45c7a0",
        "cursor": {
          "ref": "588ccab7-ee75-4d44-a4d9-21fe57e98023",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "20f0f4aa-74a8-40e6-9fbd-7a46d0f6c15f"
        },
        "item": {
          "id": "74203a43-65ae-4e55-ba91-edc61a45c7a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85bda185-7221-44a1-a1db-ba4d08d73166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f0cea-1561-444e-aa1a-ca732cdc3fc5",
        "cursor": {
          "ref": "d1552db8-1bd2-4b87-a29e-4778c9289320",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7d9ac797-e2a5-4641-b20d-db15b15ba390"
        },
        "item": {
          "id": "5d5f0cea-1561-444e-aa1a-ca732cdc3fc5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e8a7520d-643e-4219-882b-f70cb867738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b0aeaa-2164-483b-914e-d0654cb18c20",
        "cursor": {
          "ref": "317984a1-0bc4-45a9-8fd3-a8bf82916fb7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d3ed5c86-e908-4021-99e7-875e338a772a"
        },
        "item": {
          "id": "16b0aeaa-2164-483b-914e-d0654cb18c20",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d31f5de0-455f-4d33-84aa-d5e7de94a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93966650-95a3-425e-8351-3597975ce7af",
        "cursor": {
          "ref": "86b74c27-50dd-42e6-9498-259b8547ef1d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a55eb7e0-4182-4597-99c4-7b084ae296d0"
        },
        "item": {
          "id": "93966650-95a3-425e-8351-3597975ce7af",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5884c493-057e-49e2-b68f-216bda69a9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10999ca-b127-4d62-9828-2b13ce11f815",
        "cursor": {
          "ref": "57f72d80-2b9d-4365-8795-25a98416cbab",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6c9eb64-3575-4d6f-8dce-6a5337db3058"
        },
        "item": {
          "id": "a10999ca-b127-4d62-9828-2b13ce11f815",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7bba4002-bea5-4b73-b36a-d491d04fa05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d085bc59-1bc9-432a-8c2e-58ff2e739b6e",
        "cursor": {
          "ref": "387ebe23-a0dd-48ca-9b35-e26ef67d7349",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cb9e5b2e-01f4-4676-aa69-3641b1a1c6a1"
        },
        "item": {
          "id": "d085bc59-1bc9-432a-8c2e-58ff2e739b6e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b10aad1f-d674-4fc4-9475-d5249bcc19ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54e8eb8-a237-4073-94d4-bd11c9675bc8",
        "cursor": {
          "ref": "70f2c991-f1c2-4286-b176-2e44f6ff576d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cd55426-4147-4c7d-9a0c-0b6fc2adb303"
        },
        "item": {
          "id": "d54e8eb8-a237-4073-94d4-bd11c9675bc8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "370fd4d3-d0d2-4071-a9ad-eeaf9c87a3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd81d057-7a45-4a68-a3b3-79e737fdfc50",
        "cursor": {
          "ref": "340355c6-2194-42be-ab6f-84bd6386c719",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "839a1f90-f910-493a-b9f0-256691555ddf"
        },
        "item": {
          "id": "dd81d057-7a45-4a68-a3b3-79e737fdfc50",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19705253-7fc3-46fc-9cb7-1da5be0255f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255336e5-a05a-4c3c-89d9-5b030fb8b56a",
        "cursor": {
          "ref": "7d679fd2-1b2c-4ca6-8f00-68c413ffc181",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4dc2ec5b-45c2-4b86-aef9-c6951e8d992b"
        },
        "item": {
          "id": "255336e5-a05a-4c3c-89d9-5b030fb8b56a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "610fbdc6-a8fa-48f3-ae0c-fbbf63d10fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cfa764-656b-4c18-94dc-8acb218f2b54",
        "cursor": {
          "ref": "f05d529a-1117-4df0-af6c-0a6418c0d8b4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9ba49f93-d75e-46fe-9e79-e4eb3dd0c9e1"
        },
        "item": {
          "id": "a3cfa764-656b-4c18-94dc-8acb218f2b54",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9790b624-429b-4d22-84ed-6e89459de4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57b842d-30c5-4794-bd25-323d2bc09982",
        "cursor": {
          "ref": "8fd8718f-0e4d-4281-87f7-921f148b4b3a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "46f842a0-5876-46dc-9c2d-0ec0271de269"
        },
        "item": {
          "id": "e57b842d-30c5-4794-bd25-323d2bc09982",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef9281e3-b8bc-41b5-bf77-78cf92b56445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0d8a8d-5175-4867-8a2c-4b301b733efa",
        "cursor": {
          "ref": "bc1b6f23-f175-4f25-89da-8d60b9dbe415",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5530bbf9-f514-4475-b09c-27f1ab53e418"
        },
        "item": {
          "id": "ef0d8a8d-5175-4867-8a2c-4b301b733efa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0e39cd6d-4c74-4512-97c1-50f85e0080aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255dfd7-e3a5-4b79-99c2-fdd372d90bd9",
        "cursor": {
          "ref": "7fc73c88-144d-425f-8500-b8b0804f722d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "915077b9-ef7e-4782-92fd-8e677d533485"
        },
        "item": {
          "id": "c255dfd7-e3a5-4b79-99c2-fdd372d90bd9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "baeef863-ba1e-4f26-a0a2-f63555d9f632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029542a2-aaac-4c30-a27b-1a4bf3a7c3ce",
        "cursor": {
          "ref": "6df67272-fef3-4b25-b63a-55db09257456",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f345d44-d790-4d15-923c-c7b2979fcd9a"
        },
        "item": {
          "id": "029542a2-aaac-4c30-a27b-1a4bf3a7c3ce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f013d967-21bb-4ec6-94a7-631f5431f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483dcada-32ef-409b-aa2c-6e6da825823c",
        "cursor": {
          "ref": "20fff16e-9e2b-4546-af6d-640a45a0e587",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aa7e5134-7df0-4d12-9be1-6b0bb5b2a4c8"
        },
        "item": {
          "id": "483dcada-32ef-409b-aa2c-6e6da825823c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2b6503f0-bf44-4d75-a991-17111fcf2a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b513bb2d-aeac-4004-b74b-293b4c6c214a",
        "cursor": {
          "ref": "c8df535d-d4e8-4551-b716-0b2dff2f5edd",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "66cc9e69-9bae-4507-b26b-071bda655e8f"
        },
        "item": {
          "id": "b513bb2d-aeac-4004-b74b-293b4c6c214a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "815871fe-53ea-4e7a-b954-4a26fec8f26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ac149d-d5c8-4b07-9548-362f88c02f63",
        "cursor": {
          "ref": "b6847ecb-a5ae-4af3-bd0a-07aa7ed70c8a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1586de02-8e13-40ee-bb36-70cd00a75d36"
        },
        "item": {
          "id": "06ac149d-d5c8-4b07-9548-362f88c02f63",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92341674-9009-42e7-a98b-4e73fc600519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4bf162-8cd8-49fb-a184-5b7289b2df32",
        "cursor": {
          "ref": "8d3c0dba-53d6-4116-bda0-50df6a44e6eb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a54c966e-fb7d-45ca-a656-22d6f39e0eff"
        },
        "item": {
          "id": "fd4bf162-8cd8-49fb-a184-5b7289b2df32",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "87f7c655-ae7e-4ef5-94b1-2e8d79d61894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e88ab40-f312-46e5-a519-d594fc21f824",
        "cursor": {
          "ref": "725d4315-7e56-4063-bb3a-a1968d0808a7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7dc33077-5c73-43f5-9fc4-0217caf7493e"
        },
        "item": {
          "id": "0e88ab40-f312-46e5-a519-d594fc21f824",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0476f1e7-343e-46dd-913a-ecbcad483b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10a5936-b4f0-41cb-a586-ea18af91dce3",
        "cursor": {
          "ref": "cb1e0eab-4d43-4197-ac56-c6ed4f4816be",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f5b91e84-9778-48bb-91a6-c3d0aff65db0"
        },
        "item": {
          "id": "b10a5936-b4f0-41cb-a586-ea18af91dce3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80935d67-bf93-4dae-b231-4aa24190d8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdd6588-0060-4185-bc6d-c03d4fa7d096",
        "cursor": {
          "ref": "6094add4-0d13-4fa3-b3ff-a35f1587d0a2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "716b3e51-193f-4e04-9501-de05b13bd1a8"
        },
        "item": {
          "id": "7fdd6588-0060-4185-bc6d-c03d4fa7d096",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bc334bf7-949c-4200-90a2-e475140ec35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da2bb85-20f0-430e-ac8a-514a8ec107df",
        "cursor": {
          "ref": "03d236ac-271c-4f1f-99c8-0b8b021e9d63",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f2512a8a-9f2f-4938-8a33-a75496a7e336"
        },
        "item": {
          "id": "7da2bb85-20f0-430e-ac8a-514a8ec107df",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "39b5117e-7a36-49b1-b559-c04980fde9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f4060b-6f0f-40f7-ad13-747693345600",
        "cursor": {
          "ref": "511d0a6a-2147-4597-ac62-195fcffcf1a6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b8d01c54-8082-4bd3-b5be-c91313699c6c"
        },
        "item": {
          "id": "26f4060b-6f0f-40f7-ad13-747693345600",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "73bc0d1e-09ad-4fb1-b34d-1a6e8277583f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7741ef7f-0e03-4470-959a-3d1a8dcc60cf",
        "cursor": {
          "ref": "e74b1a08-3df6-4189-8a18-5bf46d454d61",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6d1025f4-f28c-4c39-9551-3ca92643f972"
        },
        "item": {
          "id": "7741ef7f-0e03-4470-959a-3d1a8dcc60cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d73563f2-802a-47dd-a6bf-9b46f1e4130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbce7e5-108c-4d8e-a96a-332c5bdb09ba",
        "cursor": {
          "ref": "7eb2a7b4-4617-402f-a2f2-5ac6d6d81053",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fb1d2694-d9b9-4871-b17d-8a7447ebb98a"
        },
        "item": {
          "id": "7bbce7e5-108c-4d8e-a96a-332c5bdb09ba",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e93a4a26-2e2d-4a93-b48b-c8f9d6788c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f65bc95-0f6c-4a04-8d9d-a8029836921c",
        "cursor": {
          "ref": "16065533-290e-42fd-ad55-402a4938aa48",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13d433f9-9b57-4440-8a76-a9dfda10d304"
        },
        "item": {
          "id": "2f65bc95-0f6c-4a04-8d9d-a8029836921c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9a87d600-9efc-4994-a624-057483c40655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38effac-12ee-4e30-abf6-e9afdbeeb761",
        "cursor": {
          "ref": "a5c81d78-7a48-4135-a06f-1a48e8db10a5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2fe60d56-89aa-41b1-893e-0e4166805f7a"
        },
        "item": {
          "id": "a38effac-12ee-4e30-abf6-e9afdbeeb761",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc6e10d2-8b35-4bb3-91d9-b625f2b745dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f74be6e-98ae-4f9a-a9c5-4078d08d80d7",
        "cursor": {
          "ref": "1a21d806-f255-4759-adc1-620aabc47231",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d11bfb04-0400-47e0-9fd2-709268ec6b41"
        },
        "item": {
          "id": "7f74be6e-98ae-4f9a-a9c5-4078d08d80d7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0294637a-389f-43da-b3d7-9f69a8ca598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aad342-264c-4134-b96e-b515793f52cd",
        "cursor": {
          "ref": "92ec4f7e-296b-450d-b2c8-a57a8fb843f4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f74ba28d-54dc-4bcd-8fbe-619efc740f71"
        },
        "item": {
          "id": "03aad342-264c-4134-b96e-b515793f52cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "44a799e9-cad3-4e78-a707-8459f0511582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52e5da-2479-443a-a34b-0662397b0ec0",
        "cursor": {
          "ref": "f9d6de10-c2f9-4ce1-9668-fa3fc2d543b4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6b0fac7e-09be-42ec-83cd-b9686e612aea"
        },
        "item": {
          "id": "1f52e5da-2479-443a-a34b-0662397b0ec0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fe3a6615-9d4b-4847-a3dc-64665f0adcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce6a2c0-a748-4cea-9cb1-7afc26124659",
        "cursor": {
          "ref": "a03b85f1-9506-49a3-a756-33b604468ec3",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c0dfcb3e-cdfb-48ec-9733-5e0a49087aeb"
        },
        "item": {
          "id": "3ce6a2c0-a748-4cea-9cb1-7afc26124659",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0b3af459-815d-47f9-a4a7-0ac54b19eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2670a0-7f46-4a76-a3d4-dec9f588aeba",
        "cursor": {
          "ref": "79deffe1-52be-46a0-9ee1-24e6aa212f1e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7ff489dd-4bda-4e32-ba0f-7734bebb3c91"
        },
        "item": {
          "id": "5c2670a0-7f46-4a76-a3d4-dec9f588aeba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e5bbb2b1-a65f-4686-a8fe-1fed639f22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c993540-4191-455f-854e-59a58376e55c",
        "cursor": {
          "ref": "ae65db87-13e2-405c-899a-db7d85b4b8b1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "839c8fbd-9b86-4908-b5ee-e068d73cabc8"
        },
        "item": {
          "id": "9c993540-4191-455f-854e-59a58376e55c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d1fe87fb-73ed-4821-88ca-c63284650189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a0f488-ea7c-4a7d-84a7-bd10c2e9ef5f",
        "cursor": {
          "ref": "c8288b16-423f-4b98-84f8-4177df0631cb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "940e7b7e-3f42-457e-9c96-d17e6182a7bf"
        },
        "item": {
          "id": "03a0f488-ea7c-4a7d-84a7-bd10c2e9ef5f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7fb64bbe-05f7-4d6c-93b7-ecfae7ab0aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c3a2ac-0e9b-4dd9-852b-c6c97d2a5f44",
        "cursor": {
          "ref": "467f0174-28c1-4726-acc1-3813336e5c16",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f171ecd1-d836-41e7-89b6-86f87d33e252"
        },
        "item": {
          "id": "c6c3a2ac-0e9b-4dd9-852b-c6c97d2a5f44",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cfdd2515-9aaa-4dc1-b45e-ed7d0f1ea57b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee8b380-5d5b-4fa3-8c0c-760b94d50bbd",
        "cursor": {
          "ref": "1cf3126a-4457-4ef1-8b26-43311bad9bf3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "317231e8-97a2-42ed-9977-1c949f646f66"
        },
        "item": {
          "id": "cee8b380-5d5b-4fa3-8c0c-760b94d50bbd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "826972e5-e349-4a9c-a041-7cbae8f5735f",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "796ebc02-7814-4322-9896-84d0314ac11c",
        "cursor": {
          "ref": "c232e56f-4f76-4b2f-a912-38f3a9f613fc",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbf2b28a-29d6-46bd-b759-37959c59178e"
        },
        "item": {
          "id": "796ebc02-7814-4322-9896-84d0314ac11c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "727c3c02-5c52-47c7-b4f8-10290193fc5f",
          "status": "OK",
          "code": 200,
          "responseTime": 3241,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74c3122-9df8-48d1-bb0c-c42b924bd4ea",
        "cursor": {
          "ref": "193e4515-3d96-4f38-b453-ad885073d269",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d9e008fc-9013-4d4e-a63a-8ff73ce2a5e3"
        },
        "item": {
          "id": "f74c3122-9df8-48d1-bb0c-c42b924bd4ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e16e34f8-59f8-42d3-afce-391badda66af",
          "status": "OK",
          "code": 200,
          "responseTime": 3558,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "768a1f9e-0fb3-406c-be7d-526961c2dcfb",
        "cursor": {
          "ref": "517cb05b-02c5-4d0b-9ef4-ea0a11ff9ae1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "601bf9de-035d-4b02-8a00-cce6741676ce"
        },
        "item": {
          "id": "768a1f9e-0fb3-406c-be7d-526961c2dcfb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0bfd26be-8352-48ff-aaa5-5c84a9d69f0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768a1f9e-0fb3-406c-be7d-526961c2dcfb",
        "cursor": {
          "ref": "517cb05b-02c5-4d0b-9ef4-ea0a11ff9ae1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "601bf9de-035d-4b02-8a00-cce6741676ce"
        },
        "item": {
          "id": "768a1f9e-0fb3-406c-be7d-526961c2dcfb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0bfd26be-8352-48ff-aaa5-5c84a9d69f0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f802ff0d-34d4-4a87-ac2f-1b0c807f95d4",
        "cursor": {
          "ref": "b7b70242-9dd0-4159-97c4-3b509ad3cebe",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fb4c8892-a0ee-4535-84d0-df2d859baba6"
        },
        "item": {
          "id": "f802ff0d-34d4-4a87-ac2f-1b0c807f95d4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "db4dca30-d378-40cf-b2cc-048980275604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ba6a35-ef5d-4fc3-8e35-2ebaef450800",
        "cursor": {
          "ref": "afa924ee-5748-4588-9f56-12b3254b52d5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f77160c9-1542-4948-b7bf-0be511be9bfd"
        },
        "item": {
          "id": "e5ba6a35-ef5d-4fc3-8e35-2ebaef450800",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7339794b-c423-44fb-acbf-701edbf8b02d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}