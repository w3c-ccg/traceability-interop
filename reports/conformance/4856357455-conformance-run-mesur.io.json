{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b77ff06a-cd92-45d1-87af-30966f559b19",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80d6c229-5030-48d8-add8-7874d596f98b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "541a979c-75c5-49d6-afa6-51b0e44b4058",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8821a95c-5d3e-4a26-a7d4-85f71aa82b17"
                }
              }
            ]
          },
          {
            "id": "5e33696b-d377-4d16-bb65-2bdf0f5af8e2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eddecee0-eff6-4dca-9e13-e0498dbf29c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b5c0e1c-1ebc-4364-aff9-d70f7dd59612"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6fc93af3-e327-4c7e-bb44-12d73a348d45",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1d6213ea-5743-484d-ad56-9f73f4f4c381",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cecdc557-5960-4e37-8ca9-9d88f2364f65",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1856ab7-874b-4b0a-8179-545314004a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce2e02a2-dc25-4669-a88d-1fed6dccea7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ae5e6c2-ad53-445a-b754-b8d6c6f9cbf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04c0e779-fe94-473c-9918-67eb169a8e89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d6979b5-9a18-41e9-ab7d-c050fa27c695",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "814b5fb1-f6b7-4e57-862b-6fdc7c84f600"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0428460a-8dfd-4045-85d7-078cec999da1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0291be19-e39c-4f35-9da2-c9036a29a959"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aa5210c-f8a3-4275-89ca-3edbfed8c6f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc0ad979-10f1-4d68-889a-14b294432d17"
            }
          }
        ]
      },
      {
        "id": "ad1b218b-415c-4542-8b75-3c6bea11887e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9883e996-2e33-44aa-85a6-34aa2f2a3d27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ccb812e-8060-4701-85cd-4862844f09e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "708889d4-b569-4249-8913-a9fd7552c210",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88660b86-8a1b-407e-84cb-66e803267303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c7adf8c-7f4a-4787-8bc7-6f0cf52b1614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32028f28-69e4-4db3-a508-f5d19532afec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9df1b1-4cb7-4d6c-bae0-048173c67d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48f03851-cb93-4193-a963-c93ea06bb148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e57b85f-e874-4719-9678-178a91f69119",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c424ff6a-0f86-4b3f-983d-fbbaf15349eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40cf222a-3dc9-41d0-a8fd-38244473def8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abef010f-6547-4980-8162-01cfdad377d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e3883d2-1659-432c-bbc1-dcda90f9a313",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e981ef42-3e63-4d25-8512-e1c48257e2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f21c84e-94e6-4d59-b17a-1dc9c12c1330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2325d8a-c5e3-4586-b080-156de3873957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a67973-0dda-4e03-9c13-e4944a41ba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1989d8-78b1-499a-b8a9-caa8245971db",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee38a21-b569-4803-ad54-f5172d3db33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1845294-84d1-48e7-9e52-0003ba39e42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4dba22-fa88-4921-adad-e14435d4331c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5ab1e930-5e6a-4ada-a6ea-1e3f2871ee14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6ed0049-9027-47c8-9f74-5c4ce4c40f39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83d902fc-b1cb-49d4-ba8d-ac097bc97ccb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "288425f3-8f1e-41b1-8d31-a3b79c8f93df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e4bf879e-2cb2-43a5-b3ff-3101cccf1f82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c2c68f4-1536-4326-bb41-b8027096aa6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6a37ed07-fc23-4ad2-a7ab-b90d562048ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28c3c543-9086-40c0-8240-7562f45c8d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c24dd8d8-f7e8-45be-81c9-13483d04d850"
            }
          }
        ]
      },
      {
        "id": "d46caef9-99ca-47e6-84cd-a951fe974737",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3058b49f-5db3-4e1b-8532-47a5a269cc2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab81e1b1-f432-4959-bf70-5b34c6e84eaa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c6e7a58-5755-44ab-8414-aae315524cd4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dcf59d-cc57-4eb1-9b1d-3784966bdc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc44dc73-72ac-4e97-9a6a-0a7b5a19eafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976434ae-9d70-4775-8519-f8ef75e10470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "402e2b18-e576-4b27-b92e-803fc690abd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820a1e0a-ecdc-4d08-9ccb-8b96c7e487d8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8503a5-a79a-484e-890e-e23dabce4883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae348949-479c-44dc-9cbe-1c75b481c807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d0dd3-acd8-4583-b355-61f39eba1c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3edcef58-2ad0-437a-a717-c043e5962a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538854ae-eefb-4d0a-b808-770e41de3dc5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad9060-8d9b-423f-86d8-71c0b7e0035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b933629d-1dae-4cd0-9f8c-e63a3bd00c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40111be1-2cbc-48fb-93b6-4c447bab7fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa510b62-a7c4-4981-9c46-c49c5ebbecc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c02aa52-6a1f-43c6-b127-1cdabddb56ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee37b84-ec5e-41cf-b0ea-772b55d0abd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7025f8f4-c407-4a48-ba25-47500421e3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e07d15f-5fe8-4897-ab1d-d7d8e4173c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8e6d86-62a4-42cf-8947-fd3e8fd0b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6a87c3-6155-42ab-86cd-c0e5613fd6c9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ca4a81-ca37-4f91-83b6-5b977633a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbb477d-5014-490a-aa3c-8bcebd26ca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998e9737-3732-4aaa-bd77-a57dbe8dc8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7b2a145-51c8-487b-8931-a883866356e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14eeb69-9c88-45eb-b7ad-9572d896a219",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cfeb26-94da-4983-95bc-59207247b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38127c89-c0b1-4fed-b7ff-6cfe2fc4e3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4459fb-71ca-4bd9-aacf-9e2036b7e656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "121d1d75-fb3b-4e09-b30a-9cfe299008c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6058879-e18b-46e3-adc4-c804d62f9011",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660f9ec-0aec-415a-b39b-cad93e64d398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a900008b-b226-4fba-b8ea-36fab1c19aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf265e3-bb36-4064-ae44-50aa721a0c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7745e86b-2983-4897-8fca-64f825f7ae39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2923f903-1325-479d-af16-1e0f44d9df65",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232f4910-d534-443a-b21d-a188e033fa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642d9dc6-e506-4d3e-b92b-834f5ab0f55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612f3feb-bc08-4461-92d4-8552ac375fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61053c90-d3b2-4fe6-a00b-2ec018754eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b59c1e-6451-40b6-b644-7716424f2eb1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61487fd6-49b3-435f-b634-0d7edc83b617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856e0436-bcf1-4bbd-8319-658f1fb052d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30aaa7c-d086-4652-9f36-cb916a68fd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d361defe-759b-40d9-ae12-9e4f03add356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b38953-481c-451a-a1b0-3c434fb3de51",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7fb1f2-b471-4fc5-ac9d-51ec96ae4d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bb9c8f-8ecc-43db-a5fc-49447434f6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26197b9-4af1-49ad-83cb-b48bbeb9cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65b368de-1ae3-4532-9a43-8d3d5761843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e82f0b-58c5-459b-8499-79460f1bccea",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b54008-6656-4ca2-b8c8-6699e07255d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64128c3-939c-42a9-973c-943834c85bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6594a1-5875-49d2-a792-fa83c222614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b3e829a-a5bd-4fcf-8895-bd56a47ac822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1543ccb8-f564-4873-8ad2-594277bda06e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d37107-78ad-4afc-a844-de7cdb748eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2286ecf2-86ea-4e95-a51c-997268bb9a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083e55a7-c0f1-451d-ad69-92582abdb665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b003094d-7808-473f-ac6b-8b25f7f7d327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e79efb-91fa-4075-ab18-57403541b99b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12453eef-9c80-4fc6-b7e6-be24e324c363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacbf1bb-cd4f-4350-b5f6-6b29794b77ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83072da3-3206-4dbe-b0bb-b99875604df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11de465-e95d-4dcd-b319-e29490c825f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b132f0f0-b078-4dd6-bf1f-8915b4d08f41",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4170b02-5a71-4a65-85fa-b8201180589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba9820-0306-427d-b62b-da352cf699d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06996997-dc35-4898-9673-083c96b115c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95074f22-8b8f-48ab-af02-cc57c1890d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ff2c5f-41b4-4a0e-8b93-2ae9b497c0be",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6945fc50-ccd5-43d7-8138-befde56a7e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9782616a-af30-4cc0-a58f-d4802faa4858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f237332-b5f9-4d16-a572-964ccd9b08e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6882bd4d-e44b-4091-b0b0-c639b4dc1493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ee8ba3-3aea-4ca1-a657-e2504663451b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed6368-ffab-4a9b-a9d0-bf8c8bd8b929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c152785-99d7-4ef0-9d49-44717c2a4dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7eb724-bfd6-4f02-a9f4-85a59ce2f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c711253-c7d6-4d96-baf3-ba7d9b13dd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198d786-98bc-4359-8ef4-424e576b162a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9921a1-2d79-41c3-aef7-f05fd0ff8127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c86668-44aa-42f2-9f12-83be49e65a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b4fb6f-9448-4ab9-bc0e-d22a01f7226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "399c20df-6c82-439c-bff0-20f82a2fdc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556923ec-459a-4884-afec-ae28c115a18f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81289399-5059-4e78-a397-6ef75097f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa4548d-4252-410e-bd21-5b6776fa0d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7089c58-94c6-4d3b-b842-a1126526a343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeee330e-c5f6-4de8-a90e-150ea64c7c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e12b6c-cc9f-4491-80b2-22e886cb4004",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2693c58-f85e-4cec-80a5-607b7d7c5a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a574a25-3b26-4612-a506-e233650836e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f148e8-bbf9-4e52-b54f-7c47077e9999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4816ed-bc87-4360-a4bb-2e1b4069d4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d992535-f96c-4d39-8607-2365f9c696f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c04a49-6d9b-42a5-923a-e33cd38cdbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc22de4-ede3-40e6-bcf8-df8ccbc4c0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6678a1f-6414-4e91-b97f-cb60608131bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c6d477-4554-461e-8c2e-8453d1a4fb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf433528-fdaa-4fd3-8f94-c1232c7b7c68",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dc0f66-d0b2-41dd-a6da-466552eac856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea6fc5b-591f-48a1-abbd-c0bab702d3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574fb42d-ce0a-4a80-9183-3843610fe8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00bd67d-b859-46ff-9338-5dc320f2b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119c734e-fb02-402b-bff4-434bd0179725",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e9d77f-8ef2-49c0-a166-8e3ea618a940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ba99e6-8089-4ff8-9e48-16614515cd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafccba4-7cb6-46a6-a7a1-f30b864feb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d26e0f-c6f2-4513-a55b-a97be6a9713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4171ae7-247d-4557-9a1b-47e9423173d1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8bf18c-16ce-479d-b212-214dbfb38bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154f27f9-a227-4f36-ab10-1ceb40c77bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173a6a58-5802-40c9-a1e4-bc75ba344fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2cc4d2-cc17-4c70-8f34-af9a43d2a3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cf7425-75eb-4f48-8c33-02838669d811",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d47e12-d9a1-461b-bd70-c44d81858a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9889afd-97d7-424c-bd2b-1f2b1eaf9233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc6087c-8679-4630-8430-51ded8393058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e52c340d-0c60-44c3-93d6-7556a0aee2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7632b4e-2992-47ab-8ada-cee1dc68d587",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bafd60-7781-4954-887e-7dc5cac1aad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5328d520-ac49-4474-9990-f69cb5beed98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99600607-ad3f-4d7c-9494-acf7132e6d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9837238-3cee-4692-945e-a5302ebcb28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed386d2-aafe-4fdc-8304-f393097ee14b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86cad4-f01c-4a8d-b696-6525d6e37d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a34b7-eae9-4413-a059-ce272ebeaae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4298ad1f-3492-4041-ae76-45c6d9e272b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e22cc75-a1a1-48f0-8d01-6a14a20766a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fd5008-733e-400e-bd19-0cb2981ef5e2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4153afe5-1def-4b57-ad2c-31174a73d7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5da6ad-b5bb-4cde-887c-11a9103afdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dbb05a-f2d8-433b-8c3e-7712b91cd9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e376f6f-3aef-48a1-9e97-55d7b7ff3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5d6371-0e2a-41fd-926e-6c55ffc54f8f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da839e8e-d6ec-45af-be3e-ed82919c3e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0db0bc3-40d0-46c2-afd2-4b72fe91abdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba845d-338b-41d1-9881-b90135da7195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d94d2b1-6b10-4ba4-9a78-e090679f73de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5c3a41-559d-4617-bf74-9f05888d3c6d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa1392-736f-4ab4-a365-89a6cc0e5dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee70680-9c79-427e-9a17-5f28a4b1874d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8c76d6-f641-4b4d-a0b0-80402de4a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a58a6e-26fd-49ab-a0ca-5e5707eba978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6973b7ed-ca16-4ae1-9254-ac1f432ef750",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6d0801-860f-4199-a751-3ac40c95b841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0563b7dc-bd09-4d9e-9c9f-20292e1955eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b443170-fa9f-4f3a-9180-f7fd1d55956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedf5a0e-5cf1-40c3-9e3b-3335c459ee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdd045e-9972-4ae2-8f7f-c64e48a31bbf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1238612-2643-4379-9557-e5c0a2af2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edbb4c6-e15a-4cfc-9e9d-c25ea47aa7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a2a58c-f432-484d-81be-4ac0a15c70e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95be438-7a08-4345-9bc3-6a59f5d69a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4486a2-6985-4d28-8ab4-8966254e883b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11422b6-0706-4184-aa88-fd1e04009648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ca4327-e42e-416e-9d84-d6ccf31d5183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d41ac2-57b2-4e49-b2ca-ec794835e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3851ea-943e-4242-98a7-5841cbf70894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68cfbe9-023b-4b01-ab72-8e71accd610f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd127e9-fa84-4a71-8765-8d3527e4ec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8631de5c-fd6c-4a13-b818-154a7d422b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d50c5f4-1f9e-4fca-8fed-da9387dcf682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19099d16-6563-4167-8002-0130ec07b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fdf02d-af64-495a-946e-2366eaffd837",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dabfd8a-cb72-4f14-bf4e-7e03d75aa2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42249e84-8880-42bd-9b12-0db1ad7a9fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0093f7-42e5-488e-bcd4-4972cc8886bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddbb806-7bbc-411e-9bd4-9abf01e8c709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced4cd42-8327-46bb-a178-d20838f83d3c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafd000e-d91a-43ed-85df-e5529f4b78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888debed-2e36-46ec-87dd-bf67f76988cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eea5fc-2a3e-4840-ba56-491982ff12f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cc111371-44d6-4c4d-b6b0-514bc847f8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bde0141-fca0-4254-b660-bedb28f2b63c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d751d-5ae0-4b69-bd21-9973e0a720ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81fa2c49-311e-4690-8452-3ee524350fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bbb798-5313-46c3-b305-fdb78406ad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "173bc9b4-dd6b-447a-a8e4-27fafafc280d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb62cbf6-e57f-467f-891a-0fee4fff6794",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10b926b-126c-4e8d-99a3-1174ac8facc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b76fcd8-2f00-4358-920a-4159508affd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e79b38-468f-461c-90c6-e9eff708f72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cca9685-fde7-4ac0-b54a-f6d6c464958b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5fa73e-c721-4f4d-bce9-44216c8ed2b7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3849e4-2066-49fc-8c06-60aa39b45027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7b6ac5-6f57-40a5-b124-4eeec157169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1882db35-024c-46c3-bd7f-6cebe0e0a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b638dfa8-6f5c-451a-a3b0-2e28c99bc44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f13158e-7991-484c-a958-8a3b2a7e397c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9789e76-65e7-4df1-aeaa-191fc1a0f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d283a9-5b37-47a6-a11d-c2063956d62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e800ef-693c-4717-94cc-0d8ddd2d75ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f918d0f0-9cf9-4c90-ac55-ac07289c748f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1df522-766a-48bf-8534-5420bf872b7f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d06f5c-2e36-46dd-a5bc-22d37a74e19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee844c58-fc38-4e70-bf49-c512692ec936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7607b-e34d-4231-bbea-34e8acc29a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cda7765-10fb-42bc-b6cd-d6d8580473b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c05709-6fa4-4163-af3f-6d188c2d11c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1293853-faec-4f9d-abd4-ea59e7a1e55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99accf8d-d43e-4dae-b7fe-9f6b3f1663ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96034003-f9fb-4ba3-af7f-ca44edf73d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c23f829-3f75-406a-985d-f7aafe8c8078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26454404-a2ce-4b38-a7fc-6858fac0bf15",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0744f86e-2516-40f8-9f8b-3ca5df960d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99e1d41-9048-429b-b45d-82e53c697a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d78e421-00f2-4978-a715-792c0ceebbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4b2511-5ee6-46ef-9f5b-876904a0e351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f0393b-44d5-483d-a6f0-4d30ba489965",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb981c5c-5218-46b1-b0ca-2589e5447b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0781dfa8-2696-42bc-acc8-ac6ac1719401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bf57e5-3eb1-4c76-96ee-40eb615db20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fde345-b3b0-41d9-a07e-3c74412b81ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53b1748-addc-4836-ac7e-dea4c3bc43a1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295d1eb-122a-41ee-8dba-21c8076f51ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ff2a65-138d-4100-9dfe-69b18d98ed00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ae19c8-5cf5-4fd4-b730-2a1035c96324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb8b64c-631b-4ef4-bcec-4547e0fa3495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41e4b19-e883-45d0-a73a-4ad11e3ea999",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a3e16a-9c9c-493e-9807-c3a1590d17ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ea4d0f-41fe-4d01-aefc-bbdabe713f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44dc6fc-51d8-4076-876f-075b70d5a422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88c500b-9e26-467d-843d-901281cc0bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a527429-b83c-4f28-b41b-ab65f18c086f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793f4aa3-65e2-4352-9bf1-9dc1a804b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ff5319-b129-46aa-95fa-73ed3228c8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811f02fc-76d2-44c6-9529-25de75f1abbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "441c8b7a-81ce-4602-bedb-eb3aa972cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab84bb7d-4313-4361-b089-7c563f6fb815",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c719d71-dffa-497c-ab17-e6b1e12a117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13331ed5-6ac3-4f6d-8cf4-389cb88a1b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529a89c-e993-4f6b-8b86-bb693d8bf66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bc2f52-9c0a-4aba-bd96-6375d9f19dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e0c9bf-9444-4a4e-8ccd-3d56159a2d84",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f409ef-00d2-494d-834e-5826343cf45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e25bfa-0514-4042-955c-85d077066229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0752e8-dfae-4f61-af81-9b56ea26f5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f500bf-52c5-419b-8681-8bda28676c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c6838-f636-43b8-9447-be75e498d0bb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b91c750-c77e-45c3-9c9e-3c79617fe622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1574ff-def1-4ec3-90c9-cf4dd9407392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bc0d58-3a5e-402f-bc43-41cccf6157c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b6e8ed-f6db-47b8-97dc-94a8e116ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b4667-8b9d-4dcf-be87-0558b20f4e08",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed42da9-7120-4493-a333-3af5e4f4093c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefe177b-0b99-4cac-b465-102322bfec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9749f75-0145-46ce-bc29-685def2c0352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa2cad0-a1c3-48dd-8bdd-ab64bd0a0a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dcdd7c-1cd3-419e-9a52-14ff220b7156",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfb9b25-9a14-4d34-933b-3b37c4119701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b70e2-cdd0-4729-997c-41687d219912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1149664-4a02-4bfa-8f56-47c1330fc6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c439fdd-ff31-44f5-93a1-2a2ea905d7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422bdbda-7e55-44f3-b6e3-5199cd76f90a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d82b8-39b7-433b-906b-83d90012beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aac752-e1c0-4a8a-8f2b-509993f95dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79db4371-2638-4ddf-acef-50af52f0b49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f87fe044-ac2a-4ecc-8dc0-1d937e2858c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45e82b8-6f00-4b78-8288-7ec5d8d8de0c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d5c701-8815-49f2-9151-691212052124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d93d7e6-2cd8-41ea-b568-fe827b2396e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7121b8a1-b092-47bd-8d2a-835dfd599183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cda67ce-ad20-449a-86a3-05b130084b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4373820b-5d36-4c96-b88a-d38f7ee04341",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff57616b-ed41-498d-b9f9-d6c33cba5061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903311f3-19f0-408c-8af7-6ac04eb30ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285d5223-afa8-4519-8549-1186ea61f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06ae0af-4d6b-4a0c-b5da-c470bbe86019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe52d93-c6da-4684-ba86-772737296b6c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5fc6b9-48e9-4e8c-a7ff-cc533a2fa554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5505b248-a36a-4592-88dd-ac1ae8c6d695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadbf79e-e12d-410a-aab9-a00ae28a5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73830321-ce86-4a56-b52d-dc7f6366d45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cea042e-c370-4a82-ba15-3aeeb93e87b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aee5aa-3862-4063-92ec-bc25141df43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55212477-0041-4db7-ab8c-05f9a77943d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1469189-d61b-4e46-ae67-01fbec4d4f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "18375194-3160-4c66-8f73-ce029959caec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a13a1d-185c-4f23-b849-f3d9021a3ca0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901064a5-20d2-4799-9a63-098b88eb0a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3c2e5f-9b08-45ee-b481-e0a342bb6d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d396d75-6bed-46e2-a1c2-80922a4a2bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03de4da3-20bc-4477-b6ff-211109a7d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bcf8b6-55e5-40f2-bc84-2002fbd14a8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7214dd03-fd2b-4bc8-9c8b-c852a5f6629a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a6d0da-c293-4da3-b6d1-c358a1b98d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdace551-cceb-48a3-98e2-5e5b84334485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3663f07-9a01-4b34-bd6f-0f7f0a535944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df531f-3a4a-4449-b50e-a2046a51de8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40485700-5cf8-444d-b362-8b36efc8ed4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f23ab10-f05f-4be2-943e-98ce0db6da94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119d0be2-3e5b-4be1-8322-44c745ffc12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d88b85bf-9c84-44d3-9c4b-b64c721f7678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3cd290-f041-4c32-b8de-94b3b67680aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b9a0f-e80b-4723-8d51-0ac659fbfc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10855825-7f63-4800-8ded-cf53c5d2682d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d117c18e-719a-4c43-8118-4c6793ace4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e0258e-27b8-4940-9979-c6bea5003252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3008e7a5-9b6e-4162-a225-7986e9c7f1fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ed4caa-f11b-4680-af92-20ad6e939b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312dc010-871d-437e-a071-a9fea8490731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d395ca-cd87-4c68-b175-b6ba7e554487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecf8e23-9d48-43cb-a0aa-b98570d11db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6294b6-45c9-4d83-8b7e-e81d048a0e8d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022d393-d597-49b7-b661-82433fbfd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0339b7-89c5-4282-aafa-419537b0eaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb9cfa3-fb99-4836-be63-4328e94ac4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce93dc8-3622-469a-b9dc-dc6fae2b4e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82086c1b-a46e-49be-9850-3c10ce552de2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bd520b-acaa-4c8f-ad79-240a521ea212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa653e97-17d8-43af-b69b-8f790797a2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a3b1e8-eaee-4dab-9afe-d68a5d157812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78cda25c-97f4-4bc4-bdcf-9a4fb95f4118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c181827-9b8a-4d30-ab2f-94f1907646d3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcc6c41-fb6f-4df6-ac44-1accb2eaf351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8533e6-17ee-426e-8260-ddb1b175c526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93baa6ab-ee97-4532-83f5-7ce03e3e1c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd52eb8-2475-419d-b492-7315ff4c510e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eea8a55-6cf7-4a02-85d8-978c49c39873",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a75dae-f9e8-4f01-a0ea-98090a6e959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4c1971-7c26-4e8b-a4a9-e5a130ee2754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a9e596-ff3d-4a96-bedc-ea5285c64c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed34fcf-1e6a-4297-8b21-a8796e81d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d906b810-fe45-4925-be39-0ee127823bc3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd363e7-eab5-46b5-9769-417e8e4b9405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2af04d-db4d-44a7-a565-47c57eb10544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a259ee-1f17-4823-8a85-46bc63e2b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc8a038-ddad-4a5c-b1e2-ebbbe8d82cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9385af43-e9bf-457e-ba88-4594563e99d6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f571a1-9e13-4340-ac50-717f2247170f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a150980-e47c-4251-9602-19681f20bdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fbf5c0-0d08-426c-ba41-2c5eb6456007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac973f7a-cc85-4900-b2a3-772dbf67936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88ae545-bb95-4fb1-9acf-624996ed3bcb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23d02b8-027c-4e2f-a076-1ce776982e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ae824a-b1d3-444e-a1ef-d120561c8ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250d287e-36db-48f6-aae6-597eb4542fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52b3c0c-5a98-47ea-9d59-91b2a8a8f97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c778cbfb-b095-452c-a59e-b1cd2f55c102",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e17bb91-74a8-476e-a20e-ee23cedddf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d28ea2e-3132-470e-9b98-be0fcf2ed65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14462277-8056-469e-9b66-11bf164d62f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11775aaf-3101-43d3-9c1c-c11dc792fb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1f5862-6c07-4998-90d3-88961da6b344",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3dd1bc-082f-4ab7-9baf-3b0c48c72de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e853a2-b144-426e-aea6-e4b36a849642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a73c4d-98f0-4856-baa2-223365b09b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e97d5cef-5f41-40c8-9eb1-2c79c3a3f5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df936801-be0e-483c-ba61-6b9bdd4f37fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56bee5d-1d78-49ac-b03c-be71eb1c4d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde60164-4bf2-46ff-9dbb-b2a377107888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983b5dcb-9f34-41cb-a168-38686ceb16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b977646a-a79a-4b54-b24f-11e4c46c7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1541132-1951-42c9-85be-336e1005b27e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7bb9c-5d97-4c55-a590-43b8a58b6ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd0033b-fbdc-433b-99b4-e88ab2e6e1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa0c33c-62a9-49fb-9ccc-8aa2c7b15c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d59914-319a-4732-b9bf-46ae1e5956b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9c5ead-0ba5-4006-bf3a-80c14d716679",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7df1c8-e081-4243-8b3e-912de0aea90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd16480-ed44-403b-9115-834b0bf6a767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29f359-9ca4-427b-bf26-ed3de929bc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89dc8f7a-5706-4d92-bdbe-8d81611995b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbbd0c8-c0d0-4a2a-b1a7-cfdac41613b5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56750e3-7813-4610-9128-be1a711005fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edd02d6-5498-4ed2-a3a9-dfd39fc8f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b566325-3510-4868-8c26-e079a3990264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a89bb7ab-3243-44d1-abea-be72588d10eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77446f1e-a970-4892-8f89-bbc69dad15c2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3753dc-1203-4d2c-adcf-d63e7fdd5e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88806f9-4d2f-42b6-a36d-317609ff78b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dacafc-b8a7-4c17-b50a-70028564bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1042450-bb68-4dd2-8ce7-8173afb8dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aae0fa8-a3cb-4272-8509-991d08ef0b6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0435b22a-03ea-472f-b887-6a369f5d859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f904043-a982-4889-bb08-624fb2e4efc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feac273c-aaab-4727-a29d-b62b709aae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5099cad4-51e6-4b73-958c-da178b2d8470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4ea19-f5c7-46f3-bc76-51695af4756c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98a2ce1-ca80-449e-a076-61a8c38af287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60996e57-26c1-4d16-868a-2f0240c97ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8caafc7-7547-47aa-bc9f-ecb168a8fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e215eb9c-1f66-4997-ad56-00b62d5e80f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f75e3c-9c24-4bb8-95eb-6f505025051c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179132c-175c-4b6b-9a7a-15ffdc321554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1e5357-16d7-4594-877e-3e8692c21a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0026cd-ad01-498b-9542-999552d297c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe96b23-9593-432f-91a4-157455cb056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580eca08-d7a9-4626-804d-cab37ec1cad4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580571bb-be7e-4d48-bc6b-a82e385decad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed949e3-27c8-462d-90d6-1858d26ddd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27f1450-8c21-4d55-a6a1-9821cf53120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcecc63-210b-4db4-b435-c5296f8447ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f15dcf-4928-4948-a8ad-770382156220",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de06c62b-3ae6-4f03-9626-a1979cabd172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a087699-6a65-4fbb-8269-d4c2be0aab50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd1b6d7-7ca5-48f4-9878-8fc427724c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4584b089-37cc-4327-833b-2384d2d56e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848b4b8f-824c-4948-9a46-0c734f3e7409",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad3f5a-0d74-401f-8e13-df6ed411c987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fd9721-105e-4bc9-a8e6-18f94f6eeee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1155fa90-dccd-46c0-8920-b264ddd136da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac155cf-621d-482c-aeb9-8748d3879d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c2f4ef-7cd3-48cd-8cd4-58b696fe3e3a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef560770-8931-4f78-a210-b89e02d258ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f159a9-df32-4dc6-9d8f-53cb0c8ff395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c0e8a5-6e3c-4085-ad9a-a2cbed7d5589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce37cde6-ecd5-456b-8e61-bac6304e95ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde1b298-1c6f-4d1c-99d8-1f8af7a7e7f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a906f4-12ef-48af-8faa-634c2ebcb3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fe8c26-a907-434d-81f1-780f97cf3672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a8e173-8044-405b-95eb-9af4678d3fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd69b47-ee95-4405-8464-303137fde3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e974c8-39f3-48b6-9646-e34f8645eb8f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1430fb67-c131-4f39-aded-85f68dde69be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0454c37-d4e8-47f9-9baa-4c1f50863fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123042e2-8b2e-41b1-912e-cec314b28cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ef2119-2539-4fd9-98c0-cb796d3007cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983bf07-fd03-4ffc-990b-846721211346",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147f0da8-65ab-4f7d-acfd-9888f2c10060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fb650e-6fb4-428b-bd8e-2a1bc77a92cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ce905c-4f91-4ec4-ab4d-7dfe6319d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95b19342-0781-46e1-96a6-71dbdb44c332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aec26b-288d-439a-bae1-c8ff81f935f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f52583-8ffb-4d98-b8b4-b65543b53e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6843397f-37df-4e82-a7dd-48674c377f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a16b79-3050-41c3-8e1e-4d38e9f01b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af996595-4abd-4a59-8316-ea7463a68436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fb2dee-5cd5-4815-904c-cb11a9450e44",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408d1b2e-1f57-4596-a0c9-9d62f173ff3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc2f60-c743-43a9-895c-0f09aac71210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed85f55-2084-4631-83df-a2ca1939737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b94d89-df1e-4f1c-a39f-f13be93e5d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113fa80d-08da-4b92-a02a-d8ced4032422",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06895f55-5a46-414d-930b-dca2a1dad678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841e3e6d-dd76-4c3e-9b72-48499f9bac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac909c46-4cd4-441b-90bf-d4792273faa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc5d2d4-b6b2-47dc-ba74-d5184477947a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792561a2-815a-45be-8234-f09ee848ee9d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac48664b-2b81-4e10-9b8f-e1550e2fac35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ae1871-ffbd-4043-bc18-7d30d2c0f000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4427c3-136a-44c5-8215-4352be19e23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db74ba30-4d47-4325-9de5-69aa5dc31a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e4b140-1fd3-4ecf-829c-0652bdc9956c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ade5b2-8687-43de-a9bd-fd71ab42572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd53d88-8e6d-495d-a665-db56eb8931a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54f69b5-e3a2-4fc3-a24c-913cf017720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b63c07e3-63a4-4c9c-b751-e4cb49de81eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92393583-f8fa-40ac-8cef-a56e60e74e30",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e89bea-4b3c-4df8-8df0-8cd52b2c2811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cec26b4-1832-4dfb-a10a-61e28549277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c62de3-f15a-4f90-a6b7-3b969bb466c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65efdcec-445d-466d-be1f-ec3df7949b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a65e4-e66c-491e-958f-2453a7dde43d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf08f7c-30f0-4e73-953e-4b93a401e244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a9aac487-39e6-4475-92f7-ccfee6affb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4a25bf-dfe3-47e2-9ab9-8a3790a3652f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc840992-9ddc-41c7-bfc1-19d294e0bf96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2102db7-4d73-4b98-8711-4009a23de021",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c77644c5-bc4f-4480-9063-64e3d08b30cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a385946c-6f10-4289-bb14-16a985da9881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3330ae6-52b6-4e9a-80c7-701f87fcf18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202a8df8-6d91-483c-883c-7118f8856777",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ce5ac5-3b2e-42aa-a82c-9761b0f62caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c9e76f-51c4-4ba8-bab5-d739fe90333b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3ca36-4c8f-4680-9bfc-5fe7d194a59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9617cd7-c512-4b11-a4e9-cd2dc1c5168b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4f0af-628f-498d-9ca0-756d78b48863",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee915cb5-eb3e-40f5-be13-364ec050d01e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9761200-f75f-4204-b58a-f2f4af0c79b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "379d563b-bcb8-4d60-b569-a5c0b7912bf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e0166c2-7922-4649-926e-cbabd80e55ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "565ce1f3-20de-40a3-bc9f-8939cdedbaa7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c164014-c158-4f19-ae61-62e66883a362",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5968b0ac-5e20-468b-a2c8-33b1577e3383"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f947caa5-a546-4a6d-be47-8a26ab6a5d4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d73a6c5-e0bc-435a-9a84-59cdb27ffcc3"
                }
              }
            ]
          },
          {
            "id": "05ede775-cded-44a5-ab35-d0d7c9d52373",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5326243-1fe9-436f-8e1b-4c70c48b7404",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45da6c18-2543-4d0a-b8e3-770786cc6461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa14bc9a-1e52-4cfa-aa92-9ca04e379668"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "698d3094-7314-4394-ac4f-7d17fd352325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "750f123f-0802-4c88-8c83-3219280dfda9"
                    }
                  }
                ]
              },
              {
                "id": "85094a60-14dd-4896-a37e-ff69584b6853",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16e4185e-9258-4f06-8d63-bcaa8d30d677",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e59e062f-0f7f-4b6e-b63d-32f3f65cbb23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "424869d9-b34b-4d0c-84ce-ff3b1afd39e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a745bc3-27bf-450b-b097-cbf479bec60e"
                    }
                  }
                ]
              },
              {
                "id": "ab8d2390-a57d-4228-a3b9-c27d94c03060",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6e21fdc-ce0f-4d86-a730-f39ad2a0950f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "098d6bfb-2271-4546-b759-af83ee1f70b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71197c7a-822d-487d-97fe-8107fd517368",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9f92f60-49ee-4092-b569-3e3a53636e58"
                    }
                  }
                ]
              },
              {
                "id": "76689100-b527-4108-b721-449fc94d1b6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f29b2c0-d099-4b55-90a3-816628d1e275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b845c13c-63af-4eba-9e34-dcad309d5e7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "997af712-a5c8-47d9-9202-67db89a8a232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "73ef77dd-6965-4efc-82b0-a7c4b20a2d1a"
                    }
                  }
                ]
              },
              {
                "id": "25ab038b-4c52-4ece-b488-86f8f0cd8edb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91197383-1b4a-46a6-a94a-e620421c50a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "569d5d4a-8d44-4950-9975-c68a25a8dc85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c6b7159-f698-4fef-918f-7b45b2a01bc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0f4bf282-5160-4241-b465-f4047c17daf0"
                    }
                  }
                ]
              },
              {
                "id": "f7f28f45-85a0-4ecb-a687-cc5c9754d602",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce2495ef-61d9-4bae-b3e5-9b8a2279a5df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49cce294-479a-4d74-a4ad-e1b8c3fbb96e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "837e32f1-ef76-4cd4-bb17-72ac2bf323e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0b0ba38-9b1e-4226-afb9-192b1bc16db5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8f1d045-bd59-438c-9fee-3aa30d10be82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13594cf7-a76f-44f0-aee3-2591eb43ca17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "272381d7-906a-4611-ba5c-e5b7197a2d49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba7e1ce9-dbbc-4af2-883d-bb992bf9864e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1baf19d7-19f6-44a6-a3eb-2849ceec8826",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3b316fbc-571c-430e-b4d8-468403174c98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f55dd4c8-5a20-4afc-96d6-8c458418558d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "977d4341-f130-43e0-a0be-ded9a1b26b31"
            }
          }
        ]
      },
      {
        "id": "7ea9f5f1-5afc-4b2d-88be-bc0fded959f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "75d9473f-c6c0-47ec-bbfd-80e4d0d7ae31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d27c4284-c553-4f4e-97af-a98c0502f14f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "847295df-2a76-4e33-b526-5548ebc372e1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967f9dc9-6c31-42f1-8f4e-1dbb8bf9c9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e706d0-e2b9-40e0-8e56-f684e484b283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a76a07a-2e8b-4063-9b83-605a482297a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e2d2a6-49a8-4138-9887-a15dc325d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079faf3b-3286-43d4-a27c-d888a431dec2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a516f572-30e2-4288-bdb4-4838adfa1855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9055eaa8-89f8-4b82-9ed7-ea76abcf4e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70d2b50-fa75-42ec-8dee-af3cf9ccee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ed31a8-5a32-443e-9c53-29721cd57852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c83e7-6e77-4a40-a23a-a00ec339f43d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c94581-96b2-46f9-8704-3872282a643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f040d2f0-fab8-4a95-8243-f2a87e156a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b703da86-f1bd-4a75-8b4a-bca96440906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c791c0-fe02-463e-a5f5-2a229df3e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ddee8-5e15-47e8-9265-d8c28fa2f81d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b27a34-5fa5-470b-8200-f4898b5acb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7763d10f-8137-40e0-99d2-9d86b3fa1def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a46212-f4c6-49fb-9d58-008596e3dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc75e8f3-59fb-47cf-97d5-dc5b77f0121f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a483099f-7478-4a45-aa98-941e4b23862c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90313925-9c3a-447b-a00b-440e29f4dd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd8a2e6-0e3b-4df3-8440-b30bbbaefbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c66b8ee-0513-4587-a276-58552d2fa9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d11aa4-5842-4e90-97d9-d54501320d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f2fd90-1d58-4f39-961a-8135d1cb319a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff326594-39d1-49fb-80c8-1fc57d39dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b987cde-629d-4a86-9b80-f86954b95c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a3c462-0f4b-44e9-9e1a-59dd127f5257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9206b4-2b34-4548-bc67-67c58d0a4d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fce7c33-0baa-408d-867f-754e5dcc1fe2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd22f33-0104-4355-abaa-f3fa035518e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b248376f-8237-49eb-ab6d-959f8991ffc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d064c3c-201c-471c-9317-6d0c6ed456a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "74db3fe0-0be3-46fa-a437-fe4b21c03898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e28c59-fb32-4117-a8f2-59b74b3f16c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e9bfad-bfbf-4c5c-9493-85937fb8ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411a0a42-c4bb-4320-8b4f-00167cf6e674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a59d8b-a03c-46a6-9760-83f5d1877ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51e91b1-5648-43ab-b466-ebdd235b0fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5e80d-cf71-4167-aefc-b73570ad89fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aaaa3c-18e3-4a3f-a2f7-3bf097e3ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8684fac9-b21b-487f-8a30-0fb1de92a188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0ae034-879b-4fb7-8783-d96f976424ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c4845e-33b8-4726-9b28-08456c4ecd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d848897-607d-43c3-9f6a-c983b1a9dc1a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbfdd74-1286-479f-a17c-c3e4b23ea246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15edbcb-3202-4114-839a-059d8237bfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be22f2d-2021-42fd-9f31-825075eb318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2552f3d-e42b-416b-9ab6-d1d0c4c8eb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a6206e-17b4-48b6-adaf-1bebfedb2fb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd1233d-9b9f-4bc2-8a62-a2a9363c27dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12df9f25-6351-49be-997b-d5b6d9abdcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad3f6a-69d1-42ee-9984-feebaa1f20b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6164756c-3de5-40aa-a824-37a790c5d680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434bc007-9c1a-4beb-bb56-abd1de831d29",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e72c985-e5c3-4dd3-9f3d-ca53ec2e4996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f5f569-6fa6-48a9-a279-b3ee997d6753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e50719-f90a-4b51-b7b8-e6e47cbf25c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4e63cb-7232-4f9e-a9fb-502d45079a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ba53ff-a4ae-4182-9dfb-293d69adbe15",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c228c4-0cd6-4fc9-a0a9-84abcd769200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adebfa5-7181-4713-ab5b-a3875cb85562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0a0b2-213c-4993-a0cc-fd6eef2c830b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b85be44-5c46-4292-af80-3aed36414d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21265194-fd73-4a2e-8aa4-2b3b58f2881d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c59c6d-29f6-4be3-a4b7-86daeac0553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bae2b4d-43bf-4a44-87cc-c40a67006b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceece24-49a3-485e-8d57-253c29508576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b520ce-ec99-4b07-a776-bd4aac9b7248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56a5620-8775-48f4-ad9e-1e21fe3374f3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af895ce-b341-4a03-8438-ba531d9ef3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ccf8b5-f8d8-45ea-9895-ea0dbc5079a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85436c4-e4bc-4ccb-b4e8-94ac4f061ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83e3ac3-d37b-4ad7-b054-18217de6564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b167d2-c7ad-4a3e-b51d-8c730977a536",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e02504c-db04-45d7-8aec-0ee8e8c769a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0180a14-f48a-47e7-8484-bb36ef319b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ecfe8e-a538-40be-bacd-4bb25b8ca455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad89594-ede2-4c8e-9394-bba04410ca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae857ed6-3dc9-4b6e-8a79-1ea189a9387d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781bc494-bfd9-4349-9614-648744e59e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3eaa4c-20a1-4107-b229-a792377597eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ac212-c197-4ea9-9ffc-cd51e8675cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "619289d6-c940-43dc-99f0-5caaee483f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1c716c-bb9b-43a7-b63e-73b0dcdc64b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7040481b-fe9e-4875-b1af-14f5fec5a426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24066a1-be1d-4040-8330-61449146732c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47959d0d-405a-4f3a-a080-0ad9f425f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea759e08-93e1-4375-b60f-cc9d238de3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bac790-59d0-46e0-9407-ffe8bab9d0d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f80a8a1-3834-4d0c-bfba-90890426b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49a0fea-2357-4c53-b7df-ec42c0921e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8011a8b6-df4a-4f3d-a89f-009c44d683f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1adb66-ecf5-408f-aaec-da8d7e7534c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b775ed-309e-42df-a9bd-b719efa3bc38",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecda8267-a2a1-4069-85c9-65eb13d12d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a138bf9d-1105-4c3c-9479-ae540afa90a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4403838c-915d-4335-896e-aa46716faa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4be149b-546f-4883-9cb2-ee854fee6698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cf9caa-4011-4941-a210-333f22d04550",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f5611a-d126-41ed-a865-c576b61938e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d377e12c-26a5-48d8-9852-54760231a15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836810dd-d5f2-445b-9062-2d5af1aabbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93442896-7cd8-4db0-b619-a4c5c01e73af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224a026f-eb33-4522-b38a-4f9a6f2305af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80897ed3-dac2-4820-84aa-7d17739c93f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d78c6e0-9a8b-4727-a475-523ec18c3933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e8fe4e-4119-4433-87fb-c6ab72bfee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad4fc03-5c09-4914-ac1d-f7c9984aa9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1762e2fc-b72d-4d90-b9c0-033c1ca5f401",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6d5aa6-8d50-4492-9b6f-f3fc013e5bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bae518-92a5-4e01-99f5-06b27956c144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1746bf0d-859a-4a0e-ac3f-2169b0d9d672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7146b4-a6a4-4eaa-81a7-e4c044c29356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6365bd95-769e-4e6c-8dab-ebea1af997af",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e645e-de44-4e10-a3b8-c56f94a02c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595c3cb-8d56-49de-95a4-36496fa29daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c665fc-559b-46e2-92ec-56ee058af702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6c19d2-ac91-4d91-8ec7-9ebc9168e841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57e8003-e798-4082-adff-130f4c0b7ffe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b981efc-2315-442c-8116-0292903eec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee3309e-8dd6-4cf9-90d1-e83879fdd2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bf71d2-b994-4542-8e87-1b9f2e669023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58deea4e-5a35-414c-a04c-9c529454f5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8074a9d3-5bb1-402f-95d6-52a733b98e84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b139549a-dd86-4c93-9b18-2d363d70dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadafebd-bb4b-49e0-a913-087b4442c3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47409619-d4ee-4862-b2d0-d616aa65a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e252d9a6-ab2c-450e-8284-317e258bc08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d13dd45-f5dd-4177-9801-6f7152185a67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e06062-964e-4a6c-b1de-3568f6e16647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c4aec3-1241-45f8-88bf-025dc0db8040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37781882-c6a9-43b4-90bf-849f5ce80878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa367552-ce3c-467f-82a2-eb77da26a456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569dfdd-0bde-4f34-b2ae-e14791e6ddb4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3942e787-776e-4330-b505-5413387f302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c01798-768d-4726-a56e-92a8ac23f3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2761f317-8a41-44fc-800d-29fee5d233b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc984a6-7d62-437b-a6dd-8815f2411165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c90989-c85b-429b-987d-6ebc6cb48186",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794bcca0-03b2-48d8-94e6-75b69ae9538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4f9bf9-5c96-463f-bc6e-bfa2ac928ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbc0a77-dc36-4527-ac9d-9964acafc250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b04811-3f8a-42d6-8474-d7bbb4249599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d3d01-73d0-4e5a-82bd-8eec59425560",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aa1ff4-89d8-438b-bd7c-8ff41dd4269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f794cd2-42e3-4417-8edc-f9f2944e98c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa7e2a0-b277-45b2-827e-47279de4e430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd8de87-974d-4cc1-a3b0-959601ed1a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179cc3c-2bba-4e25-bf60-1472a4d42fa5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c8af7-a2b4-4602-92cf-9346c3ec9a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266a0028-7257-4b4b-91b5-41e6d8b6327a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf8b0ce-395c-4026-bab5-d06ca288fd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc2b94-9537-433f-bfc4-6ac4c707a4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2309543f-3249-4e15-9f57-b0f23eb3894a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669fbc1f-f940-4831-8b23-b58e4389a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57c211d-c5d9-43d9-8419-6a5b1df37602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcf1190-1fc3-42a4-b395-dc1e9a1a4567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0569a6-2f74-4d07-b1ec-9cad99a22a3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10c025d7-faef-44c0-93ef-ef59bb1df45d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aa6f8c7-e522-4e81-b070-f5ff5949ac39",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf043ac-aee2-4d1f-93ce-17d918f1041e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0220ce2b-b6af-4f0a-a8fc-3f16f3deaccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dba62a-ab7b-487e-acb5-cfde75888348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ebfd4ab-f452-4bb2-87e8-4f0537ae2139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814586ea-d4d5-40c3-87ae-df6175b43dbf",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acc043e-827e-4573-a118-1eae25771b8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7f07c6f9-ed55-4eba-bb3b-4f74ff11f7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9968a5-c250-4227-a33a-831178edf6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d0df457-364b-4c1d-959e-653b7b2a694b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f538d3cc-bfa3-4cef-9d1a-7b327122e47b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "925554cb-01c5-470d-aa90-9dfe0126cb6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f51e92-8da5-4c54-a895-162030e1a629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f96884e-3499-40d6-9eba-dd5d72e5d13e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed5556fd-7e06-44b2-a548-7a93a5dd8c4e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cf9dc85-e951-4f22-92ab-a6b064a4d0fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ac8f142-7b27-4be4-aa7d-a93a4d2afe7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "003c0683-510d-4619-8f90-320445f0c946"
            }
          }
        ]
      },
      {
        "id": "b89d9ab4-3b66-4a31-a610-2387b143dff9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19aef6ae-5d28-47c8-a4aa-1e45a2dd976b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6e86cc1-b130-4e9b-a922-1b0a343a0563",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8832d535-e6e2-4378-a645-d6c5a93dc593",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcf1297-7b93-480a-a755-9552b6d2b325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4414a24-a711-4074-964a-716df48d6ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57766851-e808-4ea3-b1e1-0250ab40d144",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509afc58-076a-4e5c-9ba4-484df831e538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9974b8c3-1700-47c6-a491-55a8774af285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802c2e18-8e9f-43ff-9956-d324bfe5ca33",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3245f8ba-2692-457f-999d-2a54a6a8c9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc3d52c-3925-4f9b-8e59-faa8c74779ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14701ea-e545-434b-abfc-3cfdc7c3d377",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b923e6a-10eb-4f47-9e86-547151b98c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620d7cfc-b154-4d4d-b70c-0947e782b6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d0e95c-3f2a-4586-a773-e99993a08915",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983bf3b2-7a4c-4acb-a9da-84d523cb7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6ea742-8000-4b80-9971-b215fd3811d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9359baf9-c6d4-4b36-9bfb-feb433c57e92",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf05aa2-9454-4486-adbd-4383f883c239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c73cb9b-95ed-4b85-a83a-73cdbed1541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1312bbe-d0b1-4e22-aae6-5b746678786f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a032556-24c5-4371-b842-8f65031ddb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b099183-efa4-4284-ad6b-0862d43a53c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a476f41e-f9cf-4201-a747-bbf501b4d424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1e5cd6-6d62-46c2-90d2-5d6e9174e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6554e6-6ffd-49da-8217-5e6d9e8bc294",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4d72e-429a-45b1-860b-5b3ced9e1319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a2a725-3e3d-439b-9d49-02b4818eeab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba96eca2-3fad-40c4-9fe7-f26332a5cffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a9ee7f-04a0-433a-bbf7-47ed4cdc7548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c95ec3-8fff-48e5-a60c-4b702b0477cb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c2d830-b61d-4bbb-8d06-36d5e86955f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa8f3d2c-d636-472b-9697-0c2cede79cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353bbcfb-6591-4e3f-8a9f-17fd1705f0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2d2c0e-a42f-4ce7-95bc-7ad11194f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4a683a-3628-4c9d-9e15-63f671118b5a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc6a140-0a15-4361-91ff-45e5cb0d4924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7981fd-631a-4703-82af-700e4a059f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9253a0-c88a-46f1-ab52-fbe9d0d23cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a94879-fb0b-47a9-94d4-cf58b2a0486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce9ef0f-b913-4378-8a83-6d1d19804a23",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4246cf3c-8475-4ff8-a6cf-1a78a9b6f648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2efa45d-7d6d-4616-bbd8-c737158f5c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652cabf5-2c8f-46b1-ab4e-03d245c9efdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b47a5a-1b87-4aa3-ba72-6c7e3f1a70e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dccae16-9dd1-4e15-842c-de1c65f2a306",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e089d-0d3f-468a-b8a9-658d52322bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d374accd-8dbb-438c-b96e-4db8103e27fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1595ba9c-09f6-4101-af7e-12ed8188924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ff487f-8588-4935-a3f1-7f0d62ac29a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac5af7-70a9-4ed0-96c8-83d6f912777f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b255a0cf-b686-4de4-b5e1-868cfef64b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd0c50c-8b74-451d-97ee-a7b08de5c62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ab901-5a10-451a-ae8b-7f8887cf9bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395c30c6-b9d6-4c90-9546-b99bdf545934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dee820-5077-4bc8-80f9-51f49b5483f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ef27de-56fa-45ea-8cb2-5d9982f07310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880424e7-8714-4924-b08c-cfb7061d209d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d9059-6e87-4a67-9641-6487d60476c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7deef0-e84d-4471-adc9-d239816d9dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391b433f-3a21-4dbe-9a47-5cb4190b7b36",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da36e2b1-d227-403f-b42e-1e5a0f22e25d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70d4e17-c542-4362-adc8-c501b52aff4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e98613c-bf22-4bff-84c8-49c7f6b5a75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f1338e-3b57-48d2-94e6-1c08a847e390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8a2cd-6181-4732-b2b7-a9f0f5ece682",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd49ada4-de96-4d7f-8ba1-a9ff2bf967b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef18700-3782-44c2-98cd-09f53b565bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d684a78b-ae47-42f2-82ca-58fb139684f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19414226-6355-47a3-86d2-e5a79290e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac792c56-e587-4972-9315-fba1b6d2b3b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c1b0d7-8e5b-4f7b-b861-3eb9ef8fbdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8807c4e9-96af-4795-b4ec-275d0cc3154c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465501b2-d0be-4ec8-bae8-b3d89da2e83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b071a6b-ce29-4ccc-a12b-184e7e2f9245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ad6ef5-7909-48d6-b8f1-c243257be8d3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5a0be9-9833-4036-8075-a66198ca7a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3096e7-b357-41e1-bf07-8a8cf25c0ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a297f6a1-8ff7-4709-b08d-dc7b27b9106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96847234-9a0a-4236-b797-5a8c8ed48fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00b5681-ac39-4c98-9c24-f9b424e8c65f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6212ca2-44a6-4e72-b9de-50b0877af09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795f3da8-57dd-4c29-a041-4bd1040197ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bd7f0f-e0d1-44a3-85c2-0835ad2d5a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63776ae3-21c5-4fc4-9137-77e39d5b4ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad7c184-45dc-46e6-aee9-a04cc86d1c64",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43198a61-a9a2-4b8c-83fa-5a76af9b14a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03529d15-984c-41db-b37b-08e5cf92532d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b70cc-ead6-4199-bd05-a613099f9fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8919532-0e4b-4009-a9e8-e1adfa1362a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a399ef45-17f0-4ade-aae1-34dc5dd33b7a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1e5a58-9522-4900-9eb1-e045f2c94f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c8b821-1687-44e3-b9ec-a4aa659b74a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee2b5c8-10ab-40b5-bfc6-92aecda29f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3100668-f272-4a84-b256-627360a01bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb731fc7-baa2-48cf-bfcb-eda0e43476af",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe726a5b-1c61-48dd-b705-7aad79e83273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e755bc0f-80da-4b8d-8e15-7e10718b4145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9323d2f4-32db-401b-92be-c6a21e50b662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffcdd3a-c3c2-4cb2-ac8f-e6c0f3d1bd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e254d3fc-d21c-4236-bc37-274673bdbe60",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbfdb7a-8043-40e8-9bdd-2c9b8ae3f13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97a905c-e60e-428f-a83b-41747141d740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a14aeb-f9f4-41cd-ad34-c28c3a253c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97df5cb-a7f0-48cd-9187-1fd735efe0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e75c23-834e-4789-8553-5832388e6bca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7965e9c3-a228-4644-a11d-e0aacacdc54f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef53bbe-a623-409d-992f-3eee95f2013b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dd11d0-3d79-4694-8f89-85c6dfe48ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1296c45f-ae6f-415b-bb7a-dfdb046393a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d61cee6-38ba-44c0-8102-861bae80b475",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0e363-a133-4155-b6a5-0924c69e0b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21607f8-37cf-41d5-b811-72b02605b35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f917494-5794-4d5c-b2b0-be7e12e31b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88a830b-c166-4992-b261-2751bb213a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e73b0-3a35-47a3-82db-5357e769dec1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a1b763-11b0-4e70-9226-4433d5a099a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548e9955-f38a-4ae5-9e67-3f1f9edfabd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b235f0-d5f8-46fb-8dbd-0d92155e4eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f2e51c-5eef-4744-8a25-7594ec0e0e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967274fc-b6b7-4e04-96f8-dbe2bccb2df1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc67d2a-6a8a-46cf-8b43-fa389a4f2093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e461deb-0899-4c4e-a3b0-fc63e861b00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f64cef-b948-402a-a87d-3967e835947a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488abdb8-89dd-423c-8f0c-0dc5aecc8ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b458c3db-5449-4448-918d-10a7a6c557bf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c56b748-260a-4659-9978-cb1dd774838a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dd43a2-a2c2-4b0f-b2bf-2d06e71f5da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7080709-8d15-4926-a0a9-e95b68383efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f635524-2b20-4a3f-8627-d4bf45a9251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1191d40-092e-4462-a6ed-b97b2ad1605c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715f77a8-36c3-465a-92f2-3f5ee4339249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a80d9b4-b257-42e0-b3fd-bbec516bf971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ee2d0-6b2e-4727-8e07-b5070f847ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5c05d2-ed80-47f6-85ff-efaac062bfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb871f-87bd-41d4-8c92-a0cdb642b369",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e991ea9-de61-4564-859b-c7bc44cca7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc74e3c8-cf94-4f38-b968-272a7eb43e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e34f30-a288-4f9f-8869-278bdb4d8c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0323d16e-1205-4419-bcf4-0b574027e972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5414e5-0b32-4896-b7a4-ac93c3e66ada",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693aa55d-3438-458d-8627-6ef2d9b81150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81cb27b8-9767-41e6-9d7d-87733ae1ad9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3d90c6-ce38-4c21-8a85-9cdfd2044144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e480a85a-5a02-43fa-8421-9c2038572018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47379aa2-202f-4701-878d-e3ad68526b13",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e15a5d1-4c73-467e-84b3-d140e3e44907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a87edb-8dc6-4762-bdf7-3ff7c766257c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5b146b-2290-4115-9129-00f91ba996d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b6e0fb-714e-4d98-8416-5d11ad98291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9eff88-0261-47f9-b820-df3041efc0c1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea8f73-a89b-41cd-a02b-af00d9cef182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fcec8cd-b33f-4af6-853f-a8a8410b8d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06a8a7-1c7e-4181-b479-1c3ccd58b5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d5ec72-6c58-40e6-b186-66b3b87013a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc8a7b8-75e3-4c5e-915a-6c126c96ffa3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cfbc71-f08a-4b08-a596-44e10bf008ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdb5a99-30f8-4e48-85fb-3db5a6416c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbb9c77-119d-480c-8e42-1957142c3992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c908d3ea-c380-4479-ad91-0f98bc80c397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e65e678-699b-4440-ae71-7d84ed41e5b0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f608dfb2-c511-4541-bc7c-a2e69011eb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5d748-f031-4516-8195-512149721ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72530d8-9321-41e0-beff-0d577ceb589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fe2f1c-b683-4239-ae8c-5e3ac1ac57d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c9c6ae-6cf0-4311-89a5-ec7c367f0d12",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c9da74-2cc7-4a1c-82b3-3fbb0a1e633b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ceec4e-90ea-431f-80b5-830f62c39d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbc43e2-2f33-447c-94dd-fdb5b089f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7422cc69-f42f-416a-ad73-e5c1b6d8ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a0f94-7051-43e6-a2dc-eb825ebcc153",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0bb866-ae22-4160-b07d-273da980c44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfd8601-7fde-45c8-bc47-8b032966cb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ee918c-255f-4ccf-b12d-75db06d9fe03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c423d856-5d8a-4921-83d7-d4e5631250c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84033d6d-885e-491d-b15b-6a32661291e7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e860f-3db4-4096-aa5a-4ce4e16148d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa70bb49-c826-4fa0-8c44-3bcc351018f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4310da70-0553-4411-9100-6e2cebefe9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab8785a-68e5-462a-a216-00a978aa4e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0130f75-e54c-42fd-9d8b-9eea8604477b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759ddb2f-c619-4c06-a3e2-b3653150061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7298e7ef-1aee-40f1-9202-e0d4907bd137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc85e4e-b76e-4e45-8be6-b442a7abf2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21859aa-5f38-48c2-a76d-7aeefd070d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33e5e30-b3c1-41ca-bc4d-d0e216608447",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012533ef-d245-45f3-ba51-43655cdf506a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19f1ea4-3fa5-4d6d-9acb-3e2f54012f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07053aed-bd4b-4bce-a64e-a146a76ef1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d773511-b181-4a24-820c-1f924ec676a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3495a217-c43c-45a0-97b9-09ad15181215",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42af0ffa-3d67-4144-8039-eaf36a0ab104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f6bed5-8168-48fd-87e0-0325ae6e6478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd626d8e-2179-4f24-a5cc-2cd5bad5179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51f8d33-c793-4a76-9ac1-718f7cebfdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e84c040-f72b-475c-92a1-a9126d546255",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0e18c7-cac9-4b8f-9e5d-f760b5800c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4838d3e4-3a7e-4d14-89fb-6d55bdcfec71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51475955-9514-4c80-9284-85da2358498e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3605d3-0f6b-4efc-9008-56b3eb6222e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f7ffae-1dfe-4c09-9d43-e17092fef38b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca2132a-a3da-42f0-abed-b9c8bf1f7587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7441283-764f-4f05-a1c6-ae0190250fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9b808-03ac-4f8f-869b-61faa6952fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd195f1-80ce-4e51-97f4-901afe39fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea247b28-f7b5-4cfc-a2ec-758b17fa1dcd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42014ace-f374-48b3-a4f5-02fd76b7cffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d027f13a-1cc1-483a-9523-ad0a6d0bd2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff044e-1cbc-484d-bcb8-2fd179453de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a810da1a-4f1a-409a-903d-6615d988cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0460d169-c4e4-433a-bd5b-a83c67cb119a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a1aa41-2d0c-45a5-b5b9-243b496072e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361ac037-10a7-4c2c-ab37-4dce86a1541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397578e0-8a0b-4677-9060-a7f87acb642d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4aaa634-58f5-4efe-b471-293c8511c3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd157038-4545-4344-b4f5-b140eeaf4bd2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0e7fdc-11f5-40cb-b0ec-4a60cfbd6f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36d3de-dd23-444f-81f0-c97fc2931fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032f89d2-4c1e-4932-9994-f6d1ae13e217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d925c4d1-629f-4374-b5dc-8e1ec7f3eb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22780298-3ea9-48f1-9f8a-c652fafb3256",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1afa3e6-6672-4d3d-bb1c-9ca1bb82a6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf1f54d-b929-4ace-82f7-a679b2ab1d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a613f-20a5-405e-b581-6e62475fabea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f2ede8-7cfa-4cea-9d19-ba3e1078a4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0788c57-b2fd-4906-85c8-125820f0d0b9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21cade4-ea19-4c6a-9abf-4d7a89c9452e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf6a78c-5c20-4baa-94ba-28795817bd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1716ca-8811-486f-9c72-dfeaf0c3f134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4690cf2f-2f43-45ec-ad5c-63cac37f3d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75006ee4-04ed-4291-bd7e-a441918737fb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75de2857-e336-442c-b1f1-2c31a3954578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4289577-779e-4993-a9a9-090e6f338e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1685a8f5-615e-4747-a382-4153b9f0d5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879824b4-a379-43d7-97ec-a20afb6b8d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd02e91a-6764-49af-a80a-d3c274ff08af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d738e-1dda-4553-9882-914bd2b34b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5393aecd-d438-4975-87f6-6855888717a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f46c3a-9800-4abb-98d8-cb721bbe8883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16450643-bab5-4016-8079-949394a2c7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104db6dd-e675-4390-b81e-274cdc7488d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bafee4-25ac-42e6-853b-c11bfa61aaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b543c90-322f-495f-a9e4-bba12ca91835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a76ea-3e64-4ac8-907d-d7b809d543f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1493b40-bbf7-4ed8-ac3d-24f3e472fb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c383c516-5096-4e50-bd24-fb042e670a87",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbed3d6a-0bb8-44d6-9981-b4099ff2f0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7069d7b-3727-488a-acb4-29caf1e39b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a487f9-92c7-40dd-a6f6-74abe01488d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad942392-e3bf-4d0b-a07e-63da0e7c2d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7b6232-2fba-4b7d-80a3-f0c332516d39",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ef06d3-8f8b-41d6-b4a1-03e21a4c62f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8da9eea-3ac3-4245-aba4-de9b73b2b4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb80be8-fb66-4810-883d-0b99ad00f5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc78e9d0-cec6-4491-a998-8befeb078319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954b1c29-71cc-40bd-9e6e-77b2f805c6e1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08128573-02d7-49e7-8c5e-567ed5149808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b6ed0f-4b49-4bf6-8f6a-dbe66047904a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b397dc7-b72d-4788-a2d6-39c7c04a6ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c79dcdb-37f3-4ce5-ad45-1e0f0d6da839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ee2e10-a54c-4925-864f-92f78a6d3f0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13bdb6e-2840-4366-86a6-982856aa0c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e538b33-99b0-4bf9-aac9-b3e3369f58fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd825d-950b-42aa-9de6-0e27026d72c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2706cd1-ccef-4f89-86fd-10ff1e8b7914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edba666f-1f0d-495f-9598-12c9e9020208",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65407973-e34e-41d0-9290-c44db1b3d4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd09562-0b89-45b8-866e-9f972e45bb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197a1fcd-40e5-4288-9b4b-3529bd85d515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c47692b-e546-4b23-b941-7b90992561c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4758376-96e5-4e59-a6df-8b285d7557d2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e1ac96-e426-457d-9815-198dad6d78e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5859c6ae-bbe0-4fc2-a28a-acc0fc360157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad1d10-d553-4d54-9334-c77ddf7a90e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d2e827-24a8-4c1e-83c9-030aeecd5b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fe5624-1816-4bab-a225-41ec7fec6ecb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4320685f-4950-4f8d-ac09-32d3bb8d315e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10724676-10e7-4cfb-8723-d44e3151ce4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9a6fdf-8864-47ec-b88a-023c47600de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbb05e3-f82f-4791-83ab-cc0fbc65edd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc18045-4077-40a7-8c60-b86592901d69",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404015f7-e61e-4220-b9b6-4693be66acf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4a1ff8-3939-4e44-a116-ffcaf2c708a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7f04da-737d-45cc-849b-22936bdfb3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab3cfeb-e8a1-4441-abc1-af589875658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0a4ba-e822-468d-8ac8-becdc9df19f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd01d0f7-f2a6-4c40-8265-ab6e4a8bc002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4187ac17-c5e1-4148-9fde-17f63f6a04ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e22f32-d3be-42ac-b8f3-d2bcca22260b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125a2113-2239-48a2-b94b-cc4a49e7a398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89c7a18-ad4b-46b3-8b4e-8b1b705c1601",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd47f0d-486d-4f6a-9c27-a90cc8d8599a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb748e1f-08fd-40a3-85ad-1312068fbfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2527d484-3074-47ba-b19d-5ddf778f4fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6045ef7e-8263-4611-a912-2832d792d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da38dd1-29ad-484b-a2b2-e384d1278973",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e94000-594a-476c-a30d-7ecb8fa21931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb69ca9-46a6-4b7b-a58d-458614fe33de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a869c6ee-3749-485a-9b45-13a4a0e7c23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76081ee8-41d1-429c-b80b-c286918763e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f953a98-a396-487e-8d3c-2c9f07570670",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4908a0ac-ebba-41ae-9681-624e1b031ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be5b806-8449-44c5-8994-e581abab26da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6f519f-4078-4c61-b35a-789b4216d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0ce20f-6376-4481-b2a5-b9a623f07395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab40153e-8707-4167-8fa3-4cd8a55eb475",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da8061b-e890-40fb-b83e-7d855de0ec75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941d269f-aadc-44a0-b572-89c33eb19497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47633a96-b17c-4984-8108-37bb8491fba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc459d9-7e65-42bd-a14e-704b51a1481b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5690dec-6142-45e9-993d-1fa0c5e0a5ad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450042d8-5c9a-4eb2-a652-36baa9e27cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc12633a-11ab-45ac-a3e3-0b286587a0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3065eb-65a4-4f88-80f3-c1d3d620ca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b06b9be-aff8-4bd2-9dd0-f31c200ed2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d934586d-82fc-4ba5-aaaa-768cc5a0d991",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65752df-9800-44b9-9283-c75bd280c653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f028f8-d9bc-41b8-820a-5c92e55c7081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2615d-5531-48f4-be75-19bcd7497de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6477845a-d477-4b17-821f-9e4332784ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a787583-7f56-498b-b271-675fe7aaa051",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6040b011-6175-490a-8b4f-0cf41a4ae572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f40a43-5915-44a1-96df-5bab1ae4abe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c24c8b-4aeb-45c0-828b-f87ef172c2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1feb33-e1be-4677-9b27-49c020bcfc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f9f207-b465-446c-b694-ed8e0192fa57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095fe55a-029f-48db-89b0-af38e104c391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "930d44a2-c682-4c30-af05-6cd9ed4874d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347c2b2-92ed-4f48-85aa-b6aaf61e422c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76039a52-3203-4f43-ba1b-c0617254623a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c2c78d-7f21-4d1b-9e8f-98b366122324",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd1019-a0c3-4f13-ab01-17348cdd98b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5bb382-4657-45cc-ab2b-3580583a0404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517e2cf0-2dda-4584-bce3-1d7e677244c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3663c80c-da9b-4d5c-a2ff-ea4103e304b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e52b3de-aa07-41ee-b4fd-22b59a1f3966",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dcf33d-73af-4467-ab0e-f152c006dedd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1492b78-33ef-46d4-bada-4f14596fa16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc7d02-e7ea-4ef4-b086-a69ccad86eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0a41d7-8fe7-47bc-adaf-8a2d121e78ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5817cab5-b476-462d-93f0-5144cd8547cd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea34f3b-654f-44c8-8f5d-e70101f84171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a2375f-f6f0-4549-9a64-77758845e532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62369c31-5ba7-4b15-8b63-e40da96b42c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c353f32-1a3c-4145-a6bf-85b6090846c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699b357-e959-4ce0-afd0-ae046321e4c3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bdd25c-aa59-404e-bc76-1dbf58ac9c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf36ea1-d211-4369-a7dd-37a70cf3bb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7297eb-6ae3-4b49-ab71-9429b5603ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc3454e-dd0c-48e6-ab9a-ccde0ae8260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772674ef-db9b-48e8-87d2-457ff9dcc5c3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad27717-e03d-4a0b-88e7-627ef1d09bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7ee3e6-9819-43f4-9c40-e78e039c0d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754e55c2-e715-4489-a535-696ebde6054b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e913d4-b2c6-4ceb-ab70-b215a79b573f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a8e15-1119-484f-913d-f4dbff9b8929",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1349e8-79bf-4983-bf91-db6075fc80b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898877b7-43c3-4d11-991a-f4ccd9765f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c95c7-f961-48d2-b933-3fcbf923f6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f729d70-8e6c-4af7-852b-651a423e830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2219fdd-d18d-4e10-80f7-7ed1276e458f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7f0b19-6fc9-4903-a151-06c2f44f58ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99757065-2145-4e88-b8b0-0f14dc8fa9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fc1917-eab4-4200-a9b8-64db79ba4a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab92c7f-d4ff-4d05-8019-de16beb3745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a947ec91-672e-4f4f-8b32-4eb8840dd2ee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0788252-7948-409f-800f-c2e5b019e206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70345762-54e6-4252-95d2-b42ca156b0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42b7311-8983-4394-afe2-eb79a825b62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3c988b-70fe-4267-8b54-b6ee463d60fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1b579-a868-4984-8ac0-adea6a2ae50f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47344ea3-d6e9-4d66-a565-a43b0a47eb0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa79d304-8b07-4bc8-80bc-9220c2dd4fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333055bf-465e-4bdf-ad00-812d70cd185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8653b733-0bd9-4037-a3bb-dedd79cff2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06468af-0ebf-45bd-8a18-13752394b397",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f4ed03-b7c9-4f62-aa48-623b1ac5370e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabafe62-8d16-4803-b42f-9e97aaa6b846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc187d5-a7e0-4273-be50-c9f9e85e6e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a80b5a9-0f88-4353-bbc2-91793aec9147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7b91f7-0921-4448-9a11-db507bf55396",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de50a426-77e0-4b9e-93b7-da56bb583a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43e5f35-060d-401e-b8ec-95aa74a16c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2779e0d-81bb-4b46-8bb1-a79ada111b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c8c220-43b5-4606-8be7-9732eb22f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6ae882-d0d8-4659-b57a-f6eca0c101f8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03254765-88e8-4e06-8687-cbf1bc3974ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfd1b03-d6ea-4f33-905d-05593733ca40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca463ab-eca1-4ede-8402-9aafa84d2115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f52bf6-5439-4e2f-86fc-ae21d87ea8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafb9b32-e8ae-4f27-af96-935f1c14ea9a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306231b0-e39f-47fa-a328-efd2e8925697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29736877-8ab0-4791-9ba3-47e180213584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35e4d7b-1929-4ef6-b70f-04c3fc223463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5106be-9968-4e07-8cc1-a40c85eaf02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5f1dc4-79ff-4121-9d55-487bc5a350c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f6b38b-2bbb-47f5-b38f-9edd8afffb1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb7c4a9-d8c3-4e5b-8a38-d3f19d967daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594c8867-71f0-433e-958b-619ddc9d5d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ffb492-cab9-4cbc-b2b6-683d81f971ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d813b5c-cbeb-4a97-94cc-060df9f707b4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd89145c-903a-4649-9ec2-6168d246e24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb387a1b-b930-492b-bde0-4052a6a688ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095bc7f4-d3ba-426a-a8c7-162b0e6e901d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a55e9e-d0a1-4f3a-a4c7-ceef0e7c2216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab989b-f560-46a9-9116-d1ea9cc50899",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8474a7ed-28ec-4498-afd8-ca2a446375ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb44369-d3d7-4b9c-aa1d-ea4848cac7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0110d67-91a8-4e60-b59b-90d5d7a57067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c0a5db-ca65-4684-829f-d39a8673cb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e230808d-663c-43c7-82cf-0a0cbb77e23a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff901f7d-1bab-4647-b701-973e1215e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c5d412-cc0b-4fbd-b636-8315e0837cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b9d249-efd0-4df1-b050-6284130d2cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839dd6d3-1baf-44b6-b6c0-a3ce36268430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d554b54-c2a5-4a74-ada5-b76e4c657da3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58d9c26-79a3-4136-ba4e-8f5de3507f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b396de5f-91de-4336-aa36-6889ac419e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4576a4-cd88-4702-9d04-028479c6490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e623789a-7592-4fe1-a8ef-5ce115c9894c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78dca98-691e-4e76-b3ae-9a306b9615a0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00848ce1-07a1-4951-8dc6-6225b03f7ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4893457d-201c-4764-ad72-c1a452c34c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c27a3-fb20-4ade-8c87-74979f960d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719e33ba-78b2-42b3-a99b-80f6ceb821c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4c940-01e5-41b6-9a16-6826fafe8811",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dbba0f-caea-4a98-a723-18e56045507f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59bc3bd9-edf4-4604-8234-dc2ea0b335ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0f9d0c-667b-44e9-bfdb-6bc7fe0fa0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a10d5db-384f-423a-9bcf-b7924a2543c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958b0407-37e1-4659-8b17-6759a35963eb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c895951-6d58-448b-bf2b-7964c7626576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5251ffe4-6058-4053-bea3-23e37d212f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ff3fd-5d46-4f5e-a88b-5a909b7b96ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5579be-e027-4b5a-87b0-982ab0a9b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c88f23e-edeb-427b-a0b5-b5297a631c36",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2382c516-b85f-4271-9b2a-755ec0d26b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9c6560-d103-42ca-b3bb-81f71a1f358c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab76f1-1ac6-4ed1-b129-00a72efb890c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5494f34c-4ec4-4aa5-8035-4026f664813d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969949c-301f-4dde-b3e7-f8f7db9d6f65",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cb5e90-96d8-4b4c-a4b5-386f466d0238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2a9e0d-f180-444a-b554-5003645f74f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba47056-7ca6-4805-8b50-62d764c39d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49c00d2-a282-441e-b60b-0a8d4282d812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a28776-3996-4b70-a0be-8189e2a504ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830f1eb-932d-459f-9cc3-18cee9ea515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6b9359-affb-4281-8a43-ca2147dc9f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd49481d-984f-4bea-84f3-f5d7b24a602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6a9c46-7f0c-4c2f-a4f7-84869e968f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c79f9-d8a1-4b2b-9a85-b9d18772964e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9037f4e-c2ea-43a0-84ae-5644f31fc997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa24d72-1b00-4a3e-a510-2cf94223318a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc96bed-79fd-4f30-a388-331bcadfebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbd1459-073d-43d3-b7ed-c76ef5ec101b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0236bf-f7e0-40a2-ba4f-ad1108f56cf1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29a6085-0d03-452f-95ae-9d17449ab123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7bcacc7-40bd-4f95-820a-0c6306f9f8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7089e45c-7526-45e1-8abe-f8a5a39a1376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6011541-99c4-4b93-ba93-88d065994550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a09289-be80-4852-8678-31f55f3a8b15",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d4dd4c-3706-4648-b4c9-9fbdd848c359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a84899e-72b6-481b-a760-11b8a197e6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2137caef-99f3-4e1c-b6b6-968d1fec5ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2205db0-aa03-4241-91f3-d9c6fbfddf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b740b36-0977-4710-9bbf-6ac196c6467b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bc2c35-7a43-482b-b00d-07b3073fd090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d151be-9bf3-4384-9097-f44660ad0638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d27a0-a9d5-455f-8b11-d2cfcd448d54",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1065d5-995a-44b5-a9ac-75a48e493ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39252ac-c3bd-420f-b1ae-415ccbdaf3f9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13924493-99a1-4433-8ef3-3d53a7207218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5d4d85-0d2c-407c-b9e4-c931327e6096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ee5ff3-a6a3-49e5-aa9a-6ffad92f07e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bcdd9d-9adf-4809-91e6-e415afd674af"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8f43d03-24cd-4001-9eb1-7ac0781bb7a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5e8bc16-720a-47e7-b83d-034c5c38fc63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca66a66-05d1-4bbe-a5c4-31f0d6c3bde1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "996ee25f-40b0-4a9f-9e02-49b84e32ea50"
                    }
                  }
                ]
              },
              {
                "id": "f0d1704f-7883-4113-a0d9-49ec13f08174",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82c51ad5-f318-4a52-9083-38f4b833902a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8bb49-3f89-48cc-9ba9-3c3e2c0a377a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "438b430a-63d9-4e0c-b248-9a6774a9b9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4627439b-8d56-482c-bc55-94d44fd4c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ada8303-6648-4b2c-8019-ba996704f6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e389fb54-31ce-40ed-9b49-5f4dc78c5fff",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142ade6b-30c2-4bca-8094-364861ad21d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f4e4d8ef-b224-4c34-8061-fb552687abb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6ae5e9-b6ee-4096-b16e-6502528cdfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f9c66d8-9333-4be1-92d8-9a8155dfb5b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9d9d4a-1f6d-4e08-86fa-61b4620d1b96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ca4134-3ab5-453a-ac69-6b539bd51317"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9567266e-7ca1-451b-9bc4-b635c00666d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43b387ec-c449-4e04-9322-c58515435b60"
                    }
                  }
                ]
              },
              {
                "id": "2a6a280a-0b73-4eb0-b231-ac4db28d5234",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3da8c9fa-17f3-4309-9787-ec823615b745",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f01c1a-cd4a-42f1-8899-15236df660dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "72211172-33f0-4819-8d00-fbfe9d40a935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783fc80d-09ee-4d37-922c-2a0c2cae340c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cab4c7-1319-403e-9c3f-ebf573a8070d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c076f26-dc76-4955-94e2-22458b4a3b6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0335ff18-bec0-4485-ba9d-32c0d7d59ead",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51c3e6a3-b766-4eb1-b7cc-c591b3200fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b95ac133-42b1-428d-943e-4af697f2dc23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad2c1b4f-608f-4ed5-82d5-dba6975b6f45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44fc4d79-92bb-42dc-9cc6-6870f3038d2d"
                    }
                  }
                ]
              },
              {
                "id": "7e267b11-651b-47fc-a766-966747793c74",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5985b21a-3172-4090-b982-d844bd64faec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "381e7188-00b9-46ea-90ec-826fcfeb687c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feae110a-66b1-44eb-a26a-189994eca49a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be06249-aece-4711-abf5-8c10d4b6ecc8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45e8dc9a-d27d-4dce-8f2b-740310a7de5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa07c211-f689-455a-9f3b-d10dd8e7377a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "547bba54-ff10-4b1b-8b7a-8d567724aa33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea20b8f6-ce99-4ccb-ac34-3464dfb40137"
            }
          }
        ]
      },
      {
        "id": "9f26fde1-9951-4324-9d2f-c344106eb53a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "82699484-6872-47bc-96d4-f24eee8eebc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2efbd135-ee30-4bd4-a380-852cbbde9477",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaefab45-793d-40e8-b948-af533ba6374e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7d06db6-7be1-4403-b3ab-a5f3190a4361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7634c4-1b13-4555-8998-086619df2ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a32ae840-83c5-4951-a482-741989d05322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6366de9a-a031-405a-b602-868eff156ed0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe263a9-9f68-4b8e-a70b-bf705693eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ce31723f-4d24-4852-afa6-13d13efe652a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8b88a7-2e5e-4fb6-9437-78a3f51e2209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69a20e58-c343-4186-9789-241a5a68529f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abecbb71-655e-4210-9911-e3dbbdab707d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acd04e32-e4d7-4b5b-a37c-9c4dae367071"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7df0150b-0da6-4a12-a865-60507e1513b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "531ee7ab-8081-4c4f-90a1-194a5d7e3589"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cee3b232-686b-40ec-8abc-1572ef9573a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f49fd9da-682b-4176-b5a0-92c706a8e9da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9d29323-0609-4143-867c-28495e8156fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0958bd41-4d19-4d27-b741-c4f39d913495"
            }
          }
        ]
      },
      {
        "id": "96c1cfdf-6f9c-4450-b680-404c151205b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9c5bf04-d538-4923-baef-fc511ef207a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9323f11e-7ba3-4bec-84f8-44a59a123c94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16c15f13-c6b3-42ae-b83b-db9c951ec15d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71df7eb-802c-4cd9-a8cc-185a3cbd2d74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c3c263-f6c7-4665-a83c-b6cda0e44dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5b3f6e-47af-4a64-b53b-a87dbef2b3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11a02295-acf0-4035-a420-f0caa9cab3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82586d5f-195b-4333-a4ee-b62efbb0d8c3",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99535f8-ffa4-45ae-a304-e88dd8eda08f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e56c435-bb87-4703-ae24-ecf4882c8bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25148d3-46c1-4fe1-ad4c-814cf52019fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f1425db-4325-4d0e-a469-ca73dd40469c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e860c4de-7b10-41aa-a98b-82e7f9a2ee54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30bdd1be-0893-42f5-aeba-7d0697a81602"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f05ceeb5-7b14-4e48-95fa-ea9b6cc7495a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d4480f5-ef3d-4550-bc84-18a266d63a8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa4246a9-699c-44a2-95b8-8fa92bb66257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40da65e9-fa48-414a-b8a1-1232b40f46a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b96423b-a59f-4c42-ab11-4c7467fc1f10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54123144-a6d4-4278-89c8-27041eb0cdd6"
            }
          }
        ]
      },
      {
        "id": "65fb68c6-a5a1-48d8-b535-71ae65e34e82",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8518b935-a01a-4e45-ac80-36f2dd8b65f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bc6e948-5b82-482a-8687-574b96ddcb6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f748862-6978-4b53-b2ed-a813b0dc9083",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546ac308-8737-4c6a-979f-545fcf664c7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59db1da5-ea3f-48a8-b36e-6687f4e85a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1308cf46-6886-4239-b850-46519bacd110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fba6f24-e524-49c6-864f-8863442fb9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84587618-c063-448c-a9e4-8c7d09307230",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91342c85-e8d5-481e-b915-053188737c9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "019c141d-ff88-4baf-9f0e-ed753b8dfc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e21670-a297-4ceb-91f8-14a3c24ba5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b01cb17b-00f3-4077-a7ba-fcdc6ed1f4cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36c0fa9a-fe03-4baf-a1d9-9ad54d2033ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5f3d3d8-0da8-4f8e-ad11-0a3c7ce908ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20488552-86ce-442a-a269-006b1602d604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97b7c5a9-718b-41ee-b339-82ba3f74dfab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86155ac9-b3d0-4c29-a3ba-0dc782ac27c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cba5912e-5f99-4e59-b2c3-858fc4df8863"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed837ca3-ea06-40d0-9ae5-f3aeffbd57b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25fc6505-a9dc-462f-acb5-170ed8f6bf29"
            }
          }
        ]
      },
      {
        "id": "34a82042-12b7-475c-b12a-ea2041b1ebc0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67354d9e-6c9b-4cc8-ad33-90b10ca2ce02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6affcf9-f057-496c-a8bc-a413183647c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fa40460e-e444-4614-b00c-0e88ffb4f3f8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ded7b27-d140-4003-9587-328ec76b2e38",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "654682b7-2b54-449c-a900-09da6fb63b65",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 43.74230769230769,
      "responseMin": 14,
      "responseMax": 517,
      "responseSd": 53.739533314203676,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682987851343,
      "completed": 1682987876804
    },
    "executions": [
      {
        "id": "80d6c229-5030-48d8-add8-7874d596f98b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b935202-9b5a-44c9-af58-8832244e46b7",
          "httpRequestId": "5dcbae0d-dd5a-4014-a603-60e02f5aba43"
        },
        "item": {
          "id": "80d6c229-5030-48d8-add8-7874d596f98b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "23f58b6b-4c7a-4a19-9a2b-879421161e87",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "5e33696b-d377-4d16-bb65-2bdf0f5af8e2",
        "cursor": {
          "ref": "32ecac4b-536f-4d6a-aa36-30b978440849",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8ebbee78-6071-4a7e-8aa4-b531d1a1734d"
        },
        "item": {
          "id": "5e33696b-d377-4d16-bb65-2bdf0f5af8e2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "34f6f07f-7456-4a08-b37e-875307f4502a",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "cecdc557-5960-4e37-8ca9-9d88f2364f65",
        "cursor": {
          "ref": "44e84467-3d0b-482d-ae15-39ed1173d29d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3db003d0-b7e8-46db-863d-461947a6ac24"
        },
        "item": {
          "id": "cecdc557-5960-4e37-8ca9-9d88f2364f65",
          "name": "did_json"
        },
        "response": {
          "id": "bf47631a-0dd6-4422-a163-1c25c921cc5d",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708889d4-b569-4249-8913-a9fd7552c210",
        "cursor": {
          "ref": "85d4e6b3-4afc-4291-b9da-c4f6937b8ae6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b50315ae-c7e0-4773-945b-2aef932f08b9"
        },
        "item": {
          "id": "708889d4-b569-4249-8913-a9fd7552c210",
          "name": "did:invalid"
        },
        "response": {
          "id": "80f06ff7-87b9-457e-9f58-4531db7a1148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708889d4-b569-4249-8913-a9fd7552c210",
        "cursor": {
          "ref": "85d4e6b3-4afc-4291-b9da-c4f6937b8ae6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b50315ae-c7e0-4773-945b-2aef932f08b9"
        },
        "item": {
          "id": "708889d4-b569-4249-8913-a9fd7552c210",
          "name": "did:invalid"
        },
        "response": {
          "id": "80f06ff7-87b9-457e-9f58-4531db7a1148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32028f28-69e4-4db3-a508-f5d19532afec",
        "cursor": {
          "ref": "7c72ce34-5897-4525-aa05-89ace9b0bb51",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ca6582f6-496b-4ae4-a419-ea3ad5fb6cfc"
        },
        "item": {
          "id": "32028f28-69e4-4db3-a508-f5d19532afec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8d66c829-1d8d-43fd-81ac-822bf61eebb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e57b85f-e874-4719-9678-178a91f69119",
        "cursor": {
          "ref": "008711bc-e31d-48a0-8686-2f50ae43f021",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "680d1de7-eed0-4a3b-ba42-13c861a217ea"
        },
        "item": {
          "id": "2e57b85f-e874-4719-9678-178a91f69119",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2a44e4d1-0466-4f1f-ada5-86ebe3d28240",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3883d2-1659-432c-bbc1-dcda90f9a313",
        "cursor": {
          "ref": "85ebda1f-9290-40dd-bdc5-62aa45977097",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "767332fd-20ce-4447-8d97-5e96eb2c371f"
        },
        "item": {
          "id": "9e3883d2-1659-432c-bbc1-dcda90f9a313",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "08f6dd0a-bdad-4155-8676-590d4bae8911",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1989d8-78b1-499a-b8a9-caa8245971db",
        "cursor": {
          "ref": "55026935-66ed-4583-a374-32903bfcbed3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a1f265b-d528-4211-80e0-ec7ab09b7995"
        },
        "item": {
          "id": "4b1989d8-78b1-499a-b8a9-caa8245971db",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4870294d-401f-48fe-b454-e016193105c5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1989d8-78b1-499a-b8a9-caa8245971db",
        "cursor": {
          "ref": "55026935-66ed-4583-a374-32903bfcbed3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a1f265b-d528-4211-80e0-ec7ab09b7995"
        },
        "item": {
          "id": "4b1989d8-78b1-499a-b8a9-caa8245971db",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4870294d-401f-48fe-b454-e016193105c5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d902fc-b1cb-49d4-ba8d-ac097bc97ccb",
        "cursor": {
          "ref": "72b870e1-c897-468c-8a09-a86bc6cedcc6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ac67b55-1cdb-4678-ac98-93ed315c5335"
        },
        "item": {
          "id": "83d902fc-b1cb-49d4-ba8d-ac097bc97ccb",
          "name": "identifiers"
        },
        "response": {
          "id": "362b342f-436b-4471-9c6e-e950eeb8816d",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6e7a58-5755-44ab-8414-aae315524cd4",
        "cursor": {
          "ref": "516576a0-f756-4045-b7f0-58f79f263e39",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5268614d-066f-4777-a545-fd98675e03c2"
        },
        "item": {
          "id": "7c6e7a58-5755-44ab-8414-aae315524cd4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b8db16ea-7206-4f21-8534-8d3b67763b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6e7a58-5755-44ab-8414-aae315524cd4",
        "cursor": {
          "ref": "516576a0-f756-4045-b7f0-58f79f263e39",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5268614d-066f-4777-a545-fd98675e03c2"
        },
        "item": {
          "id": "7c6e7a58-5755-44ab-8414-aae315524cd4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b8db16ea-7206-4f21-8534-8d3b67763b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820a1e0a-ecdc-4d08-9ccb-8b96c7e487d8",
        "cursor": {
          "ref": "e9dd695d-e8f5-42bb-8f44-9211040fac09",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25538cbc-34a4-4c8f-aec7-451205c64d1c"
        },
        "item": {
          "id": "820a1e0a-ecdc-4d08-9ccb-8b96c7e487d8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "afa73e9e-80fa-4b7d-a8cf-d74201364c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538854ae-eefb-4d0a-b808-770e41de3dc5",
        "cursor": {
          "ref": "614dc5f5-94d3-455c-9832-2921a5f2671b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d283b461-5ef9-4df8-8947-26d155bc51b0"
        },
        "item": {
          "id": "538854ae-eefb-4d0a-b808-770e41de3dc5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9306340f-0bf2-495f-8c87-41491dfaeffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c02aa52-6a1f-43c6-b127-1cdabddb56ac",
        "cursor": {
          "ref": "2b5d87f9-086b-480f-b863-f9e85d03aa91",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "28042a28-cd64-49ce-82a5-8c1f177b5545"
        },
        "item": {
          "id": "7c02aa52-6a1f-43c6-b127-1cdabddb56ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0ce30c7e-93c5-4b04-bce3-dc4104a39c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6a87c3-6155-42ab-86cd-c0e5613fd6c9",
        "cursor": {
          "ref": "f6c78ec1-6a7a-4368-b089-080292dec5f8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c607a89f-8e0c-4d27-9ec2-f2fba67bbbf7"
        },
        "item": {
          "id": "ca6a87c3-6155-42ab-86cd-c0e5613fd6c9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ca7f5e39-d09d-42fa-a070-c6a977dac73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14eeb69-9c88-45eb-b7ad-9572d896a219",
        "cursor": {
          "ref": "47d507f0-9247-4c8c-9f25-50ca37699ad7",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0953367e-2bea-4ae0-9caa-adf76c3e0af8"
        },
        "item": {
          "id": "f14eeb69-9c88-45eb-b7ad-9572d896a219",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c6362ebf-f264-4ab8-aff4-9095c9d6c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6058879-e18b-46e3-adc4-c804d62f9011",
        "cursor": {
          "ref": "6c046122-7819-40fd-8997-560c1d4a7c04",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "506d7adf-c72f-4528-b991-d282b1784861"
        },
        "item": {
          "id": "e6058879-e18b-46e3-adc4-c804d62f9011",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b60580e-7dec-4243-a102-c9b6a267910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2923f903-1325-479d-af16-1e0f44d9df65",
        "cursor": {
          "ref": "fb3ad1b8-8a81-419f-b37c-b12175b2e056",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fa7b69dc-ca79-4141-b4d2-76a91360ea63"
        },
        "item": {
          "id": "2923f903-1325-479d-af16-1e0f44d9df65",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "483434b1-9f0b-444b-b213-dd523f258eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b59c1e-6451-40b6-b644-7716424f2eb1",
        "cursor": {
          "ref": "2c4e00aa-89ec-4897-9469-2ab974962374",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a4c6f41-2e13-431c-ba18-ba5fd9191113"
        },
        "item": {
          "id": "43b59c1e-6451-40b6-b644-7716424f2eb1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5c9d391a-c98a-4281-afd1-75d9480ed78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b38953-481c-451a-a1b0-3c434fb3de51",
        "cursor": {
          "ref": "28b1ce5e-dac9-4143-ab63-ee3e4531d206",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a6c0315a-a4ca-43ab-8cf0-edea82f25325"
        },
        "item": {
          "id": "76b38953-481c-451a-a1b0-3c434fb3de51",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "54eebbe8-d777-4878-84dd-edf3953c2070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e82f0b-58c5-459b-8499-79460f1bccea",
        "cursor": {
          "ref": "a3328298-88eb-4ef2-90d2-4963478f975a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "63a30837-e830-4565-b7e8-e6f77f94ca88"
        },
        "item": {
          "id": "e3e82f0b-58c5-459b-8499-79460f1bccea",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "501d615c-f9bf-48fb-a3e6-b7f287bcf2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1543ccb8-f564-4873-8ad2-594277bda06e",
        "cursor": {
          "ref": "579cb07a-fba2-4c5b-bda0-2cbd8724bdd8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bbc3ef86-2a79-4107-878a-1fbf84c935e3"
        },
        "item": {
          "id": "1543ccb8-f564-4873-8ad2-594277bda06e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dcb23f47-3c52-466e-9d47-0134a477f5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e79efb-91fa-4075-ab18-57403541b99b",
        "cursor": {
          "ref": "ea46c3e4-ab9b-49ef-8e84-d2d3990d72af",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1afb85d4-e397-4014-a35f-27f9a1c46695"
        },
        "item": {
          "id": "e7e79efb-91fa-4075-ab18-57403541b99b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f6e2ec3c-99ef-4645-97ee-ed93f81afef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b132f0f0-b078-4dd6-bf1f-8915b4d08f41",
        "cursor": {
          "ref": "8b325de0-7638-4d72-811f-fc3e5065981b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8472a7fa-7bb7-459e-b9e4-e44e1bfbbbe3"
        },
        "item": {
          "id": "b132f0f0-b078-4dd6-bf1f-8915b4d08f41",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d4dcbd45-b21b-42ab-bf6e-8951d9057201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ff2c5f-41b4-4a0e-8b93-2ae9b497c0be",
        "cursor": {
          "ref": "4f8e2079-94b2-40bf-91a0-9cc8530f847c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d7db652c-bb86-44b1-859c-477f6b824ea5"
        },
        "item": {
          "id": "b0ff2c5f-41b4-4a0e-8b93-2ae9b497c0be",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e781c749-3f15-440f-972b-1b23c55dc1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ee8ba3-3aea-4ca1-a657-e2504663451b",
        "cursor": {
          "ref": "053b4fa8-c913-4a19-a51c-f6ad25a7f361",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3975f4a5-83e8-48f6-9f60-af39900881ed"
        },
        "item": {
          "id": "22ee8ba3-3aea-4ca1-a657-e2504663451b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ed967694-391a-4aed-9bf4-4dbd394c0fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198d786-98bc-4359-8ef4-424e576b162a",
        "cursor": {
          "ref": "0211560d-8a6a-4725-af1c-f0f011814f38",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef4dd0a8-1170-44cd-9f17-ece21ff4e0e4"
        },
        "item": {
          "id": "8198d786-98bc-4359-8ef4-424e576b162a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "525d6dc1-d08c-48bb-8859-d8a4963b71ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556923ec-459a-4884-afec-ae28c115a18f",
        "cursor": {
          "ref": "b53ba335-5940-4e6b-904c-57474b5f896d",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0ca46bbe-4283-401b-9787-d6efe9d1ea07"
        },
        "item": {
          "id": "556923ec-459a-4884-afec-ae28c115a18f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a7bcc93b-f336-4eea-838e-1b29f68ce331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e12b6c-cc9f-4491-80b2-22e886cb4004",
        "cursor": {
          "ref": "f57e6a2d-f296-4c00-9a24-6db7b9e81941",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1229c8e9-af44-44b1-bcb9-d39275c153fe"
        },
        "item": {
          "id": "27e12b6c-cc9f-4491-80b2-22e886cb4004",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f511d495-8503-4788-b5bf-9d7202512d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d992535-f96c-4d39-8607-2365f9c696f7",
        "cursor": {
          "ref": "69017e11-2d45-4dd4-8dd8-98f6160412f3",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "855188e7-f318-4204-99a6-b851953dfd1a"
        },
        "item": {
          "id": "4d992535-f96c-4d39-8607-2365f9c696f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bc603d38-a3c6-42ff-8f82-a70be2171a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf433528-fdaa-4fd3-8f94-c1232c7b7c68",
        "cursor": {
          "ref": "377e0d67-8054-45ad-926d-071785308c0c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "96619b69-5b1f-4d54-96a5-a79e67e26fee"
        },
        "item": {
          "id": "bf433528-fdaa-4fd3-8f94-c1232c7b7c68",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ceaa8411-d25a-4d24-a675-f0fc756f1c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119c734e-fb02-402b-bff4-434bd0179725",
        "cursor": {
          "ref": "972c9967-4aee-43b8-837d-f0f408f2f864",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f77431ce-fe36-4b71-820c-67ba70654809"
        },
        "item": {
          "id": "119c734e-fb02-402b-bff4-434bd0179725",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aa87cf41-e457-4d6b-b890-dc81f2a68544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4171ae7-247d-4557-9a1b-47e9423173d1",
        "cursor": {
          "ref": "24183ce1-094d-41ea-9c59-81a689b84a40",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "40171b4e-d17e-47af-a2d6-256f1bc261e3"
        },
        "item": {
          "id": "f4171ae7-247d-4557-9a1b-47e9423173d1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "587e9b5a-b881-49b3-afea-2c1bfe9d28e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cf7425-75eb-4f48-8c33-02838669d811",
        "cursor": {
          "ref": "cffda8cd-e667-4b7c-9171-eb7dd1ee8d34",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dd0033e8-e45e-44df-8b82-1a5c24bbd43e"
        },
        "item": {
          "id": "68cf7425-75eb-4f48-8c33-02838669d811",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dfdb17d2-d54f-491a-a122-8b82408a88cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7632b4e-2992-47ab-8ada-cee1dc68d587",
        "cursor": {
          "ref": "4117a154-b8e5-48b8-8974-d738d3277900",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d432675e-c768-4d62-ad7a-f3ff4e30e7c3"
        },
        "item": {
          "id": "f7632b4e-2992-47ab-8ada-cee1dc68d587",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "abf12f3c-1f15-458c-97ca-8214f0cee467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed386d2-aafe-4fdc-8304-f393097ee14b",
        "cursor": {
          "ref": "ff3cd69c-19f0-4570-a1e7-4f0c7942c1a3",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33bfdf29-8707-4ab4-a4af-233ea1c7d28b"
        },
        "item": {
          "id": "9ed386d2-aafe-4fdc-8304-f393097ee14b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1ae7bf8f-7368-40b6-932d-1f2278a6822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fd5008-733e-400e-bd19-0cb2981ef5e2",
        "cursor": {
          "ref": "48701cb1-f2f4-4aad-87b7-e106ce9e82a5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c92db526-ad16-4ed5-8608-2d8993b4dacc"
        },
        "item": {
          "id": "00fd5008-733e-400e-bd19-0cb2981ef5e2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "16f8b3c7-94fe-4521-98c5-0eefb2c713a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5d6371-0e2a-41fd-926e-6c55ffc54f8f",
        "cursor": {
          "ref": "ffe90276-5bda-4ae7-80f7-0de4ce239282",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "84096f34-3e0b-444a-914b-c8248a177c84"
        },
        "item": {
          "id": "cd5d6371-0e2a-41fd-926e-6c55ffc54f8f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7344c929-57b9-4ecb-bf48-f5adc1164bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5c3a41-559d-4617-bf74-9f05888d3c6d",
        "cursor": {
          "ref": "d774ae9e-9125-4182-80de-dd0050ebf378",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4c63540e-a31f-4c8b-adce-c79d53708b65"
        },
        "item": {
          "id": "af5c3a41-559d-4617-bf74-9f05888d3c6d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5892404f-ee0f-40cf-9428-cce15990165f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6973b7ed-ca16-4ae1-9254-ac1f432ef750",
        "cursor": {
          "ref": "42ba7bfd-67fb-45e9-a8d9-c66f2dadd9a0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e48a8b8c-7a9f-4b11-96fd-d4a74dc5c783"
        },
        "item": {
          "id": "6973b7ed-ca16-4ae1-9254-ac1f432ef750",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "db13e5c5-9a48-438b-9926-b540b959503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd045e-9972-4ae2-8f7f-c64e48a31bbf",
        "cursor": {
          "ref": "06eaaa9e-98a1-4633-aad6-384c7b7fb1ab",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6c58bfa3-0639-4764-8e8d-293cb386f6b0"
        },
        "item": {
          "id": "2cdd045e-9972-4ae2-8f7f-c64e48a31bbf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c3bd2656-9f9f-4692-bf48-93a3fe23ca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4486a2-6985-4d28-8ab4-8966254e883b",
        "cursor": {
          "ref": "bc862e17-d9bf-4246-b066-568d3fe90ab0",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "50a6b9e7-29c9-47c2-bbe1-be7026a46d5f"
        },
        "item": {
          "id": "1c4486a2-6985-4d28-8ab4-8966254e883b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "db6738b4-f012-4b8e-92cd-7f0cf796da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68cfbe9-023b-4b01-ab72-8e71accd610f",
        "cursor": {
          "ref": "d66e466d-4693-464e-9e66-b3b1729c0cb3",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09770119-a19e-4e3a-8290-8f6edfc031d6"
        },
        "item": {
          "id": "b68cfbe9-023b-4b01-ab72-8e71accd610f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71a760a8-6bee-4b1e-9ff8-20d8ec5b5b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fdf02d-af64-495a-946e-2366eaffd837",
        "cursor": {
          "ref": "26f5fa81-5113-4045-8575-bdcbca7dcdb3",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59973fe2-982c-449c-bf30-ccf417458f5b"
        },
        "item": {
          "id": "48fdf02d-af64-495a-946e-2366eaffd837",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4c972a48-b289-4d93-b363-ef702a887655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced4cd42-8327-46bb-a178-d20838f83d3c",
        "cursor": {
          "ref": "b2745c2b-3eb0-4aff-af66-5f3b97fc9a5e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5de11f85-ce2b-4cbf-9283-07ce2ede594a"
        },
        "item": {
          "id": "ced4cd42-8327-46bb-a178-d20838f83d3c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b2d68043-7df3-4d1f-91f5-13b9a230170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bde0141-fca0-4254-b660-bedb28f2b63c",
        "cursor": {
          "ref": "b51aeb60-48e1-4b37-8f02-91194fc60b04",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d62d10d1-bb96-4f7e-a0a6-2a41045615ab"
        },
        "item": {
          "id": "4bde0141-fca0-4254-b660-bedb28f2b63c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "308920e7-14e4-404c-b1e3-613501318f8d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb62cbf6-e57f-467f-891a-0fee4fff6794",
        "cursor": {
          "ref": "cfff5519-8447-450c-9a3f-c137860ca834",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0ae135de-e488-4058-8778-b14668eaf356"
        },
        "item": {
          "id": "eb62cbf6-e57f-467f-891a-0fee4fff6794",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "329f7f49-6786-4dca-a9c5-97f6dc03dbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5fa73e-c721-4f4d-bce9-44216c8ed2b7",
        "cursor": {
          "ref": "2db6d080-eafd-46de-a68c-d5cae99a3bcc",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6548ffbc-ddd5-4a8c-ad96-0a7ad244068b"
        },
        "item": {
          "id": "ef5fa73e-c721-4f4d-bce9-44216c8ed2b7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "67263ed4-e2c1-49c1-8346-5f2bbfb4ef76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f13158e-7991-484c-a958-8a3b2a7e397c",
        "cursor": {
          "ref": "550f34cc-5b02-4143-aedb-15ea829f2932",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd497fa8-db5a-4aa1-9e99-2b1c6c129b66"
        },
        "item": {
          "id": "7f13158e-7991-484c-a958-8a3b2a7e397c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8b7c2a59-b6e6-4531-a665-07c1a98c9c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1df522-766a-48bf-8534-5420bf872b7f",
        "cursor": {
          "ref": "5b57f533-20aa-41cc-86fe-9c3cb8628f64",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "46e58373-89f9-4cf9-b14a-2c6952eca977"
        },
        "item": {
          "id": "4c1df522-766a-48bf-8534-5420bf872b7f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "673a1a64-dda2-487d-8ab5-ac97bc13ecda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c05709-6fa4-4163-af3f-6d188c2d11c2",
        "cursor": {
          "ref": "972b52dd-4f73-4424-9623-14be6fb5c987",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4c0a53b5-1275-4f9b-8687-c7ff7d87e078"
        },
        "item": {
          "id": "26c05709-6fa4-4163-af3f-6d188c2d11c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0909516-7e02-483a-b14d-bfbab0dd8c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26454404-a2ce-4b38-a7fc-6858fac0bf15",
        "cursor": {
          "ref": "88cc78d0-7ad4-4e2a-bd5c-64f0e9b8a8d7",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bc045d64-413a-41fc-956d-934f9d988601"
        },
        "item": {
          "id": "26454404-a2ce-4b38-a7fc-6858fac0bf15",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e42e56b4-5e9c-4d64-ba69-d3b424f1f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f0393b-44d5-483d-a6f0-4d30ba489965",
        "cursor": {
          "ref": "d9f2aafe-afc3-4e59-b74a-513d8938aeff",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bdfd97bb-e539-4002-b294-5eb153617ae0"
        },
        "item": {
          "id": "56f0393b-44d5-483d-a6f0-4d30ba489965",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "58c7ff47-b63a-4675-8bda-7917850e6503",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b1748-addc-4836-ac7e-dea4c3bc43a1",
        "cursor": {
          "ref": "6d4c0357-379b-4722-8516-5fc318eb3458",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "908ae7e2-4b74-498a-a7c8-3fd0be5577af"
        },
        "item": {
          "id": "e53b1748-addc-4836-ac7e-dea4c3bc43a1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1644ceee-7b3d-4838-9252-cc0ec1b81f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41e4b19-e883-45d0-a73a-4ad11e3ea999",
        "cursor": {
          "ref": "d7b3bf54-a3ac-4647-9675-f9f81dcf04e1",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1b9a39c3-8636-4a6c-a744-b21702227937"
        },
        "item": {
          "id": "a41e4b19-e883-45d0-a73a-4ad11e3ea999",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5bb1fb91-59d9-458c-acfa-da13519f9c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a527429-b83c-4f28-b41b-ab65f18c086f",
        "cursor": {
          "ref": "918bd358-c177-44d1-a4d9-9383e59cb0e1",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b7dc627d-7e2c-4985-94ad-9574c03dd16b"
        },
        "item": {
          "id": "4a527429-b83c-4f28-b41b-ab65f18c086f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9d22cc3a-a748-4095-a04c-df7e695ddac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab84bb7d-4313-4361-b089-7c563f6fb815",
        "cursor": {
          "ref": "7de883f0-d1d4-43d4-85d2-ef15a77bf1f0",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ccb4954-1a65-4200-bd20-8ed1b8af623e"
        },
        "item": {
          "id": "ab84bb7d-4313-4361-b089-7c563f6fb815",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a168b39-5296-4e76-8a51-9fbc8684ba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0c9bf-9444-4a4e-8ccd-3d56159a2d84",
        "cursor": {
          "ref": "a28da2e1-d78b-4e95-a732-133c680f47c6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9e70b556-4220-4535-b913-fb234185e738"
        },
        "item": {
          "id": "d1e0c9bf-9444-4a4e-8ccd-3d56159a2d84",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "26a102fb-ecef-4ef3-9f82-cbee194d427b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c6838-f636-43b8-9447-be75e498d0bb",
        "cursor": {
          "ref": "c2bcf5f4-63ee-4bd8-9c5a-25bbe6d9e377",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bbea70aa-f912-4cce-9a83-059c2fb89aff"
        },
        "item": {
          "id": "d78c6838-f636-43b8-9447-be75e498d0bb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc4f673a-51e7-4d20-a33c-27d667051446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b4667-8b9d-4dcf-be87-0558b20f4e08",
        "cursor": {
          "ref": "c81a6020-b764-47d3-beec-300bb2bbe58a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "020df683-c92d-41d2-96bc-d6d7c7242eac"
        },
        "item": {
          "id": "1e1b4667-8b9d-4dcf-be87-0558b20f4e08",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1bcfc0d6-f76a-475f-8964-5ceba6408ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dcdd7c-1cd3-419e-9a52-14ff220b7156",
        "cursor": {
          "ref": "05cd6e18-1f2e-4e22-ac69-0c62334c6ae9",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f96a1d1b-aac5-4910-a8f1-083cb02592ef"
        },
        "item": {
          "id": "f5dcdd7c-1cd3-419e-9a52-14ff220b7156",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e7b27aba-4338-4f3c-831a-714b2474574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422bdbda-7e55-44f3-b6e3-5199cd76f90a",
        "cursor": {
          "ref": "b7f8a352-0b82-4802-b15b-accc2a0dbe51",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2bdbc6ff-266f-44a8-bcc2-f8c868dbe45a"
        },
        "item": {
          "id": "422bdbda-7e55-44f3-b6e3-5199cd76f90a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "88454ff1-7b43-4d9d-94cf-e49ce01dd0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45e82b8-6f00-4b78-8288-7ec5d8d8de0c",
        "cursor": {
          "ref": "d3102cb8-358a-473f-bf01-ceec303e28ab",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e5847fe6-2c0d-405b-9f1b-35a85dc9709d"
        },
        "item": {
          "id": "b45e82b8-6f00-4b78-8288-7ec5d8d8de0c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cbd5b891-c121-4da8-b81b-bd2e79d7030f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4373820b-5d36-4c96-b88a-d38f7ee04341",
        "cursor": {
          "ref": "f8e729bd-7d75-44e6-8b72-ad464cb5409e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1fe2d8e-9f80-442c-b32a-926f06433226"
        },
        "item": {
          "id": "4373820b-5d36-4c96-b88a-d38f7ee04341",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9acdfe1a-2b7e-4016-b936-845fd3685135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe52d93-c6da-4684-ba86-772737296b6c",
        "cursor": {
          "ref": "a9d0d617-05e0-4eaf-ba7a-80aec568b614",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6d0e13c-785f-41db-9190-fff3e38787a5"
        },
        "item": {
          "id": "ffe52d93-c6da-4684-ba86-772737296b6c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1732b4e7-afe5-48ca-8246-13c52c01c710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cea042e-c370-4a82-ba15-3aeeb93e87b4",
        "cursor": {
          "ref": "b3a82537-6c0b-4ea2-a8af-8a65f11ef679",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a12c6b5a-17a5-420e-8b98-246ad9ec8327"
        },
        "item": {
          "id": "0cea042e-c370-4a82-ba15-3aeeb93e87b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c8d5a2a6-3423-4b62-9aac-277ac43f0fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a13a1d-185c-4f23-b849-f3d9021a3ca0",
        "cursor": {
          "ref": "f4f09710-8df8-4474-b9a5-1f6f906d623c",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "254bc312-e2c5-4647-a895-6e5c34f17079"
        },
        "item": {
          "id": "c2a13a1d-185c-4f23-b849-f3d9021a3ca0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "41436c73-5828-4597-aef7-585ac0c9035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bcf8b6-55e5-40f2-bc84-2002fbd14a8d",
        "cursor": {
          "ref": "cd556cf9-84e6-4db5-97b5-69c7e0574f72",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90f1287a-3e3e-4c31-b0c2-7b91e5e3bc62"
        },
        "item": {
          "id": "22bcf8b6-55e5-40f2-bc84-2002fbd14a8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c198f0c6-d3d3-4239-854b-cad60b05fb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df531f-3a4a-4449-b50e-a2046a51de8e",
        "cursor": {
          "ref": "58c59ce5-b64b-45f2-a786-a1f276345be7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b2b677d-4165-4eb8-a6fc-06fe2514644b"
        },
        "item": {
          "id": "c0df531f-3a4a-4449-b50e-a2046a51de8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39bf6e16-2849-470b-a600-f6ebda0f17e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3cd290-f041-4c32-b8de-94b3b67680aa",
        "cursor": {
          "ref": "e1b92c06-47ef-46e2-bc8b-625faf88635d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f9a2c85b-79ed-4d58-9a89-b59212c0a815"
        },
        "item": {
          "id": "3d3cd290-f041-4c32-b8de-94b3b67680aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b259b16f-cc42-4489-a2ee-259bf85a7799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3008e7a5-9b6e-4162-a225-7986e9c7f1fc",
        "cursor": {
          "ref": "81f0cfdd-188a-4bcd-814f-70bbe1e17847",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0e892b76-fe4d-461d-bc73-083164748b40"
        },
        "item": {
          "id": "3008e7a5-9b6e-4162-a225-7986e9c7f1fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f28b7af2-ffc9-47f9-b9a7-ff8453b74ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6294b6-45c9-4d83-8b7e-e81d048a0e8d",
        "cursor": {
          "ref": "20fa0427-8e2d-46d9-8a42-ca43269a1ed0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4f422d3c-8045-421a-880e-6b61ee540ab7"
        },
        "item": {
          "id": "4a6294b6-45c9-4d83-8b7e-e81d048a0e8d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a545bbe7-6f05-4b29-b758-3433fbc8170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82086c1b-a46e-49be-9850-3c10ce552de2",
        "cursor": {
          "ref": "16a5b74c-5edc-4534-ab36-a77ee8beb785",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8919134-4efb-411e-9543-65ff7579661e"
        },
        "item": {
          "id": "82086c1b-a46e-49be-9850-3c10ce552de2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f65de2bd-ffbe-4bf4-9a91-fccb904d81f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c181827-9b8a-4d30-ab2f-94f1907646d3",
        "cursor": {
          "ref": "d698328c-df05-4f3a-807e-f8ee8e3030c8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2c9317fa-1cb8-4910-808b-42251db854e6"
        },
        "item": {
          "id": "6c181827-9b8a-4d30-ab2f-94f1907646d3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "945c627c-10bf-45e5-b479-7cbbe37d2c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eea8a55-6cf7-4a02-85d8-978c49c39873",
        "cursor": {
          "ref": "d89faf92-d47b-4a2a-b982-313fb55b9801",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2f85516-feb4-44c2-a9eb-974f725725c8"
        },
        "item": {
          "id": "5eea8a55-6cf7-4a02-85d8-978c49c39873",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73b53b1d-54ff-4fbc-8c60-b8a329262971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d906b810-fe45-4925-be39-0ee127823bc3",
        "cursor": {
          "ref": "69a845d2-d053-4d17-950d-a18e12a96816",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87e80efb-2cd5-4a85-a101-2ccdcf121ee2"
        },
        "item": {
          "id": "d906b810-fe45-4925-be39-0ee127823bc3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1065f3c3-7438-4814-a705-be7cfc0b5050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9385af43-e9bf-457e-ba88-4594563e99d6",
        "cursor": {
          "ref": "d670884d-c1f4-462c-83b8-49a4c1edfc37",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d015af20-8f23-47e5-a815-c4bb6659c83a"
        },
        "item": {
          "id": "9385af43-e9bf-457e-ba88-4594563e99d6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "27122e8e-a2e5-4025-8cdf-fd837a7f19d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88ae545-bb95-4fb1-9acf-624996ed3bcb",
        "cursor": {
          "ref": "fb43cdc6-c28b-4b3e-926a-b05b70a3385b",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c39972cc-0a77-46f4-80a9-03180ac20e5a"
        },
        "item": {
          "id": "e88ae545-bb95-4fb1-9acf-624996ed3bcb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a6486a5-0741-4c9b-b690-9f4d21a9044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c778cbfb-b095-452c-a59e-b1cd2f55c102",
        "cursor": {
          "ref": "82781faa-a802-4266-b314-a171e40696b8",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff72b829-bab8-43cf-abc1-6281f12ad27f"
        },
        "item": {
          "id": "c778cbfb-b095-452c-a59e-b1cd2f55c102",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "19478f99-edbd-4a2d-8bdc-ae74ed311f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1f5862-6c07-4998-90d3-88961da6b344",
        "cursor": {
          "ref": "2ca46ff9-ebfe-4930-8594-0df609a14236",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1cc239d6-2a09-42d3-b1b5-0bf158b60207"
        },
        "item": {
          "id": "bb1f5862-6c07-4998-90d3-88961da6b344",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75ea44c2-48de-40d2-8c0d-888c9949f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df936801-be0e-483c-ba61-6b9bdd4f37fc",
        "cursor": {
          "ref": "35c111b2-f059-408d-a5f6-2e860ce1e9e6",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4fcf59a1-f04a-4b8a-aa79-f46b1d3fc9b0"
        },
        "item": {
          "id": "df936801-be0e-483c-ba61-6b9bdd4f37fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "254a8039-e4f0-4f87-b70e-a37b9ea5f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1541132-1951-42c9-85be-336e1005b27e",
        "cursor": {
          "ref": "58787652-f040-4209-8a26-20d2815db33c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6ed23f11-23bb-44ef-b11c-acac0a1e52c7"
        },
        "item": {
          "id": "f1541132-1951-42c9-85be-336e1005b27e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d03d3a13-a17f-4639-bd0f-d7cdc683f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c5ead-0ba5-4006-bf3a-80c14d716679",
        "cursor": {
          "ref": "603eb9f9-7077-4b71-bc66-f42104da27b7",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "73ad15c4-02f0-4ac3-ad49-ea855284bc44"
        },
        "item": {
          "id": "be9c5ead-0ba5-4006-bf3a-80c14d716679",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bf2fee25-33fc-4424-9a14-a2bc8cf60181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbbd0c8-c0d0-4a2a-b1a7-cfdac41613b5",
        "cursor": {
          "ref": "b081679d-8d25-4a7f-b60c-335a02315152",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99341008-3800-4706-bb36-196d2060680f"
        },
        "item": {
          "id": "1cbbd0c8-c0d0-4a2a-b1a7-cfdac41613b5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "33a2c738-fe8d-4090-813a-914af468a461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77446f1e-a970-4892-8f89-bbc69dad15c2",
        "cursor": {
          "ref": "5dab70a2-6474-431a-a76e-247e8362c389",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3545845d-8e86-464f-9911-1ec7565af397"
        },
        "item": {
          "id": "77446f1e-a970-4892-8f89-bbc69dad15c2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ca162a4-00d7-484f-b185-f4ad35c68c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae0fa8-a3cb-4272-8509-991d08ef0b6a",
        "cursor": {
          "ref": "bd4502a4-eb2d-4dcf-be5f-2eb27932eb7b",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c2e3c797-c87e-4103-a184-56e7e169f7cb"
        },
        "item": {
          "id": "0aae0fa8-a3cb-4272-8509-991d08ef0b6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e75b09df-9644-46c7-ba40-5324252ddf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4ea19-f5c7-46f3-bc76-51695af4756c",
        "cursor": {
          "ref": "84a7e014-68c5-478e-b68b-bb0ecbd27b61",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "90510a3f-a67b-4e70-b549-3f434b311387"
        },
        "item": {
          "id": "c7c4ea19-f5c7-46f3-bc76-51695af4756c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6522f014-8e28-4c91-9b30-063ff6b5434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f75e3c-9c24-4bb8-95eb-6f505025051c",
        "cursor": {
          "ref": "123e5152-5808-4278-8539-5f92ed42a7d9",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4385d9c2-4ac1-4289-8b0b-548359d65669"
        },
        "item": {
          "id": "24f75e3c-9c24-4bb8-95eb-6f505025051c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f84d5bef-7079-47d6-979e-145674974098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580eca08-d7a9-4626-804d-cab37ec1cad4",
        "cursor": {
          "ref": "f7cec505-7bc2-4de0-b122-4d97614d14b4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "89e4a0ca-cb4b-4359-a9be-3fb1c188f81e"
        },
        "item": {
          "id": "580eca08-d7a9-4626-804d-cab37ec1cad4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "684ee3f8-2d59-4d54-b175-ba82bf59b6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f15dcf-4928-4948-a8ad-770382156220",
        "cursor": {
          "ref": "bae31add-f06e-49a8-82ea-cfea5255b1c9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "012a2491-b27e-4d89-b232-7e2bd21d3d25"
        },
        "item": {
          "id": "f0f15dcf-4928-4948-a8ad-770382156220",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cbbf3466-3294-4d1f-9254-9fdff3a2296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b4b8f-824c-4948-9a46-0c734f3e7409",
        "cursor": {
          "ref": "24e14679-6638-4054-ae8d-82ade39d9a48",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e8c0603-3044-4a66-b882-9b0bd71d621e"
        },
        "item": {
          "id": "848b4b8f-824c-4948-9a46-0c734f3e7409",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1c79da51-3530-47f3-ac07-30179b12eb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c2f4ef-7cd3-48cd-8cd4-58b696fe3e3a",
        "cursor": {
          "ref": "712a1cd5-13af-44c1-ab00-a03fa29acc3f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d92cbbfd-ae98-4800-a6c3-7af059270a4b"
        },
        "item": {
          "id": "c8c2f4ef-7cd3-48cd-8cd4-58b696fe3e3a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "67dbee0a-8f06-447b-aa7f-359d296c731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde1b298-1c6f-4d1c-99d8-1f8af7a7e7f5",
        "cursor": {
          "ref": "f1a001e7-380d-4238-80fc-9876d868b52a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "971cefba-adc9-4779-8867-cd713f110d62"
        },
        "item": {
          "id": "bde1b298-1c6f-4d1c-99d8-1f8af7a7e7f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "17d017d0-96d6-48e0-a69f-2bafd80bebf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e974c8-39f3-48b6-9646-e34f8645eb8f",
        "cursor": {
          "ref": "c9f08812-81a3-4421-9856-071ba0fbd33e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d1fbe5b4-4c66-425e-851d-ec4469fedd18"
        },
        "item": {
          "id": "03e974c8-39f3-48b6-9646-e34f8645eb8f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d6eca337-5b7b-4c2e-ab22-86a109f5327d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983bf07-fd03-4ffc-990b-846721211346",
        "cursor": {
          "ref": "90871275-5fff-44c1-a419-cb1bb0fef3a3",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9acf76fe-e752-4a15-b74a-4120141c538f"
        },
        "item": {
          "id": "6983bf07-fd03-4ffc-990b-846721211346",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "65696f78-9a70-496c-a47c-594f372040c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aec26b-288d-439a-bae1-c8ff81f935f9",
        "cursor": {
          "ref": "3455b95e-7c68-4a60-bbbd-3e250b7335f4",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "940d2273-7310-4c7c-99c8-51455f2e4baf"
        },
        "item": {
          "id": "47aec26b-288d-439a-bae1-c8ff81f935f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3e8b4690-5701-4325-bde3-d2097a181349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fb2dee-5cd5-4815-904c-cb11a9450e44",
        "cursor": {
          "ref": "df65cd55-1c73-44ab-8555-bf4d4b196d47",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e9b95763-acf5-49b1-9125-84e746ba216f"
        },
        "item": {
          "id": "48fb2dee-5cd5-4815-904c-cb11a9450e44",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a6ff80cb-a010-4ac4-a7cb-8ffdb61ec029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113fa80d-08da-4b92-a02a-d8ced4032422",
        "cursor": {
          "ref": "c82270cc-1b5d-43ac-88ad-b4d329780424",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "92a57214-d700-4fdd-ba06-8c1580aec9ed"
        },
        "item": {
          "id": "113fa80d-08da-4b92-a02a-d8ced4032422",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5a996db4-65f7-4435-b24d-22bea8d05e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792561a2-815a-45be-8234-f09ee848ee9d",
        "cursor": {
          "ref": "32c6fca3-8444-4b2c-bd4b-cc532ef6f60c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ed2ad1df-7b43-4330-8940-6f5452fd84d6"
        },
        "item": {
          "id": "792561a2-815a-45be-8234-f09ee848ee9d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7889ba31-4848-4a29-9943-6dedb4e12029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e4b140-1fd3-4ecf-829c-0652bdc9956c",
        "cursor": {
          "ref": "23c7fb3b-3a03-475c-8bdb-02196a3161c7",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fec1f4c0-b92a-4b57-8463-f830f4cc29f0"
        },
        "item": {
          "id": "d5e4b140-1fd3-4ecf-829c-0652bdc9956c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1622aa9-29dd-481b-927f-5b3a21d06702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92393583-f8fa-40ac-8cef-a56e60e74e30",
        "cursor": {
          "ref": "f5798850-5387-4978-8c9a-1bad2c83c4df",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "045d21e6-d5e7-41e2-8dab-22c6cc2c5f0e"
        },
        "item": {
          "id": "92393583-f8fa-40ac-8cef-a56e60e74e30",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a1af1d26-e5d1-476f-b94e-fc6bbc16f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a65e4-e66c-491e-958f-2453a7dde43d",
        "cursor": {
          "ref": "12a30ff0-caa0-476f-acf4-d7bfd802d9f6",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e6ae3a45-c7d0-4572-9db5-5f0abc26367a"
        },
        "item": {
          "id": "5f0a65e4-e66c-491e-958f-2453a7dde43d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18b322aa-ab83-40e2-9fe6-4112c9f56245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77644c5-bc4f-4480-9063-64e3d08b30cf",
        "cursor": {
          "ref": "4a298d0f-865f-4040-9204-f75fe83dd58d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c39e9d33-bf96-4d39-9613-fd34c4af8681"
        },
        "item": {
          "id": "c77644c5-bc4f-4480-9063-64e3d08b30cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f92847e5-f88a-44b6-a1fd-3452899b8db9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c9e76f-51c4-4ba8-bab5-d739fe90333b",
        "cursor": {
          "ref": "1f0a7954-7733-4b1d-ba0c-5f11256606ab",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7ebdd86b-8e3a-4c09-99e2-fd646c9104d3"
        },
        "item": {
          "id": "52c9e76f-51c4-4ba8-bab5-d739fe90333b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3da8bafa-a2bd-49b0-9503-81ce2a810297",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 131,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5326243-1fe9-436f-8e1b-4c70c48b7404",
        "cursor": {
          "ref": "2176411b-2cb8-4d00-88aa-4e3277c63f8e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2ff98f14-dc90-4c42-85d7-056b65597a68"
        },
        "item": {
          "id": "e5326243-1fe9-436f-8e1b-4c70c48b7404",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4480df30-0172-491e-a340-d87c31c5b966",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "85094a60-14dd-4896-a37e-ff69584b6853",
        "cursor": {
          "ref": "d3de0c8c-ff0b-4130-b9a0-b1f17a789ce8",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "61e026e2-4dc5-4a17-932e-cfcaa5ccf71b"
        },
        "item": {
          "id": "85094a60-14dd-4896-a37e-ff69584b6853",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "52e4e75e-f5aa-42d8-8ad2-037934dc76ae",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d2390-a57d-4228-a3b9-c27d94c03060",
        "cursor": {
          "ref": "b7ff8789-b3a7-4908-b2ab-326025703897",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b57d78c6-1ff9-467a-8246-0a2536f9a9a8"
        },
        "item": {
          "id": "ab8d2390-a57d-4228-a3b9-c27d94c03060",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7ba19823-25be-48ac-889c-4d448a1b77b9",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "76689100-b527-4108-b721-449fc94d1b6a",
        "cursor": {
          "ref": "00fd3034-74f5-4a04-9e17-bae6f7288118",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1d58ceef-0807-4554-80d9-560448523781"
        },
        "item": {
          "id": "76689100-b527-4108-b721-449fc94d1b6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6575e81a-44cf-4771-93f3-7a55511d95d3",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ab038b-4c52-4ece-b488-86f8f0cd8edb",
        "cursor": {
          "ref": "94c889d2-f99d-4ef5-8b2c-296a184789b3",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d123b9b3-5c88-4261-bc40-caf12bb726c9"
        },
        "item": {
          "id": "25ab038b-4c52-4ece-b488-86f8f0cd8edb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6fe7507f-f322-474e-8393-549054a91499",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f28f45-85a0-4ecb-a687-cc5c9754d602",
        "cursor": {
          "ref": "919d598f-aa9a-4241-931c-45ddb50c1feb",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ddaf8c76-d4d7-43dd-bd4e-2332bfb2f9e2"
        },
        "item": {
          "id": "f7f28f45-85a0-4ecb-a687-cc5c9754d602",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fb9c1a8a-e0a4-45b0-aa98-1c4586476524",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847295df-2a76-4e33-b526-5548ebc372e1",
        "cursor": {
          "ref": "c611795e-d515-40f3-aa1a-664015ab851f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f2428ab2-38cd-476c-b2e2-3885c406e976"
        },
        "item": {
          "id": "847295df-2a76-4e33-b526-5548ebc372e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "deb601a2-743c-459a-973f-d67548cb43fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847295df-2a76-4e33-b526-5548ebc372e1",
        "cursor": {
          "ref": "c611795e-d515-40f3-aa1a-664015ab851f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f2428ab2-38cd-476c-b2e2-3885c406e976"
        },
        "item": {
          "id": "847295df-2a76-4e33-b526-5548ebc372e1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "deb601a2-743c-459a-973f-d67548cb43fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079faf3b-3286-43d4-a27c-d888a431dec2",
        "cursor": {
          "ref": "a202abd1-9e2e-4654-81ae-2007a507e44a",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c3af972-f568-4f6c-9e97-48a8d49f081d"
        },
        "item": {
          "id": "079faf3b-3286-43d4-a27c-d888a431dec2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62f00ca5-9928-4050-83e0-cf246555fab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c83e7-6e77-4a40-a23a-a00ec339f43d",
        "cursor": {
          "ref": "5a6ad26d-50b0-4a15-8ad9-f83d326e8f7b",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "36cfee39-cad0-474d-a688-8a5baee0b242"
        },
        "item": {
          "id": "eb2c83e7-6e77-4a40-a23a-a00ec339f43d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4695307c-f3b5-4ecf-8a14-fd7ff5b90d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ddee8-5e15-47e8-9265-d8c28fa2f81d",
        "cursor": {
          "ref": "b75d54a5-b4ba-4cbd-84c4-9dd0a07560cc",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4773293-50ce-42c0-b5d3-f434db0993f8"
        },
        "item": {
          "id": "ae0ddee8-5e15-47e8-9265-d8c28fa2f81d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "141f471f-d616-4f84-8814-0182abdd5a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a483099f-7478-4a45-aa98-941e4b23862c",
        "cursor": {
          "ref": "d822dfcf-7b91-49d0-9b61-11d07bccc608",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "65d9315a-1541-4bcf-831f-6f628cdbd8b1"
        },
        "item": {
          "id": "a483099f-7478-4a45-aa98-941e4b23862c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f313863e-3659-4e9f-b4bf-81ba0bcb44f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f2fd90-1d58-4f39-961a-8135d1cb319a",
        "cursor": {
          "ref": "c4fb0ac6-c230-4a5a-82d0-8ab9c34ff146",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "41556aea-869d-4a5c-b5fe-49baa2118a09"
        },
        "item": {
          "id": "98f2fd90-1d58-4f39-961a-8135d1cb319a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4c54f1ae-b25f-4e9f-8df3-27a9d4321dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fce7c33-0baa-408d-867f-754e5dcc1fe2",
        "cursor": {
          "ref": "c618a3ec-4c8d-43bb-816d-d7b6715902e0",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e6b3c9f7-0bfd-46b6-afc7-cf621e921e00"
        },
        "item": {
          "id": "0fce7c33-0baa-408d-867f-754e5dcc1fe2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "18018507-7105-45b1-b5d6-c8662046704b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e28c59-fb32-4117-a8f2-59b74b3f16c9",
        "cursor": {
          "ref": "67762b43-8b79-4c9f-bd20-5d20d9336fb6",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a853a5ac-1527-4f53-8e58-ebdb97750801"
        },
        "item": {
          "id": "50e28c59-fb32-4117-a8f2-59b74b3f16c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dcf6cf9d-53b6-434d-8711-c7c9edd9232a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5e80d-cf71-4167-aefc-b73570ad89fb",
        "cursor": {
          "ref": "5bc6e487-de42-47ab-aec6-02b2f51f7df1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8192a4e6-6fa7-417c-9536-08940d828e81"
        },
        "item": {
          "id": "5bd5e80d-cf71-4167-aefc-b73570ad89fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c2c2005-05e1-4366-8209-e78550323fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d848897-607d-43c3-9f6a-c983b1a9dc1a",
        "cursor": {
          "ref": "434275ba-2276-41cd-83ac-96c504ac534b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1feed28-b2b2-4904-9e48-c59264593d7e"
        },
        "item": {
          "id": "4d848897-607d-43c3-9f6a-c983b1a9dc1a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d93c2a6-51ff-4c85-9403-7f269833124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a6206e-17b4-48b6-adaf-1bebfedb2fb4",
        "cursor": {
          "ref": "1efcf4a9-7d4f-45fd-b4f0-c378880ff32e",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "74f645d7-8de0-4bd0-b514-b8f40f64d7f8"
        },
        "item": {
          "id": "27a6206e-17b4-48b6-adaf-1bebfedb2fb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "016b947e-e96f-4301-b17e-c20c6768773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434bc007-9c1a-4beb-bb56-abd1de831d29",
        "cursor": {
          "ref": "7ad6d0ee-54d7-4ef5-975b-9e9e9254d381",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b617f63d-3848-4160-8ad4-a0b7152a3a0a"
        },
        "item": {
          "id": "434bc007-9c1a-4beb-bb56-abd1de831d29",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1bfa6bf8-15a8-4863-9dc3-40d01f3f676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba53ff-a4ae-4182-9dfb-293d69adbe15",
        "cursor": {
          "ref": "6070199d-7c95-466d-966f-5238979a274a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8eeeceb5-54f3-4a1e-a75c-75c67df59e84"
        },
        "item": {
          "id": "32ba53ff-a4ae-4182-9dfb-293d69adbe15",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ef018b7-e677-4c1c-a3d6-f1e8d78ebf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21265194-fd73-4a2e-8aa4-2b3b58f2881d",
        "cursor": {
          "ref": "0c2cf7ef-16b7-4ea7-94ff-7a55df82e32f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cf45764f-a5b0-44fa-910a-0dd1e72bea4a"
        },
        "item": {
          "id": "21265194-fd73-4a2e-8aa4-2b3b58f2881d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39b00f85-fba0-4210-a228-75331625d101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56a5620-8775-48f4-ad9e-1e21fe3374f3",
        "cursor": {
          "ref": "8449b640-c016-4507-9a92-69525249656c",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "623b5e86-52f3-4384-bffe-e4564ca59e39"
        },
        "item": {
          "id": "b56a5620-8775-48f4-ad9e-1e21fe3374f3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4d23e96b-9aa5-48be-8c1d-33c3a6b9b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b167d2-c7ad-4a3e-b51d-8c730977a536",
        "cursor": {
          "ref": "14767b20-dc5d-4a9f-a8a1-93e39bfaff34",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0fdcf700-80b1-4926-b0ce-75fb1f186470"
        },
        "item": {
          "id": "34b167d2-c7ad-4a3e-b51d-8c730977a536",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd62ae76-7cec-4028-a300-07c19b441050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae857ed6-3dc9-4b6e-8a79-1ea189a9387d",
        "cursor": {
          "ref": "d3584921-6844-4117-b1bb-c4fe3bd9b610",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f999f27e-888b-491a-988f-2f1d37906899"
        },
        "item": {
          "id": "ae857ed6-3dc9-4b6e-8a79-1ea189a9387d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46057056-e6b9-4c78-bf28-de53b8f5209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1c716c-bb9b-43a7-b63e-73b0dcdc64b8",
        "cursor": {
          "ref": "747a1ee0-49a0-4de8-befd-f9a7e368f437",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "99deced6-13a0-49bb-a90b-7d6335b0914d"
        },
        "item": {
          "id": "be1c716c-bb9b-43a7-b63e-73b0dcdc64b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "948d59f1-71a9-4645-83be-44fed2aeef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bac790-59d0-46e0-9407-ffe8bab9d0d0",
        "cursor": {
          "ref": "117e318c-c91c-4ee7-a347-6bdb0454cecd",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48437cf5-5c72-4b0b-aef4-f7cf8c46d6b5"
        },
        "item": {
          "id": "b2bac790-59d0-46e0-9407-ffe8bab9d0d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b5255db-c088-4c4c-a4f1-f9cfd5e0f00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b775ed-309e-42df-a9bd-b719efa3bc38",
        "cursor": {
          "ref": "72c89bd0-91dd-4ee9-92c0-cb01919afd61",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "229447eb-390a-47ee-a1a5-f1396f1c58dd"
        },
        "item": {
          "id": "f5b775ed-309e-42df-a9bd-b719efa3bc38",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f82ac1a-adce-4c60-b737-92c5459e080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cf9caa-4011-4941-a210-333f22d04550",
        "cursor": {
          "ref": "b106fb76-e588-4d10-bd70-4439b104b050",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "535887ef-ac11-4d58-98d1-9c61c0b6bb2e"
        },
        "item": {
          "id": "e9cf9caa-4011-4941-a210-333f22d04550",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdfc47b8-c3eb-43f7-9d02-ef8db9da4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224a026f-eb33-4522-b38a-4f9a6f2305af",
        "cursor": {
          "ref": "4704175c-f220-4291-8059-3a1a6e380736",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afb2f23d-a5a5-4736-8d58-b67809af3ba9"
        },
        "item": {
          "id": "224a026f-eb33-4522-b38a-4f9a6f2305af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a38b82e1-9dd3-47e8-8516-5f1749501f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1762e2fc-b72d-4d90-b9c0-033c1ca5f401",
        "cursor": {
          "ref": "8dabe4a9-9f3f-4db0-a126-494959437897",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ffd19013-06ae-44cc-a149-5f21656a107f"
        },
        "item": {
          "id": "1762e2fc-b72d-4d90-b9c0-033c1ca5f401",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bce7759a-7413-48e3-bf39-6bf005317b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6365bd95-769e-4e6c-8dab-ebea1af997af",
        "cursor": {
          "ref": "97df50da-c86d-4e24-b03b-28387716922c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d7e4525b-922a-4658-bd5c-409bf4874646"
        },
        "item": {
          "id": "6365bd95-769e-4e6c-8dab-ebea1af997af",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "433d76e1-1412-4618-b5aa-5a8b7f3079eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57e8003-e798-4082-adff-130f4c0b7ffe",
        "cursor": {
          "ref": "76f33293-1a68-4a16-a737-0e3d35f9ca23",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c7ab5eec-6f5c-4e60-a6ae-b58410bb85c9"
        },
        "item": {
          "id": "a57e8003-e798-4082-adff-130f4c0b7ffe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aaa57729-78a2-47db-8f5f-09056004dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8074a9d3-5bb1-402f-95d6-52a733b98e84",
        "cursor": {
          "ref": "df6656e3-8d7e-41e1-a858-68f04562e0df",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aa329a72-f1c0-4ea1-9c86-3c6b4d122515"
        },
        "item": {
          "id": "8074a9d3-5bb1-402f-95d6-52a733b98e84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1a1edf97-77e0-480a-9616-d69266473837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d13dd45-f5dd-4177-9801-6f7152185a67",
        "cursor": {
          "ref": "5b138eee-ef95-4443-8d3d-9e8bb31e3d0d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f9ff66ff-c9c8-4200-b714-57fd612ae33f"
        },
        "item": {
          "id": "0d13dd45-f5dd-4177-9801-6f7152185a67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f7d112c-f08c-474e-a199-a32cacd719b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569dfdd-0bde-4f34-b2ae-e14791e6ddb4",
        "cursor": {
          "ref": "8a0d8d79-4362-4659-9bb2-8f441f99b181",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "89fb5b58-7549-4fd8-bc3b-11d4cfb081e0"
        },
        "item": {
          "id": "9569dfdd-0bde-4f34-b2ae-e14791e6ddb4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b07a7f1f-fbf9-40b5-a674-9990d32c635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c90989-c85b-429b-987d-6ebc6cb48186",
        "cursor": {
          "ref": "980a8d0d-99e8-4399-89c9-8df5f8f46955",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3b6f9216-7f1a-41e3-9402-fb694d5995f8"
        },
        "item": {
          "id": "f3c90989-c85b-429b-987d-6ebc6cb48186",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "76fde30f-d0ed-4234-b8ef-3edd20de5ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d3d01-73d0-4e5a-82bd-8eec59425560",
        "cursor": {
          "ref": "1e5e0778-0963-4967-8b0b-ec042dbb1f5b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a1e25369-fb99-464c-8577-2371fac686af"
        },
        "item": {
          "id": "3b2d3d01-73d0-4e5a-82bd-8eec59425560",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "60cc4d2a-325c-41bd-a778-8a4e164e43f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179cc3c-2bba-4e25-bf60-1472a4d42fa5",
        "cursor": {
          "ref": "be908d30-b0e2-4276-9e2b-a6ba6be92955",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "94dadd20-6935-42b7-817b-1cf7f3217f3c"
        },
        "item": {
          "id": "b179cc3c-2bba-4e25-bf60-1472a4d42fa5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99f8cec9-7f6c-475b-b720-8174cfcef4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2309543f-3249-4e15-9f57-b0f23eb3894a",
        "cursor": {
          "ref": "39483478-15b0-42ca-96c3-130af620886a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a56baad6-471f-4d0d-b771-815c7e8e0a74"
        },
        "item": {
          "id": "2309543f-3249-4e15-9f57-b0f23eb3894a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5861134a-9234-456f-a29a-1afcf4f15989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa6f8c7-e522-4e81-b070-f5ff5949ac39",
        "cursor": {
          "ref": "73f504d5-c84d-4a25-9a10-0dd33b082d74",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "269394ff-5083-480b-9796-e8035e959068"
        },
        "item": {
          "id": "9aa6f8c7-e522-4e81-b070-f5ff5949ac39",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "51a7f6bc-a967-4c2e-9298-1293c0fea083",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814586ea-d4d5-40c3-87ae-df6175b43dbf",
        "cursor": {
          "ref": "66ebbf27-184d-4ab4-987c-714ca9d31afe",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fb698f2f-ae54-4d6c-9e11-d2fc7702264e"
        },
        "item": {
          "id": "814586ea-d4d5-40c3-87ae-df6175b43dbf",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "136562de-c84e-4305-bc54-d8eca6d204fd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8832d535-e6e2-4378-a645-d6c5a93dc593",
        "cursor": {
          "ref": "abc06aa1-200f-4168-8d0c-057e51cef858",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bfe44ef0-e8d7-44b4-b56e-ea54d8438df4"
        },
        "item": {
          "id": "8832d535-e6e2-4378-a645-d6c5a93dc593",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59f792f2-4ac9-4610-bc4c-e659415a424d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8832d535-e6e2-4378-a645-d6c5a93dc593",
        "cursor": {
          "ref": "abc06aa1-200f-4168-8d0c-057e51cef858",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bfe44ef0-e8d7-44b4-b56e-ea54d8438df4"
        },
        "item": {
          "id": "8832d535-e6e2-4378-a645-d6c5a93dc593",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59f792f2-4ac9-4610-bc4c-e659415a424d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57766851-e808-4ea3-b1e1-0250ab40d144",
        "cursor": {
          "ref": "8e21f895-83a0-4828-978a-c7d3196ca404",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c294467b-1edb-47da-a513-6e17501969f7"
        },
        "item": {
          "id": "57766851-e808-4ea3-b1e1-0250ab40d144",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d6c13893-8384-4c43-9145-bfd491c58906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802c2e18-8e9f-43ff-9956-d324bfe5ca33",
        "cursor": {
          "ref": "5aabc4fa-0ddc-42ff-9704-48993c830294",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66ca186a-038e-4229-b1bd-a7eb71762fdd"
        },
        "item": {
          "id": "802c2e18-8e9f-43ff-9956-d324bfe5ca33",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "165d4880-c7c9-478e-8132-e071a1b92d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14701ea-e545-434b-abfc-3cfdc7c3d377",
        "cursor": {
          "ref": "a8eab0bc-034b-4239-a109-a22a54f7f618",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "df7fadf8-b378-4728-9936-9f7b449724d5"
        },
        "item": {
          "id": "d14701ea-e545-434b-abfc-3cfdc7c3d377",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f864e8e4-ca1d-4078-9f7d-02aef7436996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d0e95c-3f2a-4586-a773-e99993a08915",
        "cursor": {
          "ref": "4c8c4938-d0af-4282-9d4d-ff02c5e75645",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "22ff7176-3470-4598-8210-63c45f1cf31d"
        },
        "item": {
          "id": "34d0e95c-3f2a-4586-a773-e99993a08915",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e64be551-11f2-434c-b961-5604bcc819c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9359baf9-c6d4-4b36-9bfb-feb433c57e92",
        "cursor": {
          "ref": "39d0e1aa-42fe-4cc7-bdf9-c018fb443e2f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1af50647-8d9b-4623-8639-d9caf553d27b"
        },
        "item": {
          "id": "9359baf9-c6d4-4b36-9bfb-feb433c57e92",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "900de6de-f2c4-44f0-b173-bbd00bd3f37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1312bbe-d0b1-4e22-aae6-5b746678786f",
        "cursor": {
          "ref": "40d3c384-3af9-411e-8303-e41145ee2e55",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cbf46c00-8a65-4a43-bd84-5aac925ce60c"
        },
        "item": {
          "id": "c1312bbe-d0b1-4e22-aae6-5b746678786f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ac5fed6c-dc80-48e8-b73e-639eb53f4b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6554e6-6ffd-49da-8217-5e6d9e8bc294",
        "cursor": {
          "ref": "f52de524-69a3-49bc-be2d-c95ee7216544",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "824c4615-b5e0-482b-8cc2-71311d05f3ed"
        },
        "item": {
          "id": "8a6554e6-6ffd-49da-8217-5e6d9e8bc294",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7834eba5-790d-4a77-8372-e01b11c67d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c95ec3-8fff-48e5-a60c-4b702b0477cb",
        "cursor": {
          "ref": "dcdf3651-5e01-42c3-8c4f-a0ac32090583",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0662da56-48f6-4b82-8435-17386a7df05f"
        },
        "item": {
          "id": "c4c95ec3-8fff-48e5-a60c-4b702b0477cb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d44a0333-2826-4c5a-af77-ab82bf4ffccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a683a-3628-4c9d-9e15-63f671118b5a",
        "cursor": {
          "ref": "ca9fda13-859e-498f-a131-3b32a4dfa73b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ec287582-c539-4d30-967f-b1514c0e6c84"
        },
        "item": {
          "id": "fa4a683a-3628-4c9d-9e15-63f671118b5a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e6015d59-d98d-4714-896b-fc61483697de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce9ef0f-b913-4378-8a83-6d1d19804a23",
        "cursor": {
          "ref": "9b589f7a-e6fe-49e4-85ab-e5715afc6a86",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "879cd278-55b5-4a69-af1c-60a31ad2ba52"
        },
        "item": {
          "id": "dce9ef0f-b913-4378-8a83-6d1d19804a23",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "48f61cce-a848-41a2-8ebf-b09c3bec70c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dccae16-9dd1-4e15-842c-de1c65f2a306",
        "cursor": {
          "ref": "76f32436-76d9-49f0-a634-dcabaf1b2ff5",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "17efaa45-2d2b-4eae-ae9d-5c396e1a12b4"
        },
        "item": {
          "id": "7dccae16-9dd1-4e15-842c-de1c65f2a306",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20213523-f3fd-4f07-9715-ac68fc0eb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac5af7-70a9-4ed0-96c8-83d6f912777f",
        "cursor": {
          "ref": "9558ac3b-14ab-41f5-90d8-1889dea98c7d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6e02c719-38d9-4781-a053-96fb4ab60316"
        },
        "item": {
          "id": "0fac5af7-70a9-4ed0-96c8-83d6f912777f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d875f935-66b8-49cf-bab2-d0bd0cacd5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dee820-5077-4bc8-80f9-51f49b5483f4",
        "cursor": {
          "ref": "75e7a937-4dd9-49ca-91a3-3bcf571531b8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e1384cbe-9666-4b5a-a4e0-eabb6bd15a98"
        },
        "item": {
          "id": "53dee820-5077-4bc8-80f9-51f49b5483f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf9a5d0d-3434-493a-8de9-d5b34f91751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b433f-3a21-4dbe-9a47-5cb4190b7b36",
        "cursor": {
          "ref": "48885b2e-d915-4000-9fc4-acfb7e7fd7cc",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "180cfe50-0b47-47fc-aa95-dc463d285be8"
        },
        "item": {
          "id": "391b433f-3a21-4dbe-9a47-5cb4190b7b36",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fa5844f8-80b8-478e-b405-40fe9392f135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8a2cd-6181-4732-b2b7-a9f0f5ece682",
        "cursor": {
          "ref": "63353799-962d-4b37-9b6f-e98eca393103",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1fa6fd1e-bbe9-47d8-9ad8-03d3a58e9eba"
        },
        "item": {
          "id": "d0c8a2cd-6181-4732-b2b7-a9f0f5ece682",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a6808fb-d66b-4986-a54f-427c5fed13c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac792c56-e587-4972-9315-fba1b6d2b3b0",
        "cursor": {
          "ref": "85c0f3aa-463d-42c9-b938-67ca7f73522c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b279b4b3-af26-4a72-afc9-8e256b7c7a0f"
        },
        "item": {
          "id": "ac792c56-e587-4972-9315-fba1b6d2b3b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3619aa2e-1c8a-4e3a-b087-c2718b7642ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ad6ef5-7909-48d6-b8f1-c243257be8d3",
        "cursor": {
          "ref": "d73ff8d4-879b-4268-901c-1ebb043eb6f9",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f389feb-f1c7-42ed-91b8-548602bfc9e8"
        },
        "item": {
          "id": "b1ad6ef5-7909-48d6-b8f1-c243257be8d3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e29ed9ff-0584-428f-8c67-719854f9d3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00b5681-ac39-4c98-9c24-f9b424e8c65f",
        "cursor": {
          "ref": "090746d7-f268-491d-999e-189f6f62b1a2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "846e0fa7-467f-4a94-9929-b8af58179adb"
        },
        "item": {
          "id": "a00b5681-ac39-4c98-9c24-f9b424e8c65f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d2080034-f4e7-4310-b91d-332c202126c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad7c184-45dc-46e6-aee9-a04cc86d1c64",
        "cursor": {
          "ref": "4f2e9c15-85f5-469f-a02d-2807f41a8bbe",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9d8a3943-d829-4173-afe4-68c43af3a247"
        },
        "item": {
          "id": "0ad7c184-45dc-46e6-aee9-a04cc86d1c64",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f428420a-aec6-41d1-a593-f84b21a364c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a399ef45-17f0-4ade-aae1-34dc5dd33b7a",
        "cursor": {
          "ref": "f5a9ea25-d03f-4d19-b1cd-b3ab6dddd1d9",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "24e370d1-e5cf-4869-b7b3-a17c85d37015"
        },
        "item": {
          "id": "a399ef45-17f0-4ade-aae1-34dc5dd33b7a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "869d7cf6-f0a2-4be6-8e0c-10a0524f02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb731fc7-baa2-48cf-bfcb-eda0e43476af",
        "cursor": {
          "ref": "f7d5aae2-f71d-4d68-a956-07ef79d8ca97",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4ee32ec2-3287-427c-a90d-80f34f5675eb"
        },
        "item": {
          "id": "cb731fc7-baa2-48cf-bfcb-eda0e43476af",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf0312b0-d818-46ce-8deb-0792190a3e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e254d3fc-d21c-4236-bc37-274673bdbe60",
        "cursor": {
          "ref": "1840a0ea-468b-404e-8bdc-3cbc9cf542cd",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f12bafb0-6951-417f-b5ed-b2eacb5b6b21"
        },
        "item": {
          "id": "e254d3fc-d21c-4236-bc37-274673bdbe60",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bd7a28fb-90e2-46e8-8bc0-6f4acd7529a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e75c23-834e-4789-8553-5832388e6bca",
        "cursor": {
          "ref": "e18b870c-2d19-45e5-85cc-5f9d90ea0343",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "916de9e9-e4d5-465a-902b-1a6cb79ef002"
        },
        "item": {
          "id": "c8e75c23-834e-4789-8553-5832388e6bca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6d0fd7c0-0737-4884-a0f9-2a41b1fa24cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d61cee6-38ba-44c0-8102-861bae80b475",
        "cursor": {
          "ref": "ba52da7e-ff22-4d69-80bf-53ad50bfddab",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "42876af2-202f-4843-9c55-076e75cf2302"
        },
        "item": {
          "id": "0d61cee6-38ba-44c0-8102-861bae80b475",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0fff08fe-f1bb-4af9-91ce-bdc1eb5cf52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e73b0-3a35-47a3-82db-5357e769dec1",
        "cursor": {
          "ref": "1568be9c-4d61-4a2e-bbf6-346c3f2982c9",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8b67a057-4dad-4acc-9880-f7ba9247cc4a"
        },
        "item": {
          "id": "362e73b0-3a35-47a3-82db-5357e769dec1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f8387ca-c487-4831-8e4d-f9729f9498f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967274fc-b6b7-4e04-96f8-dbe2bccb2df1",
        "cursor": {
          "ref": "6a4bb1cc-8f95-4cf3-8f01-01adf386e991",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "83ea1b23-b680-41df-87d3-20b706dd453a"
        },
        "item": {
          "id": "967274fc-b6b7-4e04-96f8-dbe2bccb2df1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "10587ec1-09de-4e34-97ca-4ff07b9d6a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b458c3db-5449-4448-918d-10a7a6c557bf",
        "cursor": {
          "ref": "612498ea-ed14-4c53-8cbf-2a0029f9faaa",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "754cb671-7a3d-4903-9878-9499778c79a3"
        },
        "item": {
          "id": "b458c3db-5449-4448-918d-10a7a6c557bf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd8f909e-cd6d-4fd9-9ef0-be73861b6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1191d40-092e-4462-a6ed-b97b2ad1605c",
        "cursor": {
          "ref": "e79eb03a-b5ca-4608-ba22-dbaf94fb6e8e",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fa0de413-85ec-4925-bde6-e076a75e7c00"
        },
        "item": {
          "id": "b1191d40-092e-4462-a6ed-b97b2ad1605c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9f3539c3-56fd-49e8-ba0f-05cb62aa0f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb871f-87bd-41d4-8c92-a0cdb642b369",
        "cursor": {
          "ref": "18f67470-e6ad-4f8b-8f75-7e790559c91d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b22d0637-650d-41d9-a489-79c399fa2341"
        },
        "item": {
          "id": "cbbb871f-87bd-41d4-8c92-a0cdb642b369",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1710044-653b-4fce-b5dc-4dac7ee2793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5414e5-0b32-4896-b7a4-ac93c3e66ada",
        "cursor": {
          "ref": "a8a6856f-860b-4652-9a14-3a13f8d1ca70",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c9047be5-d7e3-474d-baf0-a3943cda2c87"
        },
        "item": {
          "id": "6d5414e5-0b32-4896-b7a4-ac93c3e66ada",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "52a0b708-3eba-4731-a10a-1a464203d8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47379aa2-202f-4701-878d-e3ad68526b13",
        "cursor": {
          "ref": "1c92138e-fe48-48e4-9ff0-7394b4d1fbaf",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8574ef96-2a73-4c41-8c30-82717ab4a1f3"
        },
        "item": {
          "id": "47379aa2-202f-4701-878d-e3ad68526b13",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "afc26ae6-37a8-473f-86f0-b8fbc02ad3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9eff88-0261-47f9-b820-df3041efc0c1",
        "cursor": {
          "ref": "286769bf-b470-45b0-bd23-87dfc19dd2ee",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c4d7fc9d-5983-44f0-b61e-e8beb79fbe86"
        },
        "item": {
          "id": "7c9eff88-0261-47f9-b820-df3041efc0c1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0adf2729-ce89-4f35-ad09-1172a39564ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc8a7b8-75e3-4c5e-915a-6c126c96ffa3",
        "cursor": {
          "ref": "402bbe16-3259-4147-8b9c-5d0a44c2eeb6",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "338193c0-70a1-4877-a7dd-40e4f4afb334"
        },
        "item": {
          "id": "2cc8a7b8-75e3-4c5e-915a-6c126c96ffa3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4170358d-cfdf-49de-9d75-9eb2ea775197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e65e678-699b-4440-ae71-7d84ed41e5b0",
        "cursor": {
          "ref": "b8ce9ff7-8a4a-49ef-9b14-f838d21abde6",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "80d593c4-d0b0-4c64-a8aa-1e86662f9b70"
        },
        "item": {
          "id": "6e65e678-699b-4440-ae71-7d84ed41e5b0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc5c232f-10fd-4a53-bde1-202e0f0e8120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c9c6ae-6cf0-4311-89a5-ec7c367f0d12",
        "cursor": {
          "ref": "47aabffc-c9cd-4d68-b34f-0f5a1b7a5be5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "58ec492f-391a-41c7-857c-515c383399af"
        },
        "item": {
          "id": "54c9c6ae-6cf0-4311-89a5-ec7c367f0d12",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5876bbfa-805e-4eda-b976-4607d9a61b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592a0f94-7051-43e6-a2dc-eb825ebcc153",
        "cursor": {
          "ref": "d495f519-2edc-4fc2-b13f-6892fb2d2945",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0b5541f-8b5f-4f62-b4d3-53454382a35b"
        },
        "item": {
          "id": "592a0f94-7051-43e6-a2dc-eb825ebcc153",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c14a2820-b5ce-4ccc-aea3-012359139477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84033d6d-885e-491d-b15b-6a32661291e7",
        "cursor": {
          "ref": "b4f8a310-a2cb-4863-ac8d-fdd3484049ac",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "37468e82-ac12-4fbc-9f43-8c420f90dd89"
        },
        "item": {
          "id": "84033d6d-885e-491d-b15b-6a32661291e7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d0f10cfd-757f-457b-93bf-a27cf1e566bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0130f75-e54c-42fd-9d8b-9eea8604477b",
        "cursor": {
          "ref": "501764c5-d721-4f1e-a34b-bc945b2f7790",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3cba0728-c792-4ba7-82ca-7ff9f7c1b473"
        },
        "item": {
          "id": "b0130f75-e54c-42fd-9d8b-9eea8604477b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3936a164-02a8-4b2b-b124-a603dad5277d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e5e30-b3c1-41ca-bc4d-d0e216608447",
        "cursor": {
          "ref": "1f87f89e-0f83-4ea7-87e3-ab6b70bf4eba",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8c73ac27-9aee-442f-bdd1-3a1a903c5d65"
        },
        "item": {
          "id": "c33e5e30-b3c1-41ca-bc4d-d0e216608447",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "052e2172-19e2-45f4-ab24-b694ccbf46dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3495a217-c43c-45a0-97b9-09ad15181215",
        "cursor": {
          "ref": "ff3e8a6d-71f0-41c0-8b8c-f00e5e813110",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4be1cea1-0c46-4013-9425-b2f4b2605978"
        },
        "item": {
          "id": "3495a217-c43c-45a0-97b9-09ad15181215",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba57c76d-401c-43b5-9fbf-b71553478a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e84c040-f72b-475c-92a1-a9126d546255",
        "cursor": {
          "ref": "1cfbc2af-6c00-474e-a832-0e4d826cc025",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bbb03446-bf61-46c7-a779-02ff7c7913dd"
        },
        "item": {
          "id": "0e84c040-f72b-475c-92a1-a9126d546255",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0fb9bd1c-1a8b-4ad6-9f91-9c321c8ec4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f7ffae-1dfe-4c09-9d43-e17092fef38b",
        "cursor": {
          "ref": "cb5ceb28-9f2c-48c2-bff7-e054fca6daf6",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f801f4b3-9e8e-4c79-a136-6a17c5919a95"
        },
        "item": {
          "id": "39f7ffae-1dfe-4c09-9d43-e17092fef38b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7479152b-aa83-45ec-b8ce-c204abfddccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea247b28-f7b5-4cfc-a2ec-758b17fa1dcd",
        "cursor": {
          "ref": "c421113d-d7b3-46ad-8c80-5bed37131ec3",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ba84d8af-fc86-40d8-a583-a58f6405cce9"
        },
        "item": {
          "id": "ea247b28-f7b5-4cfc-a2ec-758b17fa1dcd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "110d6b5f-ff16-432f-bc9f-643573d49f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0460d169-c4e4-433a-bd5b-a83c67cb119a",
        "cursor": {
          "ref": "126bb083-3517-416c-926b-4309d5a6d0b0",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1ea89ef5-9a75-4a9c-b3b4-0312655505d1"
        },
        "item": {
          "id": "0460d169-c4e4-433a-bd5b-a83c67cb119a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72b1f91e-57d0-4e23-9e66-f32ca5f329a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd157038-4545-4344-b4f5-b140eeaf4bd2",
        "cursor": {
          "ref": "830140b8-826d-45b4-8037-ee87b6190274",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "07756c7d-9d1c-4a84-bf84-7fd7e1a790ca"
        },
        "item": {
          "id": "cd157038-4545-4344-b4f5-b140eeaf4bd2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76d1ac18-fbfa-45a5-a0df-22e9f749f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22780298-3ea9-48f1-9f8a-c652fafb3256",
        "cursor": {
          "ref": "4fe8e829-7825-4ad5-a9b9-7b52c19fed40",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8ee7e428-3670-47b0-bb0e-19b87ffe1493"
        },
        "item": {
          "id": "22780298-3ea9-48f1-9f8a-c652fafb3256",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "64fbac75-a457-44c5-9bb2-c3384afbe49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0788c57-b2fd-4906-85c8-125820f0d0b9",
        "cursor": {
          "ref": "a390f877-2efb-4051-a393-5c430d50b48a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c2231f7f-22c6-4b60-87ec-290ac9fc9b47"
        },
        "item": {
          "id": "d0788c57-b2fd-4906-85c8-125820f0d0b9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "19479777-c979-4ba4-b461-522a65882ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75006ee4-04ed-4291-bd7e-a441918737fb",
        "cursor": {
          "ref": "a8da6986-0d79-46c6-bb03-80b363addc07",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8ec8a2b3-e9c1-4d8f-8c96-add0851186d3"
        },
        "item": {
          "id": "75006ee4-04ed-4291-bd7e-a441918737fb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ffd92702-7e49-4fdf-932e-1adf43e5ba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd02e91a-6764-49af-a80a-d3c274ff08af",
        "cursor": {
          "ref": "5b1fbc29-da76-46a8-8bbd-862518c1789c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13dd2d7e-c79d-48e5-bd71-2a2c7a521d2c"
        },
        "item": {
          "id": "bd02e91a-6764-49af-a80a-d3c274ff08af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ffb412b8-fa6b-43ab-87c3-8b317566b7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104db6dd-e675-4390-b81e-274cdc7488d6",
        "cursor": {
          "ref": "a89b71af-bf54-48c4-8de7-3a22321d9ab3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e98d9c65-c99f-4022-8526-f8891a958fb9"
        },
        "item": {
          "id": "104db6dd-e675-4390-b81e-274cdc7488d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c25bd6e9-9afc-45a9-b7ec-92a7565e8a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c383c516-5096-4e50-bd24-fb042e670a87",
        "cursor": {
          "ref": "26178cec-6bfe-4fdd-b1fb-e1a26998b754",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f05a4b6-31f2-406c-97dd-54d22ffa27f1"
        },
        "item": {
          "id": "c383c516-5096-4e50-bd24-fb042e670a87",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8a614f4b-12c5-43cd-b2d3-7f6dca5a679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7b6232-2fba-4b7d-80a3-f0c332516d39",
        "cursor": {
          "ref": "044d10a0-7216-4224-bfd5-5287465868cb",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "43959aea-7289-451f-8d5c-73c70b696e70"
        },
        "item": {
          "id": "fc7b6232-2fba-4b7d-80a3-f0c332516d39",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "05170b54-1831-4bcf-8548-ab8ee46dd7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954b1c29-71cc-40bd-9e6e-77b2f805c6e1",
        "cursor": {
          "ref": "92bb8ba1-30e0-4ed6-9db8-a02dc5de1d5c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1f9cf42f-5f13-45a9-a9b1-907520babeeb"
        },
        "item": {
          "id": "954b1c29-71cc-40bd-9e6e-77b2f805c6e1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c6b72a6e-befd-4465-8c23-f7a877e2a54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ee2e10-a54c-4925-864f-92f78a6d3f0c",
        "cursor": {
          "ref": "4034ce46-ff78-4884-8333-b6150a57e6b3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f488ff5d-6ae2-4819-961a-51652b793d74"
        },
        "item": {
          "id": "46ee2e10-a54c-4925-864f-92f78a6d3f0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08a06282-ae55-42b7-b500-6f51c0a20714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba666f-1f0d-495f-9598-12c9e9020208",
        "cursor": {
          "ref": "bc9554e0-0cc0-41e3-93a0-8c649bad33ea",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4910c91d-f3a8-4dc5-ad9c-c4f585732259"
        },
        "item": {
          "id": "edba666f-1f0d-495f-9598-12c9e9020208",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aaca3d1e-61e1-44c8-8eda-42ce0d26c71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4758376-96e5-4e59-a6df-8b285d7557d2",
        "cursor": {
          "ref": "3b6b78e9-a48f-4f2d-9b2d-ac112c9d4515",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "95a6122c-f51d-4d31-bfba-a475e0795440"
        },
        "item": {
          "id": "e4758376-96e5-4e59-a6df-8b285d7557d2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5dd36ffe-6e55-405d-9db0-6a418a2ff2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fe5624-1816-4bab-a225-41ec7fec6ecb",
        "cursor": {
          "ref": "f59d86d9-e30b-4a91-9fce-2d7c8dc2ed9d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4006a535-2b2e-4d45-804b-bcba2a22b848"
        },
        "item": {
          "id": "41fe5624-1816-4bab-a225-41ec7fec6ecb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2a9bda27-4c34-4cbc-ac9a-695d895f6ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc18045-4077-40a7-8c60-b86592901d69",
        "cursor": {
          "ref": "168a60eb-b5c7-4400-b248-ccb7753b930b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6ed6ab9d-3d23-4461-90ef-bb51a18b060c"
        },
        "item": {
          "id": "4dc18045-4077-40a7-8c60-b86592901d69",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1c6d4675-0679-4ea2-a49b-0cfeea5d2086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0a4ba-e822-468d-8ac8-becdc9df19f0",
        "cursor": {
          "ref": "986aa1f5-f6ec-4994-afc4-1eb6131c502d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "85a0d7f9-438b-4b61-97c1-64ca11e1a028"
        },
        "item": {
          "id": "55a0a4ba-e822-468d-8ac8-becdc9df19f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2313fa1c-b5b1-45f9-b9d3-c8ba082f822e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89c7a18-ad4b-46b3-8b4e-8b1b705c1601",
        "cursor": {
          "ref": "a4034169-622c-4e15-8ce9-fa1cbf083196",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f513a1d2-f798-4ae2-8bc4-9b62a6d404bf"
        },
        "item": {
          "id": "d89c7a18-ad4b-46b3-8b4e-8b1b705c1601",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f93d7ccd-6018-4489-88b2-b21d63d5d33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da38dd1-29ad-484b-a2b2-e384d1278973",
        "cursor": {
          "ref": "133f704b-babf-4c32-93f0-b83171faf422",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eecbcf33-8830-4a68-9cbc-71bb38e55252"
        },
        "item": {
          "id": "6da38dd1-29ad-484b-a2b2-e384d1278973",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9674b526-9cd1-4da6-b8a0-3038beb682d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f953a98-a396-487e-8d3c-2c9f07570670",
        "cursor": {
          "ref": "6bc64486-5da3-4988-9798-590c59935530",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b91843df-10fc-4c73-8dc8-081bcc0df711"
        },
        "item": {
          "id": "9f953a98-a396-487e-8d3c-2c9f07570670",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "94a02871-caad-4162-93c4-f4ba01cec7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab40153e-8707-4167-8fa3-4cd8a55eb475",
        "cursor": {
          "ref": "80ad3e29-1aaa-4131-b734-fef8001163aa",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dcb6a472-ea85-4ba0-bde8-c2a769758aca"
        },
        "item": {
          "id": "ab40153e-8707-4167-8fa3-4cd8a55eb475",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5051e829-1e52-45c8-80bc-d883f24a4ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5690dec-6142-45e9-993d-1fa0c5e0a5ad",
        "cursor": {
          "ref": "f87215c3-6c67-4eda-86ed-7c65570d3bfa",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ac34ca22-385d-41f0-99f7-1c067b9c99cc"
        },
        "item": {
          "id": "c5690dec-6142-45e9-993d-1fa0c5e0a5ad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "659a43be-aa1d-4177-8b06-32ed19894e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934586d-82fc-4ba5-aaaa-768cc5a0d991",
        "cursor": {
          "ref": "512bf2f3-4b4f-4c01-b6c9-71b31ab487b1",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c48cbe2c-ac02-437c-bb87-7d12fe44810e"
        },
        "item": {
          "id": "d934586d-82fc-4ba5-aaaa-768cc5a0d991",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae1b8014-5fcf-49f7-b8fb-5b559a472b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a787583-7f56-498b-b271-675fe7aaa051",
        "cursor": {
          "ref": "b2af2626-ad4a-4562-943a-cbe2adb26fab",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ec201d36-60f1-4bc5-a369-56f82f21d798"
        },
        "item": {
          "id": "5a787583-7f56-498b-b271-675fe7aaa051",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7382c9ad-1495-468f-b81b-9219ac0de429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f9f207-b465-446c-b694-ed8e0192fa57",
        "cursor": {
          "ref": "0423099d-c6a8-4fc2-b96b-11f0fbf78b9b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "daf1ac1b-d4f1-47ec-a69c-886262739061"
        },
        "item": {
          "id": "75f9f207-b465-446c-b694-ed8e0192fa57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8f49ef05-1343-477d-b1c6-04fa9b053d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c2c78d-7f21-4d1b-9e8f-98b366122324",
        "cursor": {
          "ref": "910a29f2-99cf-4eeb-91e0-194ef76ccf09",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "98da729a-b0a6-4167-bb9d-b71b997df0eb"
        },
        "item": {
          "id": "a3c2c78d-7f21-4d1b-9e8f-98b366122324",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f7847197-cdfe-49eb-b738-8a312d928560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52b3de-aa07-41ee-b4fd-22b59a1f3966",
        "cursor": {
          "ref": "28f14dac-d293-4d36-9fe0-2f08946397a6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cb3cb260-5a90-48f7-9c80-5e9b25448a6c"
        },
        "item": {
          "id": "5e52b3de-aa07-41ee-b4fd-22b59a1f3966",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "de856787-d693-4a08-9f49-12ed1690634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817cab5-b476-462d-93f0-5144cd8547cd",
        "cursor": {
          "ref": "6618b026-acf9-4a0c-b41b-9558d818f2ab",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2876fccf-cf4a-4568-b875-4067aed71179"
        },
        "item": {
          "id": "5817cab5-b476-462d-93f0-5144cd8547cd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "82f98b23-a800-42df-b7c7-7f6f09203d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699b357-e959-4ce0-afd0-ae046321e4c3",
        "cursor": {
          "ref": "7751d79a-318d-4697-9e55-c79450b39f64",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "366b7c03-5b69-43bd-a977-174904658721"
        },
        "item": {
          "id": "e699b357-e959-4ce0-afd0-ae046321e4c3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fa202d39-17f7-4fa6-b266-7e9b718b6cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772674ef-db9b-48e8-87d2-457ff9dcc5c3",
        "cursor": {
          "ref": "a49604fd-0ee6-484a-987f-7243a39f6338",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a9ac47d9-a9f9-4de4-9830-d4e5514d76aa"
        },
        "item": {
          "id": "772674ef-db9b-48e8-87d2-457ff9dcc5c3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "236c4b24-5c84-4e07-ba27-87e20a30c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a8e15-1119-484f-913d-f4dbff9b8929",
        "cursor": {
          "ref": "dcf2ceff-5cc1-48dc-808f-f22880310ef0",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86ba4bec-9f99-4923-b507-d8aaa661afcb"
        },
        "item": {
          "id": "611a8e15-1119-484f-913d-f4dbff9b8929",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3b7d8524-2ee7-47e2-b86f-98c48f283ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2219fdd-d18d-4e10-80f7-7ed1276e458f",
        "cursor": {
          "ref": "9a53991a-a551-4b3a-9224-e5fe34eda07c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2af2e05d-1d31-4a31-bd8f-05c7c5d32fc7"
        },
        "item": {
          "id": "c2219fdd-d18d-4e10-80f7-7ed1276e458f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c55334d9-2eb1-41ff-8096-28b3005ae3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a947ec91-672e-4f4f-8b32-4eb8840dd2ee",
        "cursor": {
          "ref": "e6cfc67d-acdc-4fb6-b096-5d2e9254e92c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1cad204-68d3-4031-9bd5-5c18e1f9635b"
        },
        "item": {
          "id": "a947ec91-672e-4f4f-8b32-4eb8840dd2ee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "98e051e1-3cca-4edc-aff7-46f4e03be529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1b579-a868-4984-8ac0-adea6a2ae50f",
        "cursor": {
          "ref": "86ad6342-01c8-4e5f-a7bb-86f0f31fb31f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "05e104bf-1e74-45e8-91ec-db286f32fbd9"
        },
        "item": {
          "id": "b4f1b579-a868-4984-8ac0-adea6a2ae50f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a1e32e44-42ac-44bf-a115-eb7e7fe61d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06468af-0ebf-45bd-8a18-13752394b397",
        "cursor": {
          "ref": "635a86d5-99bf-4514-a2f2-7aef8cb1ec4d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ce1d4e5-9a83-4809-abf2-c35e0e587dd5"
        },
        "item": {
          "id": "c06468af-0ebf-45bd-8a18-13752394b397",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d2bdd18b-a937-4d08-bfce-bbd896854bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7b91f7-0921-4448-9a11-db507bf55396",
        "cursor": {
          "ref": "3c3dd0fd-4396-4ed7-bffe-e416b1a3cfc3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cca5dbbb-dfff-4936-9dad-cd384db8f346"
        },
        "item": {
          "id": "6d7b91f7-0921-4448-9a11-db507bf55396",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "094afaf2-5309-4ee7-9fdc-311a9624c2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6ae882-d0d8-4659-b57a-f6eca0c101f8",
        "cursor": {
          "ref": "e3ffffaf-bdb6-4a92-875d-10618b4a97b9",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0ec50189-de83-465b-9c28-d6bd35580985"
        },
        "item": {
          "id": "5e6ae882-d0d8-4659-b57a-f6eca0c101f8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98a52f8c-07be-431c-924b-1cf6d5134d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafb9b32-e8ae-4f27-af96-935f1c14ea9a",
        "cursor": {
          "ref": "b41de97b-ebb9-4569-926f-1287abd7cc0d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "849f1d02-5cf8-4a37-b954-a96e3d897866"
        },
        "item": {
          "id": "bafb9b32-e8ae-4f27-af96-935f1c14ea9a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c275a95c-df21-407e-833c-a648bd660437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5f1dc4-79ff-4121-9d55-487bc5a350c2",
        "cursor": {
          "ref": "2d72d356-7cf2-4d8e-96ba-03b995887337",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c2ba2854-2a1f-4c26-b624-0c891e807fa0"
        },
        "item": {
          "id": "1b5f1dc4-79ff-4121-9d55-487bc5a350c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3dc7158d-bb6f-4184-b10a-551ef6a3155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d813b5c-cbeb-4a97-94cc-060df9f707b4",
        "cursor": {
          "ref": "c21c11b7-fa0d-418d-802e-2e7bc556c059",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "171ef3bb-cec7-401f-aece-c2a1114ff9ad"
        },
        "item": {
          "id": "7d813b5c-cbeb-4a97-94cc-060df9f707b4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d3ab4090-e0b6-4053-9301-1de15b34ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab989b-f560-46a9-9116-d1ea9cc50899",
        "cursor": {
          "ref": "5f65e2e8-f137-4b42-94bd-21a326da21ac",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5fc0ad4c-3088-41e5-8a74-ceee7a0eaeec"
        },
        "item": {
          "id": "6fab989b-f560-46a9-9116-d1ea9cc50899",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91712a5f-1b40-40a8-bed3-9e8412963913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e230808d-663c-43c7-82cf-0a0cbb77e23a",
        "cursor": {
          "ref": "f7662f36-ab1d-4397-a6d3-7585d6be37d9",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "89da908b-494f-4065-b58d-da2dce593e17"
        },
        "item": {
          "id": "e230808d-663c-43c7-82cf-0a0cbb77e23a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "96b3087f-4eb0-4d58-94ef-8a6899d1ed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d554b54-c2a5-4a74-ada5-b76e4c657da3",
        "cursor": {
          "ref": "fcfa40ec-37f4-490f-ab5a-91395118e0ce",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1720bf45-3664-4d65-b08e-b7c01fd934dd"
        },
        "item": {
          "id": "1d554b54-c2a5-4a74-ada5-b76e4c657da3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8d76658d-a1ea-4094-8a81-413be4d0d16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78dca98-691e-4e76-b3ae-9a306b9615a0",
        "cursor": {
          "ref": "001cdff1-2e45-432d-9f2d-362f2d12e42d",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bad48d91-b7dc-4f33-beef-96856013b1c4"
        },
        "item": {
          "id": "d78dca98-691e-4e76-b3ae-9a306b9615a0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ebef864d-85ab-455e-a4d1-4061bc21c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4c940-01e5-41b6-9a16-6826fafe8811",
        "cursor": {
          "ref": "dff6ada4-ab4b-4dc1-836c-10a4d440ed6c",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2fe89b60-16fc-471a-975a-b7ab02d81012"
        },
        "item": {
          "id": "76f4c940-01e5-41b6-9a16-6826fafe8811",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0d43ec5a-3229-438b-8018-cf53acb62386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958b0407-37e1-4659-8b17-6759a35963eb",
        "cursor": {
          "ref": "1b42587d-7092-4d54-832a-0d8c30ceba65",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1da5a0f8-879e-43e4-827f-defcbc7d5d2d"
        },
        "item": {
          "id": "958b0407-37e1-4659-8b17-6759a35963eb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5131ba3f-8d08-4ecb-b1e2-18bfdce88605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c88f23e-edeb-427b-a0b5-b5297a631c36",
        "cursor": {
          "ref": "ba5e70d9-1456-4d4f-94ee-703970309a0c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c04cc80d-505c-40a6-9bbf-8984796bcea2"
        },
        "item": {
          "id": "1c88f23e-edeb-427b-a0b5-b5297a631c36",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "91b57c9c-3c90-4ca6-9df5-975e2d3b07f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969949c-301f-4dde-b3e7-f8f7db9d6f65",
        "cursor": {
          "ref": "b11c71ff-c30c-46f3-947e-d3ceda79f534",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2ffac764-014f-4a0c-9b9a-378cc8cc907c"
        },
        "item": {
          "id": "6969949c-301f-4dde-b3e7-f8f7db9d6f65",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ccf4e668-818c-4916-8c2a-8b45c331a695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a28776-3996-4b70-a0be-8189e2a504ff",
        "cursor": {
          "ref": "f39c416c-56dc-4379-a644-30141790d27e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b78a9d3a-f6fd-4d4d-8d1c-888870de8b55"
        },
        "item": {
          "id": "d4a28776-3996-4b70-a0be-8189e2a504ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3a528bc9-c86a-4dc4-8146-65aabedb3068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c79f9-d8a1-4b2b-9a85-b9d18772964e",
        "cursor": {
          "ref": "0cd7fb64-1a74-4361-b041-bd644da068ea",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3f78dadb-32c6-447c-9199-c861b882855a"
        },
        "item": {
          "id": "822c79f9-d8a1-4b2b-9a85-b9d18772964e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "325de6d1-711b-4525-a409-d4b5adfc03d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0236bf-f7e0-40a2-ba4f-ad1108f56cf1",
        "cursor": {
          "ref": "4b82d6cd-2e88-4f5c-a729-6e2111545a6f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77791043-a58d-4ff5-90ab-ea230d3ffb1b"
        },
        "item": {
          "id": "0f0236bf-f7e0-40a2-ba4f-ad1108f56cf1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cd7fe743-c49b-4c74-bd65-a1dba3b54c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a09289-be80-4852-8678-31f55f3a8b15",
        "cursor": {
          "ref": "39c9ea85-fa56-4c9f-b7c4-e7ecaf6dd718",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7085f152-4abf-4ed3-a86a-b5e35813d92f"
        },
        "item": {
          "id": "82a09289-be80-4852-8678-31f55f3a8b15",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "03a9a4af-c887-484a-96cc-b2621da19ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b740b36-0977-4710-9bbf-6ac196c6467b",
        "cursor": {
          "ref": "4fd0052c-f178-4c52-a534-dadbcba5765c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "60e78577-d50b-4e7e-b472-e35240264699"
        },
        "item": {
          "id": "8b740b36-0977-4710-9bbf-6ac196c6467b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f1995b84-760a-42a9-bdd0-c6574588c946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39252ac-c3bd-420f-b1ae-415ccbdaf3f9",
        "cursor": {
          "ref": "2fc28156-d8c6-4038-940f-6b72aa44bf00",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2c6fd4a0-fab6-419d-958b-08b8cf3c03fc"
        },
        "item": {
          "id": "e39252ac-c3bd-420f-b1ae-415ccbdaf3f9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "787d1d59-f924-4f61-956a-99282d282a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c51ad5-f318-4a52-9083-38f4b833902a",
        "cursor": {
          "ref": "8e6d3c0a-c5b8-4045-a950-aa7368b566a3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "861076ae-fd30-491a-a49e-a408c04f186a"
        },
        "item": {
          "id": "82c51ad5-f318-4a52-9083-38f4b833902a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e03b46ee-fb3c-4419-89b1-e70310fa59c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e389fb54-31ce-40ed-9b49-5f4dc78c5fff",
        "cursor": {
          "ref": "5cd4fe87-8fe8-4a25-bd2a-0595fb554e1c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ac57d44e-790d-4d53-ad1c-74c7c7c0d96e"
        },
        "item": {
          "id": "e389fb54-31ce-40ed-9b49-5f4dc78c5fff",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bd5ae44b-d361-4545-99df-4d938d855382",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8c9fa-17f3-4309-9787-ec823615b745",
        "cursor": {
          "ref": "d06d1fbf-d396-478b-8b19-675c32440746",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2155c4f-e6c1-4ddd-ba3e-12b864038798"
        },
        "item": {
          "id": "3da8c9fa-17f3-4309-9787-ec823615b745",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fd517d52-bf29-494c-ac40-a8c6726c04b1",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335ff18-bec0-4485-ba9d-32c0d7d59ead",
        "cursor": {
          "ref": "c50bb36c-3e2d-4e2c-a626-cd6a9dd5abea",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "af3142d5-842b-408b-9aa7-19fc6fd6e44c"
        },
        "item": {
          "id": "0335ff18-bec0-4485-ba9d-32c0d7d59ead",
          "name": "credentials_verify"
        },
        "response": {
          "id": "57f64835-e361-4e90-b3ee-b76f05edbea7",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e267b11-651b-47fc-a766-966747793c74",
        "cursor": {
          "ref": "97e26d46-2e45-405a-bf7d-7725e4670da7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f1334bb4-1b0c-418f-bad5-6daa1d88b2a4"
        },
        "item": {
          "id": "7e267b11-651b-47fc-a766-966747793c74",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "133634da-eb2c-41cc-8e34-d1d416568551",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
        "cursor": {
          "ref": "2da5305d-6e31-4fde-b0a1-191e5facca9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fdd0c5f-2500-4ae2-b1b7-3fc7e8dea7ea"
        },
        "item": {
          "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40798648-2c56-4bd2-970d-8977de57d725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
        "cursor": {
          "ref": "2da5305d-6e31-4fde-b0a1-191e5facca9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fdd0c5f-2500-4ae2-b1b7-3fc7e8dea7ea"
        },
        "item": {
          "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40798648-2c56-4bd2-970d-8977de57d725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
        "cursor": {
          "ref": "2da5305d-6e31-4fde-b0a1-191e5facca9e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fdd0c5f-2500-4ae2-b1b7-3fc7e8dea7ea"
        },
        "item": {
          "id": "422af953-9b87-4c7f-97c5-15dcdb129de1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40798648-2c56-4bd2-970d-8977de57d725",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6366de9a-a031-405a-b602-868eff156ed0",
        "cursor": {
          "ref": "f7517540-fc6c-4439-bd30-3c7e4a2f2d8a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9e245718-7f3f-4545-885c-18622e389f47"
        },
        "item": {
          "id": "6366de9a-a031-405a-b602-868eff156ed0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b18c506e-9d48-45dc-94df-0f492ae20327",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c15f13-c6b3-42ae-b83b-db9c951ec15d",
        "cursor": {
          "ref": "d3cf9a33-434f-48b6-b682-edb8cd7c6520",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "062e8f69-1fff-41ba-a22f-594d83b4567c"
        },
        "item": {
          "id": "16c15f13-c6b3-42ae-b83b-db9c951ec15d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4793cee0-57a9-4af6-8b76-98001bb49b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c15f13-c6b3-42ae-b83b-db9c951ec15d",
        "cursor": {
          "ref": "d3cf9a33-434f-48b6-b682-edb8cd7c6520",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "062e8f69-1fff-41ba-a22f-594d83b4567c"
        },
        "item": {
          "id": "16c15f13-c6b3-42ae-b83b-db9c951ec15d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4793cee0-57a9-4af6-8b76-98001bb49b7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82586d5f-195b-4333-a4ee-b62efbb0d8c3",
        "cursor": {
          "ref": "8faa51a5-16f2-4e7b-970e-9ce69f238602",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "55b9195d-21da-4722-8d89-e286b6f9b6b8"
        },
        "item": {
          "id": "82586d5f-195b-4333-a4ee-b62efbb0d8c3",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7869edbe-2340-483f-a8ea-d9d23f3ee9e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f748862-6978-4b53-b2ed-a813b0dc9083",
        "cursor": {
          "ref": "5824fd48-51c6-4814-97a2-2f543061a9fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a3ad2d40-748a-462d-983c-f161888f558c"
        },
        "item": {
          "id": "5f748862-6978-4b53-b2ed-a813b0dc9083",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11c44264-2bf6-46a3-8939-900dbc108cf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f748862-6978-4b53-b2ed-a813b0dc9083",
        "cursor": {
          "ref": "5824fd48-51c6-4814-97a2-2f543061a9fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a3ad2d40-748a-462d-983c-f161888f558c"
        },
        "item": {
          "id": "5f748862-6978-4b53-b2ed-a813b0dc9083",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11c44264-2bf6-46a3-8939-900dbc108cf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84587618-c063-448c-a9e4-8c7d09307230",
        "cursor": {
          "ref": "8ce5c406-1629-4758-ba98-5eadf30baf9c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c54a1b2-c969-4d24-aa47-ce528ab6e5ff"
        },
        "item": {
          "id": "84587618-c063-448c-a9e4-8c7d09307230",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d7e6bd49-59dc-44d8-937a-6b2999fdc32a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}