{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8eb93499-c001-43ae-ad38-4afd8e41e005",
        "name": "Clear Cache",
        "item": [
          {
            "id": "24dd42b5-d458-4258-ae25-d4e0d36c6d2f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7b2054d-2a76-4c7c-a484-10701c8ca4fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ef87be0-0ec8-409a-820b-475a90984a35"
                }
              }
            ]
          },
          {
            "id": "48e5102d-b102-428b-b56b-ffe62f9fa2bf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0145381d-9dbd-4c24-af03-977709499853",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9714bda-aab3-4099-bc0c-7d96e56f9a62"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6c896856-06fd-4fb9-80f2-c0a0cc2e9e77",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e98e7f9c-9508-4b79-88fb-3b219765eae8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "079e7819-d6ce-4f18-9b92-887dc28f0c79",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b9f85d-86c2-4361-ba58-a9e1506e9d53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ce085ac-3337-4394-af63-7bf043f1014a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e677a4b4-396e-49c4-a335-740efe232845",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f701fd-8529-4adf-b4d2-61d0c9003364"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b2823b1-25a7-45f8-b2f8-647249c6f391",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fc63e02-b496-40f1-a5eb-940524e56e80"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95ddee76-6dbb-4c1a-af6c-3b679d415b91",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e4637f4-6b4c-4e5c-b3ca-204ecf1e6329"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41ee4407-b765-4d2c-9e41-54135c40037e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5920199b-b5d6-4a7c-8b88-9d1a91c6ebb1"
            }
          }
        ]
      },
      {
        "id": "dc4ccee1-12d0-403e-8411-ca1e2e85aa98",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9d25d6c4-2b5c-4566-9261-d631f926410d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30cf084f-65e8-4398-87d9-fe2919f8ca80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb2fae66-009f-43ea-a9b2-0d466866b651",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb531152-c5ec-4d1a-b348-ab651d9b8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ed9e616-b388-4574-8d95-c35590962877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1e5f7-0fad-4b4a-a10b-501ae0dd26a4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebd7df6-c83f-422d-bdb0-cbfbed1893ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34786949-c630-435b-a35e-7aedd37b4102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c87b5b-b3dc-4191-b264-a1d59e5402da",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20113d93-60ca-4aea-97e9-2ef21cf1e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae846794-2889-4dab-ae3c-392ed7b995a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a57b618-48e9-4fd0-a2df-9f4e3f53a1d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb3a3d3e-e6f3-4fbe-b48d-5b772b03b9bd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3829672-22c2-465a-93d5-a0dd7307af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6391e4ca-c24e-46f3-9df1-08ff75f37b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fc2b1b-ebfd-4ee4-aded-c468015284bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b16a37e-71ff-4ee7-a420-517b6415b48c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91df98d4-ca83-4460-9319-617dfa9e6db7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7dfb22e-28ea-42d7-862e-fa9e53dc35c6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a5aead-5381-414c-b489-e1d08042e403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33361d48-d339-4855-aa23-6b0613d80167"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "395d06e4-477a-4f8b-88ea-8534bc4a5cd0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6cddc9e2-c177-4583-87cc-f7d7669b2b4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc90309f-94e8-4315-982b-b05d67a4104f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd56cee3-13f3-4517-a2c8-9e83a4c77130"
            }
          }
        ]
      },
      {
        "id": "f34c978b-06e4-49f0-801c-63b2ae60031f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5e98e7f5-81e3-4da9-8b1f-ac95904f068a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6614dc1e-0e3c-457a-8169-354452de2a1a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8b8c63f0-06d3-4290-9470-b4a21db3abe8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b6e384-2e2c-4b32-b4dd-79fd323956b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab505a5-3ab2-4522-9e4c-728c3eed3c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f88f26-851f-4cca-bb75-5d4d67ca79ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f0cc12-94d3-4860-9434-f513ac555567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd44f137-8dda-4651-9f2f-a1ff42a4c7da",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c833b-6382-456e-aac5-07730a2d65e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569e23e4-2636-4f77-bb5b-a2d5de5f469f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca8e9e7-db29-48c3-8320-09d3d39c3ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2502989b-0a0c-483d-8818-93b6b5550045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4148278-0013-45c4-91e2-40640a68e17d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093f4eac-3160-4015-9975-ceac2f7148ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51547a2-b695-429f-8165-a3acfc2b4486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3db39a9-12b9-45e5-9916-125ecd86110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e334e8af-0d2f-4823-8a8b-33a656c8716c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9cf1b5-6dce-422c-96d2-d61c3b03b621",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35263a93-dfa9-4adb-9793-2e057545b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af165e4-648a-4dbf-a6fc-192e8ff0c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e842b3d-73ae-4196-9a10-0b55872db2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc9a8b67-984a-4c39-b62c-d48901e3b262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf3ad90-20ec-4b2b-9679-9959725841c8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eccb0c-9780-41d2-ba3a-cf5a5b37f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe57d99-31d6-4941-a9ff-ca46cd67f167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d497192-c8f2-4a9a-a475-fa0ed62fed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d77272f-4396-4a4c-bd74-2b5c7ea7ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130030d9-aa02-4fab-9fba-319611aa6929",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb1978-328c-4562-a525-8d0a81ab7dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34885c4-2c48-407d-bd13-7bd65a0bc811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c8d5b5-8841-4c40-a21b-d586c972672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5de64f9-4819-49e1-b357-b93e8a83db2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9106685-3981-48bf-a592-5b4ddc561af0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb681abf-8397-40d9-b157-da032f53d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0dcf0aa-906b-4f07-8696-93e8accb9eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6d64d4-3352-4448-b71a-6e44ac7c12ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa939c1-37b8-461f-84ff-265f5fcef454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b87fe80-9cbb-41e6-b064-94c12ffdcaea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78385b6-082e-4dd9-a485-d658dc3147cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a841b-8eef-4613-a2f7-16ee0ca9b488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca82a3a3-c3af-4a1c-8122-33632dbf7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4cddf59-57e3-43ad-a8d7-efb367fe0989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386b3d3c-266e-4492-b20c-4506ec336967",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5844188e-56e4-449e-bde0-0604c07b2db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95d228c-7393-4820-b7d2-9bbecd011d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5940d0b7-b696-4728-80ae-17d330b36a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ebbf0fe-176c-47b1-8d6e-d4b229cd43ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce66d7d-17af-4c29-816a-530f0185e2ac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaea355-fe01-4aea-96b6-499229c7a30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09965d89-d67d-4e55-b2cb-e1224f2253b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277392f0-7b9c-4c0c-9a8f-811d4f3617e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e393a88-a1a7-4256-8a47-1c4a16dcb8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6bbc4-a617-47ec-b093-1d87df4b46b0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a95457-101e-4240-80d9-a3c87b572214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac26e81d-b0a2-4037-92de-3dc55a5f0917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594c6a94-dce8-4bce-9c05-5243a1319920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b82afc-e7e3-4dd5-8e83-0e56bd3acd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0965e212-8b0b-4f47-89fb-fa4df9d8e123",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa7e00f-bc50-401b-ac39-58027598c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a89b637-8477-48cc-b277-6291cdb738b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ac57c5-6705-468a-9460-7007e8af23df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22919cae-d3b5-494f-a0cc-3918dccd7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6312f6d8-64ee-4e5b-8b8c-f342e81f5137",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd14ae76-e3a0-4221-b4ec-c3e9cf378612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e153bb-8573-4922-913b-1f2bf7a14ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977b76ed-def4-4e94-9f63-d88a5e3147b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f18eb28b-f9e3-4865-becd-036b64d6d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164effa9-35b9-4820-a98d-1cefbd550142",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08ad0ae-3a84-45e4-8590-14412c7babf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b10db70-f0bf-4ef4-8751-9fbb3c5f404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a5f247-caba-4e62-a13d-88116ca84873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a485fe8-e59e-4427-a3d6-45d57428689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef598448-4553-4886-a164-7eae86751a26",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0321d91-ddf2-42d6-b554-72c47af59d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dce1e97-6529-448f-becb-a8a5fc8dc066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d90c93-5067-4711-a8fe-9444cf6fe3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed0940c-39ac-4329-b8f9-fc2b513ff0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60de3a2-2b5d-47f2-8b25-c13db2d69fd3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61001fac-0a66-4f59-807b-a6fd2956b5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70834f1-2e97-407f-ab5c-9072a206293c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae0f25-8805-490b-a3f6-4b783557d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20914961-a3ac-4f9a-91bb-648b825def4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52473445-d816-4996-a7db-46b9b7dbcd69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba9a82-7c59-4276-a4a4-be8a3e92af2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f3e0a2-a431-449f-b9cc-6c5068b4fbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc188d0-5d4d-4232-b021-bc104d52656e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0df14175-ad6c-438a-8df7-6a67da216528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f527f-8e6d-4e51-9c0a-b2679433eb68",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88158ab1-6ef4-4d70-9369-9d3eb59ca442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2042f0e-21a0-42b6-a2f6-67586319655b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121f4d2-a361-41cc-b9b1-bda63529f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13836636-c83e-45ce-b239-428998c3bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb1b69-4e5f-4aed-ab6a-2b4fc92b2a1c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2d21f-9df1-483f-862a-7693ea5f1789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88f3f0a-d634-48ac-8aae-da97e192f491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236c6897-dc23-4606-badd-794db9d5a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e497a8a5-74e4-410e-9e3c-e7fd17b37cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5717c8-0d6a-406a-80bc-0009c4034f3b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef0ba9-ab42-4090-8704-46209add4c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0be735a-cff7-4e6c-928b-f827afa85c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914a3d07-cbf7-43c1-9797-a798b3da4e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ff6f84-57ab-4a0a-a0f4-adc6625c5f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a3398-7fd1-4421-8178-02399625d9d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aad4d3b-c5f1-4297-871d-abae29fbe4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a19e8e8-3ebd-4f53-9a6b-73f9e9296808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29feca21-3f3d-439f-83f0-d979b41bcf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e41eb4-038e-4db5-b9fc-e496f8b4b7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4b68d0-2b13-43c8-8798-4f5f942b2391",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392dff7d-afe7-490f-b5cf-f21a44ce6347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b900a8-374d-4280-9635-e21e60bf1aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9678ffd0-b0b6-4b97-be79-7bd50519c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4dd94a-7551-488a-8779-3dbcf9964ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a662c6d-c3bf-4d60-8490-0f2255e0f925",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ed20a8-ced5-4eb5-b84f-6ced0a1a817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b1bacc-104d-41f4-8efb-ebdaef00c9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93938f39-a3c6-4a94-9c01-73abb29f7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60c56e33-250b-47c1-b297-affe23157982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e3c8c7-2b9c-4fff-8156-6cf7e88035de",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87efe442-60e2-4018-9938-89a26556f7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81da83d-d4e3-4ebc-9362-74564f0f4550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa6714-0001-4bd5-867a-6cc904301bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e19c28-2c43-4697-99a3-dd2a8f5cfc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141e7db5-aa03-4c2e-a84e-01c315fe0500",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7f32c2-09b0-4ed1-a299-bbfeb15313c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed52d1be-7b13-4135-bc02-133ddf4463ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7db18e-6256-48a5-9f43-f7f849e3e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3199fad-a491-4f06-9fd8-413267c0965d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a902fe53-e3f7-48b8-ac82-56b6af4801ad",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7db4fd-5416-4824-955c-094575bee7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f8404f-4ba3-485f-9d62-90faebac2f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1313a276-9217-429a-b889-8f7bade79d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4e9d5d-6c18-429f-b949-98c9799c390b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43439de4-ea5d-49f9-96d4-42d159091ef3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff63277a-7740-4933-b529-bd162602f5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83d9dc1-46de-49a8-a28e-1aacb6cddb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e969f6-8d84-4427-9531-495521a6297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a36733a6-ecc6-4d26-b239-fe144856e4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17d6772-cae6-41c8-bcc5-63ab7d6df891",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7854d1f1-06c9-4aed-8cdf-6632610b5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3515ac8c-0d7d-44b5-a930-ec354a7b7f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd1518-27df-4ef5-8688-2dbdbc2b970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "819b9e07-b415-41dc-877e-6b84ea828ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe53de3-0d8b-4e79-9a7a-6d27643fef38",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1c4e31-25a1-4b73-8408-57698946c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349f07fc-9e07-4c58-bd73-5171eaeb287e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c435a203-32d9-45fe-913e-612ca8bb5d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba92274-91b2-425b-bb34-c5a0068200a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361c3bd8-c0fb-4c5d-bc13-96d6c8b64d2b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3e90d-0403-404c-8fe5-67de405705b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6c2822-88b3-42b9-b561-63c8458dbfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9314f-5405-41c3-a26a-14dd1ef6f84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8be1afe-c1df-41ef-918a-a91dc5c010f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e71bc9-a3ef-4548-a21e-8aaaf079d0f0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de61b838-4ecb-4b02-bb00-66a1a697397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310e903c-2fd9-420e-80e9-3f722548a464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2135b485-ec31-4f9e-984b-73c8e161c4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96973db7-8045-4e4f-8c6f-0249e989ffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b62e403-f4fe-42fd-bf62-77a104c52621",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a4e33c-c9f3-4bb3-be94-b9c629b4933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd2198d-6a64-4e28-9e16-10e294b9d251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6734ac05-1566-4cc5-a60c-e033cfdf9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b165df-1868-4caa-9fda-6ea8d2560dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc4f68d-e628-4abc-991f-f04affd2158a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f50203-5ad4-45ec-adf4-da79f0620d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169cc1ae-d5a4-437e-97d1-3bb392f759da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90f9489-bea6-475b-a8f1-bc412d3d53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "831b2166-8266-4a8d-a67c-1d1a55f4ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4655f26f-22de-4e0e-a7ef-a1c222349b70",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a117c238-534e-4441-ba97-4d2b38a40510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf87065-19c0-41f9-84d9-d00909f8f938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b596a4-0442-4186-aadd-5eca74b2acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "204d3d86-d4a3-463e-b469-8aee19f74897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb047c7-554a-443f-929c-d815d77fed92",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87bde27-6d2d-44f5-8cae-f33a18870e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a69bbe-418f-4564-b402-c389f943a390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd007d-108a-4119-a77c-76361b331e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3d68fa62-209b-405b-9e63-a103ec5983d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8786b8b-1a62-4557-8455-a31e843f5229",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ac534c-5e27-4e77-9493-16ac900f95f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d3a5667-7ca6-43dd-b5f4-691c9b542880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83759b37-30fb-426e-a075-9fd576dca40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1e4f64-2a87-4329-9550-66b553c92cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baef1deb-dbb7-4fc6-a8f8-6661123e0e52",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18a4b7d-b3eb-4a34-ba15-6317194eb131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3659aa-d48a-4d38-968e-ef3bdfb9e81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1200ae62-cd3c-437d-874d-20c6d044123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2504ea21-1b48-4bfe-957a-cba589175dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dd9a42-3430-4ff8-bd1b-ef7865ad1de0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0936bc75-251e-4813-9813-0197a38d843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56390e4b-e41c-48e3-bbae-3e32f91bbcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd48ac-0e91-4e2a-a6b1-22e2e5d2ee8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5849807f-c808-4312-825e-65862e834f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e359c984-aabe-46d8-8bdd-92bf9d38d7b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee3094f-2779-4ed0-af30-5103d0715a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0745fd30-9902-41fe-9d4c-f2b78c4aed44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1eda90-5ab3-409f-a678-a52de7bb9445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f98feb-4309-49a8-9804-2673f414b3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c923385-fcc9-4809-9014-f60f083b613a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12572d53-7cb1-46bb-8235-8599c161c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b210a2a-c800-4010-b46c-a2c061a0a51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c079ab35-ba49-4e75-914c-b6930c13150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b9c135-6442-4c7e-aeee-9dd790d0aaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f497a89-9356-4d59-b888-d3ebaf17a35e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e5b45f-82ad-4f80-8e9e-5d0035657155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c0fb41-fad8-4817-b7e6-096e574b380b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad83b74-bd6d-4979-bd18-90d2baa3ab8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4c3860-f1c3-4e92-a44b-bf8d9ecbf35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba55c30-987a-4531-b724-587d83906fb6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab8a81a-e4ec-4265-84f2-84a7eeffe916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9083aa6d-2c1a-4e7c-8634-4c3ba108c9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18070cb-b24c-43e5-a8fe-23214f007a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5492a9fe-5ac1-4061-8970-d39ce58d9bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677f9925-fed4-45c0-aee2-4dd3f9464795",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf60951-a45d-4bfc-9c46-f3e65d549598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57221b0-4ea1-4cd8-bb26-af22a961fa1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6741bb-d2aa-43bc-b2dd-ff926101f145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7da04d82-5cbf-4167-ade6-e3da4f34ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6104cb-dd51-46b8-b802-7dd7eb16e99c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1038aaaa-af58-42b9-a8a8-06cac3e36a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d77a2a-4f34-43fe-bf70-a79c1ba7e982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d5d68b-47cb-4e03-8c76-e97e0af64fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae082c0-4f95-4bad-9133-3c1583d58ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fa7623-941c-4779-b18f-a7c5d54f7fad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf048603-9d62-411d-adac-5d8ab3c30ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29a4a61-dccc-451d-a7c6-ef7ea25c12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57072b37-973a-4478-a809-c596c3fad3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb804bcd-d8e3-4110-9400-86273848d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba94044c-a701-4d1e-ad91-f6b7e097c720",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcf8485-5976-4b1d-a7f7-8ba62737d76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ce366c-fec8-47b4-a417-f649dcc7b2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daba4368-221c-45b5-a2fe-dfb2e6d48ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6546b3f0-6375-4579-ac22-d247abe2f00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756a6826-0b94-4021-b46b-4e890ceee072",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da3610a-54ab-42cf-bb4b-350cfb773d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3d7aa3-2959-4f69-9bd4-7c9b920a4aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd177b1-f210-4d73-96fa-96603a6b80f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1468d825-64cd-4438-b6c6-37690ce798b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c4a50-dbd1-4908-b7c9-6bb0f2e0c063",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f002b5-6d8e-4698-b10f-b47e54f01a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c120c9fe-af8f-4b34-9bca-10c6554ac4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe988ea-c132-4bab-a16e-1aa0287abd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a954649a-4168-48cb-9717-207dbef21550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16034648-86bf-4a64-8931-fb55b31d6a9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4fabb3-a1fa-4741-a463-6d460216be40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37cf3594-c824-482c-a099-51a0d282cf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cde926f-0696-4fb3-8c0d-a0ff8760966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70c3140-41d4-4c57-850f-1af14e9953ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d814eb-eafb-447d-aa57-e8adcacd8a99",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6560c2d-5b0a-46c9-ae3f-fc542f7a65f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968393a3-2b5f-4f40-8493-d7cf1e9331d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45d0aa-5684-4dec-a127-aab3c3d4ef52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27aa13bc-fe87-4310-b9dd-6f0759c5971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed4e32-7791-49e6-9ccc-a0fede98edf9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ec6930-07a6-453d-83f0-070a93612395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13ba324-1068-41e1-ad1c-f09b6c9e56a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be393c3b-374e-42ef-a39e-66d1f9609d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e22e80-08c8-4c52-9039-f30aa3863e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b919b0-5ebd-48fe-a808-4ce4761229d5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a462b0a-2bbc-43f3-ba36-8c21b5a30f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d7f5d-795f-4669-a0a6-3dd08da773dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05693c58-c1a6-4b0f-ade9-9e8e46b69c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d927bfa1-5dc1-4b88-9d54-f85259d5ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b833615-582d-4d2e-a53a-d785062e035c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90effb9f-3da7-4451-8f7d-f0fa51a6b20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87624b0a-e950-421f-9f4b-579b5100eae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b7b194-d7f7-4859-b511-4d302eff5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1118fed-3634-43c5-94e8-d47cafbdc887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad32062-0a8a-43a7-9d06-4f2791991404",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e4c124-725a-4af6-a9b8-ae5c45331d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb02fa3-7c0e-439c-b01d-351a63e27669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae76f89d-504b-45fb-aede-02ebd2b9c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40119247-c9a4-4880-b71f-99bcb5449554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6043a67e-bdce-4e6a-8ec4-f9337ce03280",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe77029-9eeb-4438-8c74-7f4d8c8145b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f917e404-6474-4222-9100-eb92fefa7a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc681f3-989e-4013-9b98-e890c4443ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84ef13e-e783-4934-aa00-6836280c09d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1d3a05-675c-45b8-8757-c5f7f91336bf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a65e675-ff7f-4a8d-b395-df2ef8ad2f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdf830a-4391-4fbe-bfd7-5760096460fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a310192-4f53-4154-a1aa-6c491c6a92b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "45a7eb94-6902-4b12-8016-bc6d871819d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0de2c16-8648-4747-b012-294d6b0d6c7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2fe1d5-a26c-4969-99fe-a287f3a9015c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7249bc-28a7-4d3b-8935-a7f585ae538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2184862e-0a3c-4b97-a4db-70fdb2b39536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a372c-741e-476d-a677-ffaf5e1cd73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb2350-684e-4c95-8dc6-99cc82a2b6c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc66d84d-615a-4115-8b3f-492e6c122f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d716c3d2-e412-4e6d-825c-5092cc5ce8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eab982-7207-4d34-a4b7-e6ef02bb2cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66d554ca-7fd1-4369-bfe2-fc4ce4175469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da07192-6c61-4944-b8d0-e1c8b3254ebe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efde597-3e04-4751-98e2-2b92c67da289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005f9970-ce99-4194-9ec0-9106b1a48c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c756a0c2-02ce-46e5-abf9-d23120030e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ac6d0a-3b97-4aff-a4a1-02453eb780b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96f6f35-c9af-46da-93e2-33e6e69b9332",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f367a7de-e8aa-493b-ab8b-ead32e1d3d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202e35f0-5328-4242-9c86-0412e3a0c5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa401e8-775a-415a-b88f-b16763917271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bae07db-99f2-4a0e-ba2c-7e38d1ff19dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1a4771-c4a1-4730-bc16-f184c259cb4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fa7a9b-ac57-49ed-899b-3a11914fdf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc71fea-1076-4aaf-934e-b9167a436e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260f116a-ec89-4771-92da-6ee34ccc8f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9be081-30bd-4ea8-a96f-1ec95485a5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6d1f01-0bb3-4f2a-878c-b4b3ac5d890d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6fdc68-d00d-4b92-a01a-0f7ab2cdb7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5664693-c5f3-44ee-94c5-eae4c4168722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f4687f-d6ec-48de-aee5-a488cfabe045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "29873dcf-0c0a-4b18-a3c7-cb1319370ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83cd6f1-5ab9-40e9-8c19-94d6f9149fbf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9120e22-61ba-42a5-aa5f-0205ccd7c3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1db2d8-dcf5-417e-b6ee-97b70f31e578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b1c45-c963-46ca-bb2a-dbbbb2d39daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e2d6f5-ae45-4b0c-8556-7d8a382dd9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90902433-30ea-4861-8a22-5d8056bddfeb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7439eae1-e83e-4679-8e13-c01b03cd592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e7b786-28f7-4cf6-a03a-dcbe1ce48569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f3a83-bebf-411c-b015-a821921ceff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc069bc-1972-433a-bc33-f121b9f594e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa01255-af64-4595-bec2-328ca27c1038",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae592695-ea17-44c8-818c-943cc67aa040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e64aa9d-a754-4c15-9896-bf8214bfe227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1d858f-4e2d-4d9b-8ee5-d550a7992ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5552452a-3e85-4522-ac26-47be07779fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99008c4-0919-40f6-8df0-19f62c8829ea",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457fe672-0134-4c48-8717-a85d69e4b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a010f4-c6ed-49fe-b237-3e001ea064a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad4c3ae-c72d-458b-8273-344e881c8d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b92c34-2b28-42a5-86a8-b5065ba7976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f074c57a-fe21-4bdc-a330-32313bb5179c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ae86e8-abe0-4272-83d6-259c43e5415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7a145c-d2fa-4ace-b6d6-87388b316474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7795f511-35dd-415d-830a-746c23c97337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "daa3fefd-e57f-45be-8e42-cad656ae543c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb7d44-8a34-43be-bd13-75ec8548ab52",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb6356e-dab4-41df-85e0-af23314c3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14147204-dacd-472c-8e93-1cb5273bdfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cbd6ff-29cf-485c-a551-d0b436d3944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2459175e-6d98-415a-9085-1c3d29e00029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5724fcea-959f-494c-833a-8db92b780e02",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e4e66b-4326-4bff-b63d-ad62c75ce330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2467e986-681a-4d01-a7dd-245ab8753900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bfbce3-e5ef-4bf1-8e92-083126381212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1207e35-dd58-4d99-99c6-339c509fe370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ba63bb-7934-46ac-aaa6-f265347d45bb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeb0bb0-b2c3-48c6-9e7a-f0da29f8b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d40f0-9432-4cca-8a28-2cfaa52fbc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c27e9a-6257-408f-98a5-8e7361620bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc12bfec-0f22-40d6-9a04-de3a0a3d2280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbc64d2-bbc4-4c40-b16f-b5d108f38b99",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c40de2f-e1de-4a0c-b3e0-c3932e6a6476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74286cea-9c81-4439-bb3a-27de33df5747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc8c393-af28-446b-8808-30eadc4430f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c56b5f3-8736-47d4-b8b9-b002aa9b9ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b5545e-04d1-4afd-9392-ef074c419106",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be1746-c562-438e-a706-0387a339d484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019b8e08-0a2d-4b37-91d7-d84a36787270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38840c3-3130-4c8c-bae5-b1d93a8fd98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5834377-ef1f-41d9-97e0-23dae4cca5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6afae-22c8-4fd3-ae70-8e85aae86aba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93faab0-1c47-4313-8cda-e520600393b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0992b559-8a34-41ac-8a9a-f708d876e051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21e7a65-a6b9-43ab-abb0-73755a6a2b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b26f4d9-2fa1-4054-aad0-ece6b68a0b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e50a5bc-da59-4953-bcb0-8fa50a9dfed5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eefe5a-7e9a-48c0-9e49-274ba6e1e37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8c38f0-c874-4aef-af61-25190973e72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711740d8-e12d-48df-90b5-32dbaf9cfbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aad7ddf6-42bd-43de-9616-4edaaeaf9cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c8c522-91ff-4f30-8656-c420101e4fe6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b50a83-26c6-493b-aaa7-ea5d65630993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36bd847-c922-4ccf-a1dc-d7e09d0037cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21703080-d62a-47ac-924e-c13c730865f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ed4d76-0658-4d9f-9a90-ff6797e347f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c237f0-c924-46f4-8f73-a50a327ab79c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa94454d-c255-43f8-b59e-e4d3f3daa715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e372c722-c800-47b9-b111-8efafbf64e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69fd81-e190-490c-ace0-c1324d67e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83efca1-23d4-484e-bedf-6ff6254cd49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6a15bc-39ba-4786-9ede-bcfdb69ad485",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46e4e0-0bd6-4cb6-bf58-7d673bd732f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9fb2df-817c-4ce4-92e7-99b9ffafa856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e51e629-bb46-4569-bee7-3b1179abe40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d6c7e4-e0a1-4849-b785-e810381fc11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33665bcc-b084-4708-9e07-1a528b4a11f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c139be-2bf4-4848-b8fa-8bf31898d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ff2fa2-01ca-40cd-9a28-c0facca00751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924eedb2-b09f-4ec4-82df-2e97a28d4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8de5bf-4261-4092-8b89-dd165be7cc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb8bf53-b353-49e6-be51-4a5e3d05b2d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299a6bf5-6db8-4e97-ae08-ec82740738ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f09de0-b52a-4319-b078-89bc71b23fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b6b659-64ba-421b-b18a-1044a220eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "764814d0-beff-40c4-91b6-e60406e15220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05290f6f-e97c-4cf8-bf71-91f87163ae76",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d9b175-636a-4f08-ac09-97f7be83dc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45ab789-d200-4666-a876-2462696216dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211388a-23b7-4143-a274-9195894c6fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0000f84-de16-4c20-bb76-8edc8e7d3045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d96a4-0a4f-47c9-91e6-8b4ef69becd8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7448277-e7d5-4255-9d19-1f336bc5a47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2941328-2051-4cbc-a5eb-3651b96be345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1af191-95d3-41fd-96b2-9e600bdc2a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f00999-848e-4882-9553-f831849d1d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4f94f3-2103-4d94-aa70-c7350bade413",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda3000-82a5-488e-8f89-155888a5f7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8148dfe0-46a9-4d05-af88-ea014c7b878a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e05c6c-158f-410b-bcef-da1034b8796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3519f3-dc35-488f-9b50-173cc81ec345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db6963b-f12a-4f3c-bc5d-274dc4357647",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c08232-d4b2-4c50-be36-869d2acca7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54512c4-8222-4ca7-bec1-d4aea598cff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273f12f6-1786-4c30-abc3-3c106ce2a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaf02e5-d651-4a8c-9362-908a1888d39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ab1389-3d1b-457c-86ed-c2e06df2cfdf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a1e69b-6397-4a0e-96d5-bd4f398fab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a648e-9b8c-41ab-9967-9be4306d8021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae88f3-6345-4126-940d-83bd49d48565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f6271-c01d-4197-9c3f-8e107fe38fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43c7ba8-6cd5-4aad-8918-dc577df16539",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b005a7c8-3cb6-4b35-951f-7a6d16cfdafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d66d76-1c2b-42fc-8479-807a0f332a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b383fcdc-0d4f-45a3-a728-699a04158899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f486c4-0061-4d19-ab41-c1eb006adf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75b24ec-2c4e-4488-8dc2-6182e7f35de3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b91a69-1288-4e92-af5b-8c47e5c1c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f32d75-6f73-49f7-92a8-4ec8f8ddd438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5afb80-991b-439b-a11d-f19a0b8ac2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "008a32e6-3838-404b-91c9-68c1b1605cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ef13ea-80e8-4c58-8b1f-9e2b50db2315",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66521389-0b5c-476d-9fd8-3aa7ae8f544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6018ad6f-ce69-4f24-8195-231c8b7049bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f7414-13e9-4e0a-b63e-7c308bf5ba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1f6c8f-8a7e-4d6b-9569-7054d493966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c230d7b-f851-4eb0-ba39-aa549da06e31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9eb103-d6c3-4271-ba1f-3c069181bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b54b590-1e40-473c-935f-7ae0cbf12e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e091c06-6bca-4c6a-b6c6-39f5cdc5f497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f259f3-1cbe-49c6-b93a-fed1e9043186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc32bf19-3232-440e-911f-75e27d79dd68",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c1e03-346e-45b8-9f04-5bd0f51a04bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78b7f73-5832-4a9f-a151-5d12c9f11b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14796884-ebd7-4ec2-9eb1-69999b38b23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f34552c4-3061-4f86-9189-50e24d38a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2893d83-d7c6-4004-b85a-87e5002579e0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1298d86d-61f2-4651-9f87-1dfb4a7990f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef28ea2-984a-4a1a-92ff-cf47fca9162e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b8b205-df21-4ad8-b5e0-ad733fa85b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51ca879-69fd-47b8-84ea-16cea521f4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609b47bf-123e-4de1-b1d2-6f4b0b068ae1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f6881-910c-4676-a8dc-6ab451a64461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5037da8e-56bd-4923-a1c4-addb6627c15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c78c02a-2626-462b-b65b-677ccf574968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1d5810-2471-44c1-8e97-93d508bc3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56e5c8f-f332-4a68-ac33-61f543c4f6da",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d9e30-75d3-47e3-b34f-d2c69e1e0451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "61c2107a-91d3-40c4-bfe7-a6270efaaaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef74a2c-714f-44ea-b4ba-41a2b14595a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce63abc-23cb-4589-b251-568909f90280"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f14a88c8-88d8-403e-9816-52ba0c978d87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb146756-e935-4e35-bf65-18faeeee004c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7893f-68f7-48d2-9de7-a40c77c60a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "650aabcb-1003-4624-9e13-6907da275952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5960a44c-ec66-418b-9127-1463f9a59f96",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10aa6031-c4a9-426e-abb7-5bdb8fe7a8c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "542dac97-85fb-46bf-80da-95ba6335c527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7af42e12-3243-4471-b1c3-acee6e0768bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08f038aa-6d72-4d53-a05c-c0fd6f53d739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12a23ca9-f15c-42b4-b533-a4f2ddcd45e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c185811-40ac-417f-8c2e-a302c35a8e78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc15c0c9-22a9-48cf-867f-5ccd58dab29b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35474c70-65db-4ff9-b2fd-28b44d8cf668",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c619649-00d0-4155-8ae2-33f6f929d8f9"
                }
              }
            ]
          },
          {
            "id": "a2822628-c12e-481f-b42c-0f170a09693b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93e4b95d-dc5f-4c11-81ab-c1c8424d09c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f722bf9-4848-475b-bc45-ce76cd92ed1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92b415f4-4395-46e7-93ff-7bc93753cb4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8e203fa-f1e7-4119-ae4c-b84e17624b12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3714fc9b-2457-4fd3-975f-734b9031b6fd"
                    }
                  }
                ]
              },
              {
                "id": "987aa4f3-27a1-4766-ae30-b05aa02702c3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a750ec43-eff7-4ba1-91dc-109f8ff804e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b07a8ca2-8773-4111-9b1b-ed1c2a4915f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7caff6c-18c1-412e-9a86-4c3abdec4933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "284fb23e-f8b7-44f8-9359-b04e72c9c1dc"
                    }
                  }
                ]
              },
              {
                "id": "aa5bbf29-16d6-4cfc-84b0-2b632da4008d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1718e94f-a2e2-400d-be64-2033d93c5048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7442311c-2a02-48ac-acad-518e1af718b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d88fe97-09eb-418e-aa82-90f81cee5352",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35b38a45-5536-454e-a70b-32a13005ea8c"
                    }
                  }
                ]
              },
              {
                "id": "d22cf88b-3e6c-4a23-89a3-d9dd9bf1a1f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec8a663-f565-4471-9864-35c538308df4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4d4270c-4657-4567-b0b3-8a978eaf6b0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ff513a7-658b-4739-8fb1-544898d24bec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ff649514-1b83-4907-b826-64cb43b4964e"
                    }
                  }
                ]
              },
              {
                "id": "f3e9c966-6a03-4706-918f-f47903ece460",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "929ca9b0-36f0-40b2-becf-4e09558f0d86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "704f36ba-84a9-48d3-990e-f4336fa7b528"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed2a4699-9101-4200-9ea2-ff3e2f7a006d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ab928040-5826-41fe-b9f1-a126c70bad1f"
                    }
                  }
                ]
              },
              {
                "id": "40630b06-ecfe-4146-9d55-e1373fc4aec6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9041c4e-079a-4136-b6f3-4341dd31b57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35537795-f511-41dd-814c-9f61ec134adb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9f594aa-b81c-441e-8e62-81dd876bee99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf1fb22b-2318-40c6-a862-54b26ab65cdb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efb6501a-5bca-44fc-b344-336b692479c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df425558-a1f1-46dc-ae8b-6773d2dc24f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a7b3196-dda2-410d-9d20-82c34f543f41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4219870e-51fa-4fc6-8c6f-e0ab3cbe2c73"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3690087a-466e-42bf-b6dd-a18030d81c5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bc5f9b23-5b15-4533-8eb5-2c923dfec80b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aff38667-4c03-4403-801e-fbc595e651f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d294062a-23d3-4e66-860e-93152640d71d"
            }
          }
        ]
      },
      {
        "id": "060a3ee1-a34d-4368-b173-d802fc5e22fe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "227237d6-7be2-40d7-a6fe-e5b250ef5166",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad0b5db1-06ef-401a-a801-8ee065f78185",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8fc3c6f-eea3-4a35-956e-ba6888ae3837",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dde41b8-b58d-4f8e-855f-e8a115b5a15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6187fa8b-21e0-4949-9b68-e1cc407f1280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b0f903-7d38-4df7-b0d0-7de66de77199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5634aa78-1ebd-493d-a802-1414d32915de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e2ea16-4e8c-4979-b6aa-244332dad0a0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67976e0e-acec-4c0d-a9a3-966b312fc75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0709b7-30a6-4452-a477-dcc12e4020e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1cfd7e-d67f-49a7-9d43-9405d7983b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f24ec0f-ba21-476f-b63f-0f32982b75c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caced6b-e58b-4681-9fc7-ef66101e77bd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96441e66-0630-4495-a0bf-872093aed976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9970e8d9-a9d5-44c8-92ec-4775eb59b8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4ffbdd-f634-4a71-a587-3ba65c562d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efdfaee0-93c2-4530-817c-bf7d43dcae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42a8d17-d20f-4e0e-b959-25ab94b7cb96",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e365dd9-64de-4043-8af5-1ba985c84440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d896209-e8cc-4900-a240-ec948444e84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ad673d-a0ef-4a29-805d-aa42a47e95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f688a9c2-cbad-46d8-8210-b51631206874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ab3a70-e370-4831-8c75-b4201ebef145",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d632fa2-409b-4d9e-83ca-808734ba354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db76e2ad-dd54-4686-b9a5-52a4f4f00045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3224add2-31b6-42f0-9de1-2b0b65285db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbc8cb4-861e-4e34-b4eb-2f5ddbffd5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118fcd48-6744-4a05-a1c8-2b85ee8aa5cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28593915-0ef6-4d12-8043-5d70767842a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e3505b-5f22-41e4-aa6c-217771b78ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da8d07c-631a-4a5f-a676-4825ee3a7878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c03e0ef8-9e00-4190-b894-2fc425088aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283f8502-2dce-4b84-ac3b-3f111318ed1c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14629e45-7a45-4036-bc04-f53d8253ac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cd14d0-0d25-4ecd-8133-58ad3c7c8088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87988b06-f391-4cdb-b9a8-5a6ded214aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c36aa1-f9c6-4f78-828b-d57c196db8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33093dee-0de2-4b63-8f3e-93171c723906",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e44063-0f56-458b-85c1-b723abe8c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dba1506-8335-4dcd-82b5-c6ea3b55d496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c67105-d249-4c4b-932c-62745f4100cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c912bb-7251-47b6-a686-8f83aa694bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f4aade-2136-4668-9444-5374d37b5e94",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36460e22-d309-4b98-a043-adba94afd9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ed5ea5-a41c-4ecb-98fb-881498127c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8861eb05-3d4a-477f-801f-30ad349734d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "297e1b69-104f-40ef-a489-b6c776a97814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f8e622-f7fe-49e3-bfee-2af0bb93ea18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2ff468-11fe-4aa1-aeeb-05009061e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4f473e-b1b8-4cdb-b399-7ecdd151da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e30c1b-b850-4a0f-8634-218ea1a5144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1baf65b-33ea-4124-9a40-05eba33b444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f55169-7b98-460d-9faf-e5a690eebf65",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e1d4d1-8af7-4e90-9ae8-217d3f476dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ad7089-b4cb-48ed-9ca2-236d8b5bc5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04257bb4-7bb6-412e-8757-59406ae261ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "45d81fb6-2682-46b1-b571-8684384cc7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332e7ea-2b19-45a6-ad57-fa242a9492fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502a28f1-8740-4923-8884-c0f79b3323fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183d6356-7bd1-4a3a-91e5-26607caa6f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec152847-b2cc-4a8b-ad12-d4013ab479f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b45bdbaa-c240-44fd-bc8c-f4fa0acf926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2a5c1-55c6-41cd-938d-19ce5cd89d7c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e709b1ef-2efd-4de3-8000-c036fa12e6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bde6116-22cf-4091-b38a-d1614efb39d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ac4713-229d-44a2-b6ea-c954f0d33ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f119640-dd79-450b-a2df-0df789e2938c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6edcb0f-ec84-4737-8d3d-b413a7276df6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee1255c-cd5b-424e-90d3-99f998092070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e8e611-7e44-4b9d-8d84-2b138dfd4082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002b2729-046b-4019-a8b9-c06542f9d310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b352475-b035-452b-b0bf-53d6d3a03ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7be2f1-6747-444d-bb92-78876af398c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a769e422-2373-4e97-af42-8f2dd98f3be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6714c17f-1f83-4294-a856-9276ae68141d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e99ad3-d3b9-4510-9e6b-8e5a32cb0099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "844c4487-9d35-4d4b-8f4d-8c5d344a7371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222990fe-1d06-4881-8759-2c666f04d26d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9698a-f51a-4b11-b3c2-d9ffb2b6a26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127d0422-f505-4666-9b65-3c66da4a7319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e033bc5-ba70-40c2-8257-a400af74a965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80d27ae-fe62-48e7-a7c9-ced7cad5e660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ece5cf-0c1a-464a-82b1-58df6fe00164",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26745d88-0e3b-43ca-a6d2-92e1cb5c7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4990ae2f-20e6-414b-b60e-f96b0da979c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3222799d-7f4d-4e05-a626-8c1d3b62f7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b3e349-59bd-4aae-a89f-1cee694f7aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924d82e2-adcb-4528-a6ff-84bfed94533c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa7f2de-dfac-4901-b589-51fb95a85e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820482f2-b8e2-4fd1-bb47-430ddd0190fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c31e515-d859-40c7-ac6d-0154b52db0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fa988e-f43a-4108-8e5f-776f49b6b1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2532226-34e4-4459-a44c-1d2c81a7c8f1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abe70e8-9356-4f16-8d3e-01a09fdad7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eae9ed2-df8f-4821-b5b6-8dfb2e514dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f3fcb9-811f-47f1-8320-78c38173708e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84521be2-ea66-49a2-9d50-8fc264a0dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99abd3a8-1b95-4b70-8593-37fcee6f3b19",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d59eb5-a6f3-48ee-8907-6a568b7b844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b524b4a7-c2a8-4e53-b97e-b3d830ca91df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c7f705-d676-4aa3-9bf5-7bae2d8d8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3300f42e-6bdc-4855-8b52-87c159f3a2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43220358-575d-4926-86bc-e6ff34ce0d85",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b53ee4-95c1-4681-b0a0-3dbe592f5b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f349d32-de65-4b11-8280-fb3fda7bd6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e5522-9945-4003-b094-1622accc99c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97a22d0-395b-4fd2-b956-2be441fcb3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988cbc38-f21d-4af2-881c-b81677d418a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f33670-719f-456d-a794-f7a235785dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da1c02b-6476-4708-b7c7-dfcf57bbe0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5884ad79-9a44-4069-bebc-dcec3c7e797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b26eff7-09f8-4de9-9788-ad3ee13fecbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa77c1bd-f87d-41b9-9874-aa4087215ff0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7542ece-01bf-4ad6-9d1d-27f606b52fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dd39ad-9ed9-4226-b003-35b3365165c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97eaecc-5f77-48e6-a73a-42599e71889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d33fe5f-bf33-4921-a66c-9a623a20e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7950f-f247-41c6-acbe-7922d6b48389",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c453327d-4202-4613-b13c-68776e892f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e24ea9-b17d-4121-96cc-e94a24e3651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c832e1-1c75-4b2b-9625-861b77453726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ecae46-f251-4d69-9d71-221a06967a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867199c1-3f11-4ae9-ac92-5902920eb713",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2ce1b8-9b6b-43fc-a63b-431935a3d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb3d8a7-80b0-423a-87d0-cc004b74344a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cffe914-6697-477a-8653-f0b98de3dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a0275c-382a-404d-8660-23e63f3611b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6ad1f5-29cc-4793-95db-57fb1d372e89",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a033a8da-2b78-48a1-ad38-5b877a69ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e182616-3299-4496-80ff-5a094c5e7466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99cdd96-f5e1-457f-bf16-4a862a0c43b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf3862-3d88-4f00-a8f8-1b31e021f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f43886b-91c1-43d0-a6bb-602140012aa3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd13621-4829-47a2-97e5-2297763a8a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c14c809-e9a1-4cf4-a815-a9281479a1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da3d46b-ad7e-4c5e-b4ba-e6c3a78d8aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfb8efa-0c57-4672-9a32-1db2baa0be91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bdd3db-a960-4229-b2b1-35fa1492a32b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65594a64-14bf-4161-9bfb-002be291bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb915e9b-efe7-4c57-9f1a-489d48733eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c88215-1c42-438c-a958-e42ac40fa01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c1ac4e-4807-4ab5-ae56-ede1240b3b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eadc69-5b64-4927-8c33-cc2c563a43cc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6df40a-2dc2-4d04-b0f7-75dfd8531a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f1fa7b-3fee-4577-8183-9150a0c1c2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef92f00-2814-4abd-83c8-3450068354b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e5d896-d36f-4499-b102-01f64212805f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8358c9-022b-4d54-8360-da4f4762c18a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e9ff2-5136-4a2d-b5cf-ba780faf4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6d78b5-d650-4291-8d43-4294df434892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c3c2fa-fd15-45e9-ad46-a3b8f773debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f36ee8fb-601d-4a88-8ca2-825b76079fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37271c3c-9c0c-4a94-b6c9-73b8b15dc3ac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563b33a-bbdb-4153-a50b-dda726d9e224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a12831-6f0a-4900-9741-b845d16917a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c317ac-53fe-4e29-bfec-cb394f0f6b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "951d48ff-0025-4125-8512-e586b7c35985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619516bc-6259-456e-9cb9-2e8fbedf5bcc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d42a39-0e1b-4322-b550-c248ddf1ba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c3a6dc-3e74-4bb0-ad01-f59f22326051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0977258d-e275-445a-b101-84d5968d96d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ae4fe2-1169-4d7a-8d80-6d377f24138c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e15528d8-e23c-47fa-aa18-43d7112f62d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "078bd00a-a4b7-4438-a1e6-a27721c17246",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f1d9f5-0554-46cb-a618-1e6a1dfa4afe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc623116-ab7a-414d-9941-cfc4d7abb7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a333ff82-f608-49ac-97b1-93c2e26ba564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c3daa3c-5338-4861-873e-a2b2be38e00a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec8e85d-e953-4fcc-a949-6c03f90ced25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a2ef951-df10-46ae-bb2d-2c6fac9c7a85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf8d3e48-a26c-48f7-8ec0-ec3e7d39a7dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5c76184-a921-4c8a-99fe-028e49623a43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b8857ea-670b-4864-88dd-eb2b5f0614ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ab7885b-6c46-4464-a3e4-8bf6d06c824d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "302856ef-1e3d-48e0-ba0f-59c922f7434a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7357b6a0-1fd7-46b6-8e41-51bde788c6f2"
            }
          }
        ]
      },
      {
        "id": "55160a36-587a-420a-a321-edf6d5fd94a3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1bd741b4-9c27-418e-9fa1-5b68fee9af52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32fe0aaa-b4d7-43be-9b21-205e17b343af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5b7df6a-feea-4981-9e7c-67830756098f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83053c0e-3168-4645-8f76-017ca64b344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfb3423-83cb-4202-b0d1-7fe03917078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175fcf35-b716-4c63-9897-eaeeb58d515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40b7421-2ffa-4e17-8d8e-cb339a53ea88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec3ae49-5b0b-4e15-bed8-67627fc63b99",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677243d0-032c-4491-91c3-218dccab8126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f1a6ad-dac6-44b8-910f-75ff537625b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cade1be-7abe-4033-9deb-593b5801c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f06a817-8ac6-4de2-b7cb-ad840dcd011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d22310-40f5-487f-9d8e-b1aaa0abc233",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c181d037-1834-442f-95e6-81dfb81e2da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f88aa0-747f-4b53-983e-fbd424a16cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1edf51-0a32-4a76-bf48-405c440e047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "153f1357-d80a-41bc-95dd-dc0aaefec9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca9166d-2e70-46df-8060-14547147d181",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db33586e-7ff7-4540-923f-173fa9263b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feede31-523e-497a-9c28-a6931b9fbb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a98b735-708e-41fd-85ef-f5c547e9f21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcff1cc-51cb-4e0b-a7c6-f326e12518ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc500a04-0556-47f0-87c1-99360ceb0a3f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f058d131-0ca7-4216-b276-91345d605f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8a49c1-8a59-4cba-9ed2-ac45fe4f841f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b55b6f9-1594-48f7-aedb-f89a3c5094d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31cc23fd-3cbc-44e9-9eef-54c794f81a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a6862-558e-4989-815a-fdbc87f443be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb841fc-a953-4703-8bb9-0468fa2d5e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e01020d-88ca-4654-9e71-6db1a86be926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be3aa94-4d91-4286-a915-c142e595ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aea3176e-fc1d-458d-9cf6-a343d2236f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6071b319-a573-42a2-ba35-63eda0df4595",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b17f83-6833-4ce7-81d7-a77fb66809c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81c2435-0511-4216-8da8-0b19517463e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b16613b-b33f-4c4a-9c84-50f0d171351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c71530-2fd9-4df8-a6a8-c148cf8bdb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c867c567-624c-4f78-9858-6748078f2d37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8cd6e1-b473-45c6-9028-f091c31f6146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e334e90-8b74-4764-b8a2-618fb5fef4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcf78f9-0617-4a26-a1ab-b72df93bc00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "560fa087-31ba-463a-a940-eb1226021911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb93b47-72ee-4db8-a1ca-793c8176d90b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cbc9e1-d495-4b56-b6ac-067cd5db2656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ebb7ab-d654-4988-a592-695b5e36bdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e2220d-ee96-4523-8161-62ee25eb4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3527ec4c-d9d7-44e7-91c2-1bfa0866e963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b56625-03b8-4b2d-9ad5-cfe96a94022e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1646c28-f1e3-490f-a425-b5b8d267c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0064cf2-de6d-4031-9ab5-c07fd079c2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79265a-58cf-4535-a7c4-6daad02dce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b06f3d-8f48-4a71-a390-6b5781b01355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e06c0b-06e3-43cc-a412-000c106c820d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc187b4-16e6-4053-ae78-c231f8868228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90d1538-61e8-4d87-b33a-7fb1fa8204e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00467c6c-cfe7-40c7-bed1-09b548b2d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fa7b3f-3450-4125-891e-6d34906dcd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35954e99-b8bd-4881-a9af-b63b79c03294",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d85c5-a67e-43c7-8caf-02909cb39a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0749bbb4-1c0a-4593-b12a-64a0633f8ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48583f72-3765-41da-ad36-fc9a28ef410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc81ca3e-f942-4ca0-a3bd-4c6a82346773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcad3cb-b7e1-4363-a4cd-1b003d39189a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d69fb92-a3fc-4725-80d7-0eb62103a0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ba7020-d844-407a-a6fd-0ffc5c70e357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c678a609-b3e9-49c9-ad00-38d1da8415de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5992e5b-3273-4a92-8d60-af556728ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc751bb-7156-459f-a0b0-71ccfb8dd73b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4d2c8e-b4cd-481f-bcd6-e17ec0a3f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d892da86-a611-46a5-a02f-9fbae05f9e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08021c5c-fc37-4560-9471-f04833638f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcd930e-5487-46f2-8aec-214ce2f82b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d613f8bc-aeaa-475f-93fd-72995c47d6d4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc98667-8505-4a68-8b3c-1a89fbbe2186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bd1437-59ec-4ec2-a516-77984f9500f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c8263e-6f03-41a3-88c0-c9f73d37e8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "493b947e-48c9-4fc7-87ee-6cb2d85aef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16eb0bde-b59d-4cdc-ae5c-d0275ce672cd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101ac6ee-d147-4295-9480-3c7a86ce1016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b5c6ba-20a6-4190-bf8e-18261bf52cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92525a39-39ca-4ef3-8d5a-12656dae7f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a3fea4-c85a-4dbb-9b80-cb689f220adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a479b5-c48c-4647-9282-aa6fbaa78798",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f33df62-2921-4f04-9a2d-4300ad6e3f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d082e0-9947-48cc-ab4d-e0d0b746de9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23709fa1-d9a0-4251-82b7-f69aadccaa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afe3de4-930b-4a89-9c62-bde11cf71a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c7d2a2-da57-4786-8ba2-86878c6a834f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcd190d-7379-4f27-9297-41811a0bc85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9612bb-5204-4be6-ae0b-62d95304051b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc3d1a1-ebe1-4ff6-adf6-e8e2d57ff10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "296135ce-30e0-492d-bd99-7b6fb170adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a5f17-488e-4424-9f97-1cf5f72be5b8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcde8eae-950b-4999-a263-b911b281f810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7df288-cedc-4867-9e39-d1702f342aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd154bc-738f-4d5a-925d-5b9760812833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417b887a-eed6-40bd-94b6-9f3eb19cd787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8380ebbf-b7b5-4973-a0fc-367a28000b16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafed9fd-c25d-45ed-9edb-889341c6b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cb6c62-3f75-43a9-9fcf-5576bd342f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee52a4f-cfec-40df-8c17-92fad0903f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3956d87d-ec32-4343-b900-c832f9c6cd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f28667f-6f73-46a8-b2c9-1b8d48787ff9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c152dc-c7a3-4ec7-80f7-4ab37269e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba10447-a4c0-4eff-874c-9fc89c1d8128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af00b8d-cf3d-41da-be87-bfc4a60dafa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c6d5d8-1f97-49d7-bf2f-1edf442ae264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8176fc87-00e8-4e4c-97fd-39f0c9c3dbdd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb33d7-20a3-4038-b98f-bbf9c5cecdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e701023-6df9-4697-a23c-20fbe1b11575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb590ad8-2d82-4117-9525-c6185dc09ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07148a4e-9bcc-4116-aff0-2f21753df64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59760199-12fb-427c-8a78-72c3f7d8cae6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c2737-1be5-4dbf-8353-6da0ea110007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2916f9-0d01-425e-8f0e-a2112ed32077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01a33bd-f7c7-4af6-bf0f-f89babf53b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0239464a-962e-4a2b-94ea-5c9347cb1f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c9be9-4790-43f2-ba59-8693a9d2144e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37bf9f6-1b36-4523-a8b1-330e64a102c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307aa8a9-9691-4ba3-a28c-a15316d7563a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d92b7b-b2a1-47b9-ba94-c93bd020f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31649270-e479-49c2-8930-0953ebe8faa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f4384e-eb74-464c-8b09-966d12bbb020",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67108bd-6b77-4e72-9498-373eff84cec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2593f660-5391-4f31-b716-9529ddb83420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba22163-a3e3-49b5-b36c-2fb0eaf77822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6b83b9-0bfb-4374-9a87-fd0bdd4adeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8060727a-9065-4bbc-a303-903ae0e390f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61269a9-d706-4cd3-9ef2-3771de2e8ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937ced60-5c43-47bd-80e7-1084da0784be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a69560-8e14-481d-b75d-2790a872d45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db561d8-0fb0-4e20-9aad-6a940f218fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b5256-5f28-484d-94d4-ab5e75c82279",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db92d3-d29f-4143-abb6-f9d022c7217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0531d5a-d49c-444c-935e-010b51d0d7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c86a5a-4d93-4470-b454-5070d85c864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71b26b1-bb3e-4452-bdbb-6bb847b72953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51ce3ef-1d4d-4a9e-8f65-4fec63fc675b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6810a4bf-e7c0-4ab9-861d-879c7ae7aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509d66ff-7082-4f21-bc0d-6a34340144d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c352d6-dde5-45f4-9451-20e8f2b02d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a183258f-c873-4ed7-a53d-02cadd69852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48589b6-c2f6-467f-abb2-1cc547939d8a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67138f60-dae1-466b-857d-cd0613767d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8145e389-ec59-45f9-b8e7-f2d7bcd3c90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8156f22-7fc2-4707-9b38-49af09d6fd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621f2c50-dd32-4c4d-9e3d-f90dd871deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de9ecb2-e380-48bd-a9ab-6d5c87257314",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c22d7a-a9cd-4131-8e8c-0421b16ff13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eed5ce6-ecb1-4037-9442-b84f2a918db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cc7e89-d6fb-4f33-8a34-46dac35d7963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ad610e-cae2-443c-9856-32fe9b0dde72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5181c19b-f66c-489b-b60b-7df957e95b87",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ecc6e0-e1dc-4920-967a-6d9d70e020e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02277784-e2cd-4ca8-80c9-2d7fb22595d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662835e4-4941-43a3-b368-c3a7b27558d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd75f415-a781-4bc8-a69c-45c7dd35d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c9197a-c5da-4eb4-8612-da9538289856",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e0e638-8be5-41d0-86ea-c0942caee327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd8183f-aa3f-493b-b056-15467d3855a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b7a48d-cb5c-4c6a-b4ae-ac1bdbcf6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d491b4-c9fb-4323-a51d-754b45da067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a4dda9-d2f4-4370-8a0b-7ca169ffa188",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1460e91-c573-4cab-90b1-3df024b362ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bc3215-8068-42d9-b546-28d2c1223d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a95d4-c417-4d76-afb5-8a514f212b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d4a8e0-bb7f-466e-a455-011f13e5ec39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba660c8-0fa8-4897-8b60-1b4d00a7fe6c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b5281-1c4a-4bad-a22b-197ca4cc7f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392e9edc-dde7-4835-bb78-384b54ba7de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0f6b94-f733-4a85-91bd-d4ace17f080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be123318-99c2-467b-b536-ec820e9535c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b3bb6-2dc0-4af7-b00d-4d21bfebbfda",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd119c98-09b6-4f1a-b61d-a144a971e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44687935-f773-4784-8d8a-7134b51f1164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd76a27-9411-4e76-92fa-5e4f63872fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117e1424-9cd4-4046-ab0a-6a4a5922131f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb35e5a-6d30-434c-86d0-09c2f7bf513a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912fa531-a080-4ff8-b13c-bf21edf73ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f7cd1b-513a-4848-aafc-05e277ee3dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0ebf6e-6253-4c2f-8e8f-a0b62dc8c443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8523c8e7-a2cd-4f2f-8f34-c31222966817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ed22d6-1d27-4cc0-902e-a66962588d5d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc09c4-285b-48ff-996c-c79d3f066262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8620370c-fd66-41c9-b1aa-a7e5df4cda48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a015b-b82e-426f-a62f-5ca781e36e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609964de-606b-4aa2-869f-bfaf12512c57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecb4d39d-106f-4eab-9aed-b77b35a6db44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dc3c2fc-5abb-4365-baa9-af9c1f8ad37e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c7c30e-0c22-4acb-af00-464f7789863e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c9481cc3-402b-4617-a909-76ba1028ad67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5a404f-1d5e-40ac-8093-c73c9b69d334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d61487e-7c89-48ef-ad12-9c0bbc01f243"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87ba36ea-0762-4f96-95cf-607a43eba41f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d29b571-a3e4-476d-b27f-44f826fa5214"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb053d6e-903e-4890-bb0d-df6496c6f063",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd0eee7-35cd-4b38-8db4-185299c8f1aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eb60bf3-9d08-4d5c-aa88-760e013eaf08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68cb9e5c-1cfa-43e0-a52e-34380e56b499"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d2f844c-8f15-4df8-b32c-d3149f3e03e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2df9e653-1826-4f98-9581-b98ac0ce9922"
            }
          }
        ]
      },
      {
        "id": "43f640f4-482e-409e-9441-b48640987684",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e270106-7c07-4960-90d3-51e6e4aa7707",
            "name": "Negative Testing",
            "item": [
              {
                "id": "929506b3-d98e-4d23-8fc0-3f20da128ffd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b889ed00-40a4-4b48-a912-6365e9a42f61",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b6b199-8aad-4e70-a752-396de08042d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9b082b-9e1d-4987-b410-6e30ae52b5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e2e293-492f-4a17-8860-3b48004d1977",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd436901-7e45-492f-8290-04ff12b05071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7d7e66-57a8-49d8-b78c-6b1511c63990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2667dd97-8e7e-4e94-a54d-e46a44ec066f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86afdd91-7e0d-40ec-8cde-9abc74962885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc35b8a-3191-477c-b4c0-a6cae2908386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f181d7-0fbe-45c3-a330-f1944da6a923",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d929756e-1e65-4f9a-9016-9fd0d442d712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88468dd-e86f-4813-9200-29ade9d32a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e004968-bdc1-4ed0-bcce-1a1dabf49082",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6431c2-4dc3-4e90-acf7-0a580d0f22e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25706b65-666f-45d4-92ee-35c2737ca0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97b2dd-d24a-4742-a008-cff9a4fad78c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2361a104-453e-4a9b-ab1f-1dee318944b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4697826-be7d-414c-8acf-e23069763f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9609fc2-7a8e-4b57-81fd-984044dcead6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d930f9ba-fc52-4b67-acb1-deee13d4c82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd7c375-86c8-49cd-84db-baa515b8c653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f2384c-c055-4ee8-992f-6865f9c1ac90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16043ad-a02d-4e0a-8e76-016fc99cf905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d2e56e-1456-4651-baea-947f8c2ed39f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe6777b-3d9b-44ad-a98e-222d32223aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd7b8a5-1753-43aa-b0c5-510980c634c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c29876c-629a-44ab-869c-662d30021f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a664d89-1fc7-4de5-907f-e8c1bb4684b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf86ab8-a397-4b9f-82d7-8daea5e35f50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8813fb0f-b0c9-4bf6-9d44-f38f49d114d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97ac28a-a67b-4ba7-b655-591efc012a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e15d4-4f6e-40d6-a03a-000343b3c432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24d4551-d9e3-40d3-a231-4ff4c893abf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcd932c-36fc-476a-87d8-e3e3bdb7495a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bd2c7c-8581-4136-a14f-23598c198d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa2f58a-a6a3-4f72-a229-2b508449cd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f302a4f-f7c1-4d83-aabf-4aedfd682a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a483c1ed-91b7-438e-a3d5-38109044bcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a51516-515d-48f4-b4ff-4d4f36b8d30f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d1edce-2104-43d1-894a-1c9fb4a021ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63427903-8871-419f-9597-2963b6b53599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2fe1f7-557d-40d0-a96f-9fbd46d339b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53309816-9764-4840-ab91-bba782c2bcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb300ef-8685-427a-bfb3-57e1c0883990",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f1d09b-8d12-4158-b0a0-ae212009e7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc0d2ae-9b2b-4b4b-b804-d9ee5a4f4440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e913a8d9-3bc3-43eb-9648-f91f7139d274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b14ca3-9500-48ac-8d44-b72074583fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a7cc98-42bb-494f-855b-9ea6f8b5f38c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39031520-6912-4e25-9f45-d2455ed55f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dabb6b8-c9b3-4c23-baa2-e32a8fb547eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf494d1-438a-4506-96e0-e3a65b018349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f0bd72-e0e7-4f2b-a67e-834d9e2b87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d12525-6370-4099-9622-b403ff9599e3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1549103-a760-4301-bef8-ca1493e83e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9f293a-9027-4428-a03b-c5ff6e168cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf2885-ec03-4419-8483-b5e1b9a6d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c9c72e-f515-4e90-bb6d-6d58b2c24a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e0abe-c560-4c5c-9c3d-6faf9ced75dc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea03290-e11d-4735-9505-9a0413e5a2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7a65d1-fab5-49ab-83b8-5803cebca9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb90d9a-874e-46f0-8a81-1673da262053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e1f319-fc09-4626-8c3d-b74ecc1a70fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f6927-fd65-4162-abff-e24abffa8928",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33742afe-9338-443a-893d-cb11413be57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b33d07-ee8c-4d70-9f3d-3cd2696ccc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ecfb8d-eb77-45af-a044-e0dcc22b3d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d187d8-f727-4cfd-8f1b-369db0675516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b52f675-41a9-4b91-b326-4f58a60884a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb76e67-fdcb-4985-9099-812b6a5bf27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53968a71-e03e-4514-a084-9dbe99a0b8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68d0344-3f67-4fe4-9b2b-9f050d4a199b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c606db7c-c271-425b-b990-f560ec4827b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f941a92-d0bd-45ac-bb53-43eb084ba2e3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605db94f-321f-421b-bebb-063ebd49644d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086f5c1a-436f-4419-a53c-2020083fc66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4fa501-d851-4679-93f4-ab5070499ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02805f3-a03b-44be-9cf8-bc0998c0639b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1add98-7b87-4301-b645-b5b3b7f85c25",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72272362-c5bb-4101-a59a-8ec4419eea77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e996a2e8-47bc-4f38-a839-b62db99e2483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cd11d6-a8be-4182-8766-76c393b260be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbefe8ba-af53-4954-9625-38fdb7ab80ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d996f74f-1ab2-4469-8f40-713068328cad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be943813-55bf-41ab-8dec-9b2a0a2748d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5324a5-d010-47f4-8fe9-866460cb17c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbad8f-eb80-44bc-b660-7239cadd03a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251c2bf9-a5a2-43a8-97d7-300fb7aac743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57464a2-4617-4db7-a53e-5fcd2dc471d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1f3683-d0c5-4797-8ccd-dcdbb3b82e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cac823-5ed4-4f3d-8a18-60850496b4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f292f-d119-45ee-920e-2c5a74a363a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2ea59f-0e86-43aa-b162-7520d1ee5b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8687553-20fa-49f6-bfb3-ff8b125c5c66",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ba7be5-966c-4cb5-bf2f-3819939fc362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492b6d1b-f8f8-4010-bd56-c8dc0c0ba41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443458c1-80d6-49b1-94ae-57abb17771d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a0676b-140f-43f9-848e-57148a0fc66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdfb0a4-0a40-40a0-957a-ac4eeb611116",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f856b4e-b16c-4fa9-a64f-e78cb108b4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967c42be-a4a5-4e26-b8d8-38fb7392fb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722cf54b-03a3-4e71-a925-fd6104e069be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e695c1-02ad-451b-99e0-93593e70f92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da195c2-58b6-4b48-a1a5-961b675fb3c1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6edc098-2746-40b5-832d-77189d0accbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a9ad35-153e-45e5-9497-67464aaab9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdb9dac-302f-49eb-a7c0-acf26eafa091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d79ed8d-b286-408c-a6cc-39ab2dbb40c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5be0a3-a42c-44f1-b45d-d4f0409317dd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd34cd7e-dede-40cb-8681-e17a6bbd82b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3132cce3-daaf-4333-8cca-b31ea2b5d75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c028c8bf-af61-4217-a23e-5a02b88c6684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b45986-8a57-4176-9857-b58b5c9a643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e330667-3399-4f9e-8533-7225caade173",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25332366-2d13-4fde-9023-862e3492067e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4511ef-e47a-4eb3-8c70-4d5b5eb0fcb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f728e2e-44a9-49ac-babb-2f4dcd4c8c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e8f7ab-d217-4f9b-b5dc-da4673c4f1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b76b42-43a8-4d90-91a2-53f015d0f6c0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ebfdc8-82c1-4292-9b09-46d2afdc1fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f460e030-942c-4604-aa79-4163260760f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6670fd8d-c4ae-48e6-a6ef-bef7c1db7ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40dea94-ad99-4fd8-a8ab-1995a6f19f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e580de52-81c7-4f5b-b84b-20d45c1e0314",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b80ca1-5547-43c9-b611-b02b09fcd0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f3689f-9de1-45a7-82e1-7adcb43abeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d418408-7c93-4815-a35a-4174a8e02b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df958ed-1204-4e9a-a8a1-1baf1882b3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2fe716-18f8-40a4-9e17-8f0721568c28",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d49989-9d64-4117-806f-e842c00a70c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ba00de-c702-4d28-ae1c-2526cf085198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6471972b-a2ee-4d1e-b950-e85a4e935055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163743be-3f3a-40b9-870d-ca0ff2d92a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95702876-aa13-4105-8880-5ee6e399531a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551f0625-5b3e-46f0-89ae-bddf4235c403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f7cc68-0ceb-42b9-b368-53d1866b1a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998522af-62c7-4f87-81cb-16677d2e90f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61a445c-3756-4468-891e-8f0d14244e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f79bfb-029c-4037-864d-1d0322a2d3a8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d30a0-fa9a-4d31-9fe4-fa97eab25c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70080739-958a-450c-bed9-eab4a4955e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570c12f3-ed45-4217-9464-8462e2bde585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48b9abe-f181-4f30-9354-87e247e0e78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612cea19-8095-41e4-ac3f-adbb62b1b635",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5873d148-6243-4221-9cdb-23a6ce6777ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c17677-aeb6-4d19-a5bb-a59f7fbdfdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c712ba8-aa33-4b6d-8be7-86ce45219366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a399386a-8a9e-41a6-9a3b-35f0248bb72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b477eb-7388-4a4f-9b4d-a4efbd1e3766",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb675ab-d697-4393-bad3-314b06afd43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4b5401-3ac6-41c2-a1a5-e6e0ea72b236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f63ac0-77c1-47a5-bb15-032badeb4c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1839699b-acf5-4534-a383-571ea5718ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dbe3fc-194c-4549-8c5a-386218bd0872",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c980fdb-6360-425c-81b5-2ba2129cf198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2de1dd2-6f29-4039-ba89-798d4883b19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c2e9b2-9871-430b-82bf-4af6f74f3611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e804bf-5883-477f-9403-f0923ac7d4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4833ae77-08f0-4126-9c5a-001a9f4ff821",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92e8be7-4c6b-4788-aba8-4c272cc9fcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e97a3b5-c4c0-4c95-aec3-8033e5c34627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0e845e-0c63-4b43-a9b5-dff32ccf6b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcec5b5d-7e7b-4368-abed-0e6f2ce5ee17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f710978e-3c19-466c-8b26-0842e23df4ea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74113f2f-f440-42ee-ba39-28777dd656b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084333bf-b355-4a0e-b6da-6191dc5c0845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7951e9e-97dc-49e4-b73d-20775d8f57a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b151d418-daf2-4e98-afb8-fa04496b5df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6b87a1-9a9b-438e-862a-3743927817d3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c8f01b-b28f-4970-aff2-d6f114603464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d20f1a5-f3a1-41a0-a222-36c004b03005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee967da-ee9c-482d-bee1-f193a81d3419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db5869f-8baa-4bdf-a44f-579a47b5f995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39b59c3-04d5-42e3-934b-1a4e3fd03853",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acb0df7-84ba-4b67-81fb-e2894584729a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c4038d-4e84-4322-8d63-2e17a2f22e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362c8859-0355-455b-a067-ecb751ec4c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837e0c50-ad0f-4335-9b85-d82deea87cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0fec89-e9c8-4679-8c89-41937e53b540",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51501999-e09e-44b2-a8c7-05f156f822b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794fbc9a-568c-48dd-bb30-d929044b6f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b12d26f-a96a-494c-b5e9-12fde647f430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bc1ef6-ddb5-4e1b-a335-819fffb9aff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a53144-5717-462c-a070-f3c6043bf992",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4b6e69-e7e9-4407-8f5f-ff37e879fbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ba29c1-a679-41c9-a604-aa9edf9c0eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45065be-80d3-4ac7-814c-c2b5764adc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f21493b-3a15-4f3f-9dc3-1ccb837003c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed80370-42bf-400c-b061-363dc39b6e24",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ff520-708b-4e0a-8fe1-71cafd0af07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfe4b19-b90c-496a-8a6f-778439b8e9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dbb48e-8c5a-4714-a4f7-11e82f6d33b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a0dab3-d651-44be-baf8-c228e838a5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99fdc9d-72d7-405a-b31f-b89792f3a63e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f7d8bc-0744-4a83-8dbc-620e144de22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8054ca8-8b9b-48b6-9051-8704ce708ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ec6fff-50ae-49cf-8668-7b919c1fd3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94be180d-fd06-497f-b30c-a060de2fcdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a36be25-dd2e-4178-a1df-820d4f3a3da3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f87651-dc55-4f07-8471-1626f1cff3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b493d3-4176-4997-9082-8121846de9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18283a3-ff28-430b-861b-dfd6eb1b5dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef200a1d-e875-49ea-aab2-3d7e4438106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c1d3f-9b00-42e7-acf2-99738ca6e3c0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d27b2c3-efa7-4387-9d56-e09b4e4c43a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a38d9f-8481-4843-b5f0-feb3b98c17f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded84dea-bf53-482e-b8b6-433cb10ff2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feccf76-970e-4445-a6d0-1acb1f1cee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf5e49f-2e51-449c-8c71-771a0b0b96a7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c8ec2f-d131-4e81-9d16-bfb12a2894cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f830c142-c2ae-4472-bc95-655b4c0ee8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e821d-2f48-469e-acec-7382683c6a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0654ede7-5252-47ce-8492-daaaf2609f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742c9866-698b-4dba-82d8-751ff2f80c9d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61b4e13-c722-478b-8f25-9f6daa98a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299b3a19-03b4-4003-ad5c-27fe8922f67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e935df2c-dd9b-4287-9c8a-41c304d656c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabf2d32-58e2-4392-9e02-22bc50a5756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b0a59c-8cca-4091-a36c-076bd13bd4e0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44156a6d-d03d-4fdc-b851-47bc383bf455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4d0705-6cca-400a-a6ce-6c4bacffd7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e38524-7f5b-4f62-bea2-bc69b9195835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0152f92-2042-4533-9096-d7b7e2f28bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e17ddd-6400-4ccd-af25-654fb0451c82",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7d4631-825d-4b74-b4d1-5e8b30561515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da98948-a652-4c25-9b01-0ee760bbe6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf23b74-b584-434b-af05-e72d8d923c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc96e32-30e2-44e3-bf42-fcc4899c3839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe1a80d-e4cf-47e0-a969-bb45afc0ffd4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5595e503-e97c-4ea4-9030-6fcb339f7ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a8709a-da82-405d-93bf-3f331f62b0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42f8420-e343-4002-8333-0d69867b4340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261057a0-70ff-49cc-92cd-0e1d542ee58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6b72c-5993-44f4-9778-7d882e48d8db",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f399c29-0800-44ce-9732-54602fef7a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e4ed55-f0f4-472b-9cc3-b4f88e649751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f01c855-1137-49e6-8c9c-4964b7632aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7fd5fe-5b18-4370-8f3c-be20aebed91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423dad2d-8596-45ff-90b5-d66035c554b5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9330ac2-1cdd-4dbf-a91f-f427d3134b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e797a9-6a99-4f7b-a40c-3405ec6aa492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa804f44-9f64-4fd8-8ea0-f36390b2b95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5c5b3a-f214-499d-a53b-8009bffb15fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6777a86d-0b57-4b80-a60c-e70e2ec16c09",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67156348-d3fd-4a8f-9c50-1eebc17fe567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a6f890-232e-4c91-975f-7e42f60b0777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b68774-173e-43d8-89b3-d900868d1a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60ad5b5-e039-4846-9b7a-8502251ca703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca546d5-2d97-494b-a7a8-2be0bbf04291",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf784077-7a7f-4304-b071-769cb084705a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7618833a-9cff-49f7-95f3-48a0bdd5c32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf2e486-e516-4c3a-bd53-d21ee51d53db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e188394c-24ec-495f-8bbe-38e6cc1ca7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588d3633-dfe7-472a-95a9-2105ab96a9a5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a41832-d03d-4c7d-9b8d-2f9acf9b0d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046d8baa-3122-43f5-b641-ccb0c0ccea93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a85d09-2b43-4fac-a4c0-7c6aecff099e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bf1300-a486-449a-a8df-bf491b6214ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670bd4a0-45e2-4934-8541-58dca398cd79",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60548fd-8995-49a4-a213-21ef3d311f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f123e16-a007-46da-8440-b5dd838b1e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6b54ec-653c-4835-8c3e-d7ae9eb9edfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d561d4-19cc-4eaa-8cd1-82e7ab6fea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b13ba8-2b42-448d-9c8c-1ebb138fcd32",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ee263-35a3-4090-a390-2e7a2ad320c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abc526f-c0c5-4f97-9190-7d987e0d25c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086dcaf5-c86b-42f9-9cda-c9e3fdfd4262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8e7523-09ea-4501-b74f-cd43516405d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b0c24d-2593-48d4-b63e-f34e3939f786",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55c6eed-e2ca-4eb4-985d-546779675f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a620cd9e-f8a0-4e94-bf36-d7a317904fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cdbd3e-7b77-4484-90fd-5c420e0cbda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22353e65-8421-40ec-b613-3764f9fbf488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eced98c-a187-4d28-a074-118d800f8941",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab8f57-ed87-4f90-ad36-95641056f933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fff6a7-6cd4-480c-a429-f7135c141b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa14a8d-b08d-41ef-84b0-b851efc8431e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a306d93-be69-4a91-8037-6bbe0ea11d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011d8667-1b40-4538-af73-a3eeccc46b48",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66260e2-5748-4ffa-8ab8-d46f19a44c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1629ea94-eeb3-4b26-8f24-a89d811c0a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb5578f-6780-419d-b525-9605e250fd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdeaab7-70b0-44bf-a4e4-ac389cb18fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60bd3c1-59f7-40a5-8ced-52e59c5da9d7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e278b9-ba6f-4723-ac22-d427ac0b4b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9e8a6a-85d4-4871-b326-4b97b211c435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d654ab87-c7e2-4b4f-b1b0-286f4d53f403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712d5620-8624-4efe-9be3-f45fc79f03e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb41eb-757e-4020-847c-d3a431602997",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246274a3-748b-4755-a603-c2e920858bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3fc51-b62a-4f56-9132-ef342831744b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8484ed5a-6f5e-46e7-8ada-d68367b9ceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414c8acc-e464-4071-a07c-0590d3447154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37ec282-33dc-4798-844b-6b27d9e79f4e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978345aa-139e-4efd-a493-01b39c302520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181ce138-0785-45b8-9b72-9455b9e01a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6076480-fda8-4a54-9653-b54c6baf00a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35138a0-3290-4714-9646-bb646e559597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef31e62b-7a8c-4e08-985c-45c7e5f8c96d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139ad5b7-3574-4f88-9d1d-adee1258e616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc123d7-a9c7-4073-81ad-eb2625ef9e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe266f0-6867-4115-8cf8-ae81cbff28a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc68a45-a5dd-4387-8932-1efb8e5a9800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f86aa7f-5d66-4d89-b247-b7879094acbb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88742997-b9b5-4e8e-91e1-c4e0b1adab6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b94ba0f-66e8-495f-95a8-a8b8a750f1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfbc7a8-9a8d-4921-8821-f877990dd440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4dcd31-f648-464c-a31a-af04059c4112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61f6d38-03b1-48ad-a7c1-f47dbedd4b05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93119c6-5eb5-4270-80eb-3fe5f59e4fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e896be4f-5085-4435-9d97-6bd91a021766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b9d131-fb67-4443-a9b2-d6bda8a270b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811643e5-9898-4e73-8868-7da9c8c10bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e7ebd6-b396-4375-8a60-43923a6d1ab6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a6faf-2f01-4845-9bf0-4ae002106321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fc6488-322b-4be2-af6a-ad609bfe6958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cebb036-6d6f-4041-bd71-6fcbc6a39227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f37833-fa25-4270-a078-74fed353a277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74f39cd-cd13-4b1c-94d0-47cdf004984f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b9c3b8-18e2-4853-b172-b41486ec3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a28866-401b-4a55-833d-b6a810598c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693b97d6-d5b1-4231-ab77-87f8303c4716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0c5a23-63dc-4f50-b619-623ac623195e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d34a39-0088-4816-a199-2b6ad2afe5dd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e474f-0f6a-483b-8d5e-0f476bb3fd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c1ea62-afba-4b82-a5ee-4310db4b719d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e36b2-4525-4475-9669-4c40154eb5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0be58e-df2b-454e-82cd-4bed6961db9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa9b7a-2195-4547-ae17-cd3dfe32f122",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc02f53-7110-48c4-81a1-83b355397b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709e2e95-cfb9-4397-a50c-ac15a697a752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2022fe39-8839-42e4-b3ad-9e1c6734fbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0d714c-79ed-41ff-a9e2-ac25acbe45af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60764aed-b9d6-4617-995c-3a99e048b150",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d317fb0-946d-46be-baa7-2d84eebd9a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fae419-8603-471e-a602-3705dd827dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c18b556-0fc6-47da-97ff-b062617ad8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b597b4f-ffc1-4338-b642-0cfb3524ed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a7180a-7191-4934-b597-a27294036a52",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0699c4-02da-49a5-ab5a-0f10f84255e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9de5a9-0152-4fbb-bf16-abf156401f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43576a-c91d-4935-80da-b7a87eee9d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0d4cfb-c109-49f6-87d9-b418d15d0446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb9754a-466e-46c7-b85e-bcd6e7cf08a2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0ac07c-5a25-4c9f-992c-17aa7dcf793e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674b77b3-2cac-46b0-aaa6-41e7817d8054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ed7705-0a0b-4428-ba39-daf5a34a856d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dc0ec4-bca1-4d9a-856a-cec80d7f0dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f68ae0-7901-438e-92f7-047d26c803c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d321784-188c-4b83-891c-c812baf0358d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000dc9f3-f165-4d8d-83ec-0f73e374bdf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e6cef1-d339-49a4-bd92-0b8828bf73a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab662e12-d3cf-4f82-9ec8-dc8d4b98a8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1054404-afa8-428e-9b89-7f67b359a8c2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7cb4f8-d4a2-459b-bbdd-49d5d6d4e16d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34b2e2c-8448-46e5-9609-ae9d8e6c04fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b149526-c00e-4cda-ab7e-525b0bc7aa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402489b7-8b70-429a-9641-3d12179814f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576fea16-7e2e-4594-b567-db911f9d2f80",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e8f8ac-314e-40e9-8954-2f82b2d1ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5bec8a-1911-478d-9085-128dbfce02b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66865d43-ec03-4106-84c5-5dc23a9acdeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77847785-46f4-4214-b918-395148733e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d83db0-de35-4445-bbdb-2ec44eb676fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00995e0c-63a0-4323-a76c-c65f77442c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b162c0-3934-46b0-ae90-08363da756c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc7d40-3de5-4803-8781-4334a9af0613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f4153b-c1b4-4778-9567-2907162203fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6123e7-2a46-455c-a9db-36a0960843c6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2f4c78-03ae-4dc4-a3f5-729b42a89ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaefd207-bcdf-4801-bf05-1a8b5e4d40b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae45e1e2-7135-4dd5-9007-b60ea0d37eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501dab3c-036a-489a-a459-c2b19da39abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc21efa-e9a2-4c1f-bedd-d89fc00a553c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26bc64d-baa4-45e5-8444-eca266d118fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5437321-8fba-47f7-99fc-89b49aeba843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eb2494-cbff-4755-bc7b-c0ed65ac4f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d2ec9a-cf7a-4144-aa33-9556b5e72d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05668a2f-7c32-42a2-b603-32f898142ed8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4d2193-c77a-4ebd-9fce-1bb7324472b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42815078-6bcc-4754-9c6a-cd14ce4117b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2caeba6-6fdd-446e-a777-82ad5541ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e011a483-f48c-48fc-b6a5-376423604099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905d2552-788a-4f3a-9a4c-676c996c892e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1610db-e33a-4655-9478-bb3bcedcd25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276444d2-5422-4775-bcc9-f09b3b84bcc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad3024b-849f-4de7-b5da-77848fe813f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a30325c-b293-46d2-be36-038e49432a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f966b2c-451a-4c4b-b4be-ce4ca3c26d14",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd94f0-6a08-4135-ab47-1d76ba6f9b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb624bd-f78c-418f-847f-49112a0f0f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a88b2d-e3fd-4c24-86ee-d7391bf43d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bef2379-6ce4-4b3a-a2ce-7f395866e2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e30573-5d91-4db2-a59d-89d1f7d49afe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51b0730-85a1-4df0-96f2-e850afec43ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10463a7-dd5d-4e0a-956e-d69b82b4aa6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7d348e-532d-4414-8470-ff1ce527d772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f0b2ee-7516-41cc-aaca-51f11996a53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d36a22-197d-4ca5-8518-333df74ea76c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037650c9-9f4f-4110-a4de-ea5f62d727e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76909b2-422e-4637-a428-9a61e6368a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c76840-045e-4e2a-8f4b-b15b48583df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba86f5d1-3279-432c-a190-7e1a891768cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a612689c-2c8b-459c-9f40-9235e082753e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948fccee-31a5-4c27-86d8-827df9aeb8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b502ab-f7f9-42e1-b480-f618fcea2dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29a2268-304a-43c7-a416-f3590db607e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc739cb-01b9-4690-839f-8e558e8362a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcf193b-3da0-4f19-932e-f1ede38013d0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147f7850-75b7-431e-b649-1afcb6ed24d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9065d8-21d4-4416-8cce-555cb0bbcf3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55207848-1b87-470a-a019-c9f474a99670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6062a3b-f8c6-41a2-85d8-dc0387f49c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9842621b-8b81-4c3c-837c-b5df0eb4d75e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6575de-22e4-42ff-a407-5e780d330ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ae76e2-6547-4b67-9f76-649700992bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b086c4b-f623-4982-9b16-a50c2322e15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655a3510-ab83-4aae-97b5-bba1296c814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabbcead-2dd9-4a0f-a4d2-c5b79a723db6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c941e5-9ff2-44f1-9b88-802c3bc15f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b2b8c2-0a46-4488-be5c-6f59e139cb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10b09ea-6743-4880-bc80-7657144fa7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4171f532-a257-4bc4-8a53-08c60dfb82f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7adea1-5d30-4080-bd0a-df349f1df9f4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e492eef1-1365-44ac-9896-92b2fd2d9b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5748ce8-5e77-4343-ba50-6a1871874359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a03db-9388-41bd-8f1f-57d8ed942227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598665d9-9e93-4fdd-ab84-adc5c4b7d8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ad13fc-1bf1-4fd6-8cc4-3a270f913ed8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b36d8-4fd0-410b-99b1-f758b6039fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0beafe03-3dc0-4783-ad6f-acc5ce98009c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b03f4c6-a92b-46d7-acc9-3a931dbafe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8024639-cb4f-47ad-8340-fbb5bb4def9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26f028b-26e4-4372-8a8f-6c884084e290",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b79127d-5c8b-46f9-bea1-c7542b0129d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1a403a-ae4b-4751-a72d-aa50f256f3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f3e1a6-6ddf-4242-b988-269d13cf7ddf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c90b0-4ac6-414a-bca9-c94b0751236f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4291ad-389f-4363-a4fd-be385c6da8de",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4814b12-db66-46b6-997b-90ba5770b571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69427550-bc24-451d-b951-5ae012e3b4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876b229c-3a86-4967-961f-5b5fb9b32f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da580b75-c7dd-43a9-814d-09eaa643e9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0a8df4-74c2-4a90-bbe4-5cc1f672573b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a67cad-4b10-49e8-a4bc-3e4ab5cce422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c500350-0cc7-4a59-96d3-044a869b72a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176cffb0-2622-4b1b-88df-a2ba94734385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea6a633-0b8a-482f-9b39-1b5a29063233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b112a91f-0360-4829-8006-1a0e2d8da593",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a2d76b-4d5f-4dfb-bdbc-341f970c0383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0c6d72-c8c3-4ad0-a038-6b16d0f205ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79832f35-197c-4b27-be5a-e3dca44b0101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1475f8ea-c9ec-4376-b3e7-55cbbb157072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5079671b-051d-4644-891e-51c2399222ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3ed299-2fcc-483f-a332-9a2c757257a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8556aabc-4eba-4e84-af71-1ede5f60a5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d48f572-b669-41fc-895e-8a5ec4607c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04ca20d-7c37-4cd7-ba95-45e854b81764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b951531-66d7-4169-aa0d-9321ee2490fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c608c02-8a65-4d74-b30c-7b5193ab4aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bc9474-884f-4a0f-ba0b-44fcc9c8794f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd917d0-dbea-4588-92c2-5d3543d29c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e23fd7b-48e2-43f7-8574-f58ce78f3163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f4a0ff-4e41-4e73-9f3a-b8ebf0b459a3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbc7a97-729f-44e5-80c8-1d0697a12c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "374ca7cb-e525-48f1-a3a0-a6196ec1640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d4ee51-303e-439a-afa6-1d7150958c90",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b68e8c7-4b0a-4e2e-8aeb-018ecdb16145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5b06d4-c7e9-475c-9380-2cc35019cfd6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d8b2b7-1d32-4682-9f7f-f9d1f467acb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36db6205-30bb-4cc6-9ced-8e1a8c7c7573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252db511-c212-42df-8fb8-835121c80931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f1df62-b7ef-4d14-ba93-abc6bd2d6e02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cbe4660-05e5-42f7-ade7-3167c8d20162",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42bc14e2-9cb1-4080-a4a7-6803ead9b864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f4d998-dc28-4ab1-b43c-efc151316abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7129cfa6-f1d7-4a45-9aa5-809d7d9d97d1"
                    }
                  }
                ]
              },
              {
                "id": "08469a66-2727-47e2-a48f-b2dfc70470d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55428880-8afd-4fef-be42-dd0bfe8283c2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e81802-dd47-4afe-82e8-1583ad7b54ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a6ead9df-73a3-4b6b-bd9a-fb87fb068036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787a39f1-6520-43e3-af52-8a17ecbe7964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8bbdf98-89e5-4fed-889e-c629c088773a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc58f724-d49b-4718-9c99-88cce7d1abbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41f3cb81-59b0-492a-b426-d8f9628a8b43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fef44694-ec58-47bb-94c1-01f4d5ddbba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13c0a45e-cd10-44ce-b1ac-716c50d7c8d1"
                    }
                  }
                ]
              },
              {
                "id": "5c3dbf58-0fd6-497b-b725-5065b9da7d3b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab54ba6e-c6ac-438a-9884-b5e066bfe0be",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0cd385-8769-4cd4-adc2-640926d00f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3a1e59ae-9b5a-41b6-8202-3a3a785161e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2928267c-d8ea-4c60-879d-fd6db4e87b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51226c60-a842-4106-87d4-fa3f8d8d4635"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fde20ff2-40a9-47de-ac5f-ffc7c3f6dfd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c049067b-c99e-457d-bf69-e42ff2563236",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "969983e1-343e-4f16-8d30-fa33035419df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b42e5e3-508a-4f25-a901-6dc1b2b5b325"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e0f4e2e-51c2-491e-a7a8-bffbcbbf22ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3194d1c6-353e-4f8f-b58e-ac2a59fec63c"
                    }
                  }
                ]
              },
              {
                "id": "658d0f80-97db-4245-9a69-57cf4fcd2639",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2048890a-df7a-4643-bbfa-a171b0586978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "adfe94b7-c4ab-4b92-8d03-cec8a9b07e97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebe9f004-7846-40a9-8ac9-b91b35cb2960",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f4ea150-4863-4f96-b997-3f8a7aecfe02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faca9586-bd76-479f-9049-8529941c39f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1dfa210-99a4-452b-98ed-9d143da127b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "115c7fbc-035e-46f7-9c7a-133fc45b0c5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ed2142e-5e72-4a0e-91ad-292e5de7f48a"
            }
          }
        ]
      },
      {
        "id": "ecde8776-80e9-4eee-a417-fc52d8e932a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cdf66b52-45f2-423e-9246-c99c96d2c295",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04a3957b-2a39-417c-89b9-0dbf9fd4add3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c681a84-806f-440b-b9e2-c4bf33bbaf3a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2500311d-e8ac-4a8a-b25b-76addacbd978",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "691f8af8-f5ce-46bc-9403-af89f0dffada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4c851d-b3ee-477e-995b-e4cad8175c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a09c1991-676b-4606-bb25-33cdd55d4448"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d6f6a1-a740-458c-a338-26ca810308ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1edb93f-c324-4843-a1e1-8ad142e0ddfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e002ff04-9861-48cf-ab57-87a078f386a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eeacb2c-238b-40c6-b606-894894aa791a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44ddfeff-3038-41d0-93ca-035db09c712f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e1a20676-60e9-465e-a1fc-0b22144e9f4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5bd7451-8a4e-47e3-a79c-e2bf57136057",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e0d8831-e24e-4c64-9118-b359d3c6288a"
            }
          }
        ]
      },
      {
        "id": "b4aa53f1-d8c7-456a-b206-95dcf180def9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "380d0a1f-9bd0-4118-91aa-cd1aa3514a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8dbe8e5-de2a-444a-8e01-0a0a0677f7eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2490db3c-3780-4638-97f4-910f4adc039b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e0721-acb5-446b-a2c7-e765864ab277",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dab2de4a-575b-4c81-80a7-f0984007eeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b48570-6646-4f1b-be8b-28377cc272ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b44613-0a3c-4382-accd-3cb009a2f812"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a3da4ea-97d7-41fa-a627-8a9d843e61c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92cd76e1-baf5-466e-8d6d-492219ff2301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8754f175-de94-4018-b0e5-be9c1f3f0989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "062ed4b6-8e51-4be0-80a1-9d956257bb5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b9cc735-5604-4970-915b-caa97f3149ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42c0d77b-d397-4cf7-b12d-55cd170fca40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb2cb67d-0ade-4e79-93f2-059efe3f224d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1cc8e35-38af-430d-888e-3fe48692ac4d"
            }
          }
        ]
      },
      {
        "id": "924c09bb-bcf8-47f8-bb2c-3746b0d3ed9b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "93ca6d7c-4de8-4638-9cfc-8cf14f55ea25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e766fce4-3c6c-4e0c-b543-b4e1802d3fc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1d30361-761d-41df-8f66-e8ede6037570",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f38517-766e-483f-89c6-aa9b91678f9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f68e3cdb-db2d-44b4-a7b1-4b7813600799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15487b7b-b4ab-47ff-b3f0-de660a2734e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bc19a0b-432b-47f4-97cc-e3af135bb143"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd64400-6d35-4ff2-9355-e810af8a056b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b8cb84d-4d18-43d6-a271-0a08203dfe98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8d1c504-63ce-42e9-94ac-efa1cd78357f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7c0b275-be62-4a54-801f-9f608111d07d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "843f86f1-7974-462e-8083-e006995a2f91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49809118-c81e-4e9f-8dcd-c3fdbee84d7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71ab5f9a-eeae-4b14-adb5-452640005fc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43bc9053-2f0b-4ac4-ada4-dbc0a4de60f3"
            }
          }
        ]
      },
      {
        "id": "f5e9fc05-dcaf-4cca-9fc0-12fe4594a8e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4681a1c5-1b5d-4dff-81b8-a876c4c7e1e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "923f706e-cfd5-458c-b151-cd1a2ebb3021",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f65d2ed-188e-4ba0-b4af-562210540b79",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57806b4d-2d53-4ce0-ab4c-f36d0fb7bba9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c05d783-3d39-46c5-a7c0-266334320332",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 718.0704225352112,
      "responseMin": 10,
      "responseMax": 6598,
      "responseSd": 755.443076293337,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687654322189,
      "completed": 1687654538307
    },
    "executions": [
      {
        "id": "24dd42b5-d458-4258-ae25-d4e0d36c6d2f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "98804189-e058-4e20-9049-fa4f898d5e52",
          "httpRequestId": "84bc012d-b9d9-43bd-9194-fbb29209b5c6"
        },
        "item": {
          "id": "24dd42b5-d458-4258-ae25-d4e0d36c6d2f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f060d658-b499-4cd2-a46d-393d3c5eb923",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "48e5102d-b102-428b-b56b-ffe62f9fa2bf",
        "cursor": {
          "ref": "18126cbb-2975-47a2-82e4-3f38da037e4d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "db714ae3-e0f3-412f-ae7a-a1a8ac5d77df"
        },
        "item": {
          "id": "48e5102d-b102-428b-b56b-ffe62f9fa2bf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "daafb406-7eaf-48a3-a1a6-ef96580c0a26",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "079e7819-d6ce-4f18-9b92-887dc28f0c79",
        "cursor": {
          "ref": "842bcf56-4887-4cb8-ba6c-54828c8e7858",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1009f75b-ce30-4875-93ff-54502ea44b89"
        },
        "item": {
          "id": "079e7819-d6ce-4f18-9b92-887dc28f0c79",
          "name": "did_json"
        },
        "response": {
          "id": "2deb25a1-a7af-4a27-95d2-5aa4d02b8cd8",
          "status": "OK",
          "code": 200,
          "responseTime": 977,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2fae66-009f-43ea-a9b2-0d466866b651",
        "cursor": {
          "ref": "3229fcee-52b6-4fdb-a322-3405a770b8a8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a684f18-3328-44a9-b93f-b4538bc6cd01"
        },
        "item": {
          "id": "cb2fae66-009f-43ea-a9b2-0d466866b651",
          "name": "did:invalid"
        },
        "response": {
          "id": "81144b5b-d421-4c8e-b4d1-65aa8f448558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2fae66-009f-43ea-a9b2-0d466866b651",
        "cursor": {
          "ref": "3229fcee-52b6-4fdb-a322-3405a770b8a8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a684f18-3328-44a9-b93f-b4538bc6cd01"
        },
        "item": {
          "id": "cb2fae66-009f-43ea-a9b2-0d466866b651",
          "name": "did:invalid"
        },
        "response": {
          "id": "81144b5b-d421-4c8e-b4d1-65aa8f448558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1e5f7-0fad-4b4a-a10b-501ae0dd26a4",
        "cursor": {
          "ref": "07f6065f-25eb-4c4a-b6c9-fa889ad1fbd5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "df46f0ce-5baf-4f6c-81c0-a1e23c2f002f"
        },
        "item": {
          "id": "21d1e5f7-0fad-4b4a-a10b-501ae0dd26a4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eaadfc36-1710-4dec-9fa1-75230ff21057",
          "status": "Not Found",
          "code": 404,
          "responseTime": 698,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c87b5b-b3dc-4191-b264-a1d59e5402da",
        "cursor": {
          "ref": "1ec39329-405f-4946-8480-2bf9e847978d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fd39a3cc-0411-4a22-a38b-427cf96a38a6"
        },
        "item": {
          "id": "29c87b5b-b3dc-4191-b264-a1d59e5402da",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d6d43e94-1534-46af-a2d1-51c92bb1d6b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 733,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a3d3e-e6f3-4fbe-b48d-5b772b03b9bd",
        "cursor": {
          "ref": "94619049-f4bf-4579-92da-97178464f031",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c662d6db-e98a-4b71-84d3-e4144bd99590"
        },
        "item": {
          "id": "bb3a3d3e-e6f3-4fbe-b48d-5b772b03b9bd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0f5a8900-61b4-4dd9-9c49-62b152f051cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dfb22e-28ea-42d7-862e-fa9e53dc35c6",
        "cursor": {
          "ref": "b6dc2438-c29d-40f7-8aca-b4e2fa6402af",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "13bf7f18-50ea-4b61-9e95-b3b1130559bb"
        },
        "item": {
          "id": "a7dfb22e-28ea-42d7-862e-fa9e53dc35c6",
          "name": "identifiers"
        },
        "response": {
          "id": "0d8f5787-049d-4f48-b515-afa51309368f",
          "status": "OK",
          "code": 200,
          "responseTime": 1330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8c63f0-06d3-4290-9470-b4a21db3abe8",
        "cursor": {
          "ref": "16d5eb14-78a3-4c80-9a1d-dba82c6574fd",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "560ab82a-ef58-4e49-b2e7-e1244d6215b5"
        },
        "item": {
          "id": "8b8c63f0-06d3-4290-9470-b4a21db3abe8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a109e388-044d-4782-b89a-1d383f30b191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd44f137-8dda-4651-9f2f-a1ff42a4c7da",
        "cursor": {
          "ref": "37da3da7-4339-46ed-9eda-c028b2808f1f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "019f7506-2fb0-464b-867d-401a00f6237c"
        },
        "item": {
          "id": "cd44f137-8dda-4651-9f2f-a1ff42a4c7da",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a1e5b81a-8a1e-4e78-baf0-fcb2cf4a084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4148278-0013-45c4-91e2-40640a68e17d",
        "cursor": {
          "ref": "2cd13cfc-8e13-411e-aeac-e445525da03e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "333fccf8-cdd2-4017-926a-7e702eaa8a48"
        },
        "item": {
          "id": "a4148278-0013-45c4-91e2-40640a68e17d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "15086d9e-7afc-43db-b310-fba947c84671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9cf1b5-6dce-422c-96d2-d61c3b03b621",
        "cursor": {
          "ref": "c29a78c5-1a37-4c51-8d9b-beceb2d7b08a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "747bfc04-362e-4fce-914a-b06bbe1105ae"
        },
        "item": {
          "id": "8c9cf1b5-6dce-422c-96d2-d61c3b03b621",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b05bf82-6350-40c8-9f07-87cb646cc702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf3ad90-20ec-4b2b-9679-9959725841c8",
        "cursor": {
          "ref": "150b5be5-2161-4e2e-a65f-33d58a9c9996",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff0ab72d-de4b-48e4-bfb0-87054ee92a21"
        },
        "item": {
          "id": "8bf3ad90-20ec-4b2b-9679-9959725841c8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "237423a6-edc7-424e-b3b3-da77b4e6ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130030d9-aa02-4fab-9fba-319611aa6929",
        "cursor": {
          "ref": "2401a697-c60f-44da-ba0c-9151a854d546",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "91f173d3-91fb-46b0-8f53-16583b2f45fa"
        },
        "item": {
          "id": "130030d9-aa02-4fab-9fba-319611aa6929",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "62203838-5b2d-4adc-84a7-4a4a04022db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9106685-3981-48bf-a592-5b4ddc561af0",
        "cursor": {
          "ref": "92075d27-0413-461c-9c43-4c41a8000ab1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bd8f629-9e4e-446d-9678-05e9f9b733e5"
        },
        "item": {
          "id": "e9106685-3981-48bf-a592-5b4ddc561af0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "922e9e20-3bdb-41ed-9272-458b40564b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b87fe80-9cbb-41e6-b064-94c12ffdcaea",
        "cursor": {
          "ref": "283cd67d-250b-44f6-85b9-f917016bd91e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "72dd499f-16c4-4f5d-921f-cbbcc75c875b"
        },
        "item": {
          "id": "1b87fe80-9cbb-41e6-b064-94c12ffdcaea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9e8759df-d20b-4862-a570-43a0c78394d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386b3d3c-266e-4492-b20c-4506ec336967",
        "cursor": {
          "ref": "b538acb7-8e4c-49ca-b99c-0e3bdc70e1bd",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ccf696c4-fcb8-4d9e-b810-5ee4321efd90"
        },
        "item": {
          "id": "386b3d3c-266e-4492-b20c-4506ec336967",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a26d67c7-18af-4a19-bc98-274521b4e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce66d7d-17af-4c29-816a-530f0185e2ac",
        "cursor": {
          "ref": "3dc9a069-a183-490f-894b-68c6d9cd0c24",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "018bbf29-2161-4527-bf7b-1d150a03b0c7"
        },
        "item": {
          "id": "fce66d7d-17af-4c29-816a-530f0185e2ac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7b9fe71b-ed10-490a-aa8e-b660775e43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6bbc4-a617-47ec-b093-1d87df4b46b0",
        "cursor": {
          "ref": "c46de82f-dfb0-448b-bab6-690362f8a3e2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3c6c865a-5673-42c2-901e-c8346c373be8"
        },
        "item": {
          "id": "7ea6bbc4-a617-47ec-b093-1d87df4b46b0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eea117ac-f1fe-407c-9746-cae623453fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0965e212-8b0b-4f47-89fb-fa4df9d8e123",
        "cursor": {
          "ref": "fd89b332-4757-46ac-901b-1b6511521ebc",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4efb06f1-d3e8-4793-a791-2a15ab850c22"
        },
        "item": {
          "id": "0965e212-8b0b-4f47-89fb-fa4df9d8e123",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "44b40b3d-64f3-4852-b5a9-2d0d07c58c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6312f6d8-64ee-4e5b-8b8c-f342e81f5137",
        "cursor": {
          "ref": "69ae2b70-77ab-4538-b717-2ad517c718b7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1088b14a-56df-4eca-a3c2-2527774b7711"
        },
        "item": {
          "id": "6312f6d8-64ee-4e5b-8b8c-f342e81f5137",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4bd361de-c408-4a5e-aede-6588dc9cc7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164effa9-35b9-4820-a98d-1cefbd550142",
        "cursor": {
          "ref": "fb873411-de0b-4fd4-9f43-7f755c6ef148",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5824be7c-960d-4145-8d5d-75189368a81d"
        },
        "item": {
          "id": "164effa9-35b9-4820-a98d-1cefbd550142",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "35d2d993-22d9-45eb-a1bb-cc0f616586fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef598448-4553-4886-a164-7eae86751a26",
        "cursor": {
          "ref": "298e9d9b-26a5-4b41-9535-81c5d8715b0f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f1c7f292-1c2e-4907-946e-31d2f1757ea1"
        },
        "item": {
          "id": "ef598448-4553-4886-a164-7eae86751a26",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7312378c-02b2-4e53-9c1b-0c4d564933a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60de3a2-2b5d-47f2-8b25-c13db2d69fd3",
        "cursor": {
          "ref": "d384cef9-0b52-450d-8493-76bc2246246c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9ca214e0-e3eb-44d2-8693-47e1687403cc"
        },
        "item": {
          "id": "c60de3a2-2b5d-47f2-8b25-c13db2d69fd3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "69149eda-a050-4a07-85b7-3d826a42e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52473445-d816-4996-a7db-46b9b7dbcd69",
        "cursor": {
          "ref": "fe599eaa-63b7-4f3d-9f52-8fec79c1f22a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "891a4119-c7be-4373-a5e5-18a39b07ff33"
        },
        "item": {
          "id": "52473445-d816-4996-a7db-46b9b7dbcd69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c9eb80f-9267-4a51-93fb-a3b62f26c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f527f-8e6d-4e51-9c0a-b2679433eb68",
        "cursor": {
          "ref": "2f2b41de-da8e-410a-b15b-fa1b01f4865d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db5eb12d-06e9-4e69-85ca-145d2aa7de66"
        },
        "item": {
          "id": "6e6f527f-8e6d-4e51-9c0a-b2679433eb68",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9231ef63-c6d0-45c6-b80b-bcb238fd581c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb1b69-4e5f-4aed-ab6a-2b4fc92b2a1c",
        "cursor": {
          "ref": "767d8c8e-5ca0-49f9-a921-949a7a5d75d2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8ebb1a0e-2124-4900-a4c5-e0460bf4550a"
        },
        "item": {
          "id": "c5fb1b69-4e5f-4aed-ab6a-2b4fc92b2a1c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e87d0d0f-24b7-494e-a52b-ee9829a8ea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5717c8-0d6a-406a-80bc-0009c4034f3b",
        "cursor": {
          "ref": "dc9ce9b8-97d0-4600-acb4-dc3d3489e015",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6fc6aa8d-2a82-4a71-9b05-c6ffa747cca4"
        },
        "item": {
          "id": "fd5717c8-0d6a-406a-80bc-0009c4034f3b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "001e1dd6-4430-47f1-b5cb-5ac423a4820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a3398-7fd1-4421-8178-02399625d9d9",
        "cursor": {
          "ref": "07f8cdf0-667f-4e41-ba35-a48c060ab357",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9f4756cc-1284-4cf0-8409-1167c06d6d5d"
        },
        "item": {
          "id": "3d8a3398-7fd1-4421-8178-02399625d9d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "72ac9763-f12f-4c0f-9737-a3a83a6d8530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4b68d0-2b13-43c8-8798-4f5f942b2391",
        "cursor": {
          "ref": "d8f99053-a446-4b5f-b385-4b439fd7f068",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "170e0b43-975e-4b6a-b852-d184d3166a7a"
        },
        "item": {
          "id": "0a4b68d0-2b13-43c8-8798-4f5f942b2391",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b275a08d-52ed-4429-96ee-6de9ee1f1916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a662c6d-c3bf-4d60-8490-0f2255e0f925",
        "cursor": {
          "ref": "727e42ba-13d8-42a5-bc28-b1bd65296a7b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "42a594e3-8d66-4dfb-b540-4e419d9d497d"
        },
        "item": {
          "id": "1a662c6d-c3bf-4d60-8490-0f2255e0f925",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4170b6da-2974-4476-b282-e6e5f959ae47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e3c8c7-2b9c-4fff-8156-6cf7e88035de",
        "cursor": {
          "ref": "3e9ce8db-6ec4-4f0a-8d8e-deb082e7e3e2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "97b36da1-bcf4-40b6-aef6-92aeb861d7a6"
        },
        "item": {
          "id": "40e3c8c7-2b9c-4fff-8156-6cf7e88035de",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f28ce429-d546-4fc5-bda7-a172053be9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141e7db5-aa03-4c2e-a84e-01c315fe0500",
        "cursor": {
          "ref": "dd802735-3966-4218-9ecd-d379e2d82d47",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bb9f422d-4b17-4807-a8fd-059d72316893"
        },
        "item": {
          "id": "141e7db5-aa03-4c2e-a84e-01c315fe0500",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a5998c9-e4b7-43ef-8963-78c0812f7899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a902fe53-e3f7-48b8-ac82-56b6af4801ad",
        "cursor": {
          "ref": "3abab0ba-6909-4533-a016-c2f2ca34b637",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b7d4c5b-909c-4bed-bf55-dffccbda77af"
        },
        "item": {
          "id": "a902fe53-e3f7-48b8-ac82-56b6af4801ad",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "432966af-67dc-484f-baa0-4f536d0741d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43439de4-ea5d-49f9-96d4-42d159091ef3",
        "cursor": {
          "ref": "574fb4e9-1504-46ba-8d98-c9977765dda5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7adbdf1d-7c93-4b02-a71e-3a476caaf0b4"
        },
        "item": {
          "id": "43439de4-ea5d-49f9-96d4-42d159091ef3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f177c36a-5582-461e-8192-27fecbbb710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17d6772-cae6-41c8-bcc5-63ab7d6df891",
        "cursor": {
          "ref": "89df79dd-c9b2-481c-8618-d55f45ba86c2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d15539ac-c429-4237-b936-f4475fd7df11"
        },
        "item": {
          "id": "e17d6772-cae6-41c8-bcc5-63ab7d6df891",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e148c7c5-21ac-496e-887b-14b5c4f9eb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe53de3-0d8b-4e79-9a7a-6d27643fef38",
        "cursor": {
          "ref": "14368312-1005-4ae9-b552-60d81ebd9b5f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4505427e-8dd8-41ec-920d-db540bdbe972"
        },
        "item": {
          "id": "bfe53de3-0d8b-4e79-9a7a-6d27643fef38",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8e02ca4f-64aa-4fd1-b0e9-ed3366fbff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c3bd8-c0fb-4c5d-bc13-96d6c8b64d2b",
        "cursor": {
          "ref": "51abbcd0-0058-4e22-babd-4c4d1262b44a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a10a072a-687d-48c5-a814-50f80546280b"
        },
        "item": {
          "id": "361c3bd8-c0fb-4c5d-bc13-96d6c8b64d2b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5294999e-35c3-4385-8929-07a9791385e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e71bc9-a3ef-4548-a21e-8aaaf079d0f0",
        "cursor": {
          "ref": "383a97a8-8ebb-4077-b8a1-fa676f2e768a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "221980bd-8052-4e2f-a9df-c2df2d62712e"
        },
        "item": {
          "id": "03e71bc9-a3ef-4548-a21e-8aaaf079d0f0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34e65f07-ceb4-467a-8397-04246d0566bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b62e403-f4fe-42fd-bf62-77a104c52621",
        "cursor": {
          "ref": "0ed9a410-058b-48b5-9914-9ebfa4dfb6bb",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "82799ccc-d3d0-4dd7-b783-66f45b67c9a8"
        },
        "item": {
          "id": "2b62e403-f4fe-42fd-bf62-77a104c52621",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b3633768-dae3-49ec-af24-00c65367f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc4f68d-e628-4abc-991f-f04affd2158a",
        "cursor": {
          "ref": "c5c06aa2-81d8-42a3-ba52-3122975224ce",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a51e4e42-5bac-4401-a7a7-3b4c883f8b1b"
        },
        "item": {
          "id": "0cc4f68d-e628-4abc-991f-f04affd2158a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9e7f0d57-50f8-4706-9c1b-087c64c66901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4655f26f-22de-4e0e-a7ef-a1c222349b70",
        "cursor": {
          "ref": "63242459-2160-4611-8d68-9f34d9582c8f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "06e9f6b2-2473-4f64-9201-1f0db4cbd67a"
        },
        "item": {
          "id": "4655f26f-22de-4e0e-a7ef-a1c222349b70",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8d96c882-e02e-4821-a012-cc42adef5fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb047c7-554a-443f-929c-d815d77fed92",
        "cursor": {
          "ref": "7a51efdb-e5ff-4994-a78c-4c73738eeb0e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef965686-ef62-4622-aa38-4149b1aaed41"
        },
        "item": {
          "id": "bdb047c7-554a-443f-929c-d815d77fed92",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af1fd354-0ad7-436b-99ac-f980321ab4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8786b8b-1a62-4557-8455-a31e843f5229",
        "cursor": {
          "ref": "1bf2f197-b50e-4157-b83a-868d4a603957",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "49e8b567-f91d-4a09-a132-7d4e7c70046a"
        },
        "item": {
          "id": "c8786b8b-1a62-4557-8455-a31e843f5229",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ffe5b7d5-260f-4fcb-8bcd-10cab16cfd50",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 887,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baef1deb-dbb7-4fc6-a8f8-6661123e0e52",
        "cursor": {
          "ref": "42c72b52-2d4e-42a3-a51e-2cc05e111077",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0cd12c41-ac94-4e5f-b444-7b2be524e12f"
        },
        "item": {
          "id": "baef1deb-dbb7-4fc6-a8f8-6661123e0e52",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6bbabbf4-bf61-4c82-a0c9-d194518bff42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dd9a42-3430-4ff8-bd1b-ef7865ad1de0",
        "cursor": {
          "ref": "7bcd9ffe-3616-4982-802a-4e3b6247d4dd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "60dd42da-9460-4bad-9553-1d8d43aab25a"
        },
        "item": {
          "id": "66dd9a42-3430-4ff8-bd1b-ef7865ad1de0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4c1ecd51-a6db-4d8e-8717-b19711af90c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1307,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e359c984-aabe-46d8-8bdd-92bf9d38d7b9",
        "cursor": {
          "ref": "080ce508-11ea-4331-bb09-81e0bd3d55f9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "58c90860-f45e-468b-a274-c54d9d280f7e"
        },
        "item": {
          "id": "e359c984-aabe-46d8-8bdd-92bf9d38d7b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e3b03789-9a09-4527-81ce-be54788a605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c923385-fcc9-4809-9014-f60f083b613a",
        "cursor": {
          "ref": "89e7046c-03db-4f2c-8aa4-98bcb649138b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6181d4dc-d1da-41b0-8a1b-ffdf04342acd"
        },
        "item": {
          "id": "9c923385-fcc9-4809-9014-f60f083b613a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "636798ec-cc03-405f-8191-b43dce0e9698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f497a89-9356-4d59-b888-d3ebaf17a35e",
        "cursor": {
          "ref": "1e7ff97f-7203-47fc-8bb6-1b0997dfef38",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2f43928f-7c98-49fd-a640-34319ef3d40a"
        },
        "item": {
          "id": "9f497a89-9356-4d59-b888-d3ebaf17a35e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "047413dd-fc27-4bfc-b351-e61c0f4b81b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba55c30-987a-4531-b724-587d83906fb6",
        "cursor": {
          "ref": "839c3155-1736-41e9-9443-c0cedac120f6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c445a213-e081-4afa-8b7d-cbfd95a4e0f7"
        },
        "item": {
          "id": "dba55c30-987a-4531-b724-587d83906fb6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "102cd79a-e9b8-4cf9-9125-b1f30793efaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677f9925-fed4-45c0-aee2-4dd3f9464795",
        "cursor": {
          "ref": "bf6d43c0-a457-4f8b-b509-c41b2b883b68",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6164811-7cc6-4ade-adf1-64f7e43d27c6"
        },
        "item": {
          "id": "677f9925-fed4-45c0-aee2-4dd3f9464795",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef339fc1-62fc-4632-a508-299ddd83f0a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 856,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6104cb-dd51-46b8-b802-7dd7eb16e99c",
        "cursor": {
          "ref": "0fe18ca5-9684-44f3-a4df-31526f31dd62",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aad5154d-c20b-4c95-a1da-55b19addb9ce"
        },
        "item": {
          "id": "9c6104cb-dd51-46b8-b802-7dd7eb16e99c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e56bd8df-ecab-4cea-8613-aff792d71515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fa7623-941c-4779-b18f-a7c5d54f7fad",
        "cursor": {
          "ref": "f5b24f23-2443-401e-b432-4ea8fe3b8640",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e02d94a6-60fa-453f-956e-2c93705ad734"
        },
        "item": {
          "id": "80fa7623-941c-4779-b18f-a7c5d54f7fad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bdf90c7d-a29a-4d2b-abc4-57d1e71215ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba94044c-a701-4d1e-ad91-f6b7e097c720",
        "cursor": {
          "ref": "39057d62-af33-4990-9cb4-f6f9cb1b2927",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0799923f-ed01-4c93-bd9c-93e3a2aaa110"
        },
        "item": {
          "id": "ba94044c-a701-4d1e-ad91-f6b7e097c720",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "27451da3-4880-46a3-8cf6-bca42e4c5ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756a6826-0b94-4021-b46b-4e890ceee072",
        "cursor": {
          "ref": "4814d035-40a4-4933-8a64-53313fc5eef7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "503bc6c6-91e1-40f7-9294-569f625df7fb"
        },
        "item": {
          "id": "756a6826-0b94-4021-b46b-4e890ceee072",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "75d75e51-01e1-45f5-b435-89b7eb203f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c4a50-dbd1-4908-b7c9-6bb0f2e0c063",
        "cursor": {
          "ref": "6fda378b-e760-48af-85bd-56dfc8ffc95f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b3449a9c-d6bf-4d8f-8dd9-e92dfc0a094f"
        },
        "item": {
          "id": "765c4a50-dbd1-4908-b7c9-6bb0f2e0c063",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a46377d8-353b-4beb-a658-9161c6a9836f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16034648-86bf-4a64-8931-fb55b31d6a9c",
        "cursor": {
          "ref": "0c5bf675-98c0-48b5-b649-9f59e089cbec",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96886594-4bbd-4d47-a2f2-b9c0ba9bdbab"
        },
        "item": {
          "id": "16034648-86bf-4a64-8931-fb55b31d6a9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6dcdeec0-b1d8-41cf-8090-d629e3954d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d814eb-eafb-447d-aa57-e8adcacd8a99",
        "cursor": {
          "ref": "567266b0-0318-4e0b-86b8-46597f72a178",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1ef77739-885d-4b26-af1a-fdb1197b765e"
        },
        "item": {
          "id": "20d814eb-eafb-447d-aa57-e8adcacd8a99",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e8cc1cc-9429-49a4-99ca-0275d3382ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed4e32-7791-49e6-9ccc-a0fede98edf9",
        "cursor": {
          "ref": "5ea42919-248c-4cf5-8bcf-30915a9a5976",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "60554c64-5eae-4aea-9c4f-62c2212d4879"
        },
        "item": {
          "id": "3aed4e32-7791-49e6-9ccc-a0fede98edf9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "575a6ae2-5178-4348-bddd-70d01f96ab46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b919b0-5ebd-48fe-a808-4ce4761229d5",
        "cursor": {
          "ref": "c1a92c1f-8efb-4bd1-98b9-dc0c9f94560c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6b805c2-3bf0-4a2f-8cde-50c0465c9dde"
        },
        "item": {
          "id": "08b919b0-5ebd-48fe-a808-4ce4761229d5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "348ba5ed-69dc-4b3a-bdf1-dc485467a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b833615-582d-4d2e-a53a-d785062e035c",
        "cursor": {
          "ref": "af359330-ae9b-4e3c-9cbe-afe6562e7238",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "469e91ab-4b27-4ef2-8feb-ded2e9127519"
        },
        "item": {
          "id": "4b833615-582d-4d2e-a53a-d785062e035c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7a7e52a2-21d4-46cc-90e0-5f6fce5f02b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad32062-0a8a-43a7-9d06-4f2791991404",
        "cursor": {
          "ref": "77357367-14db-4e12-9fe5-1fc56b5a6ae2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2ff7ebd5-9b57-4881-a8fc-d0d5aa34a58e"
        },
        "item": {
          "id": "dad32062-0a8a-43a7-9d06-4f2791991404",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d23318cf-5763-46c5-a643-931c08733f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6043a67e-bdce-4e6a-8ec4-f9337ce03280",
        "cursor": {
          "ref": "2ead97fb-a7c8-4bbf-b416-bd98129e1928",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2bc41d55-6ba3-4db3-ab54-c7022263d1ec"
        },
        "item": {
          "id": "6043a67e-bdce-4e6a-8ec4-f9337ce03280",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dcef38e2-ad27-42be-b95c-0430eae9b4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d3a05-675c-45b8-8757-c5f7f91336bf",
        "cursor": {
          "ref": "be653fe3-ad48-4c5d-8ce0-63975f221f96",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5c10faab-be1a-4680-9a6a-a0e7860b64cb"
        },
        "item": {
          "id": "bb1d3a05-675c-45b8-8757-c5f7f91336bf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4cbf3beb-91c9-418f-a0cb-7ce370532400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0de2c16-8648-4747-b012-294d6b0d6c7c",
        "cursor": {
          "ref": "1f89d58c-e3a4-4bb9-8338-f1d6756456e7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "34f61edc-1ea6-4b30-85b0-902395bb248f"
        },
        "item": {
          "id": "a0de2c16-8648-4747-b012-294d6b0d6c7c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "973c7b7e-7685-4286-815e-b0bca16d2fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb2350-684e-4c95-8dc6-99cc82a2b6c4",
        "cursor": {
          "ref": "85549687-5187-4150-8cf2-5ebae2fb1f61",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5901329b-ca20-400e-a09c-dcd3785f266c"
        },
        "item": {
          "id": "e6fb2350-684e-4c95-8dc6-99cc82a2b6c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d42d11fe-7e08-49d0-8078-696e2e7dd07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da07192-6c61-4944-b8d0-e1c8b3254ebe",
        "cursor": {
          "ref": "680e0a23-b53d-469d-b140-ffd0f51bce0b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0c6b5a18-bb08-48fc-99cf-11fdbb19993a"
        },
        "item": {
          "id": "1da07192-6c61-4944-b8d0-e1c8b3254ebe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "82a9fea4-4d0d-470a-9d8a-92dde083aca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96f6f35-c9af-46da-93e2-33e6e69b9332",
        "cursor": {
          "ref": "b96e00f3-6a82-4fac-9764-c39335434ed8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a794020f-99bd-4dca-bf86-3135bed2817d"
        },
        "item": {
          "id": "c96f6f35-c9af-46da-93e2-33e6e69b9332",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e3da60a-a653-40e1-adcd-d713cb09b9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1a4771-c4a1-4730-bc16-f184c259cb4e",
        "cursor": {
          "ref": "1d35dc93-ee91-44a6-ba62-200b5d975775",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e14e9cde-2885-4a77-8367-6724a0f959cf"
        },
        "item": {
          "id": "3c1a4771-c4a1-4730-bc16-f184c259cb4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b02d535-457a-4d18-9904-34fb1abae1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6d1f01-0bb3-4f2a-878c-b4b3ac5d890d",
        "cursor": {
          "ref": "c47376f7-0407-4874-a645-35d383fe8924",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49cbda09-725e-4e8d-b2bc-040858ea2296"
        },
        "item": {
          "id": "ba6d1f01-0bb3-4f2a-878c-b4b3ac5d890d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0b72f6ee-2cd1-499f-888c-c60edf64c31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83cd6f1-5ab9-40e9-8c19-94d6f9149fbf",
        "cursor": {
          "ref": "de70b075-a988-43b4-838b-6915b2cf5a88",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a0aa4f64-49c2-49c1-8428-e962806c3e3f"
        },
        "item": {
          "id": "f83cd6f1-5ab9-40e9-8c19-94d6f9149fbf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f64d360a-8e31-4bf0-b517-93431416ab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90902433-30ea-4861-8a22-5d8056bddfeb",
        "cursor": {
          "ref": "e310f363-2bb8-4171-b08e-7bba6c6f62b1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "505d9a88-fdc6-4ef7-8b3c-e7bdc93f6d46"
        },
        "item": {
          "id": "90902433-30ea-4861-8a22-5d8056bddfeb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "445bfffd-6b14-4a60-aa2d-bcd9b326ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa01255-af64-4595-bec2-328ca27c1038",
        "cursor": {
          "ref": "319cf30e-074c-4490-87d1-fffa180f0a79",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cb4d517b-95ce-4867-91f0-f92f1ab5c7d6"
        },
        "item": {
          "id": "dfa01255-af64-4595-bec2-328ca27c1038",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f597fbdb-fb03-489e-874f-b100c6bf7638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99008c4-0919-40f6-8df0-19f62c8829ea",
        "cursor": {
          "ref": "51d9a723-2525-42b2-ab8b-b9f60e273b86",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "68091fba-1c73-4c9c-bf44-9cb6412f8d08"
        },
        "item": {
          "id": "d99008c4-0919-40f6-8df0-19f62c8829ea",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "40f6cc1a-e4f0-425d-b180-1825711e9b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074c57a-fe21-4bdc-a330-32313bb5179c",
        "cursor": {
          "ref": "6214b77d-fba4-4d9c-8226-26cac0701d25",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d24eeec2-f788-4bd6-82d2-bfe7f0617604"
        },
        "item": {
          "id": "f074c57a-fe21-4bdc-a330-32313bb5179c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "71e35fb5-0742-4700-b2a1-3fd10b33b2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb7d44-8a34-43be-bd13-75ec8548ab52",
        "cursor": {
          "ref": "03f845a1-ffb7-4f7a-8305-f4aaf9c81d13",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3938e5a9-090e-41b6-bb55-9e63f4a1576e"
        },
        "item": {
          "id": "bceb7d44-8a34-43be-bd13-75ec8548ab52",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d8230254-4e81-4c56-9cce-654de8fb1a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5724fcea-959f-494c-833a-8db92b780e02",
        "cursor": {
          "ref": "2fff956f-a1ab-42e8-81d2-b90621a8c2e0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "467aa21e-2736-4319-b24b-52b803ad8fb9"
        },
        "item": {
          "id": "5724fcea-959f-494c-833a-8db92b780e02",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6936abc8-d33e-4b19-9074-f9dfcfa20f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ba63bb-7934-46ac-aaa6-f265347d45bb",
        "cursor": {
          "ref": "c25b2ba5-5137-4b12-9b4b-de277e15e717",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a831654d-2e5f-4444-8c8e-f4b86e27ccf4"
        },
        "item": {
          "id": "46ba63bb-7934-46ac-aaa6-f265347d45bb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ad60100e-9f1b-4c64-8934-92e83f735edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbc64d2-bbc4-4c40-b16f-b5d108f38b99",
        "cursor": {
          "ref": "7f15ac1b-bfbf-4882-951f-09ae15756375",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dff4ca72-ba84-407a-907c-69a11975d275"
        },
        "item": {
          "id": "0dbc64d2-bbc4-4c40-b16f-b5d108f38b99",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cff589cc-a072-474e-a0d3-4c13f78856f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b5545e-04d1-4afd-9392-ef074c419106",
        "cursor": {
          "ref": "c0b7cb6b-47a4-48b4-a5f1-492509616b83",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a4b7f781-8e3a-4566-a510-4b626a09514d"
        },
        "item": {
          "id": "72b5545e-04d1-4afd-9392-ef074c419106",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bf3e82fc-ee63-4c81-968a-87de4fae7343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6afae-22c8-4fd3-ae70-8e85aae86aba",
        "cursor": {
          "ref": "de400050-6f90-406f-8509-ca2e60ae8d13",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d79535f-3f9e-4992-9a9f-ee20a845b6bb"
        },
        "item": {
          "id": "16c6afae-22c8-4fd3-ae70-8e85aae86aba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d3c78617-7de8-4b33-af07-ff810d191eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e50a5bc-da59-4953-bcb0-8fa50a9dfed5",
        "cursor": {
          "ref": "c61cf344-0d55-4ebf-8b95-420e74cb0374",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9a2e9806-a911-4c7e-ab09-5d8d7e5ca6a5"
        },
        "item": {
          "id": "9e50a5bc-da59-4953-bcb0-8fa50a9dfed5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9ccfe97c-5b0d-48f8-bcd1-8acf01d6e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c8c522-91ff-4f30-8656-c420101e4fe6",
        "cursor": {
          "ref": "bb997d5d-77f3-4850-bd06-b79bb689de77",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6fd7a7f5-756c-43ec-ad0f-bd1d84948bc6"
        },
        "item": {
          "id": "04c8c522-91ff-4f30-8656-c420101e4fe6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5d1cf88-95ef-4253-83e4-c445401485e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c237f0-c924-46f4-8f73-a50a327ab79c",
        "cursor": {
          "ref": "297d7d8c-105d-4f85-972f-0eaa79e1b357",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "33a8dc33-6b75-477c-8265-2a938a77558d"
        },
        "item": {
          "id": "43c237f0-c924-46f4-8f73-a50a327ab79c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e756bfcc-8dcc-4ad9-9a5a-c49ace096e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6a15bc-39ba-4786-9ede-bcfdb69ad485",
        "cursor": {
          "ref": "3b89e843-ea2b-4921-b304-c579994bb7d5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "272e503d-ed6e-4707-99cb-636e4cbfbc3d"
        },
        "item": {
          "id": "0d6a15bc-39ba-4786-9ede-bcfdb69ad485",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3f722cb8-f31a-446a-be72-9f5934a3d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33665bcc-b084-4708-9e07-1a528b4a11f9",
        "cursor": {
          "ref": "38dbacff-f9b1-4d66-8888-c8cda3d2a8f6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7969cf60-931d-43fd-9f5e-cb4296c3167f"
        },
        "item": {
          "id": "33665bcc-b084-4708-9e07-1a528b4a11f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3cc6e4c9-333d-4f40-b26a-fc34a189ebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb8bf53-b353-49e6-be51-4a5e3d05b2d1",
        "cursor": {
          "ref": "5ae6afd2-73dd-4001-bebe-ece370411661",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "60daf0c8-96e4-49a3-974a-620f19a4e788"
        },
        "item": {
          "id": "dbb8bf53-b353-49e6-be51-4a5e3d05b2d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75a8c07a-2ac9-4674-a890-63f90861b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05290f6f-e97c-4cf8-bf71-91f87163ae76",
        "cursor": {
          "ref": "b7655541-e897-4687-bef6-0054d75514e3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0c4e280c-faf8-41cd-bfda-e108db5258d7"
        },
        "item": {
          "id": "05290f6f-e97c-4cf8-bf71-91f87163ae76",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3503262-c10c-4a65-b546-271c5d580113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d96a4-0a4f-47c9-91e6-8b4ef69becd8",
        "cursor": {
          "ref": "c199ee03-396c-44da-8ddf-1d62e6c82607",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a3b07d6a-c5e5-49f0-ac73-f9d22a2bb9a6"
        },
        "item": {
          "id": "e44d96a4-0a4f-47c9-91e6-8b4ef69becd8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fb3ed2a4-c0ba-4fd4-8bef-de876d9178ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4f94f3-2103-4d94-aa70-c7350bade413",
        "cursor": {
          "ref": "26f446e6-6ce5-4528-83ee-d566a8d6ac87",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "41586506-4912-4208-b3cc-dfbdf5292b7b"
        },
        "item": {
          "id": "ce4f94f3-2103-4d94-aa70-c7350bade413",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6cf7bbec-8d5b-4fc0-b920-e7ce94bf55c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db6963b-f12a-4f3c-bc5d-274dc4357647",
        "cursor": {
          "ref": "d48c9a20-b60c-470b-a388-646bf01e3be7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d221def0-d0fe-4089-9f90-10c5de5aa624"
        },
        "item": {
          "id": "2db6963b-f12a-4f3c-bc5d-274dc4357647",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8dfcd379-2925-48dd-87f0-becf16d1ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ab1389-3d1b-457c-86ed-c2e06df2cfdf",
        "cursor": {
          "ref": "21c5f969-3c01-4130-8b06-52f3def6e714",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6cbd8ae-3bfe-43e0-8a1a-911ffccd00ca"
        },
        "item": {
          "id": "00ab1389-3d1b-457c-86ed-c2e06df2cfdf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "83dbf79c-8349-49a8-b859-0f7eb0185526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43c7ba8-6cd5-4aad-8918-dc577df16539",
        "cursor": {
          "ref": "69f851ad-e9bd-4367-9eb9-5c19faabac34",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "273f4a90-a590-427b-8d32-bcca048578fd"
        },
        "item": {
          "id": "c43c7ba8-6cd5-4aad-8918-dc577df16539",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dbf8962e-e5ff-4b07-8c85-3bf3cb3bc908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75b24ec-2c4e-4488-8dc2-6182e7f35de3",
        "cursor": {
          "ref": "9f6daccf-c7e2-4229-8ed3-cef0249028c3",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a555d929-12d2-49d8-974a-9a10d4b9eced"
        },
        "item": {
          "id": "d75b24ec-2c4e-4488-8dc2-6182e7f35de3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8918802f-fa8b-468f-b2a4-5e6e495dc893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ef13ea-80e8-4c58-8b1f-9e2b50db2315",
        "cursor": {
          "ref": "4a22bde5-c9ec-4851-bc2f-7985be6d35ac",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "223b8d5a-f292-4a3d-a2f0-b2f5ba44827b"
        },
        "item": {
          "id": "a4ef13ea-80e8-4c58-8b1f-9e2b50db2315",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8a172882-95ad-4063-8e24-a94395d64318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c230d7b-f851-4eb0-ba39-aa549da06e31",
        "cursor": {
          "ref": "ca03b71a-2e75-4b88-87e5-3afa52112620",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5451f70d-e170-4721-93a6-9f7af4e15ee3"
        },
        "item": {
          "id": "6c230d7b-f851-4eb0-ba39-aa549da06e31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "44e904b6-9961-4f23-af6e-42a1f470330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc32bf19-3232-440e-911f-75e27d79dd68",
        "cursor": {
          "ref": "3c0b6a0f-2ebc-46c2-b0d8-c1571c31a048",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7cdffe82-629d-4650-b642-afea5c9c47ec"
        },
        "item": {
          "id": "dc32bf19-3232-440e-911f-75e27d79dd68",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "be00dfbf-f0e4-4117-8f10-edf122dee20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2893d83-d7c6-4004-b85a-87e5002579e0",
        "cursor": {
          "ref": "6d4e59c6-fa82-47d6-92f7-1a2472df3e98",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5b82dbec-20cd-4910-a327-4b68b4600534"
        },
        "item": {
          "id": "c2893d83-d7c6-4004-b85a-87e5002579e0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4119c676-3062-4b80-84c0-6c80029935ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609b47bf-123e-4de1-b1d2-6f4b0b068ae1",
        "cursor": {
          "ref": "b5a5204a-c5f5-49a9-844c-4ee5616b550e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3c8f6470-1173-4f43-8ef3-98530eecb667"
        },
        "item": {
          "id": "609b47bf-123e-4de1-b1d2-6f4b0b068ae1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4404c8ef-7dac-4d89-be30-f9ea66dd5ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56e5c8f-f332-4a68-ac33-61f543c4f6da",
        "cursor": {
          "ref": "6d198477-00d2-49d3-b18a-40be0740e448",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "22bf0305-5365-475f-a8f7-4d532f20232f"
        },
        "item": {
          "id": "f56e5c8f-f332-4a68-ac33-61f543c4f6da",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "404aff50-3d90-4615-8118-759d3d980e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb146756-e935-4e35-bf65-18faeeee004c",
        "cursor": {
          "ref": "91321517-cc26-42ec-801a-8681b8180109",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "043e0a59-b7a4-41d8-85a1-3aabbe1e4165"
        },
        "item": {
          "id": "eb146756-e935-4e35-bf65-18faeeee004c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "80e8e062-7fe6-4828-b38f-912e42c06e9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e4b95d-dc5f-4c11-81ab-c1c8424d09c8",
        "cursor": {
          "ref": "39ddea9a-3743-42eb-93e2-0ffb17974663",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ed4bf018-a526-4ae5-9eff-a9bcbe2e01ad"
        },
        "item": {
          "id": "93e4b95d-dc5f-4c11-81ab-c1c8424d09c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "61cdc847-8031-4a0e-b1ea-7d5426f79a5b",
          "status": "Created",
          "code": 201,
          "responseTime": 6350,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "987aa4f3-27a1-4766-ae30-b05aa02702c3",
        "cursor": {
          "ref": "1537cd66-1e8d-41a5-a1e1-9ed8b6c719ad",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db4dec75-ab82-4467-be9d-bdaa8b2287bd"
        },
        "item": {
          "id": "987aa4f3-27a1-4766-ae30-b05aa02702c3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed5fb4a3-48dd-4b17-9ddd-7d3f48a4dc1d",
          "status": "Created",
          "code": 201,
          "responseTime": 5953,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5bbf29-16d6-4cfc-84b0-2b632da4008d",
        "cursor": {
          "ref": "4c68cfc2-8c28-4965-a5ec-c2f6a1ada088",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ab123027-ab59-4a95-9c1f-d95ae796131a"
        },
        "item": {
          "id": "aa5bbf29-16d6-4cfc-84b0-2b632da4008d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1296b129-3092-4f60-974d-36bad2fc2540",
          "status": "Created",
          "code": 201,
          "responseTime": 6598,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22cf88b-3e6c-4a23-89a3-d9dd9bf1a1f4",
        "cursor": {
          "ref": "1b3b8eb4-8de6-462a-a2a4-3220bd547481",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "26f27cea-9e17-4bb4-a875-3e1b7912f9ac"
        },
        "item": {
          "id": "d22cf88b-3e6c-4a23-89a3-d9dd9bf1a1f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "973904c4-4ead-435f-a094-6ee4e4568ebf",
          "status": "Created",
          "code": 201,
          "responseTime": 5912,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e9c966-6a03-4706-918f-f47903ece460",
        "cursor": {
          "ref": "471f2838-df59-4076-95fa-c1164156c63f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6737bc4f-533a-4d66-8011-c43635c11a92"
        },
        "item": {
          "id": "f3e9c966-6a03-4706-918f-f47903ece460",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a04ca93-8d71-4e43-8315-1acae419ccc0",
          "status": "Created",
          "code": 201,
          "responseTime": 6103,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "40630b06-ecfe-4146-9d55-e1373fc4aec6",
        "cursor": {
          "ref": "536f4611-3c0a-42b3-b284-0730ee7f4320",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9b686fe4-4a04-4ddb-98d0-243e95333ca3"
        },
        "item": {
          "id": "40630b06-ecfe-4146-9d55-e1373fc4aec6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "446f2093-026e-4765-8214-22c318422bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d8fc3c6f-eea3-4a35-956e-ba6888ae3837",
        "cursor": {
          "ref": "3327de7c-fb16-4fe7-8bba-f8e7ac1fef46",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cd3e5e92-a8e7-4bdf-996f-e160cb0688a6"
        },
        "item": {
          "id": "d8fc3c6f-eea3-4a35-956e-ba6888ae3837",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7125b80-f5c0-4a0a-b556-11066c0bb283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e2ea16-4e8c-4979-b6aa-244332dad0a0",
        "cursor": {
          "ref": "100258c3-39a2-4aee-a5df-e1be7287afe6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3dc84caf-b275-4e14-8bdd-e0774363a955"
        },
        "item": {
          "id": "01e2ea16-4e8c-4979-b6aa-244332dad0a0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "16d41e75-c113-48d6-a967-c9fd4d6d7823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caced6b-e58b-4681-9fc7-ef66101e77bd",
        "cursor": {
          "ref": "7380c0ae-4167-43f6-9f4d-9b3d886ae19b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ab63308-44e3-4dda-8c01-b4851cbca98c"
        },
        "item": {
          "id": "3caced6b-e58b-4681-9fc7-ef66101e77bd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c2408f6c-25c6-4387-9ca1-6c847391d5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42a8d17-d20f-4e0e-b959-25ab94b7cb96",
        "cursor": {
          "ref": "efae1699-77f2-486e-a412-d5746cf4e459",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c2af85d0-4e58-46a9-94ec-ec8625f962c3"
        },
        "item": {
          "id": "f42a8d17-d20f-4e0e-b959-25ab94b7cb96",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb48b295-fde4-4466-8c10-1d40744d2257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ab3a70-e370-4831-8c75-b4201ebef145",
        "cursor": {
          "ref": "b9346040-a995-45f1-9615-f34823b7a043",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "efbb8e0e-e489-48d9-975c-aa98a9c35aae"
        },
        "item": {
          "id": "81ab3a70-e370-4831-8c75-b4201ebef145",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "781f3993-b9a1-4800-91e7-abf416ca21cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118fcd48-6744-4a05-a1c8-2b85ee8aa5cc",
        "cursor": {
          "ref": "c6c9d392-df18-40ac-a7d9-ef91bfd00f0c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2766260c-54d5-4873-90f9-498eb223e8e2"
        },
        "item": {
          "id": "118fcd48-6744-4a05-a1c8-2b85ee8aa5cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ca0111bd-4f63-437d-b303-fbb073ce1432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283f8502-2dce-4b84-ac3b-3f111318ed1c",
        "cursor": {
          "ref": "c7633ff5-efe2-4365-955c-3f9999b74e6a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "60691d49-06b3-4000-a504-3bac2da6988b"
        },
        "item": {
          "id": "283f8502-2dce-4b84-ac3b-3f111318ed1c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b6ee471-2404-4718-9d90-931bfe3700ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33093dee-0de2-4b63-8f3e-93171c723906",
        "cursor": {
          "ref": "2d0cea2e-053f-466e-8826-9dfe989be295",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8c7e5ecc-f265-4898-b4d4-ce7f92e4f17c"
        },
        "item": {
          "id": "33093dee-0de2-4b63-8f3e-93171c723906",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c243c2a5-a35b-4d8e-934a-1d411c4d7682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f4aade-2136-4668-9444-5374d37b5e94",
        "cursor": {
          "ref": "c72256f0-37ff-4d91-80c3-e114c32fa6b1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0fb6ee87-41a5-4626-bc1c-78a92492c71b"
        },
        "item": {
          "id": "d8f4aade-2136-4668-9444-5374d37b5e94",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf51768f-ef97-4d06-8526-e151e1a62e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f8e622-f7fe-49e3-bfee-2af0bb93ea18",
        "cursor": {
          "ref": "f4da0d6a-ba96-4330-b4a6-8fe61221e348",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d747dc45-9d90-4b40-868d-71455fe335bb"
        },
        "item": {
          "id": "46f8e622-f7fe-49e3-bfee-2af0bb93ea18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62f48750-dea0-49b6-abb1-114f770c2b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f55169-7b98-460d-9faf-e5a690eebf65",
        "cursor": {
          "ref": "82664282-11f7-4570-827f-127e0e3cd8ae",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "14617dbd-6562-4306-9749-cf70f12cd4da"
        },
        "item": {
          "id": "42f55169-7b98-460d-9faf-e5a690eebf65",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94669dfb-125c-4148-9f92-89a2523143e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332e7ea-2b19-45a6-ad57-fa242a9492fc",
        "cursor": {
          "ref": "1a26fcad-56de-4362-b7fa-289b0374685d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b52cbb6a-c16c-43f5-ab2f-3b9a226d56a6"
        },
        "item": {
          "id": "3332e7ea-2b19-45a6-ad57-fa242a9492fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2cfb8822-f307-455c-914e-c2624e647fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2a5c1-55c6-41cd-938d-19ce5cd89d7c",
        "cursor": {
          "ref": "63f81f09-4c0a-4f5b-bb25-2dd5ba3eb177",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "11ccb86c-3120-4091-b974-43ee05326783"
        },
        "item": {
          "id": "99a2a5c1-55c6-41cd-938d-19ce5cd89d7c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "317227bb-a347-442a-bb3f-45e49890cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6edcb0f-ec84-4737-8d3d-b413a7276df6",
        "cursor": {
          "ref": "90166cba-5d26-4333-8e7c-dec60bd6b9b3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7d37b64b-e8e5-4963-80d6-acde9a8f71d7"
        },
        "item": {
          "id": "a6edcb0f-ec84-4737-8d3d-b413a7276df6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b57634d6-9ecf-4c26-ad87-313234bc4508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7be2f1-6747-444d-bb92-78876af398c8",
        "cursor": {
          "ref": "6ca0f512-3ec2-40a4-9572-3abd0be5fba3",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0cbe2982-7b25-4121-9029-f2153d492716"
        },
        "item": {
          "id": "fa7be2f1-6747-444d-bb92-78876af398c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "09c2b087-857a-4fa3-b97f-c83d586993d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222990fe-1d06-4881-8759-2c666f04d26d",
        "cursor": {
          "ref": "7ec20bfc-f38e-45ea-b965-ccafe8cfdeca",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5308776b-b657-40a6-9805-8783c59d66c8"
        },
        "item": {
          "id": "222990fe-1d06-4881-8759-2c666f04d26d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4fa35874-1086-4b06-b386-8c291b2772db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ece5cf-0c1a-464a-82b1-58df6fe00164",
        "cursor": {
          "ref": "5c729841-4d41-4973-bb41-df5d8ed6a9e1",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c08d3fae-da16-4d19-9014-7ecb2b79bc55"
        },
        "item": {
          "id": "d4ece5cf-0c1a-464a-82b1-58df6fe00164",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e4f8485-8118-4dd5-9c5d-182d7bfa9d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924d82e2-adcb-4528-a6ff-84bfed94533c",
        "cursor": {
          "ref": "dbc75180-c358-4df4-ba8b-587aea6d9ed4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "409e895f-d816-465d-aa00-d5b241c77e02"
        },
        "item": {
          "id": "924d82e2-adcb-4528-a6ff-84bfed94533c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99b6b5e8-ebec-4af8-b08b-8c5f613cb9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2532226-34e4-4459-a44c-1d2c81a7c8f1",
        "cursor": {
          "ref": "0e053c3a-3404-4460-9fbc-1f7cb9998a28",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "67cc147d-1d1f-46ab-b9cd-f7864334356b"
        },
        "item": {
          "id": "f2532226-34e4-4459-a44c-1d2c81a7c8f1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f42fb431-10cd-4194-af76-d58038164763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99abd3a8-1b95-4b70-8593-37fcee6f3b19",
        "cursor": {
          "ref": "80ba5666-0888-4565-95e0-2b581938145e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "839b8d62-97d3-4e3f-b5c0-f1174103c751"
        },
        "item": {
          "id": "99abd3a8-1b95-4b70-8593-37fcee6f3b19",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "36459564-2677-4616-9fb4-58c426fdaa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43220358-575d-4926-86bc-e6ff34ce0d85",
        "cursor": {
          "ref": "d15d5809-8a33-4484-a00b-2d97137eba80",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "035024ec-31ae-421f-a8d0-a77949dd2c36"
        },
        "item": {
          "id": "43220358-575d-4926-86bc-e6ff34ce0d85",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "02689daa-125f-4a65-ad19-1a8d3ba22fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988cbc38-f21d-4af2-881c-b81677d418a6",
        "cursor": {
          "ref": "0f4e737d-8a24-40ac-a507-88aaefa7ecd4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a0ef1e97-861e-485e-9dc8-57edb5398053"
        },
        "item": {
          "id": "988cbc38-f21d-4af2-881c-b81677d418a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3ae20591-7b9e-44c7-baa0-c48dc63331d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa77c1bd-f87d-41b9-9874-aa4087215ff0",
        "cursor": {
          "ref": "69cd1675-54f0-4e11-9246-d712608ced26",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e8337e7-6df6-4df7-be7f-a18219d4562c"
        },
        "item": {
          "id": "aa77c1bd-f87d-41b9-9874-aa4087215ff0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34cdc332-69a5-4902-8d72-b1e67784826e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7950f-f247-41c6-acbe-7922d6b48389",
        "cursor": {
          "ref": "f0cccd4b-20da-4ddb-9322-6a2d01b1cb90",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "026d680a-6419-4976-92a1-87e1cb7c706e"
        },
        "item": {
          "id": "f5b7950f-f247-41c6-acbe-7922d6b48389",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13203b35-55c8-4299-9f46-08711adb4849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867199c1-3f11-4ae9-ac92-5902920eb713",
        "cursor": {
          "ref": "b6b7e19d-28c1-49ee-a903-4c57e3812bcf",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2b1cd867-ad7c-402d-9fe8-c635746342bf"
        },
        "item": {
          "id": "867199c1-3f11-4ae9-ac92-5902920eb713",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "25619729-ecb9-4495-bcb0-ca78b0cd99ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6ad1f5-29cc-4793-95db-57fb1d372e89",
        "cursor": {
          "ref": "6263333c-eb36-424c-8fff-a5814de3267d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c16f93e5-4cf1-48ed-a332-8e7794795e03"
        },
        "item": {
          "id": "ec6ad1f5-29cc-4793-95db-57fb1d372e89",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d5d22fbe-8da7-4e13-a752-7e6ed6053121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f43886b-91c1-43d0-a6bb-602140012aa3",
        "cursor": {
          "ref": "a2d97b6e-c24f-43c8-81e1-b894c28960e2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b06f2126-17b1-40ec-a79c-5222e7eaa3b8"
        },
        "item": {
          "id": "4f43886b-91c1-43d0-a6bb-602140012aa3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d837afc8-f3ba-4a9e-b5ff-11ed026006f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bdd3db-a960-4229-b2b1-35fa1492a32b",
        "cursor": {
          "ref": "be83905d-4cc3-49f3-a742-5b023610dbdd",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5140af9b-1e6e-47b7-9117-3c02858ae240"
        },
        "item": {
          "id": "f3bdd3db-a960-4229-b2b1-35fa1492a32b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5019122f-ee67-483d-90ee-309221725560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eadc69-5b64-4927-8c33-cc2c563a43cc",
        "cursor": {
          "ref": "6e22cb8f-0267-4477-aea0-727bb9165ac6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9d8263da-4a8e-4a60-a985-0a19299fd2cb"
        },
        "item": {
          "id": "22eadc69-5b64-4927-8c33-cc2c563a43cc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7bd4ceef-6a46-4513-bb8b-a616460c3e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8358c9-022b-4d54-8360-da4f4762c18a",
        "cursor": {
          "ref": "373a8cf2-ba0a-4fe4-b151-8c8b10ee1728",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e3776185-a628-4ea7-8dcb-9940893bdc4e"
        },
        "item": {
          "id": "1b8358c9-022b-4d54-8360-da4f4762c18a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11552e3d-4b2d-4343-90f4-50c3ce3083bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37271c3c-9c0c-4a94-b6c9-73b8b15dc3ac",
        "cursor": {
          "ref": "b0997b12-25ec-4c9c-a12e-9f1996726710",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "13d51716-e82a-407f-b557-d2a08908ee76"
        },
        "item": {
          "id": "37271c3c-9c0c-4a94-b6c9-73b8b15dc3ac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22b979ec-6fc4-4540-aa9b-9a01a8f84b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619516bc-6259-456e-9cb9-2e8fbedf5bcc",
        "cursor": {
          "ref": "01576537-3ee4-4c61-97a7-9163974c29f7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d1a62554-5182-4a77-a6e7-e9607dd29daf"
        },
        "item": {
          "id": "619516bc-6259-456e-9cb9-2e8fbedf5bcc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7519925b-bdc6-4a68-b307-1abd9fa71d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078bd00a-a4b7-4438-a1e6-a27721c17246",
        "cursor": {
          "ref": "d1f2b1dc-40fa-4a9c-846f-0e1c6c954cda",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "50408d35-101d-49c8-9892-0183229c8a64"
        },
        "item": {
          "id": "078bd00a-a4b7-4438-a1e6-a27721c17246",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a83ec2f0-247a-43f0-9ec1-e37a1cbb83aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b7df6a-feea-4981-9e7c-67830756098f",
        "cursor": {
          "ref": "074b02ba-14e4-4b57-a577-2053df3427f8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eea4ffe3-5aed-4d42-87aa-459724dd9ad4"
        },
        "item": {
          "id": "a5b7df6a-feea-4981-9e7c-67830756098f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6e9ac7f9-a5ad-474a-8836-5d555b3ca00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec3ae49-5b0b-4e15-bed8-67627fc63b99",
        "cursor": {
          "ref": "753ab869-03a7-4de9-8c68-54f4b55b8659",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "11cbcdd5-6da5-4472-abde-5c77895b0076"
        },
        "item": {
          "id": "7ec3ae49-5b0b-4e15-bed8-67627fc63b99",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "379e6749-79ef-435e-971d-5801841800cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d22310-40f5-487f-9d8e-b1aaa0abc233",
        "cursor": {
          "ref": "1fd03de6-aa53-46e5-94c0-f1e8e6999eb6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b5c62342-81e1-4809-a86f-02128276cda5"
        },
        "item": {
          "id": "a5d22310-40f5-487f-9d8e-b1aaa0abc233",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d0010c7-8d66-4a36-a2bf-3bd66f33d688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca9166d-2e70-46df-8060-14547147d181",
        "cursor": {
          "ref": "c8819659-9030-4cd7-9daa-805db98cb17e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9eaf5a2-d888-4be3-a755-fb3a3a3a34f3"
        },
        "item": {
          "id": "9ca9166d-2e70-46df-8060-14547147d181",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0e1c37d-71ed-433f-8d13-13733973f2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc500a04-0556-47f0-87c1-99360ceb0a3f",
        "cursor": {
          "ref": "2501536c-f50c-4ad0-a453-8841eeb44790",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4666742a-990e-460e-ad9b-15fda647df48"
        },
        "item": {
          "id": "fc500a04-0556-47f0-87c1-99360ceb0a3f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc989b05-0ba8-45c0-9359-ddfebca3265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a6862-558e-4989-815a-fdbc87f443be",
        "cursor": {
          "ref": "7fed5e6b-cfbb-410d-aac6-0199956b74ef",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d8af0063-efa0-4289-8630-5787a8ed52d3"
        },
        "item": {
          "id": "3c6a6862-558e-4989-815a-fdbc87f443be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56bfc69d-3863-439f-b2c2-7d45537a292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6071b319-a573-42a2-ba35-63eda0df4595",
        "cursor": {
          "ref": "8425f632-f107-4a9e-8824-3fab2c18d053",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90196408-6659-4179-bc4c-f561c1f03aea"
        },
        "item": {
          "id": "6071b319-a573-42a2-ba35-63eda0df4595",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c5038710-e14d-459a-9bb0-984fa6a5471d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c867c567-624c-4f78-9858-6748078f2d37",
        "cursor": {
          "ref": "185cfa63-f26c-45cf-ae9f-b8e874ecae19",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3be5e613-adf2-4727-908d-7fb28f80c157"
        },
        "item": {
          "id": "c867c567-624c-4f78-9858-6748078f2d37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f151514-54a4-4c02-ba16-43ac45badbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb93b47-72ee-4db8-a1ca-793c8176d90b",
        "cursor": {
          "ref": "fdd78eed-66d3-4a6b-ba8a-73d1c34fe49c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f8223b97-200b-4e5f-9bc8-47c9c713e479"
        },
        "item": {
          "id": "6eb93b47-72ee-4db8-a1ca-793c8176d90b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d9fa6699-a71d-4158-9682-b9f49e99bb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b56625-03b8-4b2d-9ad5-cfe96a94022e",
        "cursor": {
          "ref": "bc93d184-ac50-4258-816d-8a33e138cc00",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e228af8d-213f-4e3c-b870-0b28bdcaaf18"
        },
        "item": {
          "id": "a6b56625-03b8-4b2d-9ad5-cfe96a94022e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24700b1a-2887-4279-b526-98a131a8c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e06c0b-06e3-43cc-a412-000c106c820d",
        "cursor": {
          "ref": "60d789d7-75f6-41d4-a9c9-f87810e19da6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "538533d2-1f3f-4f63-aaf9-e8c1256e6db3"
        },
        "item": {
          "id": "d0e06c0b-06e3-43cc-a412-000c106c820d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "39b4591f-0dec-43ca-bc78-e7d3365a1a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35954e99-b8bd-4881-a9af-b63b79c03294",
        "cursor": {
          "ref": "2aa71aec-288c-408a-b01e-7292bd7907ba",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db223c18-fd3b-4332-a6b7-5d0423ad20ee"
        },
        "item": {
          "id": "35954e99-b8bd-4881-a9af-b63b79c03294",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e1d541f1-53f5-40d7-8365-95796072650a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcad3cb-b7e1-4363-a4cd-1b003d39189a",
        "cursor": {
          "ref": "b83bdda2-36d7-4318-a05d-c3ded5434afd",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1ed52c52-f0f4-4eb1-8967-0ed7a1d0d5b0"
        },
        "item": {
          "id": "4fcad3cb-b7e1-4363-a4cd-1b003d39189a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "130c9aac-7f84-475e-a2e5-e9126c96e201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc751bb-7156-459f-a0b0-71ccfb8dd73b",
        "cursor": {
          "ref": "7e4c0b45-0fc2-4780-82a7-541bb65bfb18",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0dc5e04b-fd31-42da-b2d6-25d748703944"
        },
        "item": {
          "id": "bbc751bb-7156-459f-a0b0-71ccfb8dd73b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d822f52-9006-4f4f-b1b6-6d99bb1c9646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d613f8bc-aeaa-475f-93fd-72995c47d6d4",
        "cursor": {
          "ref": "d30ee94d-32b7-4258-9261-2e33cfe61d8a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8d799bf6-2c0a-4e09-a3c2-1ac03e4d5025"
        },
        "item": {
          "id": "d613f8bc-aeaa-475f-93fd-72995c47d6d4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d67e6bfb-6f72-4b43-8ae7-a42f4cbb27a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16eb0bde-b59d-4cdc-ae5c-d0275ce672cd",
        "cursor": {
          "ref": "2eb77e87-5989-4b33-b561-53024acbeab3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0f2dcb9a-cf16-4afe-8865-ab352c272e24"
        },
        "item": {
          "id": "16eb0bde-b59d-4cdc-ae5c-d0275ce672cd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "917c4d57-0b88-4582-b904-a6dc335ad5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a479b5-c48c-4647-9282-aa6fbaa78798",
        "cursor": {
          "ref": "7aa437ac-5208-4224-90b5-c981c25f1f48",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2c8d9373-c3a4-45b3-9db4-8ce31d83c81e"
        },
        "item": {
          "id": "c2a479b5-c48c-4647-9282-aa6fbaa78798",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f18d02c8-1f83-4bc5-b3c8-d59e78c3f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c7d2a2-da57-4786-8ba2-86878c6a834f",
        "cursor": {
          "ref": "c7be8f07-b3d8-4d86-bc93-268519ddec0c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f00ce1d4-17fb-4a33-96c8-84d0d16bc429"
        },
        "item": {
          "id": "f8c7d2a2-da57-4786-8ba2-86878c6a834f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "600c5deb-6cfd-4f67-90a0-c2c02a4d7199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a5f17-488e-4424-9f97-1cf5f72be5b8",
        "cursor": {
          "ref": "97f1a131-a583-42b1-8633-dfa99c38a5fd",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "20f51b90-345f-4af4-9c1f-0568f4bc0cee"
        },
        "item": {
          "id": "5d2a5f17-488e-4424-9f97-1cf5f72be5b8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "989e6003-cac5-41aa-9bfe-27866354e41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8380ebbf-b7b5-4973-a0fc-367a28000b16",
        "cursor": {
          "ref": "80143f0b-d0de-43b0-b63f-4dd03ea2124f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4b05d041-d8fe-4869-8bc4-fbb24ff625a5"
        },
        "item": {
          "id": "8380ebbf-b7b5-4973-a0fc-367a28000b16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "58f6bd80-4759-4635-a502-6dcb9ecc382f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f28667f-6f73-46a8-b2c9-1b8d48787ff9",
        "cursor": {
          "ref": "409358b3-382e-4bfe-8e51-ccea9f3b1d62",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7cf1f34a-e282-4f08-8d2d-d9641fc19c78"
        },
        "item": {
          "id": "1f28667f-6f73-46a8-b2c9-1b8d48787ff9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3cca4203-d29c-4b7e-bbca-e8d534f4b6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8176fc87-00e8-4e4c-97fd-39f0c9c3dbdd",
        "cursor": {
          "ref": "35714318-acc9-4a10-a2bb-a49a7793ca12",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c9b850be-5b96-4a17-9a44-1ce3bf815958"
        },
        "item": {
          "id": "8176fc87-00e8-4e4c-97fd-39f0c9c3dbdd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f0d414f3-103c-450a-a886-0ba6150ab51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59760199-12fb-427c-8a78-72c3f7d8cae6",
        "cursor": {
          "ref": "97865207-c0f0-41f7-9a7d-07f5f9a1fd6a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd38d777-64d9-4022-9f83-05953c91d995"
        },
        "item": {
          "id": "59760199-12fb-427c-8a78-72c3f7d8cae6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85ffd450-e23e-4491-8874-2a70ddec0487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c9be9-4790-43f2-ba59-8693a9d2144e",
        "cursor": {
          "ref": "c85b3515-db79-4319-89c1-d01f2bdc0af5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4308050d-f2fe-4435-8d4a-852f9e34b4dd"
        },
        "item": {
          "id": "c22c9be9-4790-43f2-ba59-8693a9d2144e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f738f6a3-ac78-4804-8326-5c8ae934c5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f4384e-eb74-464c-8b09-966d12bbb020",
        "cursor": {
          "ref": "e6309641-3fd8-4528-9c0c-8f55e9c41ce3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b6e3e63e-30f3-4bc6-bc99-230a748f50d7"
        },
        "item": {
          "id": "d9f4384e-eb74-464c-8b09-966d12bbb020",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f61c173e-5cc2-4d24-9274-bfeec913f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8060727a-9065-4bbc-a303-903ae0e390f2",
        "cursor": {
          "ref": "27c8c76f-97f4-4c81-bfda-39b728b46da7",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "edde4522-23d8-4a9a-8d60-dff88e9096dc"
        },
        "item": {
          "id": "8060727a-9065-4bbc-a303-903ae0e390f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "76832d17-27f0-4c13-b092-4bea4446ab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b5256-5f28-484d-94d4-ab5e75c82279",
        "cursor": {
          "ref": "b62cf63e-558a-44d9-9e4a-c38b0be4282e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a400d3c-db72-48ed-affe-e9ea3c08da61"
        },
        "item": {
          "id": "031b5256-5f28-484d-94d4-ab5e75c82279",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6931ce7f-d462-493c-904e-d2b616280944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51ce3ef-1d4d-4a9e-8f65-4fec63fc675b",
        "cursor": {
          "ref": "65f31255-f75a-4b1a-a0cc-c7d0e2a35aa3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2209dd8b-8fd2-4637-b6be-2abdcbf257e2"
        },
        "item": {
          "id": "e51ce3ef-1d4d-4a9e-8f65-4fec63fc675b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "537a81e4-4ecb-42ed-9c97-1f9c97f33338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48589b6-c2f6-467f-abb2-1cc547939d8a",
        "cursor": {
          "ref": "f3b8e44f-6930-4088-b19c-09266d6c16f3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bcd145e7-e8cc-4a96-ac8a-255e28fb3eac"
        },
        "item": {
          "id": "d48589b6-c2f6-467f-abb2-1cc547939d8a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3456b4ef-3ada-483a-94e3-9eab3f8381e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de9ecb2-e380-48bd-a9ab-6d5c87257314",
        "cursor": {
          "ref": "73dbb33b-3403-4198-8f5f-3b362825f968",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d538b0d9-af77-4eae-afa8-d913048563d7"
        },
        "item": {
          "id": "4de9ecb2-e380-48bd-a9ab-6d5c87257314",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bc1b2b5c-077f-41dc-9ee2-8ca1a5a8797d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5181c19b-f66c-489b-b60b-7df957e95b87",
        "cursor": {
          "ref": "793deb3f-59c0-4209-a5a2-e3e47b734544",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "65171d26-fd17-47de-9da4-eb2b8820c88f"
        },
        "item": {
          "id": "5181c19b-f66c-489b-b60b-7df957e95b87",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4f2d7950-c766-4cc4-89f3-c42bf4ad4dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c9197a-c5da-4eb4-8612-da9538289856",
        "cursor": {
          "ref": "1bba8732-b1f1-46ba-9b5c-ae9e43e611bf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13d57152-f03f-4f40-8b32-00bf9a281fba"
        },
        "item": {
          "id": "08c9197a-c5da-4eb4-8612-da9538289856",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "94423f16-7708-4cc2-a4ee-c688f743d4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a4dda9-d2f4-4370-8a0b-7ca169ffa188",
        "cursor": {
          "ref": "6a057096-0629-480e-8ff6-e257484f77ba",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "71f750c0-0c94-4054-b30f-efdc3647fc6a"
        },
        "item": {
          "id": "f3a4dda9-d2f4-4370-8a0b-7ca169ffa188",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d44fcc07-2c44-4470-bb1d-48a0f614b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba660c8-0fa8-4897-8b60-1b4d00a7fe6c",
        "cursor": {
          "ref": "c74bc7ac-58c0-481c-bcbf-d35317fd09ad",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0e2c5a32-ee27-40fa-9d58-f88234235b32"
        },
        "item": {
          "id": "4ba660c8-0fa8-4897-8b60-1b4d00a7fe6c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8178869-3929-4661-9ea1-69447017baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b3bb6-2dc0-4af7-b00d-4d21bfebbfda",
        "cursor": {
          "ref": "3a43fb56-8268-42af-ab18-80b53edfcf56",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ac95f356-d5d6-4219-a695-df6146b9797b"
        },
        "item": {
          "id": "fb6b3bb6-2dc0-4af7-b00d-4d21bfebbfda",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d648d759-e032-4547-b338-db9ec11272fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb35e5a-6d30-434c-86d0-09c2f7bf513a",
        "cursor": {
          "ref": "1b33acae-eb8c-43ca-928c-6d3a139d0226",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "218a381f-e0e4-4895-bee0-73891c14c950"
        },
        "item": {
          "id": "aeb35e5a-6d30-434c-86d0-09c2f7bf513a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f3893d4c-db7f-4c29-b307-b32a75608a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ed22d6-1d27-4cc0-902e-a66962588d5d",
        "cursor": {
          "ref": "bfa5da5d-4dc7-451d-af36-8b50c62c917d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "508af4ae-4379-422d-99bc-4c5a9a09887c"
        },
        "item": {
          "id": "e0ed22d6-1d27-4cc0-902e-a66962588d5d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "71f74bb9-36bc-4e7f-80ba-ca93321d4747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc3c2fc-5abb-4365-baa9-af9c1f8ad37e",
        "cursor": {
          "ref": "31ff6165-2751-4f58-8993-68594f3fd41c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "692fafe8-3cbc-4d8e-85a5-9c74657ac743"
        },
        "item": {
          "id": "6dc3c2fc-5abb-4365-baa9-af9c1f8ad37e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e456c594-9dbb-4c3b-931d-2ba708edfeef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889ed00-40a4-4b48-a912-6365e9a42f61",
        "cursor": {
          "ref": "a6fb1aa0-cf56-47b0-84e6-c0121398a9a3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "69d7cd6b-4537-42f6-b37d-72c094947052"
        },
        "item": {
          "id": "b889ed00-40a4-4b48-a912-6365e9a42f61",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "443775e5-b880-471b-bad3-7bbd52942711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e2e293-492f-4a17-8860-3b48004d1977",
        "cursor": {
          "ref": "827fad7c-9cb5-4d7a-96ab-46718226c576",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f139017a-3670-4c39-97df-f710db7e3b16"
        },
        "item": {
          "id": "e4e2e293-492f-4a17-8860-3b48004d1977",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "85ed2fad-8a1d-4e80-ab30-aa5475e6730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2667dd97-8e7e-4e94-a54d-e46a44ec066f",
        "cursor": {
          "ref": "db6ccbdd-2210-456f-8b11-0d42e90d5656",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "63923d1c-5945-4600-b7c3-1f3d993256f1"
        },
        "item": {
          "id": "2667dd97-8e7e-4e94-a54d-e46a44ec066f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8bc153ed-9a81-48d8-a653-90c5662ccb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f181d7-0fbe-45c3-a330-f1944da6a923",
        "cursor": {
          "ref": "834323cd-1677-45de-ad24-dbcde3d03235",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "42fe3057-d1dd-4e17-b0cc-5e7f43d154f3"
        },
        "item": {
          "id": "65f181d7-0fbe-45c3-a330-f1944da6a923",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd8fb41b-ed50-43d8-9c79-3e5e9b4a650f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e004968-bdc1-4ed0-bcce-1a1dabf49082",
        "cursor": {
          "ref": "8c2d68d1-c6f9-4164-b902-dc16be0f545e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d23b310-4df9-40b1-9292-94ba512cacba"
        },
        "item": {
          "id": "1e004968-bdc1-4ed0-bcce-1a1dabf49082",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4750ed74-d863-4034-9bb1-91b44c3df8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97b2dd-d24a-4742-a008-cff9a4fad78c",
        "cursor": {
          "ref": "0e5eeec8-be25-4051-95af-0f56fa207106",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "71bd2ed2-4972-4cba-b0b0-f17662b13342"
        },
        "item": {
          "id": "2d97b2dd-d24a-4742-a008-cff9a4fad78c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "488a617c-0db8-4d7d-b187-94f46ef6c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9609fc2-7a8e-4b57-81fd-984044dcead6",
        "cursor": {
          "ref": "5919a22c-b30a-4c76-9ac9-3f03f6ea2c59",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1ae83759-6e3a-4b5a-8f6f-a9edf0593822"
        },
        "item": {
          "id": "f9609fc2-7a8e-4b57-81fd-984044dcead6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a12472da-9cb2-45c9-9e9a-5b2bb09d1198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d2e56e-1456-4651-baea-947f8c2ed39f",
        "cursor": {
          "ref": "edb1e007-b31c-43f3-8a0a-8ce2fabc36d7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7a4ce600-7e12-4e65-a711-ee7eed88a20d"
        },
        "item": {
          "id": "94d2e56e-1456-4651-baea-947f8c2ed39f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d9bbf7d0-bb13-4761-b7fd-bc68ca069b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf86ab8-a397-4b9f-82d7-8daea5e35f50",
        "cursor": {
          "ref": "849465d4-40c8-4bfd-9d5a-6cc850df1e65",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bbd300cb-8eaa-44d5-9046-b5f30789af49"
        },
        "item": {
          "id": "eaf86ab8-a397-4b9f-82d7-8daea5e35f50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2bcfe7da-59d2-42ab-965c-1709f0514e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcd932c-36fc-476a-87d8-e3e3bdb7495a",
        "cursor": {
          "ref": "3b7afab2-b8cd-4a1b-a644-1bc1c86f02f8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "987b5972-31db-4527-87c7-ae04c7571bd7"
        },
        "item": {
          "id": "2bcd932c-36fc-476a-87d8-e3e3bdb7495a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "412a5bca-6882-4ecd-b4b3-8786afd7951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a51516-515d-48f4-b4ff-4d4f36b8d30f",
        "cursor": {
          "ref": "4c3d6a42-3b14-4ab9-824d-4e0ac40196ef",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c1f52add-535d-447a-8f46-7d4276a48f02"
        },
        "item": {
          "id": "41a51516-515d-48f4-b4ff-4d4f36b8d30f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eacfc1ac-6c89-4898-8914-a0609dfe9cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb300ef-8685-427a-bfb3-57e1c0883990",
        "cursor": {
          "ref": "14b21a62-6ad9-42b1-88b9-8ff4383a8faf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "eaa2e7ca-03bb-478f-a6f5-a33867a09e04"
        },
        "item": {
          "id": "1fb300ef-8685-427a-bfb3-57e1c0883990",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "afd0f5a0-e0e8-44be-8f40-2010e362ec37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a7cc98-42bb-494f-855b-9ea6f8b5f38c",
        "cursor": {
          "ref": "82277c56-3ec9-4e9b-b421-599c21eb60dd",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6c6d8d3-355e-4148-af54-bf8384c77fb4"
        },
        "item": {
          "id": "45a7cc98-42bb-494f-855b-9ea6f8b5f38c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6fbc0c28-0991-4725-b6a7-b17627f8946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d12525-6370-4099-9622-b403ff9599e3",
        "cursor": {
          "ref": "206b9bf4-df92-4e80-8059-f806b81caccf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a5d80cde-6246-4493-8886-f349762f1ca7"
        },
        "item": {
          "id": "b2d12525-6370-4099-9622-b403ff9599e3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "94e37e41-16cc-4e8d-90ea-40b99395d1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e0abe-c560-4c5c-9c3d-6faf9ced75dc",
        "cursor": {
          "ref": "1705eaa8-aaed-4287-91bf-9b5e9de2f179",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2d0d40f5-d1e7-4574-a1b7-2824db6a2b1a"
        },
        "item": {
          "id": "986e0abe-c560-4c5c-9c3d-6faf9ced75dc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b891283d-bf07-4236-a1be-8e8d0c933934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f6927-fd65-4162-abff-e24abffa8928",
        "cursor": {
          "ref": "ba1c922a-250c-4350-b250-429a7252877b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "91788c42-0985-4c94-91ca-4354b042a374"
        },
        "item": {
          "id": "280f6927-fd65-4162-abff-e24abffa8928",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "777e7415-5f81-4afd-bb8b-e1e0b17dc74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b52f675-41a9-4b91-b326-4f58a60884a7",
        "cursor": {
          "ref": "0bf3174a-7ab2-412c-85b9-f7b2881b7cca",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8d37aee2-91e0-4d6d-9efb-78a021cf8299"
        },
        "item": {
          "id": "1b52f675-41a9-4b91-b326-4f58a60884a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae4d5dda-46c3-4325-aa44-ea6de2b4527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f941a92-d0bd-45ac-bb53-43eb084ba2e3",
        "cursor": {
          "ref": "a87b2a0e-f21a-44b0-8872-b7edc7d195ab",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1ae780ab-3b2c-469c-a8e0-71dee79cdcc0"
        },
        "item": {
          "id": "1f941a92-d0bd-45ac-bb53-43eb084ba2e3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "35415f0c-7134-413d-983d-56c3a2700d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1add98-7b87-4301-b645-b5b3b7f85c25",
        "cursor": {
          "ref": "5e00e205-4d25-400c-9a2c-1a6cd57dd448",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "25caadad-2a85-460a-85d7-f6665d731143"
        },
        "item": {
          "id": "0d1add98-7b87-4301-b645-b5b3b7f85c25",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ec1929c-3bd3-4f5f-9716-7a5fa45b80dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d996f74f-1ab2-4469-8f40-713068328cad",
        "cursor": {
          "ref": "1ba858fd-19e9-4bcf-9f27-00ce3f80c5f2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2d35097b-a13f-43c0-918b-2f4844e4ce7f"
        },
        "item": {
          "id": "d996f74f-1ab2-4469-8f40-713068328cad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7210e6fa-62bc-44a2-91f3-52e8f0d38c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57464a2-4617-4db7-a53e-5fcd2dc471d1",
        "cursor": {
          "ref": "ddd87b71-5a39-4b80-bb2d-6cdb9c670777",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdde0fbe-048c-40c3-a184-60368d905c9a"
        },
        "item": {
          "id": "e57464a2-4617-4db7-a53e-5fcd2dc471d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d5683a07-da70-45e3-9172-1d6a9d68caa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8687553-20fa-49f6-bfb3-ff8b125c5c66",
        "cursor": {
          "ref": "1c4410b9-02a9-401c-b508-8d996ca08f18",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e43f9704-4d2e-4e0f-aa14-718862698076"
        },
        "item": {
          "id": "d8687553-20fa-49f6-bfb3-ff8b125c5c66",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4a6630d4-e6e2-441c-a04e-5e19ad25447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdfb0a4-0a40-40a0-957a-ac4eeb611116",
        "cursor": {
          "ref": "8e8dfd5a-1a68-4311-8e9e-75a57d930e97",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d8308f17-4df4-44fc-b387-d8461664eb35"
        },
        "item": {
          "id": "9cdfb0a4-0a40-40a0-957a-ac4eeb611116",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "055352b7-0ce5-4fb0-844c-40d307c9d7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da195c2-58b6-4b48-a1a5-961b675fb3c1",
        "cursor": {
          "ref": "0fc5a444-5558-4763-be01-5a7233f1dca8",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "366b5dff-f0e5-4ad2-8b06-6a03c3cb352b"
        },
        "item": {
          "id": "8da195c2-58b6-4b48-a1a5-961b675fb3c1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8fc44236-3569-49ec-acbb-d66029254e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5be0a3-a42c-44f1-b45d-d4f0409317dd",
        "cursor": {
          "ref": "49f4513f-223d-4919-89c2-54477587c0c7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "39bd96d1-92c6-43d0-815f-df19a8ca8e07"
        },
        "item": {
          "id": "8e5be0a3-a42c-44f1-b45d-d4f0409317dd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92beceb8-e6a1-4151-858b-3b2bd16ed89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e330667-3399-4f9e-8533-7225caade173",
        "cursor": {
          "ref": "60408c6f-3b0f-4a7e-b15e-f8d5c9393152",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b0bc3762-5931-4648-8801-8b0c8a0e7e46"
        },
        "item": {
          "id": "4e330667-3399-4f9e-8533-7225caade173",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8864ce40-d48c-40d3-b33d-8cf514bec91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b76b42-43a8-4d90-91a2-53f015d0f6c0",
        "cursor": {
          "ref": "687704be-0deb-407c-a5f0-936a9f1e5a47",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "421c5462-2f38-4914-9747-3513112dd9bd"
        },
        "item": {
          "id": "36b76b42-43a8-4d90-91a2-53f015d0f6c0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b75cf7c5-c322-4c66-ac27-a272c65aac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e580de52-81c7-4f5b-b84b-20d45c1e0314",
        "cursor": {
          "ref": "0602b8c9-4179-4cd3-a64d-0b31980fa44a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0acedc6c-3465-450a-89ee-57661660d4f8"
        },
        "item": {
          "id": "e580de52-81c7-4f5b-b84b-20d45c1e0314",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6470fbc7-27bb-42df-8209-76eef6e241bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2fe716-18f8-40a4-9e17-8f0721568c28",
        "cursor": {
          "ref": "be80e963-789b-4f82-93ae-9485baf9bfbd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3dc84976-8fd4-4c53-8efb-b9eb2ae2bd6b"
        },
        "item": {
          "id": "fa2fe716-18f8-40a4-9e17-8f0721568c28",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fddbd6f0-2fec-4f6e-8810-32e722e28f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95702876-aa13-4105-8880-5ee6e399531a",
        "cursor": {
          "ref": "36f7a145-8c71-4aea-8e26-b37ad12a5ae7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2376cf18-b3ef-418c-9244-4af4600d15cf"
        },
        "item": {
          "id": "95702876-aa13-4105-8880-5ee6e399531a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "26190a6d-1bd8-4d9d-a73d-b9efe0ecf406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f79bfb-029c-4037-864d-1d0322a2d3a8",
        "cursor": {
          "ref": "26895aa2-8793-474e-ad5c-b1a25f87518b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "09edc237-90f2-4a87-ab9f-1256a768b904"
        },
        "item": {
          "id": "36f79bfb-029c-4037-864d-1d0322a2d3a8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7aab9ee9-0f1e-443b-9596-fa69bd15b324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612cea19-8095-41e4-ac3f-adbb62b1b635",
        "cursor": {
          "ref": "a00cd643-5b71-4f0d-b8bc-820268d71d21",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0e426cee-e2ab-4fb0-b8da-95b6e6c8aeb2"
        },
        "item": {
          "id": "612cea19-8095-41e4-ac3f-adbb62b1b635",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f355673-3bba-4254-98a7-34cf37560b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b477eb-7388-4a4f-9b4d-a4efbd1e3766",
        "cursor": {
          "ref": "a1e223ee-a04f-4515-bb00-cf0116e7aac7",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1db297ff-211d-4727-99e9-ef8a51ed9ddb"
        },
        "item": {
          "id": "57b477eb-7388-4a4f-9b4d-a4efbd1e3766",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c81da3d9-c065-4140-bb40-d61f2f623fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dbe3fc-194c-4549-8c5a-386218bd0872",
        "cursor": {
          "ref": "8d250a91-9500-4a5d-b144-e9f7878760ff",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "262968ce-2e37-4a1b-a40d-a99b138dda34"
        },
        "item": {
          "id": "93dbe3fc-194c-4549-8c5a-386218bd0872",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0961ef1f-895d-483d-bcc9-9e8989c06ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4833ae77-08f0-4126-9c5a-001a9f4ff821",
        "cursor": {
          "ref": "4c5ff0fc-2d03-480c-90a6-7bb94c9b6723",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20c502ca-80a1-4a06-a830-e0453b2132a9"
        },
        "item": {
          "id": "4833ae77-08f0-4126-9c5a-001a9f4ff821",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "779ff26f-85f0-49a9-b565-4933e7707eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f710978e-3c19-466c-8b26-0842e23df4ea",
        "cursor": {
          "ref": "05392fc9-3976-48e7-b44a-30f35536eb1d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0a09e05b-a5f6-4173-89f3-84777b64bb7c"
        },
        "item": {
          "id": "f710978e-3c19-466c-8b26-0842e23df4ea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7c3a4dbe-ec5e-43de-9c63-f3fcc6bd3110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6b87a1-9a9b-438e-862a-3743927817d3",
        "cursor": {
          "ref": "a985e3d9-dea4-463d-b25d-bfe292bfc87a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "36c62120-6a7b-4db9-b8ec-4b359b44da7e"
        },
        "item": {
          "id": "ff6b87a1-9a9b-438e-862a-3743927817d3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1ab570a2-5eb0-46a9-9873-365af18f1633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39b59c3-04d5-42e3-934b-1a4e3fd03853",
        "cursor": {
          "ref": "1e4455b0-adb4-4853-8cfd-2f71528acd1e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3f0ea199-fc9f-4ffa-826b-76770d7ca3ee"
        },
        "item": {
          "id": "b39b59c3-04d5-42e3-934b-1a4e3fd03853",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9087b380-4383-4c12-b0de-3f2526c4fcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0fec89-e9c8-4679-8c89-41937e53b540",
        "cursor": {
          "ref": "089e2579-58d1-4527-962d-e4ca290cd096",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4a972b5d-d8f3-4964-8810-5745c516a766"
        },
        "item": {
          "id": "6b0fec89-e9c8-4679-8c89-41937e53b540",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91aa633f-1af0-421f-8542-6454462e0656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a53144-5717-462c-a070-f3c6043bf992",
        "cursor": {
          "ref": "a6d7a445-477c-4b49-b661-bfbbbd35dead",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a89f788-3423-4d48-8932-3d576e477b2d"
        },
        "item": {
          "id": "d7a53144-5717-462c-a070-f3c6043bf992",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a90a0b28-f463-4367-83e8-05f75c34fb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed80370-42bf-400c-b061-363dc39b6e24",
        "cursor": {
          "ref": "9099384d-8fb2-47a7-b2d9-cd53eed8da78",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc0a7f7c-62bb-4bae-b7f8-d1f5d7b2c9ef"
        },
        "item": {
          "id": "9ed80370-42bf-400c-b061-363dc39b6e24",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fd2a60ad-3129-4c09-9e19-fb6f541ea5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99fdc9d-72d7-405a-b31f-b89792f3a63e",
        "cursor": {
          "ref": "7ae8902e-3006-4f6c-bbe3-0f20deccf136",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7d72d6be-1b49-4337-8de0-f2dd0e8fe8dc"
        },
        "item": {
          "id": "e99fdc9d-72d7-405a-b31f-b89792f3a63e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8ed07c03-0927-49bd-ad86-49678ed2fe5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a36be25-dd2e-4178-a1df-820d4f3a3da3",
        "cursor": {
          "ref": "c0ae51dc-081c-450e-b612-58c359e5a88c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9c04e351-3773-4842-a76a-c9841e546295"
        },
        "item": {
          "id": "3a36be25-dd2e-4178-a1df-820d4f3a3da3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eaef45b1-6aa1-4117-9681-d2694d36805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c1d3f-9b00-42e7-acf2-99738ca6e3c0",
        "cursor": {
          "ref": "5d104030-50bc-47ef-80bf-83c14c24fc90",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d4f2360c-0abc-45bb-a8fe-b240b797a41d"
        },
        "item": {
          "id": "1f0c1d3f-9b00-42e7-acf2-99738ca6e3c0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "058a2416-8fbc-403e-923c-4e3b84d71802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf5e49f-2e51-449c-8c71-771a0b0b96a7",
        "cursor": {
          "ref": "9af38c23-1c16-4318-9195-8f86caea2ab7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e2452f95-d7a3-49f7-b95a-32d3481128e6"
        },
        "item": {
          "id": "1bf5e49f-2e51-449c-8c71-771a0b0b96a7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55b9482b-04a7-46fd-8c00-e9f0c00ff0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742c9866-698b-4dba-82d8-751ff2f80c9d",
        "cursor": {
          "ref": "47f84fc3-434f-4c15-a9a7-daacb19b775d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2c8c0308-e2d1-4ecd-8c0c-4618989f4b6b"
        },
        "item": {
          "id": "742c9866-698b-4dba-82d8-751ff2f80c9d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1530a38b-da45-4f13-95b7-c675f0767998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b0a59c-8cca-4091-a36c-076bd13bd4e0",
        "cursor": {
          "ref": "cfc0cd7d-8798-428b-9d46-ddf51f021bdd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2225b361-2af0-4229-bf59-f60dd7d077ea"
        },
        "item": {
          "id": "e2b0a59c-8cca-4091-a36c-076bd13bd4e0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46b40c2b-762b-47e7-a746-a21fd6dc706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e17ddd-6400-4ccd-af25-654fb0451c82",
        "cursor": {
          "ref": "c99b6cf6-5415-4c9b-b205-963daf000e27",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1300cf50-25f2-47c6-b497-cb23ffbaae50"
        },
        "item": {
          "id": "e2e17ddd-6400-4ccd-af25-654fb0451c82",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6714b121-c073-4573-9220-adc718a57769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe1a80d-e4cf-47e0-a969-bb45afc0ffd4",
        "cursor": {
          "ref": "49bf3aff-9c23-4e07-bd66-615be95adf14",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7aae0c1b-21ec-45de-bb4b-7184e8baffc0"
        },
        "item": {
          "id": "9fe1a80d-e4cf-47e0-a969-bb45afc0ffd4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4c5cdefd-9d8c-47cb-92d0-f177e47e5cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6b72c-5993-44f4-9778-7d882e48d8db",
        "cursor": {
          "ref": "bb04e609-e014-4bd9-9942-84114860baf2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d297d07a-6ab8-449c-a093-aef489d98921"
        },
        "item": {
          "id": "72b6b72c-5993-44f4-9778-7d882e48d8db",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da94edcd-08fd-4d1b-abda-4e741899f102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423dad2d-8596-45ff-90b5-d66035c554b5",
        "cursor": {
          "ref": "9dab223a-bc19-431d-a318-eb519534724a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "802c0cc5-040d-43e7-b55b-43e99550f10a"
        },
        "item": {
          "id": "423dad2d-8596-45ff-90b5-d66035c554b5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9dca1669-1484-4437-8373-0c5cb13200a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6777a86d-0b57-4b80-a60c-e70e2ec16c09",
        "cursor": {
          "ref": "56c244b4-2b5a-4371-ac2e-9383d94bcd45",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "53cacec4-d513-4491-8e3d-d239a2b94886"
        },
        "item": {
          "id": "6777a86d-0b57-4b80-a60c-e70e2ec16c09",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2e77f481-5bc4-46c9-858e-bd4758c60602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca546d5-2d97-494b-a7a8-2be0bbf04291",
        "cursor": {
          "ref": "954fa04c-ddd9-4d32-9519-0b6312d46c40",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6898962c-540c-47f4-94cf-113ee6a58fdf"
        },
        "item": {
          "id": "5ca546d5-2d97-494b-a7a8-2be0bbf04291",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f96fc082-cd68-4ba1-aecf-65509a28ac56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588d3633-dfe7-472a-95a9-2105ab96a9a5",
        "cursor": {
          "ref": "bb8e08fa-a7b1-486f-a867-b5a95d7c984d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d89ff31e-b8d8-4305-a547-3df36782e419"
        },
        "item": {
          "id": "588d3633-dfe7-472a-95a9-2105ab96a9a5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a5dc504a-06c8-4418-87d5-c133c39d4bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670bd4a0-45e2-4934-8541-58dca398cd79",
        "cursor": {
          "ref": "041e0819-611d-45a7-8c8b-96f57d20405c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e79c9bc-d43b-4af2-8986-7c294772529c"
        },
        "item": {
          "id": "670bd4a0-45e2-4934-8541-58dca398cd79",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "985397db-d0c6-4cd0-bb75-168c651fd5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b13ba8-2b42-448d-9c8c-1ebb138fcd32",
        "cursor": {
          "ref": "3c889419-76ad-4221-84e9-040d617559a8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6460f744-a435-4636-9703-7f41f6091031"
        },
        "item": {
          "id": "c5b13ba8-2b42-448d-9c8c-1ebb138fcd32",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bef1ac29-3336-4622-89ef-55ecffaff6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b0c24d-2593-48d4-b63e-f34e3939f786",
        "cursor": {
          "ref": "8e8b3374-85cd-4718-b0b1-4a52d9cc6e94",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2a56ef7c-2c71-4ac2-a308-6d26d50baa0e"
        },
        "item": {
          "id": "53b0c24d-2593-48d4-b63e-f34e3939f786",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0034d1fb-34ff-4ba6-aef5-543954ee232b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eced98c-a187-4d28-a074-118d800f8941",
        "cursor": {
          "ref": "45a97529-330a-40d7-8f9c-1cca0b77096a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4774d61b-ce00-468b-8f26-d33fa6ff20ea"
        },
        "item": {
          "id": "1eced98c-a187-4d28-a074-118d800f8941",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7d45145-08be-4fd2-b4f6-0fe107536771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011d8667-1b40-4538-af73-a3eeccc46b48",
        "cursor": {
          "ref": "e64fe626-329c-4a0a-afd8-0511c1429865",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1bdf1dd3-c7e5-488b-9397-8c181f81e0a0"
        },
        "item": {
          "id": "011d8667-1b40-4538-af73-a3eeccc46b48",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5e3ce66e-b351-44ee-8ec4-fa3a983e4746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60bd3c1-59f7-40a5-8ced-52e59c5da9d7",
        "cursor": {
          "ref": "0c68dd54-b968-4e21-a01e-d601aa1faad7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aa24517e-fc59-469e-b44a-3d375abeae5b"
        },
        "item": {
          "id": "c60bd3c1-59f7-40a5-8ced-52e59c5da9d7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1fd84c0e-7f7b-4411-9a74-dc175b5052a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb41eb-757e-4020-847c-d3a431602997",
        "cursor": {
          "ref": "a5fd6532-c5f3-458c-b217-c00c875b9465",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "060b202f-96ac-4a79-a7fd-b3ba8dac319b"
        },
        "item": {
          "id": "2ebb41eb-757e-4020-847c-d3a431602997",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bd172504-0d3e-47b2-a977-1ad27d944924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37ec282-33dc-4798-844b-6b27d9e79f4e",
        "cursor": {
          "ref": "f9076ee6-d898-465e-9e71-536f959dbfb2",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9ce7527d-fe8e-4110-98a3-1cda8341cceb"
        },
        "item": {
          "id": "b37ec282-33dc-4798-844b-6b27d9e79f4e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04fa58cc-9b98-4b10-9c4f-233ccfade191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef31e62b-7a8c-4e08-985c-45c7e5f8c96d",
        "cursor": {
          "ref": "faebd04a-166a-492c-b0a3-fc5a9cef945b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "01a1e807-8261-4776-b014-5c4443ff9262"
        },
        "item": {
          "id": "ef31e62b-7a8c-4e08-985c-45c7e5f8c96d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "470bd4af-3c63-47db-8112-e750d8ee2f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f86aa7f-5d66-4d89-b247-b7879094acbb",
        "cursor": {
          "ref": "d1fce25e-7c26-4fc7-87e9-aa93eb891944",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ca3ca23-fac3-4cf9-aedc-6374b9c31280"
        },
        "item": {
          "id": "7f86aa7f-5d66-4d89-b247-b7879094acbb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1d303ea0-5901-4321-9e96-c22b093c9d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61f6d38-03b1-48ad-a7c1-f47dbedd4b05",
        "cursor": {
          "ref": "908395ce-16bb-4b78-bcd3-60e0ae926aba",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a180d658-9fba-4f01-8daa-0df837fcaf68"
        },
        "item": {
          "id": "a61f6d38-03b1-48ad-a7c1-f47dbedd4b05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f9404a6-6897-449e-a4e8-16ef47883d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e7ebd6-b396-4375-8a60-43923a6d1ab6",
        "cursor": {
          "ref": "4e5eda84-3c47-41d8-8350-c93bb2297db4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e75e1c60-19ce-4462-aab5-6cbf41b6a2be"
        },
        "item": {
          "id": "46e7ebd6-b396-4375-8a60-43923a6d1ab6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "24e0f069-22ed-4d8f-b6b2-f686d34ed52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f39cd-cd13-4b1c-94d0-47cdf004984f",
        "cursor": {
          "ref": "7687c4b1-6050-4b50-832b-b3fecef54095",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9e44a0bf-24ad-408d-8d1f-a756188904bf"
        },
        "item": {
          "id": "b74f39cd-cd13-4b1c-94d0-47cdf004984f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "94746eb8-d32d-48db-b4b3-425c1999cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d34a39-0088-4816-a199-2b6ad2afe5dd",
        "cursor": {
          "ref": "eef1a85e-e42b-4fec-82c4-e61544a7089f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5c5333c9-307d-49c2-91d8-e66dd9fccd1b"
        },
        "item": {
          "id": "75d34a39-0088-4816-a199-2b6ad2afe5dd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b6d2c98c-c9e1-457d-9ea6-de64ff99cc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa9b7a-2195-4547-ae17-cd3dfe32f122",
        "cursor": {
          "ref": "060e0765-b2e1-43e8-85c6-dcfceec3e0b1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2b2ac8c1-a656-4e09-b1a3-c5c255367092"
        },
        "item": {
          "id": "60aa9b7a-2195-4547-ae17-cd3dfe32f122",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8b87e212-9dcb-4965-95e3-d92b4ce291f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60764aed-b9d6-4617-995c-3a99e048b150",
        "cursor": {
          "ref": "165cc88a-ec1c-4a53-a4bc-fd02a9036f58",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12ceb94b-6c75-49c7-bd56-503d4bba187d"
        },
        "item": {
          "id": "60764aed-b9d6-4617-995c-3a99e048b150",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "03a78a3f-452c-4ad7-bcda-92e1c16ebde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a7180a-7191-4934-b597-a27294036a52",
        "cursor": {
          "ref": "7a5fc914-d517-4f1b-adfa-241370c5f92c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0e039397-8707-426d-a640-f0cac6296d69"
        },
        "item": {
          "id": "f2a7180a-7191-4934-b597-a27294036a52",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8acb76b0-3615-49d9-ad33-65bfb321cc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb9754a-466e-46c7-b85e-bcd6e7cf08a2",
        "cursor": {
          "ref": "a64906fb-4368-4e4f-8c25-c8476a09d72b",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8f40035d-c6c3-4be6-9e81-63b3517127e7"
        },
        "item": {
          "id": "2eb9754a-466e-46c7-b85e-bcd6e7cf08a2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "94355c36-0019-45bb-95d2-ae2584722401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f68ae0-7901-438e-92f7-047d26c803c7",
        "cursor": {
          "ref": "28383989-786c-4ea6-9c21-7dd02d36ea7a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e9d379bf-0186-41f3-b5a5-e1ddcb205c92"
        },
        "item": {
          "id": "38f68ae0-7901-438e-92f7-047d26c803c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "28b95320-2912-4d51-bc96-17b8b7969293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1054404-afa8-428e-9b89-7f67b359a8c2",
        "cursor": {
          "ref": "81432938-a36a-43e4-b486-8c250534fc1d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1d38acd0-0a0d-48c0-b73f-6ee7d300d120"
        },
        "item": {
          "id": "e1054404-afa8-428e-9b89-7f67b359a8c2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bde4ebc4-3383-48ee-aa71-de1739c595ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576fea16-7e2e-4594-b567-db911f9d2f80",
        "cursor": {
          "ref": "ce4b3c11-8b55-49cd-abb0-e7b4076db790",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5181e6f2-8d54-45cf-8db0-d73f500cc257"
        },
        "item": {
          "id": "576fea16-7e2e-4594-b567-db911f9d2f80",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99a80087-419c-4e5e-8716-e59b4ebca6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d83db0-de35-4445-bbdb-2ec44eb676fe",
        "cursor": {
          "ref": "39f619b7-32e4-4dd2-a1d5-2d4475a549f0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2c65b010-127b-4849-bee4-fa96fda5e623"
        },
        "item": {
          "id": "d8d83db0-de35-4445-bbdb-2ec44eb676fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cb707624-c540-4a03-bf97-41a33915f1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6123e7-2a46-455c-a9db-36a0960843c6",
        "cursor": {
          "ref": "2c072cb5-5566-4d89-82e1-354f6e5543de",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "853de62d-575c-4055-8134-b4fded74914d"
        },
        "item": {
          "id": "7c6123e7-2a46-455c-a9db-36a0960843c6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8ea5c67-c991-4182-98d2-ad0caf216f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc21efa-e9a2-4c1f-bedd-d89fc00a553c",
        "cursor": {
          "ref": "f844a052-b335-4d89-9481-dec6a80e5b00",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9a5292d1-f43f-4417-a132-73ce88f2153a"
        },
        "item": {
          "id": "8fc21efa-e9a2-4c1f-bedd-d89fc00a553c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fad98cdd-ffee-4d4b-a984-bf8d01ca1ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05668a2f-7c32-42a2-b603-32f898142ed8",
        "cursor": {
          "ref": "018ef56c-139d-4086-96d6-6fdc11b477ba",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5e20ec83-f3f4-4c93-b53c-65fad7b5f617"
        },
        "item": {
          "id": "05668a2f-7c32-42a2-b603-32f898142ed8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e7b4600a-8438-4326-ae9e-ed0c69aa36fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905d2552-788a-4f3a-9a4c-676c996c892e",
        "cursor": {
          "ref": "3f7df87f-9d6d-411d-b853-ce90f85d5c17",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a72c9188-c814-463b-a012-9e4acfad88f6"
        },
        "item": {
          "id": "905d2552-788a-4f3a-9a4c-676c996c892e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a6e74624-b053-4704-98cf-0b21a957549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f966b2c-451a-4c4b-b4be-ce4ca3c26d14",
        "cursor": {
          "ref": "d9550dd7-57b7-4922-8414-10250a926c9b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c686e387-d5d4-43bd-914e-8ae2117b3896"
        },
        "item": {
          "id": "8f966b2c-451a-4c4b-b4be-ce4ca3c26d14",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c07b7a78-baa7-42d1-8be6-fddbc99bcd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e30573-5d91-4db2-a59d-89d1f7d49afe",
        "cursor": {
          "ref": "60835cf9-aad4-43c0-8b4a-b1680382d808",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "48047da4-c665-467c-ac14-3ac5c277357c"
        },
        "item": {
          "id": "23e30573-5d91-4db2-a59d-89d1f7d49afe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "34e5d3b0-602e-4bc9-8774-9249368784bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d36a22-197d-4ca5-8518-333df74ea76c",
        "cursor": {
          "ref": "af989381-f691-40d4-8dc0-8822e599b57d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "02885dde-c4db-4fee-af46-635cbc59a295"
        },
        "item": {
          "id": "b2d36a22-197d-4ca5-8518-333df74ea76c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2a12579b-15c3-477c-97c1-e530ba6ff29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a612689c-2c8b-459c-9f40-9235e082753e",
        "cursor": {
          "ref": "a1281250-2716-40da-8676-47dcbd9837f2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0454acf8-941c-482c-bde3-369abf318b68"
        },
        "item": {
          "id": "a612689c-2c8b-459c-9f40-9235e082753e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "02710c2e-02e1-4cb7-b599-ab7a276cd9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcf193b-3da0-4f19-932e-f1ede38013d0",
        "cursor": {
          "ref": "f472fe7b-40b6-4bac-abac-dc5e69bce85d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "50f6fc2a-7fe8-4a54-a8bf-9807c2a63ed9"
        },
        "item": {
          "id": "fdcf193b-3da0-4f19-932e-f1ede38013d0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "046357c8-13e2-4e96-9801-835391772ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9842621b-8b81-4c3c-837c-b5df0eb4d75e",
        "cursor": {
          "ref": "ce175182-397c-402d-97b6-957a2f3944ea",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "211c5e81-bbe9-4ec8-9915-a536c9577bbe"
        },
        "item": {
          "id": "9842621b-8b81-4c3c-837c-b5df0eb4d75e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0c767925-527b-4d14-8519-8219e64eca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabbcead-2dd9-4a0f-a4d2-c5b79a723db6",
        "cursor": {
          "ref": "70679a47-921c-4b57-80a5-ffc5d50d5598",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a39c5371-afb6-4110-ae8f-a93b1a4af118"
        },
        "item": {
          "id": "fabbcead-2dd9-4a0f-a4d2-c5b79a723db6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "09011fa1-a809-4811-8500-f2184982e958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7adea1-5d30-4080-bd0a-df349f1df9f4",
        "cursor": {
          "ref": "6cf058a9-6fee-4dcd-8c1c-c3f1ebec00fa",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bade6091-c1ca-47ed-8eb0-48d60c82a9c9"
        },
        "item": {
          "id": "3f7adea1-5d30-4080-bd0a-df349f1df9f4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a3c5ce9-0a16-44bf-b15c-a899ab0cbad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad13fc-1bf1-4fd6-8cc4-3a270f913ed8",
        "cursor": {
          "ref": "f51cf727-175d-4687-9bdd-0cb082dc6ac9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "87ef12b3-cfa8-4cd7-907a-efa149c45a20"
        },
        "item": {
          "id": "86ad13fc-1bf1-4fd6-8cc4-3a270f913ed8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b2af23e6-396d-4837-9453-b0ef24de58cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26f028b-26e4-4372-8a8f-6c884084e290",
        "cursor": {
          "ref": "96911594-c7d4-49d0-b546-33a873e34b43",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2b6f2895-2dc8-4576-a1de-41e4c1770bd6"
        },
        "item": {
          "id": "e26f028b-26e4-4372-8a8f-6c884084e290",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d8790461-39f3-45c7-928f-6c6e7ceb28c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4291ad-389f-4363-a4fd-be385c6da8de",
        "cursor": {
          "ref": "7c090a7b-3b63-4bf6-8736-2d159022fff8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4b748368-c1f7-4422-a356-c111f3865155"
        },
        "item": {
          "id": "ad4291ad-389f-4363-a4fd-be385c6da8de",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fdead473-ee96-409a-844e-7ae5b67a6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a8df4-74c2-4a90-bbe4-5cc1f672573b",
        "cursor": {
          "ref": "0996defd-e492-4f98-8644-88af448c5799",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "be327f46-05ed-4ff2-8094-c351f22532e6"
        },
        "item": {
          "id": "ba0a8df4-74c2-4a90-bbe4-5cc1f672573b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "343b3d9b-afa5-43c7-a2f5-18fa84f6c7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b112a91f-0360-4829-8006-1a0e2d8da593",
        "cursor": {
          "ref": "52acade6-61da-4b6a-b66b-86e3ea4fbac8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3f638204-c86c-4fbf-a0e8-56d8933b8ae1"
        },
        "item": {
          "id": "b112a91f-0360-4829-8006-1a0e2d8da593",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "668107ed-8d43-401c-87c9-9971626740b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5079671b-051d-4644-891e-51c2399222ea",
        "cursor": {
          "ref": "3b643c6a-78a2-4c3d-a19c-0df70874e282",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a2e7b028-2243-4903-92be-1185e009c1d4"
        },
        "item": {
          "id": "5079671b-051d-4644-891e-51c2399222ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a8c9cf2-ce31-4a2d-9041-200223a6c1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b951531-66d7-4169-aa0d-9321ee2490fe",
        "cursor": {
          "ref": "76a5134f-d8c2-40ee-8709-57dbe5965824",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "77b25dcf-be05-441e-a1cd-e5e272e1e0cc"
        },
        "item": {
          "id": "3b951531-66d7-4169-aa0d-9321ee2490fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e3c7d4b-af88-4e6f-b33a-de322e2a0b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f4a0ff-4e41-4e73-9f3a-b8ebf0b459a3",
        "cursor": {
          "ref": "c9396f19-d980-48c5-ad36-a1f7a1bc672a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e4938a8a-979f-435a-8b33-2a471320ddb7"
        },
        "item": {
          "id": "70f4a0ff-4e41-4e73-9f3a-b8ebf0b459a3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "27114333-09ee-4181-ac34-7b172ef38907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5b06d4-c7e9-475c-9380-2cc35019cfd6",
        "cursor": {
          "ref": "509b6a60-a193-462b-82f9-298f9b18716d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0c7ffae3-48d6-475c-b5b4-41dc8510e681"
        },
        "item": {
          "id": "2f5b06d4-c7e9-475c-9380-2cc35019cfd6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "df6e8b7b-e1c8-45f2-9e7a-456b55cb03d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55428880-8afd-4fef-be42-dd0bfe8283c2",
        "cursor": {
          "ref": "7aa81837-1f90-4a41-977f-9ac4425b7b91",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "68ddb35c-1c49-40ae-9c97-9fc8941c5513"
        },
        "item": {
          "id": "55428880-8afd-4fef-be42-dd0bfe8283c2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "14cf541a-cf68-4ed1-9393-df899276f1e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab54ba6e-c6ac-438a-9884-b5e066bfe0be",
        "cursor": {
          "ref": "2b2b5980-efde-4d0c-a31a-5e9f13296869",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "185c3a25-1952-4560-96bd-68c4c09f803c"
        },
        "item": {
          "id": "ab54ba6e-c6ac-438a-9884-b5e066bfe0be",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "853373f2-7128-4344-9d2a-edb36d561104",
          "status": "OK",
          "code": 200,
          "responseTime": 547,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c049067b-c99e-457d-bf69-e42ff2563236",
        "cursor": {
          "ref": "0fb789e5-6052-4513-8486-68669e4bd44d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "13ad6162-e748-4c8a-b8e8-4777ecb2ffa4"
        },
        "item": {
          "id": "c049067b-c99e-457d-bf69-e42ff2563236",
          "name": "credentials_verify"
        },
        "response": {
          "id": "76493b7d-555d-4a48-b299-3e51be32d29b",
          "status": "OK",
          "code": 200,
          "responseTime": 1733,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "658d0f80-97db-4245-9a69-57cf4fcd2639",
        "cursor": {
          "ref": "c4631429-ec84-4365-bf55-4bca91c540eb",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1b3abf99-ef13-4c1d-a7a8-cc51216518fd"
        },
        "item": {
          "id": "658d0f80-97db-4245-9a69-57cf4fcd2639",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a4e00df-9a73-4326-99b8-a4d29f86f31d",
          "status": "OK",
          "code": 200,
          "responseTime": 1628,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c681a84-806f-440b-b9e2-c4bf33bbaf3a",
        "cursor": {
          "ref": "f61dad95-32dc-4026-b578-3e3440e83265",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "56ecee98-1377-4f72-895b-8292c71c0baa"
        },
        "item": {
          "id": "9c681a84-806f-440b-b9e2-c4bf33bbaf3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "995e9ecb-61c6-4b26-8c55-2dbc628dc4e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c681a84-806f-440b-b9e2-c4bf33bbaf3a",
        "cursor": {
          "ref": "f61dad95-32dc-4026-b578-3e3440e83265",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "56ecee98-1377-4f72-895b-8292c71c0baa"
        },
        "item": {
          "id": "9c681a84-806f-440b-b9e2-c4bf33bbaf3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "995e9ecb-61c6-4b26-8c55-2dbc628dc4e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2490db3c-3780-4638-97f4-910f4adc039b",
        "cursor": {
          "ref": "3e894050-b678-4bfe-88b7-1d32e67804ac",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5d818e7d-e27a-49d9-8322-24f89ff736b7"
        },
        "item": {
          "id": "2490db3c-3780-4638-97f4-910f4adc039b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d788e320-57b6-4c5d-ae89-4f1439f6d34e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d30361-761d-41df-8f66-e8ede6037570",
        "cursor": {
          "ref": "9135a7a2-edc8-45dd-92c4-e2c3d05d9e2e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8a174570-b882-4939-956e-377a2407706c"
        },
        "item": {
          "id": "a1d30361-761d-41df-8f66-e8ede6037570",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eef6ad3e-bbee-4e1b-aa4e-49c7675f8455",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}