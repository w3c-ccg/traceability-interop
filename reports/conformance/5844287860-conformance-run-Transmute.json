{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "da7f2fb6-1f82-4955-9de8-9a93b0d95b46",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d622d4a-0ef5-47fa-8828-6ec61a119216",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7841691-b166-46d1-8b13-43102857258d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "37e92887-3e03-4ba5-b0be-177073202d1a"
                }
              }
            ]
          },
          {
            "id": "2e303353-1ca9-49f3-b5d0-03479550de81",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2183b36b-9316-47db-a979-31248ee2813a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31b56a0c-d7c2-47d9-8e35-47c08a6a03c1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bb6b3bd3-0b43-4c04-b885-0a53abb65f10",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "443a2108-5506-4692-97c3-5d52e1411ff5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd8bf394-4c0f-4f72-be91-a6fd9f42f42e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17c0a79f-8f8a-4e6f-82ee-a7b2f6b573d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ab116a0-f848-4100-a94b-efd4cb86883f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de213d81-763b-4dee-a7fb-2da334bdb139",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "490de11c-5e01-4f13-89c6-9fdc897b0273"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec0518a3-2685-451a-ba86-279023eca67f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "799c9466-9d29-441c-b6bc-233f7774873f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4f0cf7c-af66-40d3-80d3-a15868f789ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "521170f8-4492-4d69-8b45-62f1d26ac223"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a911dd4a-5fca-41dc-8593-943d12bc3ad0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3f5659e-6ff3-4aa2-9662-e4964590a9ad"
            }
          }
        ]
      },
      {
        "id": "2af030c9-5914-4435-a230-d5bf227a2bf8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a967b73e-1944-4296-90ab-7e334d241c55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "191c4b3d-04f6-4fca-8df1-f8217b379ff1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76aa9c45-1f39-431e-8ba3-04f0d065ea9c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02fe094-7b3d-4780-a330-df00767d1318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4be7f135-c00d-4b70-b127-408f835f896f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb06e477-3d86-4d3c-9e49-b800dfe98302",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545537f-c8ab-4752-8b95-6f6718b89266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9591c06d-e785-4390-9d8c-2cc3211681b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0e1354-8be5-48f9-9ba4-feed303fd654",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318db12-fc91-4fbf-942d-ca59c2d14aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af2996e9-2ef7-4166-91d7-2996ea1ebc08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c7d75d3-1b6e-4db3-9d56-861b0b78b6f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "019ed001-107a-4ada-a697-c3097657b48a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0039bc62-9f04-4624-ae7e-51e19cfe1255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5b251ed-3a2a-428f-9a50-4547bc29736d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563a016f-a05a-48f6-b74a-896c9f059dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687aa8ac-7419-4fb8-bb19-cf3f98452597"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a520d920-beaa-44b5-95cb-86f969f7c26d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c745d7a-c3f6-428f-b21b-90f93b89ae3f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d4646e-2f70-4dbb-be64-28217ad0017f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3616d755-46c9-4456-b108-bf28d2834620"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3205c6fa-70e1-4a27-97f7-dff288a1ab3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "58fc0824-20b3-4d21-a9f0-4704cb923c26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f61fad82-b991-49c6-b303-152bfeb47b65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e302b9c3-4ad8-4ef6-a13b-0aef534f3085"
            }
          }
        ]
      },
      {
        "id": "beca7689-c63b-4898-9925-1efa6226fa87",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5535cd1c-ffec-45b9-9990-453838d3dede",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a57c88c-454c-4513-8e5f-2e044b933f9f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "52cf40f6-2eea-4099-baa0-1abf6ba62b10",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f338c8e-48ae-46bd-bf39-2635c5bc8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bc4bea-4878-451c-8a56-5309d0782d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d34f431-abf5-4626-80d7-f87ac52e0d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3adefee-d5cc-4da9-a7b6-9128f46eb077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee89814-95ef-4f7f-a886-519e4c6e7a33",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50402834-065a-4372-8015-3c0d68ecb123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffcf860-f18e-4009-b56f-4795b3600f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f7e079-6dd3-4519-bf25-b69ff86eb536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3faaa1d2-96b1-4acb-bfe3-fdb599b98495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157cc548-0fb9-416a-98c4-ae0c423cbfc3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8b10af-e327-4eb3-ae2f-ada41f2519c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5687fa7-6f52-42ab-9780-5e56c602b2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e10972-08fe-4142-86bf-befc3c95762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c152b43-0cd4-40bc-8a55-e1a7a00f768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce0778-f89c-4306-8428-c12c86182d8e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04a99f6-e7e6-476d-982f-fa41bdf0ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea34471-9fd0-4cb7-a224-5458ea175d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce2b753-b8e5-4dee-ae12-35b7580490c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71112c37-e3e0-4c65-b887-251bf373c4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8655e6b0-d60d-4768-9be8-ca1efe6a745b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198123e6-6140-44a8-b93c-7e27bd61479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca54bfc7-a239-4714-b696-5abe293691c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95975b7-54d1-4168-aeeb-ea0c4c653277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ca5b77-6177-4578-8b39-22e61619a128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ae30ab-5b06-49cb-a727-d719e83c9447",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a2e063-758d-4770-90f0-93a2519576a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c562ebce-8d70-4a07-9a50-66ad7692a36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73b4e89-6d18-44e4-9891-7b480c4c3bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b26af68-eb83-4136-add1-e555057df518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad137ae-fd13-4cc6-b460-34bbad4d4d6f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c33a83f-2fb4-4778-9c30-7aa7e3005e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea91ed8-16ac-412c-9622-1465fa4e375e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd755706-539d-4028-afb9-a3241bf69c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6df35e5-90b0-4af2-802b-1dd2cc1d4eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648b7ed-0b0c-4e52-8ff8-21c6cf92233a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1616e38-0a85-45fb-b24d-dd0ed2bc73db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a085806b-b197-48b5-bf52-1f36b5c35fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c36db81-9507-434b-b31c-a0dfa96bd845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1167dd9-31f5-4f52-b74b-df67c292f676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3900ecd-9b20-43bc-93f7-8adf9d0d6d73",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a4edd0-7210-4354-a2c7-d0ac851b10b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a78912a-0bff-4d06-83dd-2c52a834e8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7243e-d998-4126-bdf7-8b08dd3ee34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d192c80-76dd-4f3e-95d8-e0777d24585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa7ab32-f06f-41f3-a335-60c0308f719f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d00a643-eda6-4308-8935-d823819df618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8963bd0-631f-486a-ba96-41b298b69333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81649b4a-7a6f-4336-ba1c-7896bc07876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17ec3124-3722-47e6-a5fd-d5e9af3a05c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e352bfad-d8be-4e4b-bbdb-4db66d88aab6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd9aadc-fd3c-462d-83e2-53f9fd2687f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5ba2eb-ec63-490d-aebb-ab93ff287a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e585609-c528-4601-a8a7-e759417f6322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d2504b-a6c1-4e5f-9aec-705d9a4cf512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bfa951-6381-4753-a8c5-365572bbb625",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dee91c-bb9a-4d13-bc84-9048df9c537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4810aaa-4eff-4b5a-b500-e262dc0a595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d73b1a4-acb4-43c9-b114-0fc11950fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0182874b-a64e-4373-aad9-f3c7a6ad61b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b877e3af-035c-402d-8792-700468a518ca",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3842520-7b39-4c4d-a079-36b41e4ec1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdf3de2-f565-4aec-9798-ca8694e5ed4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18ec58e-175d-4026-9740-b235d9eaf82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9d00100-cc3b-4eca-bb9a-c9b82213c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a34efb0-e694-4cee-8d71-c68d744ac61f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352dbd13-4c4d-456c-8f2c-54106dab330d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f0631a-5455-44a8-89fc-4af3b4b8a3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b879b46-072f-4955-ac38-41a74a5d3b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd551243-3eac-41aa-b0a0-5883dcac50e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d39169-9f8e-4e25-a521-5e69bad219e6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e927fcd2-78e3-48fd-9d13-9378d78ba3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e90b85a-7626-434d-b329-3f249175f4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c518c-61d9-48ae-b3b1-ff151e57b2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "460c38d3-f75c-4441-a67b-ebf554f6cf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c723e86-1522-4693-acdc-9065a3ae7ff9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f534d5-e89d-47dd-89bb-5b6672652151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ffac0a-3d92-4695-ac0b-ad2d611ed804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae882fd-dc2a-472c-9fb8-325ee192d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4adea712-c446-47a8-9c58-d0023613254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfcf67-381e-4b7a-a6a2-439514df2bc6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8273f690-a3bd-4574-8cf5-8d1848e006f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec41cbf1-9b3e-4b39-92f3-4ef59a72764f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63d1088-4547-4df4-aea4-32541542c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0beaa9d-4842-476d-a9d8-75480249390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d8309b-e643-4806-b4ac-35cce987561a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38d0105-9853-4035-b3a8-6a8615861815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fadf932-d22d-48df-a312-e8188c31fecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac2f6be-9c55-47a8-a1fd-ab89c10f472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d485eea5-b75a-4ef7-827c-a940d1f6f8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4704a4-86a9-4d30-b3cd-9ecc5c84fe60",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80583ce-cd89-48c3-8def-b86873366439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f16180d-eb67-42d7-a63f-2a7298b0106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5865abe9-f299-49ec-a74b-cabbc552fc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4511e0c1-aacb-41ff-bc14-7ce87572276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf3c62a-d330-4dec-ae05-ab512cefd585",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1867b946-7f49-4b4f-808c-445f93a6d014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee32f648-5272-45b4-9fab-36886bc65419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304e14ca-9382-4842-8c86-a236ea3d2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6fcdde-1f39-4ddf-aebc-a41b7a4192e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925be31f-0c29-40d2-83e3-6f0114c6fa0a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c559a93a-2e72-4d94-ba35-e381578de560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f820b0f-d554-42f4-a4ce-fc856dff6495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9c8bb5-3043-475f-b029-3c1f8b6ba34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29937b4a-8bd6-4d4d-b67c-7c73ec4a18c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeca938-aaa9-46f0-b7b4-19f869181537",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc6ef1-956c-49f3-87c6-45ac5c40ca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0689eac1-2704-48f6-ae4e-e5036358a043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff158c96-d8d5-4ee5-aa3d-2b829355d822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42acf011-b076-406d-b35f-be40336f2d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3469ee8-cce8-4e7f-850b-bbb3cc26ec58",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f271e9-0746-4400-a938-22cd3656c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b50712-cb85-4098-a2e7-11cb108d62fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc851de-db56-48da-b681-c11969a3f330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f10a17-575b-428e-b3c9-f55434951ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db744171-0cbc-41e1-ba4b-ab007e8727ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff4331-2a2b-44ea-a389-0d76f9c88fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50e2c48-88aa-4be1-bea9-73526eb1c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037ccfd4-334c-49d1-a004-a79040039fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f07286-8dbf-46d5-b4ed-6ec1d47e3ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf3668-6e97-4170-91c7-f6b40412566d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b79cb2-faad-433c-b5cb-0d6aa1bd81b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0143dc-62af-4c32-a3b1-c508133fe87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71fc496-a915-4abe-ad1f-18da477b165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e475f35-ea49-4a94-a349-ee24ed115db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb2dad4-9234-460e-8e8e-54c275b5b093",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccae040a-69e9-4de6-9504-3e5c3037c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc8e36a-c043-4db3-b562-7ee604ea7366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb691d38-88d1-4eec-a45a-e6898e46eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "220413e1-dc58-426f-aca0-3a56640dfec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db658ee1-395e-4f8b-ab6a-0c4c08c26820",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed07c8d-44bc-4dd3-9882-ae9538a62598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373c5cc3-d2c9-40d0-b6ee-3fe6eb8b183a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb0e1b3-4df8-4d59-8cf6-5f5b47bc846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12e995d-1225-4c0f-b757-96145b3f1e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f74f183-6033-4e38-aae3-68f35addc823",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c553ed-82df-439e-9125-cd8f1c323026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d1a6a5-7bda-4400-92ab-970b5c11cae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f282765-b11f-46b1-885e-251264128127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3e4c2f-72e3-4e45-9c9d-f6d10bb2607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a44dc83-2a4e-4325-98bc-ae5ed8ffbb1e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb40ee-72ae-495e-8270-cef514c32d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657dfb1a-4d46-4883-b760-67617f19f810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06f8863-58db-4dea-9519-105995426178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3bbd98-e79a-40ad-86ed-0f7cc5c009b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4ac4be-cfec-4aa7-8d9d-28498ebaa357",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e4a9b4-10ce-437d-b9b9-92e371b794c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f7b764-26f9-46e4-8ad4-d650dc408717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4078ae-d6ad-471d-8d0f-9478a049be17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86812c9-fb01-4012-9206-c014a1f004f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584da63b-2d6e-4a5c-b79b-bd88a5d18fe1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7213b77-de2e-4ee0-9120-a8f3177406ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec672fac-a8eb-4f59-92ac-bbcb9ecd29a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88686a90-3c25-4b85-8e94-2ecefcdf28fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df383daa-8a04-4898-90e0-0d61a51b2f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d9fd5b-513a-469d-81d2-61a206a6e088",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40008aa4-9254-4414-8604-1db2bf414e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0561a2-0aae-4291-9e54-0ad61c6297b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de98a3c4-514e-4d76-860f-5792e691a122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9ac8d7-08df-44a1-b7ad-2a970a75f3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055cac57-8905-45b0-bbda-a811cf70b56c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d2dc78-71c9-4960-8093-75442c62ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fe4012-328b-4ae1-b86b-5ecea91b3233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be1fd64-e9df-4b23-8d94-cf8f4a493576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8b3524-1338-4369-946a-d9de0695ca46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a594f9-fa23-4548-a627-cb8616fe5c33",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffda8e51-a8b4-4fb6-82fc-ee3640df01cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f36be3-4bb1-4573-a588-0be3677f8f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b2a65-8393-41f6-abfa-fd972a09fef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa1088f-64f6-4ef5-9e0d-632192233e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97889362-f42e-4b1f-ae1c-008bded4d3e5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1cb9e2-e2ee-42b0-83af-ee1e5f891ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8569a30-73b3-4691-82e0-0379c8f7dcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13937213-38f2-4a1f-a30a-9577a6bb2231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4109a777-7095-4808-83a7-6a7fe924d613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3af86e-c392-41dc-9753-d88e424469dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c0467c-faad-4a31-adf9-e359cc264da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15134e2d-780c-4ec5-95cd-d5d289647754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c6772-e585-4933-b77d-b0a73b04270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11037690-a4c4-46d4-a7d4-e72a3e8fb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f17c1-64e8-4abd-9d97-3fd47df41267",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a1e4ee-c6ac-402f-adb2-1895d1bbc3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada3a8e5-c4bb-45dc-9fd7-97007c747b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0d7900-d992-4e1e-b7d0-308f18148842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d77aa6-ec2d-421c-a0b7-17499ec53451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847113ab-b70c-41a6-94fe-2652e16dfc19",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf596cfb-c01d-4008-b814-9b4742406e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc8abad-b270-4e83-a601-a12cef0f4e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f045c3fd-9e8d-4093-bbaf-d60f936e12ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e45a813-e1bc-4fc1-b0d9-3c336160c567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2791db5-abf0-4c4e-917d-d2fb3d52170e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b497d86-2c04-460a-8503-9d6e8603c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca80ebb0-af3f-410e-b8c8-ae3dfec72dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a24df7-6fff-4e0a-8a32-77a4437ec0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df7d7284-a08e-4fbc-94c7-2fdeb485dca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fcdbb5-d66e-4a8b-aeac-04745b297f0e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1eca0d-d00e-40b0-967d-879388466615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec41345b-a7f5-4d8a-a7c7-97ec660868d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b5d436-08fd-438d-9194-90721a0080be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7835c77-9828-4ac1-a321-aa04ffd1dbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4923a36-5557-4462-ab0b-a93e4c405fec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b322a5-93e3-467f-813b-17ede84d0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3974e2d0-429b-4192-805a-5cd4caf1bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228844fe-3ca0-43c2-b0e2-388e260f7b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3152e8af-df24-4d50-ad99-bcd664330b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db346cc0-307f-46ba-ab8e-f2e6d0304ed9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03112d64-90df-4d39-b3b5-86c636b046c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab362b32-e8de-4d8f-867f-1e817e1c6dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507c0bfe-8439-47e7-8c1c-376f6e11890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6a9720-6d7c-4440-a41a-ecabdad8c113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad51b60-9d2c-4388-854d-5d0788799f26",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ffe1d0-c6ad-4614-982e-21dbf1f3f24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed361dc8-ec7d-4822-b6a9-eef9d9070700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e6471-1393-4588-bb06-706f822d37c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e25c7a1-763d-47cf-803e-d78174184f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a84bca-18a5-405b-ab62-2ab2e8fc11a5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712811d7-356a-4afb-af36-4ec4bb10f615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9959024-a8e3-4d1e-b1ae-bc2b506b8444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402dce51-758c-4908-af71-10586df07280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a14b9e2-2be7-4f6f-a43a-e60e39187f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac48336-e903-4568-b176-f3331e273d03",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f68e5-1897-456e-a2ce-0897b0011989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da69812f-8859-4e8a-97de-b10e9fae8f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15106ee9-4c63-45a7-8127-41b43447042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae53cb2-f670-4609-a714-e4bbfc14286f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a0f115-f176-4929-bc5f-797e3d1fd4a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ca05d6-7914-4adf-92a3-370e74d0e7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1c0b28-def3-4f14-ba0b-9d6c7c8895a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcc731c-cc93-4d17-806f-8487f93b465c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac7b12-dc4c-4843-8715-071399b20c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5960d3f9-254d-4a7f-a694-0f60afef0303",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ff0ce5-853b-42f9-9c54-1a2828f4013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12160e1d-9e60-42d8-aa8e-e8ea3c399f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25cb37f-e20e-44e3-9279-a48e727210a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24630b07-5fb5-4786-8673-949389efa236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ce82ec-e073-421b-b21f-68b7a1a30dd1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ab5cf6-6be5-406f-9573-760aa981577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544a26af-c8a0-4aab-889b-425286184c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28ddbf-b651-4ba1-bff3-9255ab98d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9d9e1e-a457-464f-9e47-361d6e2ad74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c12b8e0-51a6-499e-b2e0-6732775259c4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fdcc48-7db3-47e3-b71a-a13bad4981f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8e995d-e8b0-41b5-a4d2-6bbb11ce5570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c61b76-0522-42e6-88ac-6e60a95aae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ca65dd-d0cd-496d-9771-bf802d89afce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f311de1-a4ef-488c-bbee-a5213343f22c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cb2c34-6a96-4cf9-b7c2-6e285eeb0320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3f2dff-e513-421f-90e4-5326d4fe49d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe216fcc-8ae4-4af1-8771-c8dd95561e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60e0828b-43c4-4d2f-a56b-2876f1b1bc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c513c6-bc0b-45ab-9413-f978a2162544",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3212899-30a6-47c8-a1e8-557fbfd4db85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e38698a-ee90-4deb-b21e-9eb567102956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadaf7c2-6872-4f91-a18b-a3e51240bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b75dbd-ee23-4ab8-9fc0-cab1dd013a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05481cb0-7be8-4e9f-9485-7c060827dcbb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fb7a24-1b8e-4a28-b626-668b4efd17a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc4f8ce-5096-41e6-becf-b69dee1e9565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4812ace2-6fd2-430a-b885-ce38f52388de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dacda2a9-be62-40df-b085-7133e5b6616d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b40290-7ee1-41a6-b8ca-4aa647a1b11a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc201c6-ae00-4124-a1cc-3066b3004d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f21daf-0e0d-488c-8c33-e365e8be40d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b34a29-1adb-41eb-9226-6f0cc1462e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "386f4fed-04d1-49e5-9ec3-63f3d7908c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82de3bc-30da-4f12-8e1a-8f4e655f6460",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca730b4d-6a6b-454d-9289-7ee0ff77452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7e794e-0392-491c-a9e3-6111362d355f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f32b913-5087-44b8-bb23-910ab562dac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b5e2b9-09a3-4596-a873-cc88e9ee65c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2717727a-2a9f-46e9-891f-c934be449c59",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7022fd2d-d864-4a54-a573-065054fa6a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a78ff71-c61c-4e76-b19a-5ad2f7fcca75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e08c0-dc3d-4e53-a4d9-9a2b8adc9707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ea9d7d-38cb-4730-980d-653d482e8732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df7e73a-49da-4cd0-aaba-42f90c17c99c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8777d8-ff50-4f21-8db8-84731923525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811c6f80-30eb-4388-a54d-418f35f47dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756abaf0-3f46-49b7-a67f-629630207196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "91ca14ac-053a-4213-8fe6-5538b2afc2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0974e77-7d01-4fe1-b2a4-9b7f6003bcf2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c4eb9c-fe97-4121-b330-239f498b61be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc0a52a-399b-4b08-bcc0-7de23e6a3626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f582a45-10ab-4972-b037-55a0d459afb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ce6def-b760-4642-b583-2603d90fc183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89db4a04-a22b-4eb1-b446-e11103634c05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec8cdd9-393f-4a9c-9509-53641fa52a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598c5cf6-65bd-4b3c-8e34-9069c3390df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba5909c-6b28-4fe2-bbb9-84afad670f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38e268da-a3a7-4e7a-bcdf-3143870cfb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2510ff-b7e8-48a6-9956-851b90e04318",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c672d94a-0ed0-40bd-a040-231e66b7a544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18905fd5-9ac1-4c05-8114-3f94c9dbb249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfafa160-44a4-49d3-95a6-8ebfb40645a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbacba8-0009-4aa4-8c48-e06891a9cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90c0935-29bd-4fdd-8e76-d54e868240ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8214f7a-8820-4d68-9546-dddcac760af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6b8bcc-7567-4faf-bf21-dde2062b2e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7afa70-4d87-49b8-a124-5f77e30836dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0fc01c-5ff0-4b7c-a75f-9504d0bf040f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cddbbd-da22-4c99-82b4-dfbf5519a899",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4af827-a1aa-47cb-954f-0669ea07e360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393e2d61-fa06-4f48-b813-fc122ecb11d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267b468d-f40b-4c6e-b674-236628feae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57600211-c5b8-455f-8536-a7b86cf64d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c19d34-1b26-413c-a070-e69a0d7ca68d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fc6f2d-bbef-405d-8247-ab4ad3d94f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad0e8f0-7b8a-4a1c-b8b7-248b2878adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc15351a-cf66-471a-8a08-4cd4f277f68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8c7793-2f7a-4a91-ba78-85fe483c5291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3822ba9f-7329-4e1b-8407-4524cd91069b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02421c5c-c958-4670-b612-f5faec39b370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198f7153-2606-43e7-8a78-864e07c1cb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29ede84-ae32-4bd2-91f1-fd14c474b888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92327755-3426-451d-87e7-2f89379b700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebca174f-7b78-478c-a698-6c98cc3730c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf65a31a-5d32-46e3-b161-9a133c25fb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca847a84-1c05-4cd7-b713-f92bd6d728a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4e7e5b-9ac3-4790-a99f-77ae311103fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "352ed639-0b40-4df0-8c8c-06978bdae91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56597816-736f-4ec0-b0c3-2b5a5d9c2fa7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01abcf40-c582-4469-ba61-e4c346d21519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e8ecc3-68eb-4681-a1d5-2546dcfff1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701fcfd0-287a-488d-8319-e193c6faba2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c6a8f6-5a84-4dcd-808e-0511c464a912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb576eb-366f-4b6e-9195-b9b42a3a8057",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692bfb9b-d2fc-435e-b0a2-b2d6d73b8287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c81ebb-922f-4167-9284-ca29c3359a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cea10c3-ab3f-4c11-817e-b03696744675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea346d5f-1100-4c58-8e14-2e1cb9927bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad60049-eda7-4412-ad83-c60080fcf302",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd49cff6-f77d-4be0-b929-dc456f415800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b0ac6a-40a3-45c9-8b47-3a505ae6c230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ea4ae3-7728-4645-8b2e-f3455aa5b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15bdce38-60ca-4fe5-b37f-dba6c681858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9afa0f-01e9-4958-87b0-19645f07f814",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992fb1f-5f90-4c8a-b877-2838e7ef2ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faacafd2-b713-4fa4-aae0-eb28c58618bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f4f897-b0f0-47dd-afea-c57fe34833de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc6a73d-f3c8-4787-bad5-8ee8af6727e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb77f49-8e4f-4304-8dd0-ba1f96c70db9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3bf0e2-e739-4d56-b47b-bfba2a2e2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e0fe6b-3b6f-4ffb-a8e0-3e7bdb9c16bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5960fe-6c09-4e3a-b82c-9bc3e92b414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be736d0-fbb0-41eb-a1db-9b2a1e81beda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a7021e-687f-437a-983b-6c602f704edb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c405a8-59fc-4070-a8cd-17b32bfcf460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f0207b-647c-4c26-88b0-a544e149a26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2793753c-bd63-48ee-97f1-30b756cd725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f5734a-5a50-49b1-85ea-1cdfd17e1724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9c9d11-a6d9-4073-8613-01be8b691643",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc6ed02-dfc2-4469-81b3-47a9a5a8fc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bce7065-c634-4770-be0f-2cdfc4a73c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac6325e-6881-452f-866b-5e10621b90e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e27afd-014f-41be-bcaa-ba5b7f39bf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5facfa70-741a-4850-95af-7e006ee1523e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b2f995-32c3-4296-86da-45d15198c6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b92f998-efac-4c2b-aad3-1ba94858350f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6685b156-4849-43ba-bfa3-e4074dd530bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "828bd0ea-d66d-41cc-b5ae-f3d056ec49d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a4b899-1e81-4610-af9d-76c824ab99d4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e27d29d-21ec-4f31-b8c9-946b0de22cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa1827b-8795-4c49-ad58-fc0a39b85c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c92cf3-8f3d-4a81-9d6f-6138b8cea7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2875810-ae84-4559-b87d-0ea310e61d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c470d0c-56d4-44c8-afd2-31005e413cb8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62359537-5c4a-44ca-885d-4d6f840f4572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4ed197-665f-4b9b-812c-8990ce4b7569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e804cbc6-3a72-4c17-b57f-acabc9976173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20b7146c-6749-4efe-831c-c4a7c7d03ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1401987-b1ce-4e5b-bbe0-06f40f871155",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4697d64a-88bf-486e-8232-db53d8a91b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96f1682-64bf-40c0-8e73-fba3f4340379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ba6938-fac4-46f4-a2d1-30c9fd817443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f920014-77bd-4f10-8467-3741ea480941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b8484-b4fa-4068-a0e6-97f736b636f5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1988009-a09e-40a8-9a3c-9195d60d1a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efaefad-0142-4b8b-8a1a-018e25a279a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d191e7-6a26-4ad2-be90-11cb02e3da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2307ad3-34f2-480d-bf42-6fee9bc62f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a75d670-d72f-4049-beb3-89d1f66270e8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77241fa2-2462-4a84-bd2a-6ad4e56bd26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c5059d-3835-46ff-ab38-36031759ac43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dc3b57-de86-4615-94d3-ae7b1ca80881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca581887-affe-4b3c-b54b-a0c442b80acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1478146-a109-4add-b612-01ace5b442a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8b3b3-8900-4020-9bad-6bd78626fe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930ee751-0651-4717-9ae3-0d18d79dac94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a74170-1fe5-4052-bbd3-89166d43d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9ad2f2-b3fe-4369-a040-75902759caf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c9fde5-317c-4ce6-8220-8e7111abe88d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69696bc3-7533-4245-900d-756b47ad44e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22435e0e-5e82-44d6-9f0a-57843f7c6029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a7524a-d7bc-41a0-8deb-5db7c432bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac816af-34e9-4278-bf80-91d23dce94de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b91b6c-390e-476d-91cd-083da34741ab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0439b989-d7d2-4250-aa4b-278ffe582cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdefada-c233-49fe-be0f-10cdb6905530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce659a10-5cdf-43ca-9299-dfa7a2a58fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1ac1ea-1104-4b66-b02e-fc19f121f96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832def32-963c-469c-90e7-eff1f1954e08",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85daac0-ebd9-4cbe-ad5a-1ea20807f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d526fbc4-bfd1-49ed-8efb-124d9d77a4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd637b3-a0bc-41e6-b4f1-f5a6a2f820ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c6ccc1-88e9-4cc7-b0ab-9f9bd7a181f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e3949-a867-499b-b8bb-dec1d7621c37",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945f5773-806d-4c27-8757-29e3f04359f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd12113-a852-48ed-9825-c96f6aa07fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c035be2e-fce4-421e-a0eb-ef31e78a3440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6ef9f0-a773-43b5-9de3-17cdc76f018b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756e9cd9-5c8f-4020-b82e-ee006c289d31",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628e14c9-c630-4f9e-8fe6-5e0a5901258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d206f077-a957-44ed-8c41-6842fbdd2fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e97c11-fab4-43ab-9e23-9a15cf437041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b562341-9723-4917-ae92-c93e5ebb2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213743f8-c1e8-4057-9fd3-47a41bff3659",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064ef749-b780-4c9d-853d-32afe6da2b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01baaec5-88c6-43ae-acf5-fa603e4ad7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b01ed0-5121-4dea-87c4-feb679de9575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc29f9e-1bae-4f55-a425-c2972bf5b8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8ef4eb-0b86-40b3-92ee-b58a891373df",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65aea2-2613-4447-b630-a3be5a78eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017f22bf-ca45-4900-be97-50e9a962c377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dccee7-755f-414a-bcc7-a2ea06e20b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad1f5d8-39ad-4589-a246-1f0dac18e0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b78d7-fa35-4ae1-b6a1-2165e1b3493d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3348d533-0970-4e42-9455-8e8983709e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e11edd-7a84-4c38-b1da-d59fa2a6f656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782dacfb-da26-4781-afde-241c975e0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84dad256-4602-45e7-9123-bb3230f87cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9797295-27b2-4988-9d32-7900adb6b236",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc092936-34a4-4884-8f94-c35c3853362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40551dd-2e0e-40a0-bee3-17a60d45bfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87622b15-d193-4d74-876a-69b0420e2fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "065e560c-ff25-4b9b-91e3-ec9444643ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c91529-891b-4de7-b1f5-43392f11fa83",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e715f5d3-5c99-4413-b5a5-7a4b1619fed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f4d745-fd6a-4a95-8604-224bbfc2029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87c47ea-b8a2-4546-9f6f-a3571d46e74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71d4a885-5c64-4916-82bb-df018f35a923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29921979-2625-4660-a24c-4c190e46af73",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cabb2e-b43e-47da-9c09-f8af99cda597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2348a6-7fcb-443a-a15d-295d5a24384c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3589d91-46e9-44c2-a4bc-f123223e3bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c4a615-cfcd-4f44-83c6-eb270f3b6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ae69ea-7c48-44e1-bee7-f798ba383cb0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40746877-324d-41cb-9463-31a55ddf4c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b482986-bf69-4482-bae4-afa5c13e724c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1b63d-860c-4ebf-ae97-d92dbc64f0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f379f5a-86b4-405e-a7ce-95f6769e7db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e642ea78-f920-4766-9a7a-f092cea3bb51",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce0bad-b849-4521-9e3d-548e65f08b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9745923-0d11-4387-a2a7-d750ddf05970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b255dd-9095-4d87-aeef-c6fc73e1c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74e6d5e9-d2af-4977-9bb2-133f65d8a252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d159044-3713-49ed-8eef-0ef7b03b0123",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fda8dd-f469-4734-9ec1-51e320b3342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8214011c-51d1-4400-b767-62ae8a47857f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6f04f8-a51a-4e50-9073-eb6b2c90fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef25420d-0a17-463e-b5a3-2d08769e0084"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8839f64-7f82-4efb-ab19-9e156cd3fe5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d5ccb59-a849-4f7f-983d-b428bb088aff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e947752b-0190-40ae-b694-c79647ffca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d1a1bd0-e9db-49db-8995-80fc9e01375d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8851529-c745-4f6f-b9bd-f698db76d99e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5093ba3-6876-4fb7-89a6-68ca48c24e44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d99bca2e-c085-4b07-9b31-6d3ef6860735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db946b38-dd1d-4003-9d8a-66d9be0cab23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66e4d51-9289-44d4-9c3b-cdb1c948ab67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "613327fa-f2e5-4118-b961-c879ed9ad615"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d90dce9-807a-4eea-8655-a81b8fcf2a1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d96ac50d-1a01-43b8-8009-96c12be13819"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbaf504a-c0c6-4465-8da5-068ddb51ac3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b573fb3c-f3ca-40d3-a569-5a275fdc8fce"
                }
              }
            ]
          },
          {
            "id": "138e3868-831d-42c7-8f23-ab16526aac5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4879ee20-694c-4c5f-a339-f1fb0d4e2b7d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1355d200-54b6-4aaf-bf71-70fb2c9c5ea3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acb5db0a-3ed8-4f80-bf2f-2d81633d628a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da29d756-849f-4a79-971a-75fff34880f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a0f3203-c895-4385-8e18-edfda8974b79"
                    }
                  }
                ]
              },
              {
                "id": "41944809-fd2b-4ac5-9233-e763ac6011e2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ab3523-1ae8-459d-8d81-83fea7ff4df4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a65bfa55-ad0d-4fec-a25c-d7807a0215ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3017959b-cff7-4a03-9c77-3e6c1201201f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f8debe7-c9bd-449a-aecf-d01d39eea888"
                    }
                  }
                ]
              },
              {
                "id": "5eef7ffa-a78b-476f-a6e1-e3597c282971",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05c791ef-be58-4128-8108-02dabd753fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd23939d-b4b1-4008-96bf-8c468eb85bd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f3f74a2-c57e-42f8-96bf-c29f2cefcfe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46f660f3-91e0-4bad-82c2-850b01cbd269"
                    }
                  }
                ]
              },
              {
                "id": "13e3527f-693e-463e-808a-182b66bbbccb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a147c636-b5de-43cd-897a-3b9ea55b7921",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7144c4ea-f148-44e9-8162-0c86cfe1da5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f08b429d-78e0-4dd5-98a4-bbcc9e890078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "084cefde-7cc1-4ade-8303-be32ed199888"
                    }
                  }
                ]
              },
              {
                "id": "acb72dfd-9a61-4b27-afa8-ffeb5ea9f0f8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e998712-2adc-4ca6-b105-8b2ee06c8541",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c538f93-d00a-44ab-9994-9aed0e1fc0c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89a327ce-2d4c-44f9-8529-1aa6bf26093c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9afd9682-495e-4453-a76d-026dc8e77c78"
                    }
                  }
                ]
              },
              {
                "id": "9acee855-65ae-4463-bd05-06f8cb96d153",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "feac011e-e474-4ea5-be5f-7eb55410ef7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25f79903-11cc-44e6-8436-69bd8bd1285a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "196bd351-4558-4bac-91ac-b975382fdce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b59ab2eb-cb93-4863-9453-168b1daf343a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f91e7a42-dcb1-4a64-a683-45f54a58de3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d83ff81-7889-4eb5-8878-05062f2fdf30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d41e1079-ad38-49ef-8613-9e2b39c64d1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f23c92-aeea-4d83-841a-d6564d657917"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b05f00e-c8b2-45f2-9ab8-c9364bcf723d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3c83dd3e-7040-4df1-b072-0972adfcf5bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "997f2059-4c75-4823-87ab-1250a99885e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75cd9c56-2648-4686-8190-3ac27a1872d1"
            }
          }
        ]
      },
      {
        "id": "fc91a94f-eb9d-4a69-ab2a-a2e1c8ea2f82",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8f7257b1-1cd3-4368-a0c1-5e300986cd69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b56d2c7b-c0b8-48e4-8f71-1249701d8ac8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce885b66-4309-467f-a883-bbae39e1cc31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80deafe-a2e3-4abd-94aa-2e4d5d17a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c618d59-eced-4373-8408-7d24f2f2cadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068ea9e9-7fc7-4f0c-9dcb-70791f17b526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ba8a8d-3d1c-4c65-9a1f-53d579caf46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d1b39d-4611-499e-8c0b-3208e562b37c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4101d896-7645-4153-89ac-54a252c1811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a454d63-3e60-4f00-ba8c-3f5b4436e788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c715cdfd-3692-4b3f-84a1-f2cca3f1ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21a49a2-5eeb-44ce-a713-1f911a6aad9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da7119c-0d8c-44b7-9733-dd11f505bd80",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ccd502-dd1e-4ec5-9407-313f844a44fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3a0e40-9680-47f9-b809-20219a4fb1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab349323-17d1-4397-a9b8-012412bf1ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd4ee4a-2b5f-43cb-b9fa-5211d93eebcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3180bf8-6840-4f77-9369-ed19378a6225",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f5c900-4daf-4b10-8252-f42450f4a5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85239f28-f3d6-4df3-a779-198d82bed2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0ec719-7478-4321-9372-0463662c5c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "459325f5-6784-499f-ba0b-35d60b36c085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c3fb70-8dfc-4597-97b5-ea02ffdb5ac7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd2e31-6d08-441b-bce1-c5d7c6a5fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4e470f-1e9b-4b2d-b7c6-06ce57699043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a436e0d1-cc7f-4549-ab16-39cf9ec544c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6afdaa0b-a2ef-4516-859c-9a629e9dc892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a10c83-6e35-4667-a82e-70e5346d6a93",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f146c93-056a-458d-bbdf-4b05cb605f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dffa59a-f9ab-4958-b9ce-6fef2b952c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b5f683-3b0c-4628-8fdc-143e949f45dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11299d30-a04c-4e7c-b4ec-1303c1fe4eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c3ca3-64be-4a13-9f86-a363beebf736",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac4038-e08a-48a8-9863-6999342a7afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d46cf3-bc40-4ca8-a56d-5a0087d8cd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169cb730-c650-438e-ade2-4a40c248ab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a61695d7-398a-49b1-832b-612bb78bd667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8585fc5-50f5-469c-8df8-b24987b831a8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607ce7c6-040b-47cb-9f0d-511f4593b549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0eacff-cc48-48a9-a5c3-89aab110f8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9a0dbe-c15f-4809-b8fb-615271961fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96c5719-140f-40e5-b7c4-198d183c08a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1598584f-b0f7-48e1-8749-4c6fbe39b300",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da44f62-d0be-492a-9223-afffe2665ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333d4942-570a-43ed-840d-9ddf32792aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b83eac-dd56-4312-9977-1f8a73949451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57b35cb-143f-4d99-9bca-e18b379c069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae80315-efdb-4b35-b9fb-9187776a4acb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9db16f-d44a-45e9-8f4b-0e9f142b08b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a663536e-0885-403e-b3be-12d69fe54d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2462353-4f9f-40c0-9257-8568770a93d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44c90fd-f3d1-4e62-8e09-e90fd24a20ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d52ee-62c8-4b0b-b3f3-32b23b8ce3de",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa907b91-86b7-4914-a8ca-77f4093c908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e06586b-4c74-4ce8-b97f-45dd316314d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd6c510-250e-48b7-801d-6839ce3d776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c7c33a-bc6a-47d2-95d1-9b87da1a07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2621b55-5de9-47f1-8a9a-39f8bffad0e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1b5665-3e97-4fef-8a53-a3be76ab2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4731c1d3-c8ce-4086-b379-711cf823b2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1bee7c-6438-49bf-bd4c-2eb724b93c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac4003a-4f3d-4436-951e-9de58ab35d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009cfeb7-2483-4707-b1d7-f5558253c524",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9c0a5f-6714-4504-9937-6ce652770b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c192fa-dac9-47b4-b95f-05ba003144f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7111c4-24a5-4475-9b48-b929e794098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f821fec-7cb0-4a51-b668-8a1ddae0247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bc2778-2e7a-4f83-ad58-459f5e34a0ca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf50f8af-1593-49ca-b0d1-b4607f047ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43773a51-6157-4150-8a9f-df3e68b0ccaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46af557c-f0fd-4f89-bb01-81c64f0dd29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdb08e2-f5d1-4549-9005-b4b73647d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7943da95-c08c-460a-9cc4-9f3d503eb412",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727e8eb2-6e53-4292-9525-c46561c2fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d645b7-417c-4ddf-beb5-2454ce54c6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452c4ffb-3a6d-4c10-bca0-bbe76af44104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd374846-2696-4569-99e9-111f16ef4e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad180a7e-e47c-4811-ba23-54b3b468f2e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74da298-fda0-461b-8178-f5b65093efbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425c05c2-fb47-4817-80f8-b8c6e867cd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fa4f7a-132e-4b22-9069-cf232bfba803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad9caa6-be2c-4553-8a35-829ca16bfaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de3c871-4bad-4326-82d4-07a473e12c24",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3207d64-5e57-4fc5-b412-716491ffa3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6bc054-91e0-4e57-b332-8f2193d89284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f514bb6-9b50-4867-a688-de861a5647a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "838ab16d-5456-432c-a3ff-34c9278d084d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52404328-8f83-40e7-b91f-643976822795",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06c1f4-b0f9-45c9-8b37-fd3f323807e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d996ca4-7ec1-4f02-a561-c7540c3caf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f8fb91-a564-40f8-84fa-fc603a46a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f868a124-ecfe-4ccd-8a62-fef9c1c5665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e9378c-f312-41f5-86e9-940fd09d5eea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5594182b-f578-45eb-9b53-ea76c049ad60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9265f27-cc73-42d9-b0d3-12935cf90402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb514a2-d278-4f3d-9078-383e316d9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38dac4a-4406-4323-b27e-f1c1572b5a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b130aef-a2ee-4352-ab45-4671340e171b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9338f7-63e1-4c73-a7b0-69d7fe09106a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef99966-598b-463b-9d86-e5990cc1cb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9520eced-9d15-433b-9ed9-a2445ff1a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7483f5-c971-48bf-87fa-d7102ef7c4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e9a681-60f1-4569-8785-f6de3d9dac1d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9df86f0-20e3-4936-a07b-64758538746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f4cefc-f4da-4f6d-972e-c83847be7ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdc53e7-3a6d-4231-8ec7-b41539a86f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "357e7719-b832-4900-bb3b-780a3ded6fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896cfa7-cd8e-4c76-bafc-cde8effc0120",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c83939e-9a05-4394-a629-233c275b0c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13702b8-14f4-4590-b030-55057fb7d64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9164347b-c0b6-4a6c-9773-07d9c91d1a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a180cab-8d3e-454d-8bb8-7a8624b4d12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41550929-05b4-4d5a-8203-ac69fbc34fa4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ef1f7e-5bc8-4147-9173-474fecba508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c965c603-1e49-49c0-8536-39f1cfb08b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d09d12-c6a5-440a-b9b3-5f3d34c4f01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc8e376-bda4-4dd8-ac4f-c1470cc29b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128505f4-ae14-4391-a321-8672eadc0e08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c233a614-f772-47e0-b6b3-94f79401cf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f33b7b-6ce8-4682-8cbc-f977b0f09e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64c658c-56bb-45f7-b7b4-3b43c8b40d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a207472b-a479-4c2a-a0f1-a12c88fb0a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cbffc1-ff1c-4e8e-af53-cbfa68f271b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11137817-573b-4602-b964-b8e37eb043ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ecd9df-881d-4fb4-a798-eda3d41165c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83951b1-d639-4e15-b25e-719f0a7fdc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064a8076-2ee9-482d-b38a-1e2f359f5939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e91d09f-5390-4034-8b3d-86f72a389853",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7f572-74cb-49bc-b302-62f7ab990c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb90bd-4389-4c0e-8bc8-8318a1f85cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5d1a60-1a26-4e8f-9573-cbcf88e7aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f474995d-91f3-455b-b91e-1689fc87fda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff8b88d-16c0-4694-8439-30a723b8cf38",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c23094-ab1c-47e9-b600-7c01b5ed88ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bdf864-5527-45ca-bc98-7b2b233a89e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1288f9-5856-4de0-a817-2e8c3e15a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8cd983-a52d-4c97-a688-0d8d997b7034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7548b9ec-ea74-418c-924e-a84232ae6fcd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec40816c-53b4-4958-83bb-0e50a32f90b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70377cff-9a98-459c-9a3a-174ddd273b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cf776e-f145-4969-b028-62837a901400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8c4b8c-7ca2-44ab-b69d-9ad19f7bd3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b485c44-7aee-4906-88bf-964e960faf38",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f07efb-1336-4fa8-aa3e-2bafbfe43d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e333a89f-e903-4c08-a459-fe9559bb6b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c17b1e6-60b9-4d14-b9c4-898662269a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7941fb8b-867b-44a5-a051-923fcce8105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71334283-72e6-4dbb-af42-44052be0f5af",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d068332-0fcc-4aa5-b5f6-0d0bb8fae057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada13763-90dd-453d-bc0e-2c55a8ac1caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cce9db-eda7-43b2-a2bb-0c07757b078c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d148d70-0317-4320-ad8f-09d786488857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16af454-d04d-4333-a4d5-a7ee3c9cd258",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6221f2-de31-4924-857c-7090827d8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c337736e-9c90-4fdc-9651-841be99a496c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1505b39d-6e2b-4045-a1ec-3b15aa21d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df7061-b02d-49c0-8c99-760934a45b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9db109-788d-4583-9aea-029ed0f48f8f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5121d643-8e4d-4d47-93f5-0142d335d661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d2154b-1c9c-4788-81ff-fa981d2eb8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c7dee-b7f8-4cc5-b9e0-ff2c9188be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f11ad9-95c9-4a29-abe2-04a985ca60d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b041131-b715-4bb4-8d31-f6fdcc8a927b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70639314-032c-4c83-9473-c8cedfb4158b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808a3d0a-8cc4-4de8-a3a4-56451689e83f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d029132a-dbdd-4603-b048-7a3bc419ad41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda65766-7b3f-4904-81fe-c8f7bfe58572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "534ece65-4e2b-434d-92d3-d0d3225eadda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "220f713f-8d99-4be5-8564-59fe2065f3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a668f57d-f988-4507-97c1-3ea79f92dc60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a932dd-2312-45fd-bd2d-029c87e53347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e43c1459-00f5-404f-a687-60bb0366773d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b18a17e-88b8-4a3b-aa70-3c4dbf0e58ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18ca8aec-e2d9-48fd-b26e-f6c76cec6555"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c113df8-4342-4b3b-b48d-83d76674b396",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb354daf-0246-4867-a048-872b9c539464"
            }
          }
        ]
      },
      {
        "id": "b3cdd9ff-7852-485d-b929-b72e63e684f4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ab604f30-00a0-4504-843a-23d349cd93b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5def8a81-7760-4717-8269-1060ca03aadf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae7379ed-a8d2-4c54-b76e-481f880722fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b04ed0-2a6d-467e-bd75-92f5db41ee44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e8dfe0-60ed-4a6a-9903-4aae0779f018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd9a0c-4720-4e16-9a38-3a8c2e96feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df054520-0d5b-470c-90b1-cedaef8dee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c2f035-c2bf-4f2d-ae80-eb729a0c08f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8c0fbe-f9ab-4e70-b2df-d3c1112c2a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b80412e-cee0-47f9-8acf-621f583f7772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc182e22-1cba-422c-a814-354d9dc77a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60aa1cfc-aa90-4ac7-98d3-b6155a59b598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18464d65-e91d-49c6-8334-3f51061380f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba9e4d-2124-488c-ab26-4345705c694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc0c264-4905-4f1e-a9a3-79581e9300ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f69f41-5656-4bd1-b18c-283c36ef405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5684d24e-5df5-4afe-bda5-49c23acbd459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cebd7a-bd07-43cf-bd90-1ec019b9b4cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7dadbd-786c-4033-acda-2842e0ed0442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34acf6e8-6ff2-41cc-811d-b1d845ccbe13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2dfba0-edf9-40d9-840c-8c5b8ed17531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3690d03-bda1-4a35-b8f8-e5fad7be7f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d0a99a-432d-4ecf-8e5e-137136bfa81c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794e4e2-8b06-470e-93bb-70992ab62aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5e4477-e8d1-4cc7-8326-126dfb07e677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae13a0-8f02-4ac5-9f78-d398f07142fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3185778b-f397-47c0-bd3c-697235cf82c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baea754-dd1c-4163-a31f-e5d2bd6d5dad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eed93c-e0fc-4c64-a5ad-fbf83c67209e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d621d6-69b6-4f71-a2ab-788db6aaf049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b61862b-8735-4adc-bdec-5e5a23311481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e86670bf-a1d6-4a55-b9e7-1e2a92b5d8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad942b5-e624-44b2-a514-569b2fecc555",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ca705-1d44-4cf2-8c2b-0b4363f1e2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbab39e0-7182-4806-9758-77467a48c04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b7529f-91d8-4a77-8250-550605be200d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd57d26-fd6b-4f15-b579-c975283b369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f128e-c704-49a9-bdbf-a1a7de43e9c4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fa6f91-511e-40b2-b238-b11e70edaf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a16e28a-a871-4597-b345-3dc876364f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202ca348-709c-4ff4-b849-137099bb942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0205a19f-b196-4150-9b39-9cf8cd3f9528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72970105-8a44-4452-995d-09228b9077fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599480fb-724e-4484-bf5a-112b99b83f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daabdc46-8652-4a34-84fc-f82b1e9cdb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43b3414-7a93-496f-ad5e-63c463f38353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8575233d-88aa-4975-8f88-979a31a58092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5532129e-ab89-44c2-8a7e-708779a509c0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ddfcd3-350c-4104-bd6d-214836512a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08562289-cd5c-417c-a544-a30e81b45fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428182af-169a-4a1f-9905-3db8daec3f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bd919e-1f10-48b3-b677-014271a0f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e350c-aac8-4c6e-97b2-e5ee15c0a386",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0412ba3-ca59-47bc-a376-ef79607afc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be39e42c-05ab-4907-a820-7fd624a1843d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b275f4-4fb0-4494-99cc-8be7a635d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "928431d2-d813-4216-a571-d502590124ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a130affe-6246-41c7-8814-c3e9afb39cc5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d7be0-a160-47f7-9550-5dcfb41d164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1a85b2-7d5b-4226-8e63-186340529919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79032501-5ce4-4f43-91d8-f8a5cc10f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32297050-0a9c-4f55-887d-1c765256e2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3904a4-8c83-4a2d-8fc9-71d0e876e2e1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10999d2f-00f1-4437-b6a7-15bdca7c27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a5c074-8104-430f-ab57-4dc65e833acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cdf7d5-f0b7-435b-aa19-30549ac3bbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb6ecc2-e5db-4bc6-8172-6ca37b811cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150fd74-619e-4eb3-898c-35439bfa88ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e088566b-41fb-4346-9642-93876c2b0263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f18342-d9ff-4146-bb89-9c45cefab396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb3c2da-101c-471e-9b15-4dbb0cded943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b2f08c-1667-48d5-8054-34f85b4162ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8721f796-781c-408f-b0dc-757b38049217",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6821ed-8c29-42cc-a33e-94f0f543719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99762848-acac-41d4-8d66-d2e8985dfeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a725601a-7dd5-4ef0-9daa-288c6a03521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb3173a-69f1-4bb8-9189-b5cf06aad6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c73a696-6b3a-49c6-87c7-8da3aef7db8c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9908e1b0-9553-4cbd-8f64-97f96db13f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427bb721-9aff-4f94-8533-dfd8f064680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2148d45d-0e2e-4ee4-b5aa-939c3acf351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd1d26c-3ad2-4b66-b7b5-1d5ac3890afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70d29ef-4f7c-4a2a-9a32-3960fe0f3964",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc6485b-2288-429e-9154-7e7643e21093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6868bce4-29c8-4fe9-9ded-c17a9a9ac9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cbd0bb-d713-48fd-a7c7-b1876bddaf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c126b7d-9447-44b9-8520-6cbaa1da8926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915d16c5-04d3-4b8e-b8ae-b7268f27f972",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed694811-2f7c-412e-8b3a-384347e264ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eaf818-c313-4dfd-8a28-96b0b72de8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7abf2d-25ae-4687-80e3-bcd5afd2ccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc2fa90-df3a-41a9-b7ae-ec9337435321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f57f8ef-7835-40f0-9a2f-b9bbe42f4897",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183e9e54-9e6d-4970-9561-2e5323127a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117216e9-218e-40b7-bfb3-9d843d2e8885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418b3970-96c4-4fb3-8cb6-4117f21fea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7214f5-3811-4fe8-872b-681a372b4137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9248e1-196a-4c5a-b621-d8e949847360",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867fc77c-8090-4365-bf0a-b5af4a377eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c89cbd-717b-4d4a-83e4-acf3499a76f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdc3e99-f3c8-4076-b7d5-059b0b1c7317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71d977d-5869-4203-a24f-028c54f18787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77641ee-215c-4c3f-8ed5-12ef02a4221e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b2832e-af56-4108-b243-f43c94731235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7e3edf-4a60-443c-ad77-da39825a0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915af7e8-a59d-44b5-80c4-7caa9a4f70d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3737601b-72c7-4c3d-9c1b-2ceb3dcbf9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a7540-7ebc-45b8-be94-81d835612c2f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7929d9-45a8-4caf-9e3b-83fd9c79de36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b17ee30-4b16-4801-970d-0794661cc9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a178c3d7-6047-41b2-ac71-0913881a6d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8797d921-abfb-4e92-9d0e-11c669600b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cceb695-0413-4f98-b1e5-ffe23ee8df81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29dbcf3-3c42-4bf2-b2d2-c8c8b65d4ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be34a3d-8a0c-45f6-be3e-a0f0b9de3791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf192a8-5e9f-4ee4-8a20-d5eb0c20388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf96721d-0e12-4146-92dd-6b6d946ab991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f7db8e-6af2-4d29-8ef5-e2bf09e23fc0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831a1048-8b4e-4260-a922-4384847ad311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace7d31d-05a4-46dd-a17d-a29c72432e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adefc8e8-70ac-490f-8f20-74881c602f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4457ebb6-b7df-495c-bc7d-d659e2954c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f39476-6ba5-4d2b-a092-eefdec51452f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47e5945-64f8-4b6d-80c1-b8b59d9d3ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf89cc91-58a7-4f38-9cb5-622029f53983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3dded-d927-47d2-9712-bc7476369329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd0dc56-ee35-41c0-b4dc-b1b130e653e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25692e17-7bbb-4499-8130-dbbe48fa5e93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65741aa7-78aa-4450-b374-41794f33f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbf6016-1b61-43bb-9411-cf004bf45cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5833184b-28ff-45a2-aa6f-9c6667de99f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d263fd-e98c-4ef1-98d6-a84ac18d3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba31a1-45e4-449c-a2e1-d99ab1206027",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5071c6-5feb-4257-a1ae-53b8e1fac42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2163b3-1748-47d4-ab4d-f038e40a6ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bd7024-c58d-445a-9d1b-7500c15d3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63977a5-7f83-447e-aa48-8dafe18d2788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edeb9d28-7d02-4af5-9737-9078df555fb7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32da8a9a-af4d-4df3-82ff-f841dfc12d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ad7bee-bd22-40ac-9000-a4becb0082a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa61b2-3900-400a-9e67-d89528d56e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b70620e-bcdf-4e29-a3ba-c482e7391ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4a56aa-ec90-4f60-a448-a473a12c7558",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170a3c43-c61d-49f9-8a7e-d0d3a3da7eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258ecbd6-33e8-4616-af3c-77cc32728e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96fed6f-b9a9-4059-9006-305d2ae92e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4877a3-d86f-410e-bdd9-7e7819c9e9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eb660e-d336-4a0e-88fe-72fca976d99c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67a154-fcba-4bce-b055-69ae13e07fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7f060e-4f54-4be0-8225-585bb27d408d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b0a367-5e8e-4c20-9e38-1ac5ac52a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf3836a-152b-4a30-939f-4c995ecbd534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70b34e-83fc-4bba-a6ff-030f98b5b06a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194fe406-d6ab-47d5-b92f-a882ea01c4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2ae50d-ecb8-48c5-9bf9-68c6f90048c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38616ee3-6d80-4433-b271-78cfd4b6e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9abdf6-799a-45d4-8677-96eba752f3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8cbcbf-6c29-482a-85c3-a8d88fcd92e1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5bb6d1-0e57-47fa-ad8f-67e2762a29a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8a87a2-ec79-45ff-8f3e-15f823005146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959bda72-f579-4f74-9328-32c378e86998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3242a4ff-d6df-4462-a0e0-47b5d1118325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1c76f6-3223-404d-be88-4baf21dcee69",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b4de41-e646-401c-a8c8-2dec44205f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043a2691-2440-401a-a096-82d1acf5f042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6ebc1-d097-4dbf-9505-a73f6b6716b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4c4ac9-4200-40fe-8b5f-1bfcdda03846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a015dc-0e50-4052-9866-e056a2e2f6e3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e7946c-faf1-4879-af84-a8d4ea9b7cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83db64fa-0f9c-4f85-8cbc-e2f531731d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07e45ec-a7a4-48e4-9442-79bfdca4b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf47b92c-8912-4bca-8a90-1fe7eea6296d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770ed2f0-194d-4ffa-8b66-63e75745f1ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6781db72-fc29-4890-aec3-fc51c94d5711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3253332f-7975-4c5c-b76b-8d68a9e94ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4b2ebf-f575-437e-93ad-00c97068db54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58a422e-4be7-4cec-971e-c3d982599301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcff1467-0561-4834-9793-5c8e8348af1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248f4f79-9346-45ff-bf9a-a6746360b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0955b7-3ebf-4a83-bf97-5766069a1eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a1798-f0c2-4ff7-81ce-e669eb1619b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59de46bb-e27a-4d23-936c-0251591a4c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c930bc80-0dcb-40c2-8cdb-b8df091878c6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c489f8a-73ea-4ec0-9e83-c35845fcb726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79417a40-b667-4739-a70c-5a4df0e95dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00846d5-84d2-409b-b2f8-5da72410205d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25159af-8219-4bdd-b5fc-8b45c9e833f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3974a6a7-48ec-47d8-929a-4532ef07c381",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e67df575-4b8e-4025-912d-9a180aeea29e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431116f5-0095-403e-96c0-af4fdfc4f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81b0f75e-a4d9-437f-b84a-3f40d759d098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f068aa-d42b-415c-941f-2e429b00ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a050ca26-04ff-4f14-a5f2-54fb2ae73b0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5264030-bd21-4549-ade0-a483caf01f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8048161-922b-4957-aef0-bcc687b6ea39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a639684f-703e-41da-a91f-cd8c96ff477b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5e3894-0eeb-483d-95d3-4bc440af6352"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9a0c4d2-b444-45df-a609-8ef7b81178fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f588ff8a-7b83-415a-9ca4-b129175ae21d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18f16b5c-e6c2-4d3c-88fe-f713805193ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46f463e7-21da-4d8b-910b-48b116954bfb"
            }
          }
        ]
      },
      {
        "id": "1ed1527f-4c8f-4352-b436-9369118f654c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e36c3a2-a944-49a8-8a35-780ae158a905",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35e9892e-e988-4155-8621-f23e9d89c6a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ae82097-9c2c-4d4c-89b9-6bef3aeeab61",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb67212-6fae-4288-ae0e-0194a63213c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6a9b28-9988-4a17-9fa2-46cb26ebaa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54437121-21e4-4317-9621-e7b8d561a81a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff5a201-aadd-4bf8-b25e-625ec166c226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d6cf82-07de-4024-a407-ccdb45d1f232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38adc0ad-8c32-4115-b318-cf423c0dd2aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a722a73-aa7b-4c47-9337-5d9aa87c8246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5837e8-5298-414a-94c0-fd9d31eec604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc11519d-7174-42c8-8f4c-89d821e6fa0f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b57722-d9f6-432e-8c92-6d095e298a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc167fbf-d1d6-4c80-af37-d953c1db6018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601ca046-d402-449d-b776-e0bac6c4fe0a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6768f34-7b8b-45c2-a61b-2e8e806a114f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f199811-124e-4ea3-aa0c-89bb6e784588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bea9c2-5f49-4193-9b82-bb904253da75",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b346715-0c27-4820-aa35-60dca8c1d440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8316f7d9-9199-4887-b621-d2c54b329924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5f644-f16c-48d0-b1dd-093799dc2158",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed729c4-eb0a-41d8-9e59-1ebb9c2b193f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c35426-b54d-4ef0-9367-97ea0a671b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439aa45-bf9a-43df-985f-40039add7a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf9cbf1-a474-42f0-b9fe-13a442ff9409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde46679-e383-457f-916c-85afa50e4137",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d082858-67a0-4042-ba66-d6fe31025505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba67d73-81dd-4e2c-a8af-96001f2bfd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c4369f-c70f-481c-aa4c-23cf2b2493c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f90238-7f79-4d77-a21a-23de7e472b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11da0fa5-446e-47a6-b456-f1e95c8e3446",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b38d1a4-2a28-4317-a3f6-380f49c97352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ec20f7-f3e0-4b2a-9475-8ea061eb972d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14de47a8-b63f-4965-8a79-75f34853df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c7f80e-ea95-4d1e-a595-88a5b30bd2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3c500e-b3db-40e4-8c23-eafdcfa96746",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee5a53-f4ca-4b7c-ad1a-7ea8f1c18c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae636d16-1089-4293-9779-b42781a0022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb79d3-bc7d-4ece-a82e-7e3dad66379d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d4b8e2-10c6-417a-bcee-f084409c3374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031eb379-adaa-42f1-a700-8c92f6a7ff82",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa0f018-c6a7-4d19-be7e-61d1aad860ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98392c19-d5dd-46f3-91c7-8e96301d2094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1765eb41-0743-4e04-9dd2-e289b7cc9520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ed602b-d788-4bb5-bb51-b7110fb6383b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899bee0e-71e6-4fbc-8e1d-ecc815fdf8c3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65b0c19-7fcb-498e-a6c7-284373ef1c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe7c80e-4747-41d9-b0c8-78052dd2d098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c236fe-a4e0-4795-bd93-fc61c1dfd462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e6071b-f1db-4af1-8026-690cc5908eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85de51db-b76b-4f01-9589-eaec6859e920",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303673b4-6144-4096-a7cb-5cda8ea0da50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48847625-facc-40e4-8cfa-99ae1dc47932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710a7ea7-4b26-444b-af54-3685b4b8d351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed0e406-6943-4237-9a66-f90dbc5109b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f45cdb5-911a-4fb4-8f8f-a417f08ff3d0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf5c9f4-b9b3-4c3c-a67f-df91fa82b68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05f85c5-bde3-436d-a0bc-e805f59be484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a43ecc-e579-4fa9-9ce7-72a5807eb113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c809c8-1b74-4962-983c-1d02e8cde064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ef8a3d-c33c-408b-b783-bb5101a29f98",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a3dd9d-6360-423f-8310-7a0eba67bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d601e7-96d8-4b02-8e36-c3e71e99a48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf504029-3d19-4bfa-88a3-64e63f75410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2ac6b5-aa2e-4d15-afde-c2e4049cdee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc0f31-8d4f-40a3-b0c0-3995adb42e3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb50673-c7cf-44a1-8506-39358aad1527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc1b502-9deb-4856-92c0-3f75758e39a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34c560a-4035-4674-9391-b306fffb4192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ebdb34-b7d6-44e6-9768-005886c06109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fbf960-3e52-46f1-8bbf-412089e6994f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aad6d9-47b6-4124-a998-3d2828bf5411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06765ea-ec81-4f27-9813-efcae87463f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ef73c5-2235-4a56-b6c1-44c4eab7f7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f3ba83-e0f3-437f-9d85-c1fff4d8328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20b0d02-8a84-4fb4-994e-1ad29e783c37",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576e1933-c587-4ea2-ad27-bf63ae4b9a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242c21e6-a1b6-4500-ae78-6e6d8f8b7782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfbe7f8-bae3-47e7-829d-cc72427cd8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912260b3-d0b0-4e5b-a1a2-5f4ca0561b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658cd265-ff38-48df-91ab-e5c1714b8c4c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740ccd3-cec4-41ae-805c-c29f26114e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2942997-d0ee-4ef8-8dd5-b2700f109cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dbbd50-fe16-43bd-9fa1-ee50a45874aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006b1317-e170-4836-8976-01a91e03980a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66420e30-edd8-45a4-bc00-786227f20fa0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9ef5e0-2d41-4b9d-9072-18d32325c057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc264e8f-b992-4065-a785-23f6e1bde958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6065b60-a514-49fd-a96e-731e0e4e6e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1a4ead-c213-470f-b09e-a8b7db87f8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff01585-47f0-494a-8ac7-aea3d52541e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d50ee-9991-4632-ac20-762e50dbc1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c471d9c9-f374-4979-a4e8-cff5beb98bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42260f5-d8d0-4203-b778-59e2d4d75843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a220fa-da75-4510-ac03-3df0850f4419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f106e95d-ca78-467e-88d1-ba1210567578",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a6a69f-c2c4-4160-9069-3b236268a5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272b6acd-1e2c-405d-9a7f-60afefb86f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a31d9a4-67e1-460d-afe9-6f126b2a211e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75162024-ad9f-48cb-921b-e0c5c8e55786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88625238-dc25-46f0-bc17-dbd2a3fbf6de",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236a3ee-90fc-4d5a-a061-af245d6bddab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb92074-1687-4fc0-a3a9-679175af42d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b197c0-e589-44f9-bbd3-5e74ca1f3d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d082e3c-226d-4e34-a60f-22d1e21af8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b42121-db61-4b7e-9095-9b24f6855e93",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268e26c5-1e92-4e9a-a6f5-7641a671acb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39bf1a3-1c07-4b27-baca-4b1f2b2ab352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02784400-1a1f-4d05-bfd9-5bbb182a9178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238eb063-155e-48f9-8a72-199563f30df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa2c4a4-1758-4ece-a965-5eb57f1494d7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e81cf7a-f9b1-4f8c-8c67-e87dba6cfc8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc836635-6e3f-4733-8ddf-7c527f12a48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722a1ad3-49e4-4763-9e40-a233dad8f906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80fca37-87d1-4f61-81aa-abcd49cd2f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba16c23b-d377-4cd0-94c3-b4db649b83b6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7b32ae-4a78-4072-8e5d-04783c995831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a2a61f-d77e-4e52-aa71-2103928f675c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b0f255-878a-4943-90a5-6edcabe495db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c29699-90b5-4e28-bfd0-8ab5eed36cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbf1953-5a54-44d9-b33f-9823022b7f5b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae0741b-bcfc-4fdb-bb73-4057956b3cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed54d185-164f-4186-8771-14bd3c240fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9065167d-fad8-46de-8c4a-92cae0313dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153105ba-bd05-4a6b-b04e-8341442f5493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbe0ef6-e783-4b4e-8169-44f22d8cd3ab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8c0825-4b04-4a9a-8c43-2ead75ca3eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df113457-c4ed-49de-9cd0-021b6053463b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c3d859-fe6b-4a7f-9304-9409cb5ad7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a90c6-dfa3-444e-9eb4-d76e557d1aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f6ccc3-072b-4b1f-b81e-41c1911bf677",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a810206-e72a-4e4c-a465-d88af1f66ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fb7595-6f20-42cd-bdba-1a7bb658f75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c10c58-3d62-4ce2-aebd-a88970ae1439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e2b12c-2e5f-4787-a0ca-c00d131b36ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033299ee-c630-4a08-ae3b-0f7281562a1e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784aed8-141e-46c0-bc32-c40ac56465fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4213cfec-6f09-4a61-8d50-b8ad87f8220b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aab0612-aa02-473b-b470-149a5299da34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a7e90-3e52-4770-9027-4dffade8bf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f819c5a1-199f-4b57-993a-ea665ea14d8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a38b7-9ae8-4186-8900-18d6d4500dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf895b52-750d-4608-a340-20d84710211e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8390b28b-26f4-4b41-9bab-de8d5a9a4118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eea753b-dc40-4a67-8f3a-89b4baac17db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054aa541-e58d-4410-ab84-4c3e02a72ce0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f02020a-d865-4c45-9cf4-309551fa088d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bca8daf-f5bd-4e69-8070-8191bb22f4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5771b49-bcd4-4ea0-88ad-31aa843febdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6bd113-d0f7-41f0-adae-90472ba348dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0822f376-d8f2-45e1-87d9-ae84d309e4a3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9a6967-ecf4-445f-94a6-09e48bd2de6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382c0534-8198-4901-b319-d7487c181707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513f684-2ad4-47fd-8e7f-4159f6328a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c8da9d-d524-4122-b190-f2922c28b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8118a170-8699-4bd6-a504-258c5ae4fa9a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da42eda-771b-4452-9805-61b8454deac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98fca44-ba9a-4d4e-bad2-d807a3d3a203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91b2d4-c6c5-4254-97b7-65b3f279b37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549b122c-062e-4f55-b2e1-aca1cd55a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af52e813-7eeb-4a3b-8de1-921884b02f61",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a30205-82b9-4176-bcbd-caafdb09bf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795e1f3d-4b7e-4112-a4ca-d8783679258e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f5210a-096d-4339-aa8c-c6a929e89488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c2ea23-c1cb-49ac-8337-9b4454151795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c998f44e-cd9c-4451-b65c-943299d70b5f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0a87a-1ae7-42db-98af-837e6376d9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389e88c8-6008-48b4-adf4-fc6c2becdcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af72012b-a3b4-4add-a5dd-9c55751e7eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f6e2cb-20b1-4f98-a4be-1741259fe99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0dffad-8bb7-4128-a33a-ef6aeecf4154",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38fbcd5-f593-4599-be9a-e9b3e2831ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c72d1-59fa-4d5c-99f5-aae6a7e1ed6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab421e9e-4415-47ea-ad23-4b894d5c6a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed37c3ea-d04c-47bb-b5c8-955500625cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb24681-1077-46c8-8684-ed268e093cea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42af25de-e6e0-4a00-ab1c-4a5c8cb8d750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb74b40e-d520-4112-8ffb-3cfb1c7d3f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299029c4-229d-4022-af86-c5d82a25f0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860f4a9a-acd8-4986-a6d1-b75bf3f5f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe8c2b-9c82-4ac4-b429-6916de45a2a0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39f8596-05fb-4a97-868e-e7227b3c43bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c699f48c-3273-406b-9e3e-9d4c15d65741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8312f4-8aed-4216-9898-cf0346e1de37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2b8c82-097f-4718-9c26-e6da69fae54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6836c-1f0d-4f98-bd75-67111d3c4e7a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e8f3c7-16c7-4a7d-9f8e-2b1c99bd9893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc16a15-d055-4999-85a4-7dd4a59e70b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d04929-15e6-4a84-811b-eeb1441e89e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbfd12f-59ef-476d-835c-15432c1b9177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34753fb8-e0cf-4495-a435-512ca9cf0e3d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb31aab-98ff-4c84-b900-5a04adb50936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e2994b-a945-4f9f-9d35-7dc9906a6b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2320426d-9448-421c-a980-cc449cedcca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1ebd67-f1bc-401c-8d16-e77fa29e65c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fffb4c-9830-4607-ace4-1a90022ad6c0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af17c84-54b2-4410-ae2f-3a1c135cbeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1adb7f-14f8-432b-ae13-b891245fb63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2a1c76-ffa6-49ca-b647-c0ebddabe5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1bdc79-b889-4cb6-98ca-a80de1d94cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4293198-4e4f-4b1e-a6c8-ac71252885a6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d48361e-2c4f-49df-8d4b-7465c123272f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5a6e90-d295-45dc-83f1-1fb1c18fa47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ba1d13-83bd-43d2-8eef-d466d17e8f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3e23a9-6494-4670-ac52-6fc83b894935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78845af-bdef-453c-b559-425aa60ec58b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8179c133-06ba-40eb-9766-4cf30b90bb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77cfd48-c3ea-45f0-9baa-7aa219a6f542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a81701-fecd-4810-809d-d0b2caf74813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd80acc0-68e4-4a1a-86c3-54f0d22edc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c083c16-8ed7-4808-8d02-fd47a13ea71d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d28eab-c600-4387-85bd-769eaa341e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8525aab0-edbe-49c5-83e6-5ed27ede594e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e30d92e-6a7e-4f85-b104-1801c58007e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fb12d7-6579-4367-9f67-d65b3c61883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760c313-8804-43ee-954d-12463348f360",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae5a8e9-1bd6-45ec-8ec6-f674aa9c13d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df9fae8-a06a-4521-8566-fb0e2faa4e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834246e4-862a-4d7e-88c9-9542c2c9e7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00006928-4ef3-4112-b7cd-663cb96220db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4f0177-2f16-4ffb-95d9-cc222bd9cebe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872e73ef-46a5-44c3-a303-c1b060be84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5d7637-04d8-4465-93be-b904af958b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89836a95-73d2-47e9-afff-60f18213a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a8b8dc-0efa-40f5-971a-1bb648dc6e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2689fd-beef-477a-8f79-42e95f7dcf40",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f2cc5a-89fe-47de-8709-c2d0f4be43d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305d622c-f097-4aac-a819-b75c3673c08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bf5e21-7db6-410d-8bf3-0de4d41cd6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb67149-dba7-434b-8604-b027c13e8cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86665e7a-d4f2-4740-a51c-4abebe7a730a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae69dbb-c430-4fb5-8411-836bffefc4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401f93e1-a042-484d-bc0b-d812c5793a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c083c5e4-d7c9-49c3-83d2-63e5417c037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac3bbda-2db5-4a3a-86f8-50fab025d1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a587ccb-d32d-4585-8139-5e50912373ff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade7e524-504c-43cd-80cc-15d3172c33d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c748714-f52a-4a4b-ac9d-50dcaa788d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4cede3-45d0-4f1f-8590-498bde43e13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864244c2-b356-466b-98fc-3ca953b1ba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec82ab9e-8c0e-420d-81a2-3978ca675999",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a90f6-5fdf-42f4-a2d9-e8aa874b2de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e290d2-bf57-4925-a5f0-d5496efd41f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8206484-bad8-4b44-aa4e-d755a2ab49da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628c03cb-dc45-4ee3-9892-0d4f4e8c88e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30d3383-b467-4ed6-8df6-77189248b9f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d440c3-2ae4-4eab-aeea-536640fc95b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c5d03e-7e10-4539-86c3-60c078d22b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e997d39b-67b8-4ccb-aaea-ae8473430cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a098ea42-427c-4c4a-b7fd-ff882233a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690091c-0ba1-46fc-b186-fc80b87bd9de",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4d8819-b8c1-4204-8609-1f9bcc0a9938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3c2661-b6b0-4f01-bab3-0256ffc3777d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ed84c2-bc68-436f-976e-f471b5ddd1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbd39f8-d3d6-4994-b768-57e8cd5b0c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acd1184-bb36-401b-be38-ce0546d35be8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0313c96c-e13f-4afb-9399-339556dd2031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167312a6-102e-431a-a7aa-89312a8064e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c1fef9-67a7-477f-8aa3-7812018432ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93fb456-1c00-4c13-b0d6-ecfcc812c3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13afcb1-7bf1-4564-9127-22dc3d435de4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8baa1c-234f-47b0-af18-88f8a4b23283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a06cfed-0628-485e-a1a1-0f840594c358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3631dcc-0f80-42fd-92a6-b3188e59947c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b257ecf-2637-45d5-bf12-3664470b661a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ee61c-0cf0-4d79-b9c8-197ed36c62c4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e27f013-05d0-4310-8682-2660b3935fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b57b4de-3d0d-4d32-90c5-94dd1d380148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2e93dd-94db-4fe5-a06b-02f9777a4a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fb353c-890d-43a0-ad92-1cf683a32d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2fb3cd-227a-4d17-a50a-6473200108b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62f7fe5-2090-4a0e-9cc7-8f53420a8911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a21af8f-5b46-4ded-a087-24fdea7e9b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b188b3-66ec-41f7-bf36-b37475958015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831721f-1876-44ed-840c-a89d919c7e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848059b6-3b6b-4229-8453-058f8cf6426f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26feaba4-63f2-49dd-802b-bc9a909fe23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a34809-5398-4157-a274-8c031b01dc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfda4de-c75d-4302-86f4-154cc8de4052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb67448-84c6-4bbd-b8d3-5e20123215c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bb6646-346a-4d81-a521-9b2d27e941a0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba7b613-9c2f-48f8-b5e4-d1da020666cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cf8114-16f0-4803-b4db-80b1ca2c67f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd19bab7-99d0-4a3a-a315-76da6930a789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c87b5ab-da57-46b0-959c-3e003026af3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c636f84-e323-46f5-bc32-1dcbac6824a8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8e4666-32c3-4611-9e4d-f6fe3c1ede70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f82e67-ec6e-4a5d-8225-13a468646307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98622496-c094-473c-9a27-563c7912cf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bf824f-3cf9-4e33-8a6f-11e7206de21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2de8fb9-d991-44d9-bd69-fab033557ca7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6d78c0-6c8f-43af-a4f3-f9a48e2cdc37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f03a58-7108-4fca-bef6-861b11a156d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d6fa1a-beb6-4c3a-a759-3e91a74a3789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43562c23-b670-41eb-a3e6-4a5d5cc5ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0929412a-68cb-4c1e-b9ac-62badc84dbc1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b7f3e5-1e7c-4a01-bf31-3e41157724c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68af71fc-04bd-4bc9-868f-41cd59af8b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef5e33-1eff-44c2-a62a-790821a5fffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981d0cc3-8c81-4f51-b40a-6d534bd9b4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e98084-ff55-484d-98cd-131e080b9294",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a530de1f-ed61-4c41-86ec-898ee1fdaa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d47fc3-0ed0-48f8-8e38-d004138debb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af4419f-b07e-467f-9bc8-8e10c9a0a518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b1bf42-df43-417b-9fad-0becf94a0a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d2b71a-9b25-41eb-b048-2e99c7f94e1a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c2d145-5e77-4fa9-81d3-e69c5fe015de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e743a9b6-0e7b-40d0-a447-c4154242b45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ddae86-cc1a-40d1-ad3c-1d0e754e27bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6c63f7-ff39-4416-80c8-7bdb6976ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b94b8-2f65-4488-b7fc-43f5342b7c05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6913f01e-1495-4b0b-aafa-ebbd85775b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37e619b-282e-42e8-9870-82f1f47a5820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd448b-432c-42b6-b249-1a5feb76e622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bdf675-58c3-47cf-92aa-51e41ab0bed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b70115a-29f0-4e48-90b5-77c7aef7b4af",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce5f2cb-56d0-44f3-8e71-c2278a50a539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53bf8ed-1e57-4f73-8dcc-6e18bd69234c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d677a-0432-4c10-b22f-25c90c947441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b65cd72-6f09-4337-8c90-c607d156c3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1c354-e071-410d-9ff1-e32b81cb6778",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88057e81-3f43-42b2-91f2-1777048af428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9ab029-301d-4b2c-b565-2831a67fccd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bdc495-fcb0-4a50-9285-7622e26ee272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0380a632-9832-4a15-a64b-d1c175e42a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75a8ac2-6479-4fdf-a3cb-cf4e7aa93072",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b9289-e5e5-4177-b008-b33c3d4e5013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2dd133-c34b-4f99-b197-63e3fb4085cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea635de-13b8-418f-b7aa-bd0c0d080bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bd721f-8958-47ca-8ac3-15cef6a7723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86bcbea-b1bc-43c1-8a45-bf45fb0d4126",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f92efd-d091-43ae-8419-de115520920b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b012511-3940-49b5-bffa-bc83d63e45ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a8e8ae-2202-40f2-a4e7-a67ed8371468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4498ef42-77f4-4791-88f6-fbb6091dab20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59543c2-6fe2-4d61-83c6-ba1589e94567",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31394e2-7e98-4113-886e-348c327f1e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e5c85d-2248-415a-8d4f-99981e45004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa49da3-46ea-443c-8a16-1d2e13fa1608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be53997-76ac-42de-814e-05675a915e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca24d0e-3835-4aad-a486-4826317d8d4b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da7afc2-95cb-41a2-ac8b-0451ef7dc7b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf124f9-c7f5-4ed8-8342-95d5e20b48fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30de518c-7619-454b-b509-bee848d5a628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3764ba52-7928-414e-a4ea-675776c23728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e030fc-fb66-4c9b-9799-4d2de1cc3379",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10246662-101c-478b-8b46-5e4b025fb5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5873dd88-950a-4e43-968a-f38c114ecb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c6955e-3e0d-45d9-9ee4-13ef20a4c2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c54b0c-9e15-45c6-abbb-8bce6649ea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19432896-1288-4238-8176-5667b0b56cee",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d33b918-ce2c-4e10-b254-6ad57f50c132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2dacafa-69b8-4b4e-aade-1df55fb116fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f424f71-e5db-4c4c-8b25-0814126c5ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24dc68c-2a52-4380-9d66-09abe388b822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64867699-98a0-4b02-b884-8dc3e2ee2090",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8295d6e4-1609-45e6-8558-6ea5307a58cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b9b5bc-1c9a-437f-bdf0-331e765421bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c326341-02c6-45b2-a427-c325ba7122a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09ad291-740e-4a63-94ed-a499428b8b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3219626-a1a9-4f3d-9632-10f58b664e7b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe89075-6afa-4a08-b1ab-582235ef20c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0e012b-a4c6-4f83-aa8f-1aeb5aec5622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16ccc0d-5add-40dc-a082-52d85c63122a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac45941-717e-4f9b-9f86-7a983309c3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90929a-d3b3-4ae3-a779-8b22ef7ff207",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b246c-401c-4e99-a940-67485da1375c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6b5514-2e73-4dd3-9139-b7d58da871fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4111056-82af-4c8a-bab9-036e469f01c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b7154a-599b-43ee-928e-aeb46a99ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96f9760-4fc0-4a39-b61d-eb80272ba3ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de7259c-9ea3-4427-bd2a-cc2c0f15b7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62176bf0-a55d-4363-b738-f536f8a49a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d9535-c606-40a1-87fe-177d2af77e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee3344a-6c31-47ce-a535-125a4d9584d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4451ef83-710b-4a4c-9f8c-a6036be78a4a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5380c5c6-52f3-47a8-bc9f-732a8ddc4b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5251aa00-4f24-4844-8326-a873790c8ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd321d5-5a71-47e2-86be-d5d9af8bda38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c69e0cf-0559-4694-94ed-d6d00e973b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc21bb1-f69e-4a73-9f61-30c3740bf902",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9d9c5-b990-4f3d-9567-e46c44e4bc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8437a1b7-9799-44a5-bfcf-e19e29c022c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8793eb3-02ac-486f-852f-7d1080258388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb29c1d9-e778-4040-b92b-a8b1cf94112f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59adc0f2-d2bc-43f9-ac65-8e6441a481c5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514e5a76-52ce-4251-81f1-8c033d0b8b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597a9d94-47e9-4d0c-9ba2-c09af3a3862a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97bbd48-ca78-465f-8ea3-f295100d7da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0319c04e-59f7-4176-85c2-ec1271e8ceee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c64866-2aab-4cc1-a9b6-4c2f7f5d1cdf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b82d10-0a71-42e3-bdd6-a4c307a9150c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cba9e56-5193-4c32-a1d1-685669e1ec31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748809cc-4d20-46c5-b8f2-96a6010bfe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac84166-65a8-40b0-9c66-a78ce60dcb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c8bb04-005e-46e6-8b09-fddb673ebb8d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feef9483-553c-4719-8b25-a61b63e62330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17724f6d-6147-4d17-b7d9-bd26c2c19c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5921ef64-749a-424f-b361-db0e7db571b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd5ae27-cb4e-45e0-bba1-73fefde88553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711db85b-bb52-4a09-a8fc-4b620a88e866",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16966409-cdb3-4af8-9c9d-3546a5a007da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4654f2-45a8-47fb-b378-f178da772541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35f4b5-9abe-4643-9722-bfeda3683036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb29694c-9a09-4ad5-8f59-c79cbe924ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd671ada-4363-4fd6-80ce-9b2f533c2b4e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7f2d05-110c-4aaf-8275-25a25b147b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ae6681-f898-4f44-a2da-211529735fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400be440-7f08-4ba3-80eb-9024b74df8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c959eb70-b07b-4fdd-a83e-bc1dded875f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb952661-e7b5-47c3-8577-e0a9ccc17909",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6711a9c9-ef1f-4393-bde4-0e4eb8415e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44b59d8-dc80-4908-9faa-2236fd2189de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787a07e8-5a59-49ef-8f06-ea0d4cd08b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e5b8b7-65f8-4f1e-85e1-66c8f17b9dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f9f47-2f6e-43a7-bfa7-502f169211a9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149e32aa-db62-4ee8-b77c-c90608b43689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277079b8-521d-46a5-bf13-11b94cf39dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbb3f2e-6a75-498b-8d49-a67781245a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d24f7c-3516-4df8-b5f1-9dee09cb23d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed8be36-696b-4833-b071-73cbebb6b780",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ee1b1-192d-45c5-bcf5-6f32ac768ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b53a9341-2150-464b-9ebd-1d717035119c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da98872-6bf7-4b8d-8ef4-e5165d289950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0398316d-5bdb-4f9a-92c7-32d43f168089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447cfbde-6753-4d98-935c-a1422dc713dc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57acd969-d626-4409-8e95-f4677336abb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485c5e01-c4db-457f-b124-93145df0bc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b707504-8dab-467b-92c3-db204b0cf58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13764f00-2083-4503-ad22-c568b2d6a3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c72cb8-ce3a-49de-a66b-dd78da8a85eb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b256a7-9df7-4d58-9611-f0122e0adcb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847b55c7-ab63-4e7c-9f83-f3612a8793e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d123d0dd-32fc-41de-b236-94532827823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb06998-3480-4dc0-8010-e51ccd6980f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458fcfd9-734e-4de1-940d-658ae8fc77c0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c258415-ad3c-462a-8966-3fd8f3258980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd710e62-e870-481f-bef1-90b9ab793604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd7e4f1-edf3-4e73-9e48-d47ee2cac363",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304a1379-5029-45b6-bdd0-2780cdbe9b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033a0cbb-01ee-451d-b50d-b07f56c657d8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602548e7-b264-4e82-9f7b-91fe96e898b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1099ebdd-d91a-42a1-b9fe-3e0edc9eb20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191434d7-4b84-42f5-b1bd-7945e952393a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8f286f-8c0a-4e9a-bf5a-52c9d4f58d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767b60a8-1a07-4018-883c-97418f9d6047",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d2d335-9013-45e4-a727-8c500faead39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31515e75-2a5a-4754-913b-766ec5eced33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3e459-bb4c-4a47-9755-d04af36c9c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246e0cfa-e96f-4751-a3d3-cc6cf0fd0945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b402d98c-2350-43a4-ab71-611da04440d0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e89a2c7-9d61-4ce8-a5fa-7b74d33a178a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae05f30-6624-447b-ba14-60d3a271529b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a6a912-0912-482b-9d6b-a1812e80aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b599190e-9f57-42ca-8ed0-ff0ed7db5cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa71ab5f-0019-4621-b0ac-df39a2ed6995",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3c7b9-8914-4867-af2e-5bd59158078e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767f37e9-b6d6-4e3d-a38d-d7f598bc089e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a84685-e6e1-4f1e-b757-5a1a937bd5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8630c8cd-78fd-4499-b3e9-6e0697b56a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e70b053-9900-497b-810e-0ece65c5cdff",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a172d9-7d4b-4b5e-a8ef-60aa1aa18ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad1cb04-79d0-4976-9917-86608ee7dbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632afb4d-e056-499d-a694-523230810fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aef186-c24f-4247-8c72-820c6182194f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d544e-0dc6-4041-bb06-c932a794b535",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe52f1-e4d4-46ed-ae27-e81660a61169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75aca891-d345-44dc-a216-dda359b0c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bf1e20-e0b1-408a-a8e7-77341091e578",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab45d5c-b8da-4996-841e-d367d807fcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32853006-a666-490e-b175-70319d0ba373",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796f2fa1-f671-4047-9358-2df5abd9f8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3821848-520e-4ccb-bb0d-7146a83f35e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a735d7ac-f14e-4c9a-a719-f32b8ec9b842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f216c55-e4d3-4d32-a054-fd9258cc210a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769ca348-a9aa-4a33-8058-f8f512fe938f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d0968fb-dda3-4a3c-9633-37bf9f61408c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d85df670-a40f-45ce-a5a6-fb907b61bc32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c5a57c4-f547-46c4-9b2f-b1368e169f3c"
                    }
                  }
                ]
              },
              {
                "id": "cebd1df4-8d3d-4f4f-9dca-d8e17ab0edce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "715ceacb-2d24-4c7d-92d3-125f6bea81fa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec4a3ba-13cd-4d99-a27d-2a6683c56a32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f518ed55-6c3c-418e-92f2-96c92c4be35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb3d362-f29d-4817-9e41-0f27b0e50ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc4fd212-cfe2-4226-bd26-58bc1b8734d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d99928a3-77a8-45e8-b440-7cbc2b685eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae28e813-4fdd-4f59-8e75-a4c1e6101b11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "debbdbb2-52ce-4dee-bedf-b8bc103a2743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83c38405-2f08-4b07-8323-79fef43f827f"
                    }
                  }
                ]
              },
              {
                "id": "72ef5afc-1311-4c59-abae-54503ef948c5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0d51aa4f-d073-4b73-8ce1-27fd42751118",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7ef00f-445c-45be-8616-0153ec33a882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a0b1068-b28e-4987-98bf-4919ef1f7a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae762ddf-b35f-4199-aa29-0eea51f28bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd2c26b-c33a-4b88-a397-18823af1ec48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae09fe38-c76f-4b83-8e72-7778a39dc46b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6f81098-7522-4268-a5c9-066895e4f0a4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5025bfa8-479d-40c7-95ff-7fe1c7aac6f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5e996a2-1c25-4dac-9ca9-ad05fa6a12da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd15fb4-b364-4f12-91d0-d127cdeea8f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebc65cc0-33e8-489d-ba96-62e16dc24716"
                    }
                  }
                ]
              },
              {
                "id": "2180ff62-ad0f-4a1b-b6e7-df7f73dfef8f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31272d39-3692-4b63-be5c-10e38469002d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d612011c-041d-44a1-8b7a-fec1d04eedfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca349e67-63f5-41c3-af35-04c19b7caef7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2f98f26-19ff-445e-9a04-6f01aabff693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01e8a1f8-e025-410a-bcef-2167ded5173e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb29d9d0-0136-4b6e-8b4d-f7f25a3cf365"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2aa19fc-967f-45b1-b9af-2818106e1084",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c426233-f3f9-483a-b292-88cace76a61e"
            }
          }
        ]
      },
      {
        "id": "b89a1955-1b05-43be-9b2a-7a4be8f82375",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "95afbc10-89e6-4574-9368-44613b89443e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adbc79d9-df18-4101-9fde-bc38a68fc8e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ccef201-fad6-49f8-a0a1-766fe9399d5e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c58d05-6392-42bb-93c3-b2c2de815720",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "151ac0d0-36b8-4d34-8327-2b2310f8b28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8015f54-60da-44a9-bc92-1085c004cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34789886-0b35-42d0-8d57-9f55fbbdd36f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b16dd37e-39c6-4750-b1f3-aa79e7fa3567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a04dc296-157c-4485-ad60-198ac12a1226"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd55e596-f8dd-4a6f-b003-1e3e730bb916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "214d207d-df99-45f4-bacb-7753cd0b8088"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dac8f47-735c-4263-9121-baa7b6209776",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1186ef4e-5009-4ab9-974d-d7042d32e6c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aade035-7012-4f97-b992-004c1b1f5c24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79cb55f6-fb98-4525-b65b-906aa4e8e59d"
            }
          }
        ]
      },
      {
        "id": "667840b5-5deb-4a9d-afb7-5ad4d17ec465",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c70bd68-f150-4ca6-8881-6cd7be9f565b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45b2f2fd-af9d-4b0d-924b-ffdcd893b224",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a07a49c-b84c-4db1-a15c-ee5ee794aefb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d67c14c-9d1c-4e80-8dfb-9679685c32cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eaa7c9c-39a5-4e8e-a09d-ebb84368e392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789b9644-8b16-4b39-b907-b922e62de4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de368a15-ae7f-4780-b480-1818aa566fa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e591203-7664-4587-924b-b8fb5a004214",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6638c384-eb98-419d-925c-fc93b40ac501"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b77f6d0-6a90-43bf-9d58-318209a01828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298ab3c7-0242-49a4-961c-09799eb0e4a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb3b0040-1dc3-4e6d-80b2-0b528ed2ad7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74ccc513-acfd-4335-a151-1e09d5b8a7f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89460769-386e-4c63-9a34-49e9803eded0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2c017a3-9b82-46de-9ddf-04d8823b5913"
            }
          }
        ]
      },
      {
        "id": "a5df803b-664f-48f0-8b5a-f022587860e9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2e60ea3e-c3bd-4623-b5b3-d426dfe8815b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce5ef8e7-2883-4bae-831a-69267ee701de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82a1a3c7-670c-488d-a493-a90e1f55c24b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3003229d-530a-4b9c-9d37-c9aab9b58618",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d44e524d-9aa0-4133-b882-40e70f7b7619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ce40d0-3e95-405a-b698-1a29f98e3cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c90e6e6-1887-44e8-bf55-1e948e2cb71a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2034830d-b362-4b8c-9e09-99ff41f582d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a29da57-64f2-4d1a-8414-4b331145f88d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f68afa9d-78e5-4871-b53b-3990c5ae2484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e3c0e87-f7ba-4cda-a709-47dda52a236d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b09960e-1241-44b5-9ed7-1a30d94b5ba0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4389a611-2f96-4a3d-a98f-9b16d5115c31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71f10f18-82b8-43c9-9029-66eb9ba96beb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94e27c92-5789-4a12-a6f1-3aaf7c4885c6"
            }
          }
        ]
      },
      {
        "id": "99198af4-ebae-48cc-8a50-0a77adab5210",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2b4ff86-2876-4e0c-ab7f-c30a914483ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fa1a813-8f9b-4898-9d57-4716022f8394",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3f634163-2614-4841-a31f-d5d23ee39ae7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4314c587-9154-4ee5-ad9e-f14da3782fa2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5743f4ba-02b2-4b31-84ee-5338d669cb73",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 318.4049295774648,
      "responseMin": 19,
      "responseMax": 7008,
      "responseSd": 874.8182677133565,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691886806799,
      "completed": 1691886909630
    },
    "executions": [
      {
        "id": "8d622d4a-0ef5-47fa-8828-6ec61a119216",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a9ee1311-6d6a-4b80-8e13-af10a9d375d2",
          "httpRequestId": "7e2d5f44-1f7d-4305-a18d-9435947ff921"
        },
        "item": {
          "id": "8d622d4a-0ef5-47fa-8828-6ec61a119216",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0458e3cd-3518-4e18-b298-c59fac6fff88",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 0
        }
      },
      {
        "id": "2e303353-1ca9-49f3-b5d0-03479550de81",
        "cursor": {
          "ref": "1dc00f24-9b9d-4765-9c47-48fca327a98f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "af7e0990-b3fa-436e-a7a8-205e53cf1894"
        },
        "item": {
          "id": "2e303353-1ca9-49f3-b5d0-03479550de81",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c1ab32ce-cc76-4e9e-b97b-6d9d4302cc01",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "fd8bf394-4c0f-4f72-be91-a6fd9f42f42e",
        "cursor": {
          "ref": "b5bee2a5-9baa-45ee-80ca-9c94dead017c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1083bb99-5b50-4160-b709-61775ef5c94a"
        },
        "item": {
          "id": "fd8bf394-4c0f-4f72-be91-a6fd9f42f42e",
          "name": "did_json"
        },
        "response": {
          "id": "c1b58d09-6b86-4978-8017-d8b6c9bdc1c9",
          "status": "OK",
          "code": 200,
          "responseTime": 1132,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa9c45-1f39-431e-8ba3-04f0d065ea9c",
        "cursor": {
          "ref": "957a4489-dbd5-4b22-b84a-be9b0f30379e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b0d3e09-847c-4435-8ba0-f9c7a7d73d4f"
        },
        "item": {
          "id": "76aa9c45-1f39-431e-8ba3-04f0d065ea9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0b857c3-f85e-44ec-b4e4-3bd70c8d3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa9c45-1f39-431e-8ba3-04f0d065ea9c",
        "cursor": {
          "ref": "957a4489-dbd5-4b22-b84a-be9b0f30379e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b0d3e09-847c-4435-8ba0-f9c7a7d73d4f"
        },
        "item": {
          "id": "76aa9c45-1f39-431e-8ba3-04f0d065ea9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0b857c3-f85e-44ec-b4e4-3bd70c8d3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb06e477-3d86-4d3c-9e49-b800dfe98302",
        "cursor": {
          "ref": "bec44d12-fd48-4489-8a6d-fdd1df72b774",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfa26c7d-41b9-40dd-9fcd-c3437b3f011d"
        },
        "item": {
          "id": "bb06e477-3d86-4d3c-9e49-b800dfe98302",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9b595124-c6a5-41ff-913e-936c6217372f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 350,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0e1354-8be5-48f9-9ba4-feed303fd654",
        "cursor": {
          "ref": "d6b3100f-9a00-42d2-b1d6-506e2d1a5073",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d1c133e4-56ea-4f29-a2e0-e64f5c3501f1"
        },
        "item": {
          "id": "bf0e1354-8be5-48f9-9ba4-feed303fd654",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "660a0cf1-d006-4e5a-80c1-7b0c6dcdb535",
          "status": "Not Found",
          "code": 404,
          "responseTime": 324,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019ed001-107a-4ada-a697-c3097657b48a",
        "cursor": {
          "ref": "653f0567-769d-48d2-8194-184592da9589",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2c84d286-7e24-4618-a5f3-5e2fa0b51ee9"
        },
        "item": {
          "id": "019ed001-107a-4ada-a697-c3097657b48a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dabc1795-e56d-40bb-b34a-70fcf684dd1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c745d7a-c3f6-428f-b21b-90f93b89ae3f",
        "cursor": {
          "ref": "91e92b7c-1814-408f-840b-863143bcb332",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d297ecb1-5fa3-4037-9935-c583f05056e8"
        },
        "item": {
          "id": "4c745d7a-c3f6-428f-b21b-90f93b89ae3f",
          "name": "identifiers"
        },
        "response": {
          "id": "d24d2fed-b2a0-4e75-8498-4942547cb5a0",
          "status": "OK",
          "code": 200,
          "responseTime": 1196,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cf40f6-2eea-4099-baa0-1abf6ba62b10",
        "cursor": {
          "ref": "a39190e5-e82e-4638-adde-ccf438f6021d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1e84a1a-9a29-4a86-904f-dd484012e90e"
        },
        "item": {
          "id": "52cf40f6-2eea-4099-baa0-1abf6ba62b10",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d8aeb037-f5be-4dcd-aa0a-7307287cc60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee89814-95ef-4f7f-a886-519e4c6e7a33",
        "cursor": {
          "ref": "f5299a5d-09a8-44f6-9822-5c4929d11b6c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3433673d-f979-46f3-bc69-34849d23d359"
        },
        "item": {
          "id": "fee89814-95ef-4f7f-a886-519e4c6e7a33",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ccdebd84-6f67-42b9-8486-11841d0b220c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157cc548-0fb9-416a-98c4-ae0c423cbfc3",
        "cursor": {
          "ref": "5a449d9e-4cb8-42e2-aa26-5542c93cda16",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8bb6b9ed-55dd-46a4-a48c-51ea2cc28974"
        },
        "item": {
          "id": "157cc548-0fb9-416a-98c4-ae0c423cbfc3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "220b5f7f-ae39-452f-ae6c-84a5511c7c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce0778-f89c-4306-8428-c12c86182d8e",
        "cursor": {
          "ref": "4e44e8f3-b8d3-4093-9436-fb91f87b4e57",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a12ae4ab-f1e0-4aeb-8f14-a4d8f8c3a79d"
        },
        "item": {
          "id": "03ce0778-f89c-4306-8428-c12c86182d8e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "15a83821-6d67-4013-8fd1-8c85879e17b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8655e6b0-d60d-4768-9be8-ca1efe6a745b",
        "cursor": {
          "ref": "a08ad7af-2e85-47ef-bca7-5c5832f15ca2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "40b1349f-45a0-4de0-be23-4b34639850e7"
        },
        "item": {
          "id": "8655e6b0-d60d-4768-9be8-ca1efe6a745b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "03cb4988-3b87-4f8e-b544-5213a024d4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae30ab-5b06-49cb-a727-d719e83c9447",
        "cursor": {
          "ref": "81df4f2f-16cd-4f40-a553-48a66b5498de",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe933ffd-ebd7-45a4-bb94-734368396cba"
        },
        "item": {
          "id": "e0ae30ab-5b06-49cb-a727-d719e83c9447",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1c57a414-4638-4989-9184-97c7e5b8fbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad137ae-fd13-4cc6-b460-34bbad4d4d6f",
        "cursor": {
          "ref": "28d729f1-a8c7-4f33-a632-e891885b0bfc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10e8d45c-30eb-4b55-95ff-5c9692ae568a"
        },
        "item": {
          "id": "fad137ae-fd13-4cc6-b460-34bbad4d4d6f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "efb49262-32e1-403c-91b6-604ad162e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648b7ed-0b0c-4e52-8ff8-21c6cf92233a",
        "cursor": {
          "ref": "a9f5d082-a09d-498e-a5c9-7ff0be63e433",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "17406225-40b7-4f3c-b043-5ce31ea77b99"
        },
        "item": {
          "id": "6648b7ed-0b0c-4e52-8ff8-21c6cf92233a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9553ff43-e638-4c2d-be8e-7678db5d5ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3900ecd-9b20-43bc-93f7-8adf9d0d6d73",
        "cursor": {
          "ref": "90d8605a-267e-4246-b0ec-b8c7ae93bb0c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bcf52634-8350-4418-b6f1-7b095a36ac5e"
        },
        "item": {
          "id": "c3900ecd-9b20-43bc-93f7-8adf9d0d6d73",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6b6486aa-897c-4a62-9458-6c77da1dc8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa7ab32-f06f-41f3-a335-60c0308f719f",
        "cursor": {
          "ref": "bf2aabc8-d287-4ca7-9957-5459bfacc7a4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9d77a412-886d-4145-95a9-5a86bba0aa9e"
        },
        "item": {
          "id": "6fa7ab32-f06f-41f3-a335-60c0308f719f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b960bdcd-716a-4096-8799-4df40b4d32ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e352bfad-d8be-4e4b-bbdb-4db66d88aab6",
        "cursor": {
          "ref": "afaa4798-afb0-4c06-a28a-72b467122c6d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6babca40-6ec4-46f7-b40f-53ce045d1094"
        },
        "item": {
          "id": "e352bfad-d8be-4e4b-bbdb-4db66d88aab6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75a5aa28-1124-419b-973d-6876f272a61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bfa951-6381-4753-a8c5-365572bbb625",
        "cursor": {
          "ref": "f464a6f6-44ee-42dc-bc4f-cf8cd63c8828",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "00e21060-0d1a-49a6-be9e-eeb72fcde840"
        },
        "item": {
          "id": "13bfa951-6381-4753-a8c5-365572bbb625",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3781ea9d-7f2e-4d66-a401-e6549d2c0ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b877e3af-035c-402d-8792-700468a518ca",
        "cursor": {
          "ref": "f3edc397-b0a3-4711-b807-f56d7a3651ae",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43f724b2-d2a1-489a-8365-ea1884b4c9f8"
        },
        "item": {
          "id": "b877e3af-035c-402d-8792-700468a518ca",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4adc9a9c-cb01-4b6f-8c70-23ceb03d3755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a34efb0-e694-4cee-8d71-c68d744ac61f",
        "cursor": {
          "ref": "76af0a48-2e3e-47dc-900c-c4554a51851d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "93409740-c96f-4463-bf60-f9a839867ea2"
        },
        "item": {
          "id": "1a34efb0-e694-4cee-8d71-c68d744ac61f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a03b7385-5a99-4560-8b84-cbafa971597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d39169-9f8e-4e25-a521-5e69bad219e6",
        "cursor": {
          "ref": "79d99aff-1616-40e4-b057-c2059ebbfd7b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c6c4936f-0b0f-4350-8c47-bf6ef6699e80"
        },
        "item": {
          "id": "23d39169-9f8e-4e25-a521-5e69bad219e6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0f1cf780-628e-4e4f-bbf0-3e64df216791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c723e86-1522-4693-acdc-9065a3ae7ff9",
        "cursor": {
          "ref": "4e7a8ad6-6777-4eeb-862e-c2da556ccfa1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "36fe3656-09cb-41c3-9a39-bc6a96bb83f3"
        },
        "item": {
          "id": "7c723e86-1522-4693-acdc-9065a3ae7ff9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "21c07722-0dee-4360-817f-c3b1d72283eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfcf67-381e-4b7a-a6a2-439514df2bc6",
        "cursor": {
          "ref": "9c1af75f-33c9-41d6-b7a7-af3ad7067703",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b3c1b3c6-b606-4829-b9a5-1f0326c59ba2"
        },
        "item": {
          "id": "05bfcf67-381e-4b7a-a6a2-439514df2bc6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "05d2b54f-dac1-4654-8224-5397c1f77f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d8309b-e643-4806-b4ac-35cce987561a",
        "cursor": {
          "ref": "f3365d1a-8aa4-4c37-b59c-14756d13d7e5",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7da1983e-41a1-401a-9e16-170e0fa72e6d"
        },
        "item": {
          "id": "30d8309b-e643-4806-b4ac-35cce987561a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f136c86d-575b-4b9f-841c-a09773533de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4704a4-86a9-4d30-b3cd-9ecc5c84fe60",
        "cursor": {
          "ref": "79a5acf7-9e41-48a5-9887-d9d0560c7395",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d210cff-7939-4bcc-b52d-e5109c3e474b"
        },
        "item": {
          "id": "ec4704a4-86a9-4d30-b3cd-9ecc5c84fe60",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "302772ff-4f4a-4d1b-968d-bf835e541c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf3c62a-d330-4dec-ae05-ab512cefd585",
        "cursor": {
          "ref": "732104ac-dc2e-4435-b856-d427aa5dfab6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6d3a6ed4-db7f-4a49-b21b-9f1cde77b7ab"
        },
        "item": {
          "id": "0cf3c62a-d330-4dec-ae05-ab512cefd585",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cbca1b8d-be7d-456e-91b0-76d57008183f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925be31f-0c29-40d2-83e3-6f0114c6fa0a",
        "cursor": {
          "ref": "6da6f6e3-857c-413b-aa1b-94364f65f50f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "192a2d3a-8e86-4457-a3a7-0bca1b6ab627"
        },
        "item": {
          "id": "925be31f-0c29-40d2-83e3-6f0114c6fa0a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6876d0b8-57d7-479a-baea-484ce77e88b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeca938-aaa9-46f0-b7b4-19f869181537",
        "cursor": {
          "ref": "e0cd57af-c8e8-411b-a3d5-9b27c619dba4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "570019c8-57b1-4f7d-965f-2cf12550e85f"
        },
        "item": {
          "id": "dfeca938-aaa9-46f0-b7b4-19f869181537",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c88ac5de-3f5a-41f4-ae74-098079058256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3469ee8-cce8-4e7f-850b-bbb3cc26ec58",
        "cursor": {
          "ref": "83537424-bcd8-4599-8523-0c5945e305b0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7deb760-cbb7-4e67-8b10-9310627fa4b3"
        },
        "item": {
          "id": "f3469ee8-cce8-4e7f-850b-bbb3cc26ec58",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "161326ce-8ffd-4969-b2e9-d47d8a5598c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db744171-0cbc-41e1-ba4b-ab007e8727ee",
        "cursor": {
          "ref": "7736c5a6-ae15-4f5b-99e0-dced07e6ff9e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c04bab5a-f621-4846-aab7-590e4b1519c8"
        },
        "item": {
          "id": "db744171-0cbc-41e1-ba4b-ab007e8727ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ff02fbb9-08fa-4add-ba2a-1f06561dd992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf3668-6e97-4170-91c7-f6b40412566d",
        "cursor": {
          "ref": "183a19d3-bfaf-4d33-a9d4-ede6f7e0414b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eddd331c-3379-4aa0-901b-276b86b6dc91"
        },
        "item": {
          "id": "fecf3668-6e97-4170-91c7-f6b40412566d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d6123acd-660c-464c-8c94-0564e2046350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb2dad4-9234-460e-8e8e-54c275b5b093",
        "cursor": {
          "ref": "d805971f-b085-4e3f-b9a7-001cddfea345",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8d8a4631-40ea-4132-a9fa-11d459f2599a"
        },
        "item": {
          "id": "5cb2dad4-9234-460e-8e8e-54c275b5b093",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "993ebc23-93e7-4ebd-8f2f-c3ca73e5c633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db658ee1-395e-4f8b-ab6a-0c4c08c26820",
        "cursor": {
          "ref": "d7bc0402-92c7-4f4b-b436-6aa43ff8ae81",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "645e89b7-d32e-4616-9d8e-e9c6061cdf17"
        },
        "item": {
          "id": "db658ee1-395e-4f8b-ab6a-0c4c08c26820",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e614ad12-133f-48eb-8212-d7eb9527a7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f74f183-6033-4e38-aae3-68f35addc823",
        "cursor": {
          "ref": "16122aba-bfb6-44d5-b698-a74545db40b8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "24dba38d-769b-410e-b579-f17b2eb68ec1"
        },
        "item": {
          "id": "7f74f183-6033-4e38-aae3-68f35addc823",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5ed4c6be-5c2c-4288-a710-87e7318a7a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a44dc83-2a4e-4325-98bc-ae5ed8ffbb1e",
        "cursor": {
          "ref": "60a49ccb-66c9-4a80-ac01-181451a1db22",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "610c5ace-be0c-4928-9e8c-d0c617ce25cc"
        },
        "item": {
          "id": "6a44dc83-2a4e-4325-98bc-ae5ed8ffbb1e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed09770f-ddb5-4293-b343-a5067d8d9896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4ac4be-cfec-4aa7-8d9d-28498ebaa357",
        "cursor": {
          "ref": "5fed4b16-14c3-4dfc-a555-39d4f89c5b46",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "32bc888a-2ff7-4a1a-a8b1-e10dacf25532"
        },
        "item": {
          "id": "2e4ac4be-cfec-4aa7-8d9d-28498ebaa357",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1b105f30-d2d1-4cc3-9d86-64c101f11fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584da63b-2d6e-4a5c-b79b-bd88a5d18fe1",
        "cursor": {
          "ref": "a5872c54-d336-4938-9b7f-4f831a722a99",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6f0829b8-0739-4103-a392-f559cffbdd6e"
        },
        "item": {
          "id": "584da63b-2d6e-4a5c-b79b-bd88a5d18fe1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b5609186-431c-448c-b8fc-84ab2bb825a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d9fd5b-513a-469d-81d2-61a206a6e088",
        "cursor": {
          "ref": "5208bf00-8b80-44a5-a9e8-40d4f4d2da54",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "92500a77-2392-41aa-91ee-335992794049"
        },
        "item": {
          "id": "96d9fd5b-513a-469d-81d2-61a206a6e088",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c44cdea2-411c-4369-a199-8dffea15585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055cac57-8905-45b0-bbda-a811cf70b56c",
        "cursor": {
          "ref": "63642db0-785e-47ef-ba66-0b82eec151fc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c897502b-7fdb-4f12-8409-9eabdc215f3a"
        },
        "item": {
          "id": "055cac57-8905-45b0-bbda-a811cf70b56c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0a6a7f90-9fdc-41a8-a7a6-b2e96b884184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a594f9-fa23-4548-a627-cb8616fe5c33",
        "cursor": {
          "ref": "d6b20c98-c131-4328-b256-5410a805e40b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "04cb7829-a1fa-4c10-be48-c804dcedeb1d"
        },
        "item": {
          "id": "36a594f9-fa23-4548-a627-cb8616fe5c33",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c024cf78-826c-4900-8b88-af890f5c2db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97889362-f42e-4b1f-ae1c-008bded4d3e5",
        "cursor": {
          "ref": "5cb3390e-c43b-4880-b6cc-ec8a4f019646",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e3702baf-f351-4d45-8cd0-ca66b31c5f64"
        },
        "item": {
          "id": "97889362-f42e-4b1f-ae1c-008bded4d3e5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27a652a2-c159-484f-b541-cb620ca88ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3af86e-c392-41dc-9753-d88e424469dd",
        "cursor": {
          "ref": "78aa2007-86b5-4f33-99c6-8a8bcbc971d2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aa464e20-1b57-42cd-b962-af191a43a8c4"
        },
        "item": {
          "id": "bf3af86e-c392-41dc-9753-d88e424469dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ac4794ae-c59f-4c60-b96a-e61b21bab867",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f17c1-64e8-4abd-9d97-3fd47df41267",
        "cursor": {
          "ref": "db12ef45-7974-4aaa-879b-f2fa6a32eb2f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53b95b04-c8f0-4105-acec-139b526790d2"
        },
        "item": {
          "id": "855f17c1-64e8-4abd-9d97-3fd47df41267",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3155e05e-2dcb-4546-aa6d-87efac8d554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847113ab-b70c-41a6-94fe-2652e16dfc19",
        "cursor": {
          "ref": "59e5a8f5-6c32-41b2-9240-d98d64de6353",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1926a9d1-6450-4085-874e-f756860074bf"
        },
        "item": {
          "id": "847113ab-b70c-41a6-94fe-2652e16dfc19",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "65dc33ee-8f41-4435-8922-288d66a51d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2791db5-abf0-4c4e-917d-d2fb3d52170e",
        "cursor": {
          "ref": "11de0e6f-cb18-4306-81c2-de362690b449",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e88b01fe-d2c3-476e-a1d4-f61c0253428b"
        },
        "item": {
          "id": "b2791db5-abf0-4c4e-917d-d2fb3d52170e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc00b6c3-3d52-49d2-bc1a-5a5ecdc70969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fcdbb5-d66e-4a8b-aeac-04745b297f0e",
        "cursor": {
          "ref": "5495ede6-a3d8-4ab2-808c-c5b9f2f7a0eb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "403f09b6-d20d-4541-903c-2e57df087b94"
        },
        "item": {
          "id": "a7fcdbb5-d66e-4a8b-aeac-04745b297f0e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0a3d7e59-32ba-4276-9f68-9afb41ce88e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4923a36-5557-4462-ab0b-a93e4c405fec",
        "cursor": {
          "ref": "2373c114-1dff-4b0d-9f18-b38733a35e52",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "27160f20-3c37-47ec-aa16-8e7b7d045dbf"
        },
        "item": {
          "id": "b4923a36-5557-4462-ab0b-a93e4c405fec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f017f61b-dab1-4394-9325-2dc44385f456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db346cc0-307f-46ba-ab8e-f2e6d0304ed9",
        "cursor": {
          "ref": "266ba094-3491-4da6-a181-e7932aff60f9",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "09cb9cf8-51be-407b-ac1b-a3ac0fe30ff2"
        },
        "item": {
          "id": "db346cc0-307f-46ba-ab8e-f2e6d0304ed9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eb3b0a4c-b51c-4d11-a19f-ddf1f00cb8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad51b60-9d2c-4388-854d-5d0788799f26",
        "cursor": {
          "ref": "5acdd45e-3185-4959-80b3-2c9d360f1eb6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "25ce459e-ce23-42d9-b717-0cf64db826ae"
        },
        "item": {
          "id": "2ad51b60-9d2c-4388-854d-5d0788799f26",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "750d07ba-d332-45fe-9e55-c945347bfa4e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 576,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a84bca-18a5-405b-ab62-2ab2e8fc11a5",
        "cursor": {
          "ref": "6c1f8891-98d5-41fe-86cc-7acfec52b7d8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "68b3f465-c6bd-43c9-b441-902712aec33c"
        },
        "item": {
          "id": "b1a84bca-18a5-405b-ab62-2ab2e8fc11a5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "04a958f9-09f2-4af9-a2ee-d3e8e1c3708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac48336-e903-4568-b176-f3331e273d03",
        "cursor": {
          "ref": "8dc56c7e-8001-46c6-abd9-92a3f748fcc6",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a7c548bd-fabe-4d46-bda5-d9cc690fa113"
        },
        "item": {
          "id": "2ac48336-e903-4568-b176-f3331e273d03",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "84301be4-1186-4d93-aef2-596993f28bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a0f115-f176-4929-bc5f-797e3d1fd4a2",
        "cursor": {
          "ref": "473e3d60-1113-41da-9cfa-3a6521bbb01b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "38da558d-befd-4163-901b-9e7e87e8f667"
        },
        "item": {
          "id": "37a0f115-f176-4929-bc5f-797e3d1fd4a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2fd911b6-219e-4a79-956c-fe466ff32dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960d3f9-254d-4a7f-a694-0f60afef0303",
        "cursor": {
          "ref": "2d414b95-cfaf-4dec-80ff-2c59840026ec",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f3b7cf65-656b-4e27-9c77-594484ce29d5"
        },
        "item": {
          "id": "5960d3f9-254d-4a7f-a694-0f60afef0303",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3be31729-1274-4d6c-8d32-b3ff577f4a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ce82ec-e073-421b-b21f-68b7a1a30dd1",
        "cursor": {
          "ref": "937a5cd3-5b3e-4d8f-a407-2920e7328a11",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4ea8fdd7-67c4-4adf-b0dc-778296eafe5f"
        },
        "item": {
          "id": "b9ce82ec-e073-421b-b21f-68b7a1a30dd1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "81193d9a-3099-4dce-81ee-2a451aab4260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c12b8e0-51a6-499e-b2e0-6732775259c4",
        "cursor": {
          "ref": "1946644a-f7ee-4ec6-9146-dff33839e8e0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5e6cab0-084e-4393-97a4-0b0360afbeb8"
        },
        "item": {
          "id": "8c12b8e0-51a6-499e-b2e0-6732775259c4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "11759eed-eae8-491d-8e61-cfcde99e1807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f311de1-a4ef-488c-bbee-a5213343f22c",
        "cursor": {
          "ref": "f76f0798-e6e4-421b-9488-b73c1a9551c2",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50bf36d1-c17f-4267-a41c-7cacd7c1dda1"
        },
        "item": {
          "id": "6f311de1-a4ef-488c-bbee-a5213343f22c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c9621f14-7b19-4373-842f-ebf042a819b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c513c6-bc0b-45ab-9413-f978a2162544",
        "cursor": {
          "ref": "c59105ba-2a50-4206-b91d-aed78c6afb31",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27c9dc29-79b4-452e-a79d-fa4b764037de"
        },
        "item": {
          "id": "86c513c6-bc0b-45ab-9413-f978a2162544",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "29d264ba-fea1-4546-9ded-fee68b778308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05481cb0-7be8-4e9f-9485-7c060827dcbb",
        "cursor": {
          "ref": "ca564358-6564-4afa-9eff-890ee91a524f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "89887163-7fe7-4815-b7f9-c3acdb8f4966"
        },
        "item": {
          "id": "05481cb0-7be8-4e9f-9485-7c060827dcbb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e2df0cb-e611-44f8-ad89-c153bb7a06de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b40290-7ee1-41a6-b8ca-4aa647a1b11a",
        "cursor": {
          "ref": "2001b171-8688-421d-baef-2db57eaef42e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "682e8715-d60f-44b2-ae1c-fa5f8cd44108"
        },
        "item": {
          "id": "47b40290-7ee1-41a6-b8ca-4aa647a1b11a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a760ea6c-bbfa-4a1e-81eb-a452536eb35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82de3bc-30da-4f12-8e1a-8f4e655f6460",
        "cursor": {
          "ref": "d7eaa20b-8d2a-46c1-882a-ca720ba17193",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32848cc9-dcd4-485d-9027-9da795107120"
        },
        "item": {
          "id": "b82de3bc-30da-4f12-8e1a-8f4e655f6460",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "71c10d8d-5a77-4830-a6d1-c2783012a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2717727a-2a9f-46e9-891f-c934be449c59",
        "cursor": {
          "ref": "bf0c8bbe-5805-4542-b480-ce098ae1af7d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "83bef02c-ea58-4def-b4d8-d6cc42cdd6d7"
        },
        "item": {
          "id": "2717727a-2a9f-46e9-891f-c934be449c59",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26c83a56-1610-4176-b691-7a957a3b72ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df7e73a-49da-4cd0-aaba-42f90c17c99c",
        "cursor": {
          "ref": "e887bdbe-5e41-485b-8044-2a49cff524c1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0edd20a7-1305-4846-a00f-245297fea4e9"
        },
        "item": {
          "id": "0df7e73a-49da-4cd0-aaba-42f90c17c99c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c851e06d-c869-4470-8e7e-1230956aa15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0974e77-7d01-4fe1-b2a4-9b7f6003bcf2",
        "cursor": {
          "ref": "ac34ce83-f287-471b-9c76-8aeba4696597",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3f7d5531-fb15-4475-8e93-7d9dc5694a55"
        },
        "item": {
          "id": "a0974e77-7d01-4fe1-b2a4-9b7f6003bcf2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f22c66fd-bd72-472d-966c-d27b8737e16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89db4a04-a22b-4eb1-b446-e11103634c05",
        "cursor": {
          "ref": "4cfbb3d4-0ab8-4a32-a6b9-a64e5eac48d4",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a3a47af-8b59-41c6-b684-4643787e0f2d"
        },
        "item": {
          "id": "89db4a04-a22b-4eb1-b446-e11103634c05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "66f1f6db-098e-4b2d-81db-686689be3a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2510ff-b7e8-48a6-9956-851b90e04318",
        "cursor": {
          "ref": "74a84119-db82-41b8-b689-a11b0b34951f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "aa3ede94-2697-479c-b55a-7eab6dbfcfac"
        },
        "item": {
          "id": "0c2510ff-b7e8-48a6-9956-851b90e04318",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cd98b014-2623-4f45-bc0e-a6199c076c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90c0935-29bd-4fdd-8e76-d54e868240ac",
        "cursor": {
          "ref": "84dac299-de94-4e61-8e28-179e51a8afd6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c536041e-22fd-4618-98c2-37ff80674e19"
        },
        "item": {
          "id": "d90c0935-29bd-4fdd-8e76-d54e868240ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c94fcd14-5806-4a38-82a3-48bdf43b1588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cddbbd-da22-4c99-82b4-dfbf5519a899",
        "cursor": {
          "ref": "36980a76-e21e-4613-8140-9e0d31b62bff",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b688698a-dc10-4db7-968a-af13a8cb8d41"
        },
        "item": {
          "id": "62cddbbd-da22-4c99-82b4-dfbf5519a899",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0c858ecd-17de-4c90-99e7-307104757df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c19d34-1b26-413c-a070-e69a0d7ca68d",
        "cursor": {
          "ref": "769480c4-0a03-489a-8a54-481920ac1854",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f51c4eea-837f-4990-a4d4-2264f4666c2e"
        },
        "item": {
          "id": "b0c19d34-1b26-413c-a070-e69a0d7ca68d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0fd17a50-f71a-43e8-83a0-148694c16a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3822ba9f-7329-4e1b-8407-4524cd91069b",
        "cursor": {
          "ref": "921ea39d-85da-4dac-9d2c-95d13f505b17",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6ff3d997-adaf-4976-9c8f-ec5ddd4d709c"
        },
        "item": {
          "id": "3822ba9f-7329-4e1b-8407-4524cd91069b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06ef8adf-a851-4668-b5a4-ff7e25ef9947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebca174f-7b78-478c-a698-6c98cc3730c8",
        "cursor": {
          "ref": "1259e466-4a2b-4877-9f21-002085630c2c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d4c6350-de44-4efa-9101-3983ea854411"
        },
        "item": {
          "id": "ebca174f-7b78-478c-a698-6c98cc3730c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8cfbfd8d-3631-4cbb-979e-9ad43ad36163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56597816-736f-4ec0-b0c3-2b5a5d9c2fa7",
        "cursor": {
          "ref": "6f2d60d8-f2ee-447e-90ae-c60bf96120d9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "986c92e5-c6d4-4770-9346-adfe4868ccfc"
        },
        "item": {
          "id": "56597816-736f-4ec0-b0c3-2b5a5d9c2fa7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3a816ae8-bc95-4f7e-9ba6-2ff596de58f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb576eb-366f-4b6e-9195-b9b42a3a8057",
        "cursor": {
          "ref": "31332cab-e537-4e7c-9338-5a3d5842a2f6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6829604b-2eb6-442e-9086-52b67869f828"
        },
        "item": {
          "id": "2fb576eb-366f-4b6e-9195-b9b42a3a8057",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e1575076-7dca-4624-b13d-5dbee6ba4c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad60049-eda7-4412-ad83-c60080fcf302",
        "cursor": {
          "ref": "614ec8e1-7879-4e1d-92ee-09027b731811",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "51b9eecd-1aee-447b-8ce4-44016b2a7039"
        },
        "item": {
          "id": "5ad60049-eda7-4412-ad83-c60080fcf302",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "150735d3-0040-437c-a62f-768d28c8aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9afa0f-01e9-4958-87b0-19645f07f814",
        "cursor": {
          "ref": "f2dc5fe6-9138-457b-b9a7-9f835a69af7f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb3d6272-c80b-4ca3-9de7-846b84fe2e2e"
        },
        "item": {
          "id": "ea9afa0f-01e9-4958-87b0-19645f07f814",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32be4a20-3e66-486d-b014-ee8f5ef9fcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb77f49-8e4f-4304-8dd0-ba1f96c70db9",
        "cursor": {
          "ref": "f4f675d9-4abb-4e5c-872d-530a5d676cc0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6ad863c5-24cb-4d5f-adac-4cd83a51b0f6"
        },
        "item": {
          "id": "dcb77f49-8e4f-4304-8dd0-ba1f96c70db9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9953a43a-9d63-4b69-b768-f3edf8d9809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a7021e-687f-437a-983b-6c602f704edb",
        "cursor": {
          "ref": "32365001-e4bc-4f7a-b237-50ab49d2150c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b1cecbf0-f871-4fab-a65b-ebeceac926ee"
        },
        "item": {
          "id": "f7a7021e-687f-437a-983b-6c602f704edb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "899d12a6-286b-48c2-b464-8be6b14db7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9c9d11-a6d9-4073-8613-01be8b691643",
        "cursor": {
          "ref": "b68fedf5-95f9-4b14-a360-b470ab872fce",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5a2a4ea-577e-4b25-8926-08bf7239f3c6"
        },
        "item": {
          "id": "6a9c9d11-a6d9-4073-8613-01be8b691643",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a0ac3670-fd5f-4839-b697-20e33fd304d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5facfa70-741a-4850-95af-7e006ee1523e",
        "cursor": {
          "ref": "0be5c182-5e15-4fa4-af5e-ea672658fcc4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a73a6d40-dc8c-44aa-9ec3-b95855ffe886"
        },
        "item": {
          "id": "5facfa70-741a-4850-95af-7e006ee1523e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a4706489-12b2-4511-b804-d69751a93191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a4b899-1e81-4610-af9d-76c824ab99d4",
        "cursor": {
          "ref": "d9622852-9754-4021-af89-a2ad726117f7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b3d35f45-a964-4664-aa56-141abe402473"
        },
        "item": {
          "id": "88a4b899-1e81-4610-af9d-76c824ab99d4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "643b7027-87e2-420f-8195-978e808ae58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c470d0c-56d4-44c8-afd2-31005e413cb8",
        "cursor": {
          "ref": "781efecb-20c4-4292-8069-a5dd140ed9b7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "62c3e4d3-15f2-4099-aa3b-1a88f7f2d840"
        },
        "item": {
          "id": "2c470d0c-56d4-44c8-afd2-31005e413cb8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f9d3051f-902b-44a2-a604-4cdae7475694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1401987-b1ce-4e5b-bbe0-06f40f871155",
        "cursor": {
          "ref": "6b327be4-49ac-4a70-8a52-34f737928ecd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "97dc2b5d-305b-4b36-90f6-0195ee0a861c"
        },
        "item": {
          "id": "a1401987-b1ce-4e5b-bbe0-06f40f871155",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "76049cad-e3fe-4539-bead-c7db1d3c849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b8484-b4fa-4068-a0e6-97f736b636f5",
        "cursor": {
          "ref": "2de53c81-81e0-4156-8b04-216ac3b99046",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d2d8efa6-d634-4555-a6d5-5e1e70a5bae9"
        },
        "item": {
          "id": "473b8484-b4fa-4068-a0e6-97f736b636f5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1cf7d869-c16a-48e0-9dbe-6c54f7523799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a75d670-d72f-4049-beb3-89d1f66270e8",
        "cursor": {
          "ref": "bc2267fa-209f-4447-8935-4bf1e59dbd82",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "91d1529a-7dae-4a74-b474-614a4f1356ac"
        },
        "item": {
          "id": "3a75d670-d72f-4049-beb3-89d1f66270e8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "de26dde7-8d0a-4648-b4ab-b1483793e184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1478146-a109-4add-b612-01ace5b442a0",
        "cursor": {
          "ref": "0287d96e-e227-4684-95bf-4551f8ef327b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17336ddc-9d91-4439-b9e8-7cbb17c4964c"
        },
        "item": {
          "id": "c1478146-a109-4add-b612-01ace5b442a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ead5ef33-3105-4107-818e-8ff2eb08465d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c9fde5-317c-4ce6-8220-8e7111abe88d",
        "cursor": {
          "ref": "c719776a-ef54-4a05-a703-6c797e15bca3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ea8ce53e-66b3-4ac9-9392-bd9c7566ca82"
        },
        "item": {
          "id": "b4c9fde5-317c-4ce6-8220-8e7111abe88d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c63500b8-0fcb-4d6b-868a-562daefdeb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b91b6c-390e-476d-91cd-083da34741ab",
        "cursor": {
          "ref": "0177ed1b-728a-4b23-bcf7-bf193594458f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7955fb06-6426-4ede-94ec-a969caa8dfc1"
        },
        "item": {
          "id": "81b91b6c-390e-476d-91cd-083da34741ab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "df154a52-e917-4134-bab2-f05328bc9c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832def32-963c-469c-90e7-eff1f1954e08",
        "cursor": {
          "ref": "5f5a10b4-7151-4710-840a-9246f7e1b988",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d809ccc0-e185-4e9d-89e1-b958abff8e33"
        },
        "item": {
          "id": "832def32-963c-469c-90e7-eff1f1954e08",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ec1f3e5-70e5-462a-8276-2882294986f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e3949-a867-499b-b8bb-dec1d7621c37",
        "cursor": {
          "ref": "21851d92-ec3d-49c9-847d-f9965d41e370",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c0be3a4b-5579-44fd-ba51-d744e3b9cd1a"
        },
        "item": {
          "id": "f81e3949-a867-499b-b8bb-dec1d7621c37",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c85e46bf-0132-4a0b-afce-ccde96bb4b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756e9cd9-5c8f-4020-b82e-ee006c289d31",
        "cursor": {
          "ref": "3ee39e42-a4df-48ae-9cea-be5797b574a0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9646d0d0-d248-4b6e-b432-e0b92b353c09"
        },
        "item": {
          "id": "756e9cd9-5c8f-4020-b82e-ee006c289d31",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6c3dca81-6422-4957-a81d-079df70ca006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213743f8-c1e8-4057-9fd3-47a41bff3659",
        "cursor": {
          "ref": "609a0fcf-7bcf-4c90-8b85-30953722ea2c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "61b054b1-4fee-4aeb-a5dc-85853141daa0"
        },
        "item": {
          "id": "213743f8-c1e8-4057-9fd3-47a41bff3659",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ea8157b-cdc3-46db-91b0-e12e924e5ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8ef4eb-0b86-40b3-92ee-b58a891373df",
        "cursor": {
          "ref": "f81880a3-52ab-41cf-85b4-438fd54d6950",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be291e74-29fb-4243-9dc6-d48a325c7707"
        },
        "item": {
          "id": "6b8ef4eb-0b86-40b3-92ee-b58a891373df",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f1a68deb-8163-4642-86ba-59e074a9d7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b78d7-fa35-4ae1-b6a1-2165e1b3493d",
        "cursor": {
          "ref": "baa989a5-fd5e-4194-9259-5a9017d5b9ce",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e23959ba-5be5-437a-ac90-ead2388b31c9"
        },
        "item": {
          "id": "d55b78d7-fa35-4ae1-b6a1-2165e1b3493d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a0b2612d-3cfb-467a-989e-9a54ba12a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9797295-27b2-4988-9d32-7900adb6b236",
        "cursor": {
          "ref": "1ddcc7c9-deb2-4132-a2f0-c752c12aea27",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "03439af3-5c86-4e78-be79-2fc48417c087"
        },
        "item": {
          "id": "a9797295-27b2-4988-9d32-7900adb6b236",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "39fa60d0-8235-4b87-a0fe-8136419ef9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c91529-891b-4de7-b1f5-43392f11fa83",
        "cursor": {
          "ref": "819e07e8-0bea-433b-b915-78a3bdb585f3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d8fc5f40-ad57-4a67-a2d9-c7aebf4adc32"
        },
        "item": {
          "id": "53c91529-891b-4de7-b1f5-43392f11fa83",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0530f043-4b52-413f-9e43-88271c2b384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29921979-2625-4660-a24c-4c190e46af73",
        "cursor": {
          "ref": "6e2e7e3c-b9f9-446c-a4d1-44034fd2f592",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6f6f43a2-9647-4c24-b649-85f4d6974798"
        },
        "item": {
          "id": "29921979-2625-4660-a24c-4c190e46af73",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0769ee3c-3a9a-475a-af57-2013e78b3704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae69ea-7c48-44e1-bee7-f798ba383cb0",
        "cursor": {
          "ref": "fe76b12d-d009-42cd-a481-20affc96846d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f323ae14-78ee-4ee9-af30-d7d1939cc219"
        },
        "item": {
          "id": "81ae69ea-7c48-44e1-bee7-f798ba383cb0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "550e66b4-6fa8-46c8-8c0e-12bfe96b731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e642ea78-f920-4766-9a7a-f092cea3bb51",
        "cursor": {
          "ref": "aa3d8b65-0ac2-46c7-9fc5-758d1d6cbbe5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a9283c9e-1a62-4ed0-b029-7611bcacdf96"
        },
        "item": {
          "id": "e642ea78-f920-4766-9a7a-f092cea3bb51",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "609c53ed-a9ca-4435-86f7-bb16b3dc0814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d159044-3713-49ed-8eef-0ef7b03b0123",
        "cursor": {
          "ref": "bdd800bf-f23f-4760-98c8-86dd6afe5fc9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "791a116d-a7d3-4f55-b121-682a43149f95"
        },
        "item": {
          "id": "6d159044-3713-49ed-8eef-0ef7b03b0123",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "40b4fee5-6837-4db0-8ca0-94c4c785e6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ccb59-a849-4f7f-983d-b428bb088aff",
        "cursor": {
          "ref": "1531f49a-e068-4a96-b9fb-dacd438dc49a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2a3f4457-eb0d-455a-a449-da44e52bba8a"
        },
        "item": {
          "id": "3d5ccb59-a849-4f7f-983d-b428bb088aff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c4db0132-a987-46db-a609-1daebc91e17c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4879ee20-694c-4c5f-a339-f1fb0d4e2b7d",
        "cursor": {
          "ref": "58d12373-c452-4685-ba81-7ee68159d72b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "456538c8-5fd0-40f3-adc3-f4420ba54c63"
        },
        "item": {
          "id": "4879ee20-694c-4c5f-a339-f1fb0d4e2b7d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2384e90f-e36e-40b1-95c3-a82c2f3fd2af",
          "status": "Created",
          "code": 201,
          "responseTime": 6907,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "41944809-fd2b-4ac5-9233-e763ac6011e2",
        "cursor": {
          "ref": "2b5b479b-5a2d-45d8-adc5-bc33c941429f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e0ef8ce-6fbe-4aec-acee-2fc7682e23bc"
        },
        "item": {
          "id": "41944809-fd2b-4ac5-9233-e763ac6011e2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0255813f-e29b-4a58-b8f0-532f2c7e771b",
          "status": "Created",
          "code": 201,
          "responseTime": 7008,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eef7ffa-a78b-476f-a6e1-e3597c282971",
        "cursor": {
          "ref": "4bda5401-7a58-4e08-921a-521d85f6f7af",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5f26dbd6-de22-4aec-8f00-f512915e17fe"
        },
        "item": {
          "id": "5eef7ffa-a78b-476f-a6e1-e3597c282971",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bd85db66-19f4-4a1c-9bd1-78bccff2bdc7",
          "status": "Created",
          "code": 201,
          "responseTime": 6635,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e3527f-693e-463e-808a-182b66bbbccb",
        "cursor": {
          "ref": "fc853ac5-0147-4152-8e07-bec39d0479f9",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "80f32e78-5590-4e7c-8b20-333c0b4e83ec"
        },
        "item": {
          "id": "13e3527f-693e-463e-808a-182b66bbbccb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ee6d259-dedf-40ce-bb9b-034dde8a70f2",
          "status": "Created",
          "code": 201,
          "responseTime": 6516,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb72dfd-9a61-4b27-afa8-ffeb5ea9f0f8",
        "cursor": {
          "ref": "2a6e2f95-40bb-4074-b969-ec774b80a82c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45385586-6e89-4f15-bfb5-4acf46a3f350"
        },
        "item": {
          "id": "acb72dfd-9a61-4b27-afa8-ffeb5ea9f0f8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "246d892a-e447-4414-a7c4-95283d4d7c64",
          "status": "Created",
          "code": 201,
          "responseTime": 6487,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acee855-65ae-4463-bd05-06f8cb96d153",
        "cursor": {
          "ref": "3c0ce972-3c53-4fe9-a510-f9fc3d29fa47",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "800af639-cf54-4f8c-87ad-5c0b5e6db082"
        },
        "item": {
          "id": "9acee855-65ae-4463-bd05-06f8cb96d153",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce078725-89da-4a2f-a4b8-0735615397d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "ce885b66-4309-467f-a883-bbae39e1cc31",
        "cursor": {
          "ref": "949c5f8c-677a-4672-b9be-05b104816f65",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e8ae25b7-7bc2-47c6-9d7e-575d14078fe6"
        },
        "item": {
          "id": "ce885b66-4309-467f-a883-bbae39e1cc31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4731416a-7489-4199-8c60-e41dc6205504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d1b39d-4611-499e-8c0b-3208e562b37c",
        "cursor": {
          "ref": "95320031-26ad-4301-8f21-6a3d8e1530c1",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b4728960-726f-4f6e-9bfd-35afb96f3fe5"
        },
        "item": {
          "id": "40d1b39d-4611-499e-8c0b-3208e562b37c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9780ff7f-0eeb-47c7-ae22-83e93404431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da7119c-0d8c-44b7-9733-dd11f505bd80",
        "cursor": {
          "ref": "fb2364f7-bb7e-4382-aadf-5e5572c73f84",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d0f202e0-4cb6-4a60-b1db-dab4584ff197"
        },
        "item": {
          "id": "6da7119c-0d8c-44b7-9733-dd11f505bd80",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cfce6465-54f0-4de3-95c2-9f2f416fa72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3180bf8-6840-4f77-9369-ed19378a6225",
        "cursor": {
          "ref": "8a4e077c-b5df-4d81-8813-9ff42922e866",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "16ef8afd-4a1e-41cf-9615-7dd2f7ac6444"
        },
        "item": {
          "id": "d3180bf8-6840-4f77-9369-ed19378a6225",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fbf6ca6f-bb94-4a7d-99de-3910880cc382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c3fb70-8dfc-4597-97b5-ea02ffdb5ac7",
        "cursor": {
          "ref": "db68d350-d152-4e0e-a33e-aab2e4a995d0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "66abedc6-9d94-46ed-9db3-99387893511f"
        },
        "item": {
          "id": "65c3fb70-8dfc-4597-97b5-ea02ffdb5ac7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aff190e4-06a4-4def-9720-5ffc3882c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a10c83-6e35-4667-a82e-70e5346d6a93",
        "cursor": {
          "ref": "03c9df34-da2d-4824-ba93-6f7033e4b24b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1bdfd940-55b3-4598-885a-8e3a17157b5b"
        },
        "item": {
          "id": "b7a10c83-6e35-4667-a82e-70e5346d6a93",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7577692b-7261-4eb3-bd91-d2ae48b0e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c3ca3-64be-4a13-9f86-a363beebf736",
        "cursor": {
          "ref": "2dda4693-0d03-4f6b-a828-6e352fafb6ba",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "15fdf829-7044-4b6d-8763-e34572262339"
        },
        "item": {
          "id": "4e7c3ca3-64be-4a13-9f86-a363beebf736",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0180712b-53d7-47a3-86b5-2a8991c58bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8585fc5-50f5-469c-8df8-b24987b831a8",
        "cursor": {
          "ref": "0902164c-ec9b-43e8-961e-114d828a97a4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38e4a65c-6c35-46e2-94cc-19f95f7a2af4"
        },
        "item": {
          "id": "c8585fc5-50f5-469c-8df8-b24987b831a8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b053d9b7-3b25-409c-be11-1a5be17ec15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1598584f-b0f7-48e1-8749-4c6fbe39b300",
        "cursor": {
          "ref": "c043ca09-87ad-4a3a-99d2-e27689097962",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "88f24b3a-0b72-470c-b377-79927f4b0852"
        },
        "item": {
          "id": "1598584f-b0f7-48e1-8749-4c6fbe39b300",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "73f51b22-768f-46a2-96dd-6e34dd6081be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae80315-efdb-4b35-b9fb-9187776a4acb",
        "cursor": {
          "ref": "6e95f518-d1fa-49b5-bcb9-d615eeb5c0b2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "957c4f61-63d7-46cc-8cdc-89035dd31763"
        },
        "item": {
          "id": "3ae80315-efdb-4b35-b9fb-9187776a4acb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "96dd93da-8ffd-4f9b-aa09-840389f93b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d52ee-62c8-4b0b-b3f3-32b23b8ce3de",
        "cursor": {
          "ref": "58f44147-c41e-46a6-92e9-8cc2dde01242",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f4d296dc-5f23-4aca-a9fc-95e7c4269629"
        },
        "item": {
          "id": "748d52ee-62c8-4b0b-b3f3-32b23b8ce3de",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57095eda-f2aa-4317-8fa1-5d8a6fa2ca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2621b55-5de9-47f1-8a9a-39f8bffad0e8",
        "cursor": {
          "ref": "fa5f5cc5-192f-452d-b149-35005f08147c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dbdc537c-0d1e-4fee-b06a-7ae625a73845"
        },
        "item": {
          "id": "e2621b55-5de9-47f1-8a9a-39f8bffad0e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4d0a860a-f189-4d78-aef7-b70d33e5df05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009cfeb7-2483-4707-b1d7-f5558253c524",
        "cursor": {
          "ref": "7ea9fcaa-ce57-4db6-8eee-e29d3fb2a7b3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2593469-0628-4f5e-84bf-c8eb5420bc19"
        },
        "item": {
          "id": "009cfeb7-2483-4707-b1d7-f5558253c524",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2d9a96e-956e-4be5-bb09-0eb573c80747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bc2778-2e7a-4f83-ad58-459f5e34a0ca",
        "cursor": {
          "ref": "479748a9-e511-4b78-ad1e-1225e7ec8ab3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce138292-0222-45d1-b542-383ff4932bef"
        },
        "item": {
          "id": "18bc2778-2e7a-4f83-ad58-459f5e34a0ca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "06ab9695-469c-4138-9355-d3321e667a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7943da95-c08c-460a-9cc4-9f3d503eb412",
        "cursor": {
          "ref": "1d82b6dc-6a80-4acc-9a85-29857c53b146",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1f44d65a-178e-469c-b273-f32080de6f8e"
        },
        "item": {
          "id": "7943da95-c08c-460a-9cc4-9f3d503eb412",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4e3b2abd-ac9c-4ae1-b573-430cd781426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad180a7e-e47c-4811-ba23-54b3b468f2e8",
        "cursor": {
          "ref": "97d650a7-abc3-4601-a1de-07d6e259dcf4",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b687450a-5d3a-41d4-bd17-0653ba1f0d72"
        },
        "item": {
          "id": "ad180a7e-e47c-4811-ba23-54b3b468f2e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b9d13e29-7127-4af7-a1f3-6789d36fcd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de3c871-4bad-4326-82d4-07a473e12c24",
        "cursor": {
          "ref": "28f1fae7-1ef7-4aed-81e4-38a0e213fb39",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b440488c-2dc3-42b3-8b6b-dbec78196ec3"
        },
        "item": {
          "id": "2de3c871-4bad-4326-82d4-07a473e12c24",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8c60a60a-b111-439d-93b1-15a69a191cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52404328-8f83-40e7-b91f-643976822795",
        "cursor": {
          "ref": "e6821624-9343-4690-a8de-2f110d51e334",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "538f7f8c-e7e8-4dc2-b162-3ea4aa46a94d"
        },
        "item": {
          "id": "52404328-8f83-40e7-b91f-643976822795",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7013f359-38b1-411e-b884-1548ae89e0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e9378c-f312-41f5-86e9-940fd09d5eea",
        "cursor": {
          "ref": "a2a02b46-b623-47f6-99b5-8af89dcff211",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d56e5670-2a05-4666-9e67-296a82f52881"
        },
        "item": {
          "id": "00e9378c-f312-41f5-86e9-940fd09d5eea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7e7f4b8d-3f14-40dc-bce5-c09113f7829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b130aef-a2ee-4352-ab45-4671340e171b",
        "cursor": {
          "ref": "790e6449-1374-4427-88dd-7085f2ccc1f0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "99bed068-c3e1-4f0b-92bc-3bb800f2011c"
        },
        "item": {
          "id": "6b130aef-a2ee-4352-ab45-4671340e171b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a272b721-f9d1-412b-b126-6a61285aa0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e9a681-60f1-4569-8785-f6de3d9dac1d",
        "cursor": {
          "ref": "2f7a8127-3b40-4035-b357-6c66f002682f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f7d1a9c6-6cdd-438c-8f40-a06576060462"
        },
        "item": {
          "id": "b7e9a681-60f1-4569-8785-f6de3d9dac1d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7223c03-89e5-421f-9fe1-cef8f421e975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896cfa7-cd8e-4c76-bafc-cde8effc0120",
        "cursor": {
          "ref": "33d706fc-d64c-4a4f-a74f-aec21fc754cb",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c58268a-c786-4096-97fc-d389ee8d3c5e"
        },
        "item": {
          "id": "6896cfa7-cd8e-4c76-bafc-cde8effc0120",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eba39ec3-c285-4986-885d-83e20018ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41550929-05b4-4d5a-8203-ac69fbc34fa4",
        "cursor": {
          "ref": "98263bd7-7fd9-4765-b99f-2ff037bcb5f7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "242da190-45a8-4c80-bfd2-d28c71e98b95"
        },
        "item": {
          "id": "41550929-05b4-4d5a-8203-ac69fbc34fa4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac1e58b7-458a-4549-9b79-5cb819f99c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128505f4-ae14-4391-a321-8672eadc0e08",
        "cursor": {
          "ref": "4e7412b9-003e-491b-8357-1f40b7cf99d9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "505d0249-edce-4106-8dfa-333e53fdb057"
        },
        "item": {
          "id": "128505f4-ae14-4391-a321-8672eadc0e08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f23ca635-4f18-4b97-939a-beb97fe0680b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cbffc1-ff1c-4e8e-af53-cbfa68f271b9",
        "cursor": {
          "ref": "3b2a66f5-4151-406c-a0a7-880e3eda6cf5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "38012b33-3f6b-4855-b923-e5bcbe98d0a8"
        },
        "item": {
          "id": "06cbffc1-ff1c-4e8e-af53-cbfa68f271b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "845e6dc1-676e-439e-ad04-f565257e4033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e91d09f-5390-4034-8b3d-86f72a389853",
        "cursor": {
          "ref": "1fe94eb4-bbf4-409e-9230-526714fa5c2d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e4e608eb-b482-430c-a363-7cf7bbcd69a6"
        },
        "item": {
          "id": "2e91d09f-5390-4034-8b3d-86f72a389853",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "183d3235-8de6-45cd-857c-3f8ebd18c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff8b88d-16c0-4694-8439-30a723b8cf38",
        "cursor": {
          "ref": "7d6ca1c5-97f1-4723-8cff-5318be2d0e0e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "306b8f6f-df9c-4000-a568-05aabc2d6e20"
        },
        "item": {
          "id": "6ff8b88d-16c0-4694-8439-30a723b8cf38",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce8a4353-314c-4707-b1e1-5489abe1dd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7548b9ec-ea74-418c-924e-a84232ae6fcd",
        "cursor": {
          "ref": "2888853b-64f0-4659-87ff-86b0979e1f55",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ebadf2fc-68f4-4818-93c0-b3c62520ee63"
        },
        "item": {
          "id": "7548b9ec-ea74-418c-924e-a84232ae6fcd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "006f1d0f-94e0-4c2d-b8b8-5c1725c5286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b485c44-7aee-4906-88bf-964e960faf38",
        "cursor": {
          "ref": "685fa4a9-eaa4-44f7-b556-b84ec15e83bd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0b857e9b-dee4-43cc-8d0b-1912053e4420"
        },
        "item": {
          "id": "8b485c44-7aee-4906-88bf-964e960faf38",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "61e4fdec-0bde-43e0-b1d0-b8b48aaaa8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71334283-72e6-4dbb-af42-44052be0f5af",
        "cursor": {
          "ref": "9a7f50f3-b89d-4f4c-ad04-9b378dcd67dc",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "561c5b89-8263-4f66-aa54-1e3c41096ec8"
        },
        "item": {
          "id": "71334283-72e6-4dbb-af42-44052be0f5af",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "272714eb-2b5b-4302-9c2e-3ee3d0fc2db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16af454-d04d-4333-a4d5-a7ee3c9cd258",
        "cursor": {
          "ref": "ae3bf30b-3ef6-4b73-9489-2611e8369162",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b67b48d3-9105-4058-b873-7c6023a2a960"
        },
        "item": {
          "id": "c16af454-d04d-4333-a4d5-a7ee3c9cd258",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7df00540-18a9-4310-86cd-7dec0c3758e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9db109-788d-4583-9aea-029ed0f48f8f",
        "cursor": {
          "ref": "d13527a9-998b-4a39-a092-55c0c4149a7f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "45e04dee-596c-498c-bd39-b707e29602a4"
        },
        "item": {
          "id": "6a9db109-788d-4583-9aea-029ed0f48f8f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e1b7f1f7-6d55-4b42-bf09-1496a8a3f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70639314-032c-4c83-9473-c8cedfb4158b",
        "cursor": {
          "ref": "0b78e542-19e6-4220-a1fe-14bf72973c94",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "459601bc-82e9-4978-8518-05b63c2a121c"
        },
        "item": {
          "id": "70639314-032c-4c83-9473-c8cedfb4158b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c486d765-25b2-4bdd-8e75-5425801fb6cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7379ed-a8d2-4c54-b76e-481f880722fc",
        "cursor": {
          "ref": "100201f9-abf8-4508-bcf3-ae8f3159c288",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a43e1e2f-7c13-4cb3-a648-923be5d6d720"
        },
        "item": {
          "id": "ae7379ed-a8d2-4c54-b76e-481f880722fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e7c71d2-14cf-4b8a-a77b-3f03a3d70ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c2f035-c2bf-4f2d-ae80-eb729a0c08f5",
        "cursor": {
          "ref": "dad03fa9-6323-4d2d-a95b-1e2974bb1be3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2000c472-155c-41d0-94a4-6351548195fc"
        },
        "item": {
          "id": "e7c2f035-c2bf-4f2d-ae80-eb729a0c08f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bfa46b84-9fbc-4081-9483-2c8f5efa7518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18464d65-e91d-49c6-8334-3f51061380f1",
        "cursor": {
          "ref": "a2cfcbc7-4069-4c58-b336-93b18db8a960",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fde10d94-77f9-4fa3-8251-7521740486d5"
        },
        "item": {
          "id": "18464d65-e91d-49c6-8334-3f51061380f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e64f9fb1-bc93-4bd3-9283-98ba05c4a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cebd7a-bd07-43cf-bd90-1ec019b9b4cd",
        "cursor": {
          "ref": "0609ca70-1b50-47c0-ac29-620fbb486d42",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "62e5347b-ea91-4976-aabd-303265c1b82c"
        },
        "item": {
          "id": "93cebd7a-bd07-43cf-bd90-1ec019b9b4cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03e15649-a361-4820-8aa3-0107a4f53c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d0a99a-432d-4ecf-8e5e-137136bfa81c",
        "cursor": {
          "ref": "e8dae7f5-e36a-4bbc-a0f5-d64689011c5b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aa155fc1-092f-48fa-9d84-f5e765f419e7"
        },
        "item": {
          "id": "07d0a99a-432d-4ecf-8e5e-137136bfa81c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fb16712c-e52a-455d-a8c1-5ccd740507cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baea754-dd1c-4163-a31f-e5d2bd6d5dad",
        "cursor": {
          "ref": "760c87d1-3850-4ad1-a62e-530e7536e5dc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dde16bba-90b1-4fe9-b267-827252ea2d9d"
        },
        "item": {
          "id": "8baea754-dd1c-4163-a31f-e5d2bd6d5dad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "10b457dd-083f-4963-a7b1-2aea9abab2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad942b5-e624-44b2-a514-569b2fecc555",
        "cursor": {
          "ref": "0d722e19-5af4-46d8-8317-c2adbe69674f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5f3c7af8-4810-43c9-afba-91a232c49cef"
        },
        "item": {
          "id": "cad942b5-e624-44b2-a514-569b2fecc555",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15c6c8cd-32d8-4f7c-ab69-70ec791534b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f128e-c704-49a9-bdbf-a1a7de43e9c4",
        "cursor": {
          "ref": "7c06f112-33fd-4bb5-acd8-c9c09ad5e3d6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "41ef9ffe-c432-4dd7-9379-cef76383dc0b"
        },
        "item": {
          "id": "074f128e-c704-49a9-bdbf-a1a7de43e9c4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce90bec8-6586-4ac2-85b7-f02acfafa223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72970105-8a44-4452-995d-09228b9077fb",
        "cursor": {
          "ref": "e7a5c6b7-ce2c-4bce-ae60-2a92226d82c3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a7b9908e-b319-498e-be8e-5aa8408dff77"
        },
        "item": {
          "id": "72970105-8a44-4452-995d-09228b9077fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "24bbfcf8-577c-4554-85ef-750e074f828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5532129e-ab89-44c2-8a7e-708779a509c0",
        "cursor": {
          "ref": "57a73a72-fae0-40e0-a2b4-a7bcd6973170",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "827a0d0d-42c2-4be2-9adf-d241961ec555"
        },
        "item": {
          "id": "5532129e-ab89-44c2-8a7e-708779a509c0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "95e41e13-025d-46b5-b8fc-6badcb7ffaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e350c-aac8-4c6e-97b2-e5ee15c0a386",
        "cursor": {
          "ref": "2e70e7a7-46bf-4522-9355-6603062b7d32",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "825efd1f-982d-49cd-bea4-2d2df13c308d"
        },
        "item": {
          "id": "e50e350c-aac8-4c6e-97b2-e5ee15c0a386",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0568df73-7b0d-43fc-a046-56e690c6e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a130affe-6246-41c7-8814-c3e9afb39cc5",
        "cursor": {
          "ref": "0a1e2561-cfb2-4f0a-b0d5-6a63c49bf212",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41829a04-c9be-43aa-a1f5-3e74dac65067"
        },
        "item": {
          "id": "a130affe-6246-41c7-8814-c3e9afb39cc5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c327e25f-e6c9-4103-9954-e5920a3ed692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3904a4-8c83-4a2d-8fc9-71d0e876e2e1",
        "cursor": {
          "ref": "70d40ab7-cebe-4427-8c45-92f0133b93fd",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ddfe2faf-ee2c-4940-ae3c-05b926f46692"
        },
        "item": {
          "id": "ee3904a4-8c83-4a2d-8fc9-71d0e876e2e1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "113c1a07-5920-489c-848a-0b00c7580f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150fd74-619e-4eb3-898c-35439bfa88ff",
        "cursor": {
          "ref": "8da7eb8d-a23b-4db2-9952-33d97926a3a0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eb093af2-89cb-4848-a5ea-7f77924ed0d4"
        },
        "item": {
          "id": "a150fd74-619e-4eb3-898c-35439bfa88ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "50160428-39c1-4788-8416-db7c4a5fb3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8721f796-781c-408f-b0dc-757b38049217",
        "cursor": {
          "ref": "16f2bc70-a62a-4bb5-abbd-6c21b2e0a5e5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1bd5d82f-59fc-4350-a308-2c1336610406"
        },
        "item": {
          "id": "8721f796-781c-408f-b0dc-757b38049217",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3ea824a0-4329-4f35-bc89-06545ec5ee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c73a696-6b3a-49c6-87c7-8da3aef7db8c",
        "cursor": {
          "ref": "6426bf63-07db-43a2-9817-3ca773211da4",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09b8ff23-1c29-4525-aa8f-a8a55f34d901"
        },
        "item": {
          "id": "8c73a696-6b3a-49c6-87c7-8da3aef7db8c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c15938f3-4e65-446a-a0b8-446863a5becc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70d29ef-4f7c-4a2a-9a32-3960fe0f3964",
        "cursor": {
          "ref": "224993e2-6138-4bef-bdf3-1383bbb86c35",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cdb3db3f-d2b4-4cdf-ba5b-869669461628"
        },
        "item": {
          "id": "a70d29ef-4f7c-4a2a-9a32-3960fe0f3964",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2cddd644-7ae4-4345-a1c5-b483a20e1202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915d16c5-04d3-4b8e-b8ae-b7268f27f972",
        "cursor": {
          "ref": "698e0e03-c15f-4214-bdce-648aedc970de",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f3ef58fe-d0bc-4773-93e4-f4aa6ca8797d"
        },
        "item": {
          "id": "915d16c5-04d3-4b8e-b8ae-b7268f27f972",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7cf9a33c-a602-4947-989a-b186264e5026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f57f8ef-7835-40f0-9a2f-b9bbe42f4897",
        "cursor": {
          "ref": "a134d05f-c6e7-4d12-a197-456bb89eba4e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13894a4b-4a9e-46a1-9556-092cbea73abc"
        },
        "item": {
          "id": "4f57f8ef-7835-40f0-9a2f-b9bbe42f4897",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0c426df-995f-4b4f-8314-6ed7877767cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9248e1-196a-4c5a-b621-d8e949847360",
        "cursor": {
          "ref": "53bcb7a8-100e-40fc-a476-826f0fee3a16",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "20bfca31-8869-41b0-89de-2a2c18ed40df"
        },
        "item": {
          "id": "fa9248e1-196a-4c5a-b621-d8e949847360",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0b83e17-48ad-410e-83b3-66618fe16aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77641ee-215c-4c3f-8ed5-12ef02a4221e",
        "cursor": {
          "ref": "e2b63577-dc29-4285-ad6f-d98e26e115b4",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cff969c2-cd7d-44ec-b2cb-6d94481e8792"
        },
        "item": {
          "id": "d77641ee-215c-4c3f-8ed5-12ef02a4221e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1742932e-7b06-4ba8-b729-e6a04b4b5a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a7540-7ebc-45b8-be94-81d835612c2f",
        "cursor": {
          "ref": "e7bd4f75-01d1-4bd2-ab4a-82346a7a7e8c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a9391fc8-487c-40d8-aa71-51776f06fa1a"
        },
        "item": {
          "id": "2a3a7540-7ebc-45b8-be94-81d835612c2f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d94eb60d-dc40-45f7-9041-9e757cfe37e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cceb695-0413-4f98-b1e5-ffe23ee8df81",
        "cursor": {
          "ref": "e54d0e42-1ba5-4b2e-b9bb-d01bdbf91877",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da299a2e-4d36-45e5-ba45-d5452d7bdb6a"
        },
        "item": {
          "id": "3cceb695-0413-4f98-b1e5-ffe23ee8df81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ddabcba-6f13-41a1-9b86-a0783f9ac09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f7db8e-6af2-4d29-8ef5-e2bf09e23fc0",
        "cursor": {
          "ref": "2872dc8f-5d30-47fc-a1a7-79aee836542d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "39d3b933-d986-4778-b516-036dfac57324"
        },
        "item": {
          "id": "91f7db8e-6af2-4d29-8ef5-e2bf09e23fc0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "de440b50-dd4b-44d8-a175-cb61e4dcc706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f39476-6ba5-4d2b-a092-eefdec51452f",
        "cursor": {
          "ref": "c7fed638-75be-4f9d-a358-eb504d674e8d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "85fe8a55-351a-4891-8bcf-bb86fa09ebc6"
        },
        "item": {
          "id": "07f39476-6ba5-4d2b-a092-eefdec51452f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c093ead-79c0-4130-86cf-7bbb7baa54bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25692e17-7bbb-4499-8130-dbbe48fa5e93",
        "cursor": {
          "ref": "44815430-0b15-4c44-a01d-553cb7254ba4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bccdc562-afcf-4907-9d42-6f541d0f7d91"
        },
        "item": {
          "id": "25692e17-7bbb-4499-8130-dbbe48fa5e93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4888aba7-ccac-4e04-876e-ad43d995202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba31a1-45e4-449c-a2e1-d99ab1206027",
        "cursor": {
          "ref": "d08ffa7b-8872-4186-8435-15c361cc8a6c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6f8e7bf-9de8-461f-936a-be5a037a37c9"
        },
        "item": {
          "id": "e9ba31a1-45e4-449c-a2e1-d99ab1206027",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5aaed90b-03af-4195-9dd3-30b7db1818be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edeb9d28-7d02-4af5-9737-9078df555fb7",
        "cursor": {
          "ref": "bd560c61-01ab-40bf-8e9a-b9d6a781f5f3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fd0f5558-4b54-4846-8bb8-1ab354029b28"
        },
        "item": {
          "id": "edeb9d28-7d02-4af5-9737-9078df555fb7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dd405d79-1f0b-48a6-924a-5763df11506f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4a56aa-ec90-4f60-a448-a473a12c7558",
        "cursor": {
          "ref": "188a5730-46a5-43bc-920a-c6c88bfdcf5a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cec333af-13ce-4147-9fd3-c64e64ad7e60"
        },
        "item": {
          "id": "de4a56aa-ec90-4f60-a448-a473a12c7558",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "371f5b34-b136-4cad-a595-71626bd94b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eb660e-d336-4a0e-88fe-72fca976d99c",
        "cursor": {
          "ref": "06fb4499-f274-493f-af57-9abf449c4a7f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f171767f-8749-461d-ab9d-29c0de846aa8"
        },
        "item": {
          "id": "64eb660e-d336-4a0e-88fe-72fca976d99c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0104cebb-4f7f-4de0-bb69-6071985fd00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70b34e-83fc-4bba-a6ff-030f98b5b06a",
        "cursor": {
          "ref": "0a40d6b5-5663-46ad-bb1a-0a1d489bba0a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "459ed481-f22e-4b41-9267-b49a6c085ed4"
        },
        "item": {
          "id": "4d70b34e-83fc-4bba-a6ff-030f98b5b06a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7fd6183a-ed6f-4d07-9679-790185e81215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8cbcbf-6c29-482a-85c3-a8d88fcd92e1",
        "cursor": {
          "ref": "8bd94e9d-a7b0-45ed-94e6-ead8873cbd05",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "399f52a3-cc56-4eee-b3de-9d0f37fe81f2"
        },
        "item": {
          "id": "bb8cbcbf-6c29-482a-85c3-a8d88fcd92e1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c4f12afe-f148-4f0d-be92-7ff3ca10648f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1c76f6-3223-404d-be88-4baf21dcee69",
        "cursor": {
          "ref": "40633fc7-3aa1-4d2b-9f5c-ba5fb07a7843",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a8857a95-93f7-41e9-807b-beb11fdc95e4"
        },
        "item": {
          "id": "ed1c76f6-3223-404d-be88-4baf21dcee69",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e8870d2b-64a7-4107-9038-bb3ec2d78654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a015dc-0e50-4052-9866-e056a2e2f6e3",
        "cursor": {
          "ref": "52c918dc-db0e-444a-9b7a-0d37b418e8e6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fc3bd87b-6e39-4c2d-a14d-04d7fac3a221"
        },
        "item": {
          "id": "b7a015dc-0e50-4052-9866-e056a2e2f6e3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dc8d57c8-846b-49e3-ba80-bb97d85e442f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770ed2f0-194d-4ffa-8b66-63e75745f1ec",
        "cursor": {
          "ref": "56b4dacc-7713-4e9b-9d1c-750817f6f25e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "81e793ef-af92-4052-a8a3-56a07b58cab7"
        },
        "item": {
          "id": "770ed2f0-194d-4ffa-8b66-63e75745f1ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b8a46966-ecb8-4d30-ab16-e7baa6d1901c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcff1467-0561-4834-9793-5c8e8348af1a",
        "cursor": {
          "ref": "739e0653-47aa-4d75-91e0-a18c7163f418",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8af3afc6-6d90-4d40-82ee-a26bd3b8e5a2"
        },
        "item": {
          "id": "bcff1467-0561-4834-9793-5c8e8348af1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "17c12f63-c0d4-4db2-b834-412660b13a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c930bc80-0dcb-40c2-8cdb-b8df091878c6",
        "cursor": {
          "ref": "7cacb972-edff-4a63-a5e2-6f3a1607da0b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "925f1cf5-9c3a-470e-a780-dbd69f0c3b46"
        },
        "item": {
          "id": "c930bc80-0dcb-40c2-8cdb-b8df091878c6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f6f81d5c-dbe7-4901-bc16-50a4f7fa90af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67df575-4b8e-4025-912d-9a180aeea29e",
        "cursor": {
          "ref": "bd897a62-30cf-4521-a9e8-737ebb2eb08c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "30ae4009-3464-4f98-aceb-e3ab37568508"
        },
        "item": {
          "id": "e67df575-4b8e-4025-912d-9a180aeea29e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d41913b-0cd5-4d71-a237-b6852f324cc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae82097-9c2c-4d4c-89b9-6bef3aeeab61",
        "cursor": {
          "ref": "51cb98e1-7691-4f73-b8ef-c9a3343c307d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b092ace-634b-41d5-92d0-44571533f4c7"
        },
        "item": {
          "id": "8ae82097-9c2c-4d4c-89b9-6bef3aeeab61",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "27ab2934-e3f7-48c6-8671-6696796f27ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54437121-21e4-4317-9621-e7b8d561a81a",
        "cursor": {
          "ref": "fff13115-c177-423f-bd50-a24973a774aa",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "337142d5-b099-48d9-8334-cae9515a9db6"
        },
        "item": {
          "id": "54437121-21e4-4317-9621-e7b8d561a81a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9a4ce231-b4f2-4ad6-83df-81fcd8897ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38adc0ad-8c32-4115-b318-cf423c0dd2aa",
        "cursor": {
          "ref": "700d98ac-c4b7-48b9-8cb5-7c554751a795",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "54767cc6-0964-4d19-8a46-6e19877af726"
        },
        "item": {
          "id": "38adc0ad-8c32-4115-b318-cf423c0dd2aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "73201aaa-69aa-42a3-a8d2-1523ce84bab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc11519d-7174-42c8-8f4c-89d821e6fa0f",
        "cursor": {
          "ref": "d48073ab-4a8e-4b55-8b02-3a7b4efb5f98",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe8785a1-f22e-4e26-b0ef-a5bf20466b25"
        },
        "item": {
          "id": "cc11519d-7174-42c8-8f4c-89d821e6fa0f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "63aec236-f0f1-4ba4-a0bf-6481c10b6437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601ca046-d402-449d-b776-e0bac6c4fe0a",
        "cursor": {
          "ref": "0e474ed6-6af1-45ca-9b5e-ef050db91062",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ba0fdbd0-6801-433e-9b91-848e35777455"
        },
        "item": {
          "id": "601ca046-d402-449d-b776-e0bac6c4fe0a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "69deee75-001b-4189-94f7-69d0f8fc2ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bea9c2-5f49-4193-9b82-bb904253da75",
        "cursor": {
          "ref": "242f5910-5a5d-4dbd-a1de-bf2803b5abd2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2989096b-621f-4f95-8104-bc614dcb79d7"
        },
        "item": {
          "id": "a3bea9c2-5f49-4193-9b82-bb904253da75",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f1659691-0f4a-4ac3-ac6c-17ffed1c4db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5f644-f16c-48d0-b1dd-093799dc2158",
        "cursor": {
          "ref": "7de1448c-b0d7-4615-9d81-46b702424996",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "50331110-2193-405f-9204-956c1d974c92"
        },
        "item": {
          "id": "02f5f644-f16c-48d0-b1dd-093799dc2158",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8203973a-fff4-4235-b185-59e1e0a787cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde46679-e383-457f-916c-85afa50e4137",
        "cursor": {
          "ref": "07dc74a1-35ca-40e5-8ca3-333f2081b323",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7171530b-c9a5-4486-ac29-7167d794ac12"
        },
        "item": {
          "id": "cde46679-e383-457f-916c-85afa50e4137",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7ba014e2-34ee-497f-b9a4-14f6f5fe3cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11da0fa5-446e-47a6-b456-f1e95c8e3446",
        "cursor": {
          "ref": "0ff6f60c-b11a-4091-b59a-39a9d4853911",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64a98a9b-140a-4fe2-8aa4-ccd6bdced37c"
        },
        "item": {
          "id": "11da0fa5-446e-47a6-b456-f1e95c8e3446",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47c26153-84bb-4ec0-9a80-511c48f11eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3c500e-b3db-40e4-8c23-eafdcfa96746",
        "cursor": {
          "ref": "3b2991df-b59e-4be1-865b-f49f80fea58c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c664e3ce-4a8b-42e5-9ba3-350fb7fb721b"
        },
        "item": {
          "id": "8f3c500e-b3db-40e4-8c23-eafdcfa96746",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4270a57d-09b4-42f2-84cf-e4998bc1d7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031eb379-adaa-42f1-a700-8c92f6a7ff82",
        "cursor": {
          "ref": "e80a5005-40b0-49c6-a592-9f8796c666c9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5131b63-2190-49f9-86b3-3ecb1f2fb741"
        },
        "item": {
          "id": "031eb379-adaa-42f1-a700-8c92f6a7ff82",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc4631ac-c8bf-4334-9e2d-18bd524757a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899bee0e-71e6-4fbc-8e1d-ecc815fdf8c3",
        "cursor": {
          "ref": "2fbdeb10-332b-4cde-80d0-d0cabd01e551",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a45ed291-e6b9-4d98-b123-b03eb4218e34"
        },
        "item": {
          "id": "899bee0e-71e6-4fbc-8e1d-ecc815fdf8c3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b396aa9e-6f33-4a76-a750-6085eca3ddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85de51db-b76b-4f01-9589-eaec6859e920",
        "cursor": {
          "ref": "1a6ed45d-55a2-4caa-ba5a-ea20c9c5143e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40b96642-26aa-4bc1-b667-e6c399a840df"
        },
        "item": {
          "id": "85de51db-b76b-4f01-9589-eaec6859e920",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "da535453-443b-4d4f-8790-c865fb1c0535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f45cdb5-911a-4fb4-8f8f-a417f08ff3d0",
        "cursor": {
          "ref": "feec0506-47f6-4d35-a41d-c2c4d2aa416e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6e7748b3-22d8-411f-bcd7-0e6e35db6544"
        },
        "item": {
          "id": "6f45cdb5-911a-4fb4-8f8f-a417f08ff3d0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b044b64d-8265-4240-9436-8c638ca9499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ef8a3d-c33c-408b-b783-bb5101a29f98",
        "cursor": {
          "ref": "83b12bdc-3548-43e6-99a3-30109c79e1d2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98d70e86-32d4-4598-add6-9a30ed261baa"
        },
        "item": {
          "id": "25ef8a3d-c33c-408b-b783-bb5101a29f98",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "31b5d132-7448-4eb6-9167-b2b56c4ad55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc0f31-8d4f-40a3-b0c0-3995adb42e3c",
        "cursor": {
          "ref": "7804639b-c926-473f-bc7b-6a4454dbbf83",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b6f27ec6-9368-40ee-b7ef-615c29954a1b"
        },
        "item": {
          "id": "70cc0f31-8d4f-40a3-b0c0-3995adb42e3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "925fc068-28a6-4cb8-8143-c60484bb8b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fbf960-3e52-46f1-8bbf-412089e6994f",
        "cursor": {
          "ref": "f0ff4453-bd46-41f9-bb51-348c3ff0cbb0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5689bd54-4043-4b03-9953-3c87dbf2e13e"
        },
        "item": {
          "id": "a8fbf960-3e52-46f1-8bbf-412089e6994f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "48afb5c2-d375-4a8c-a3d3-ade0ab0b1be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20b0d02-8a84-4fb4-994e-1ad29e783c37",
        "cursor": {
          "ref": "7dcecffd-82db-4825-a339-2a5363d4d35c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e73e79b8-d047-4129-b789-05976d692f61"
        },
        "item": {
          "id": "f20b0d02-8a84-4fb4-994e-1ad29e783c37",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "897b606d-14cc-47bb-bd03-0086daf69b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658cd265-ff38-48df-91ab-e5c1714b8c4c",
        "cursor": {
          "ref": "e26d1bf4-cae9-4907-8244-b78b322c6be3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fee6a78d-e7b5-46cb-8544-86733d88349e"
        },
        "item": {
          "id": "658cd265-ff38-48df-91ab-e5c1714b8c4c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3add41d-a696-417c-93e8-70723b0a9176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66420e30-edd8-45a4-bc00-786227f20fa0",
        "cursor": {
          "ref": "7fbe47d9-8e46-4b6c-acd9-bc784c469103",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e7ae8da2-6f29-499f-a284-a80335372e0e"
        },
        "item": {
          "id": "66420e30-edd8-45a4-bc00-786227f20fa0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e7507fa9-d2fa-4258-9a15-2aa8bc69fdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff01585-47f0-494a-8ac7-aea3d52541e6",
        "cursor": {
          "ref": "e07e4df3-152e-4316-996a-8b37121ad3d3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "41b27f38-3603-490f-990d-6298f48b645e"
        },
        "item": {
          "id": "1ff01585-47f0-494a-8ac7-aea3d52541e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c398c7f-932f-45f9-b7d1-5f00d6df538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f106e95d-ca78-467e-88d1-ba1210567578",
        "cursor": {
          "ref": "9b6dd5d9-ad24-4b99-bff5-0734bfe683b2",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c151aa91-0e82-445a-b0c2-4775aee8e0fc"
        },
        "item": {
          "id": "f106e95d-ca78-467e-88d1-ba1210567578",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2d33de6a-2455-48f8-be3c-cbb0551df2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88625238-dc25-46f0-bc17-dbd2a3fbf6de",
        "cursor": {
          "ref": "34573436-d2af-4511-8de5-6bddf7a093b1",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24e135e1-9b74-4966-a844-ebcae9aa6947"
        },
        "item": {
          "id": "88625238-dc25-46f0-bc17-dbd2a3fbf6de",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8ac4168b-c582-40cf-9fd1-86cf07022a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b42121-db61-4b7e-9095-9b24f6855e93",
        "cursor": {
          "ref": "ea334834-8c60-4fe6-9190-75f198708b43",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "419d8f3e-b617-4dea-850c-25f0323fed3f"
        },
        "item": {
          "id": "79b42121-db61-4b7e-9095-9b24f6855e93",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "63ef6295-17e5-4ba5-8a52-3ff7cd4ebc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa2c4a4-1758-4ece-a965-5eb57f1494d7",
        "cursor": {
          "ref": "9fdd0507-186c-43c8-b11c-2c47b686ca7f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b976f1cb-ca8c-4d60-ac21-a8aa33a37636"
        },
        "item": {
          "id": "afa2c4a4-1758-4ece-a965-5eb57f1494d7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "578d865e-388c-4c58-bf53-554ae0dc8616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba16c23b-d377-4cd0-94c3-b4db649b83b6",
        "cursor": {
          "ref": "61905218-8126-4f74-b172-aaad6804d616",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3dd84e07-f481-451c-8744-dfcd6625603f"
        },
        "item": {
          "id": "ba16c23b-d377-4cd0-94c3-b4db649b83b6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e2fa26f9-31bf-49b1-9ccd-4c457c10fef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbf1953-5a54-44d9-b33f-9823022b7f5b",
        "cursor": {
          "ref": "875df961-b930-44a4-850c-51cbc061b0aa",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d6e04287-2b3d-4cbd-b5d4-7c7a412fc969"
        },
        "item": {
          "id": "5fbf1953-5a54-44d9-b33f-9823022b7f5b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2708369c-1d57-4311-84c8-675be9dd10a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbe0ef6-e783-4b4e-8169-44f22d8cd3ab",
        "cursor": {
          "ref": "8c7795c2-4096-4427-a7e0-fcb346e6558f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9348b4dd-c1ed-409c-a512-8064dd7e5d76"
        },
        "item": {
          "id": "ecbe0ef6-e783-4b4e-8169-44f22d8cd3ab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d24c6b6d-5511-46a3-8849-93426087d446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f6ccc3-072b-4b1f-b81e-41c1911bf677",
        "cursor": {
          "ref": "60a91f21-9067-4a72-b393-6cf4aa4b73e9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6e64a941-ec35-451b-8a98-77f1508748e5"
        },
        "item": {
          "id": "b7f6ccc3-072b-4b1f-b81e-41c1911bf677",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "263bb246-f2a6-4729-b8e8-59e3af7071d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033299ee-c630-4a08-ae3b-0f7281562a1e",
        "cursor": {
          "ref": "29c62d95-a586-4dcb-bae7-16dddd0fab97",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8e2e78a2-1677-4386-b395-d008581817f8"
        },
        "item": {
          "id": "033299ee-c630-4a08-ae3b-0f7281562a1e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f2bfad0b-566b-488f-9525-ef8306f77a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f819c5a1-199f-4b57-993a-ea665ea14d8a",
        "cursor": {
          "ref": "1d50fd5b-09fd-47de-811f-66a2050bcf5c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8263a3db-6e47-468b-851a-79efc1710c01"
        },
        "item": {
          "id": "f819c5a1-199f-4b57-993a-ea665ea14d8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4fae2bdd-11cd-4f60-a9a1-7158f1e35f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054aa541-e58d-4410-ab84-4c3e02a72ce0",
        "cursor": {
          "ref": "ba00edd1-d3c8-4e32-954e-15611579e35c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b2932094-0c41-4333-80f4-872e58edd2c1"
        },
        "item": {
          "id": "054aa541-e58d-4410-ab84-4c3e02a72ce0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "169e9f43-521a-4ccd-9ce7-31f10f5b3cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0822f376-d8f2-45e1-87d9-ae84d309e4a3",
        "cursor": {
          "ref": "2313e94c-a23e-4432-b30d-9feba39eadd1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb21f9ad-bce2-492b-85c3-5b293a0c390f"
        },
        "item": {
          "id": "0822f376-d8f2-45e1-87d9-ae84d309e4a3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0a447d7b-60dc-4c95-a534-2fe9f5971c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8118a170-8699-4bd6-a504-258c5ae4fa9a",
        "cursor": {
          "ref": "89d74ff7-d194-4e65-88e7-dcc0439bc7df",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "268d29e2-1d18-42bf-bd9a-fbdcd6a2f918"
        },
        "item": {
          "id": "8118a170-8699-4bd6-a504-258c5ae4fa9a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5b8ad964-3908-4c97-b4c6-fbb2d3eb407e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af52e813-7eeb-4a3b-8de1-921884b02f61",
        "cursor": {
          "ref": "65ebb295-3ba8-4d8f-b1ed-83fdd541ff2e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9d70bb4a-233b-4546-a9e9-cba83d57a954"
        },
        "item": {
          "id": "af52e813-7eeb-4a3b-8de1-921884b02f61",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "25ef31da-53c8-4c0e-9048-5caee6bfbbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c998f44e-cd9c-4451-b65c-943299d70b5f",
        "cursor": {
          "ref": "51319add-94f8-4de0-a933-379a104097fb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "19e627a8-5f05-4b3e-add7-9cb9c1d08508"
        },
        "item": {
          "id": "c998f44e-cd9c-4451-b65c-943299d70b5f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "24d9972f-f61d-4f2c-9200-a31d0cb8c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0dffad-8bb7-4128-a33a-ef6aeecf4154",
        "cursor": {
          "ref": "367d12f2-9967-4c95-b9b4-0f77b044735b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2fcc54d4-d853-4b64-b4b8-67d36de66952"
        },
        "item": {
          "id": "0e0dffad-8bb7-4128-a33a-ef6aeecf4154",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c0432a73-b602-4bed-90ed-43f69415f13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb24681-1077-46c8-8684-ed268e093cea",
        "cursor": {
          "ref": "19f0a3e0-3508-4417-bc9c-50a76a46923b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3a813159-6c6e-4c16-bb3d-e57ecab8600f"
        },
        "item": {
          "id": "8eb24681-1077-46c8-8684-ed268e093cea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bd659bfe-052b-420b-b2cf-b0c4050bb6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe8c2b-9c82-4ac4-b429-6916de45a2a0",
        "cursor": {
          "ref": "1955638e-b917-40a7-8a47-bed7375ad921",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "71d0c9f8-ef47-43e0-a1ae-ddc7b6ca1097"
        },
        "item": {
          "id": "4efe8c2b-9c82-4ac4-b429-6916de45a2a0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "68583e4c-dcd9-4b33-a358-4a7b68736bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6836c-1f0d-4f98-bd75-67111d3c4e7a",
        "cursor": {
          "ref": "dc3d9705-1580-4f90-84cf-315ffbd0e961",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1751468f-32e2-4360-bc07-ceeb5c915111"
        },
        "item": {
          "id": "7ea6836c-1f0d-4f98-bd75-67111d3c4e7a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a0afc78-7291-42a4-8d95-5261a9d67b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34753fb8-e0cf-4495-a435-512ca9cf0e3d",
        "cursor": {
          "ref": "80f63467-875b-4f0a-b071-3ab0b316191b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a46a0e6-ea7d-4cbf-b1b8-e529a1199d46"
        },
        "item": {
          "id": "34753fb8-e0cf-4495-a435-512ca9cf0e3d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a478d483-e8b6-4035-b3c1-5b28b25c8bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fffb4c-9830-4607-ace4-1a90022ad6c0",
        "cursor": {
          "ref": "98df7a6c-2594-468c-b01c-c637fdf9b66c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b0bcd65e-815b-4fb6-8d2a-5035de0b6e24"
        },
        "item": {
          "id": "91fffb4c-9830-4607-ace4-1a90022ad6c0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1be1fdf0-83d2-46a5-a979-f81e02c376a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4293198-4e4f-4b1e-a6c8-ac71252885a6",
        "cursor": {
          "ref": "c25acf55-c801-44f7-af4e-d86c7d4fb94e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12808bc5-67bb-4d38-8e85-7e739cc045bf"
        },
        "item": {
          "id": "a4293198-4e4f-4b1e-a6c8-ac71252885a6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ad01c2a-0198-4b24-9988-583cba722fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78845af-bdef-453c-b559-425aa60ec58b",
        "cursor": {
          "ref": "a49313e9-a146-435c-930e-ab7eca6cfbb6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e07a27b4-5cbf-405f-8dd3-272cd9f78a0e"
        },
        "item": {
          "id": "d78845af-bdef-453c-b559-425aa60ec58b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a1ee535b-35b3-4a67-8de3-46aba75ae34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c083c16-8ed7-4808-8d02-fd47a13ea71d",
        "cursor": {
          "ref": "5c609872-674f-40da-a974-58746be7d090",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a4e3aaec-aeb8-4c23-b4e6-0a2772472990"
        },
        "item": {
          "id": "3c083c16-8ed7-4808-8d02-fd47a13ea71d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "05fe4b43-7871-4fe5-a86a-eb0a48813999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760c313-8804-43ee-954d-12463348f360",
        "cursor": {
          "ref": "edd9ac7f-9037-4b75-8af9-969740248117",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e19dd75c-bd01-4a92-a925-3ac1f0fa8707"
        },
        "item": {
          "id": "d760c313-8804-43ee-954d-12463348f360",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "44eb1508-644a-42fd-8010-4b1f768ac488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4f0177-2f16-4ffb-95d9-cc222bd9cebe",
        "cursor": {
          "ref": "0d28673c-831b-4bf1-9ecf-87c970fb7c2e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7af2d494-5825-4d72-85dd-5866597fafc4"
        },
        "item": {
          "id": "ea4f0177-2f16-4ffb-95d9-cc222bd9cebe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d3c05442-a881-4b91-9938-ffc4114b4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2689fd-beef-477a-8f79-42e95f7dcf40",
        "cursor": {
          "ref": "6513e550-9410-4e49-bd09-355c800693cd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "41b53dda-7961-4088-8f86-2e63c8750b09"
        },
        "item": {
          "id": "2b2689fd-beef-477a-8f79-42e95f7dcf40",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f862528a-0727-4b52-a2c7-ecab1a71e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86665e7a-d4f2-4740-a51c-4abebe7a730a",
        "cursor": {
          "ref": "99af268d-82cc-415f-9718-f352d93999ef",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5c36ffab-e119-433f-995c-a427a8525eb3"
        },
        "item": {
          "id": "86665e7a-d4f2-4740-a51c-4abebe7a730a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf872356-9843-4732-8b5b-7aae542a5c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a587ccb-d32d-4585-8139-5e50912373ff",
        "cursor": {
          "ref": "5521ca78-64a3-4707-9f3e-82c3775c9b6d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8723620e-076a-44d9-b135-b4057d10e686"
        },
        "item": {
          "id": "4a587ccb-d32d-4585-8139-5e50912373ff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fcb0f6f1-bc7b-42e4-a17c-2da226f930da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec82ab9e-8c0e-420d-81a2-3978ca675999",
        "cursor": {
          "ref": "7f55a923-0637-4822-b923-ca7f02815667",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "acec7a75-ad0e-44bf-962f-fade2dc84b4e"
        },
        "item": {
          "id": "ec82ab9e-8c0e-420d-81a2-3978ca675999",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f7e10d8b-fcf2-4dca-b041-e555cd90039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30d3383-b467-4ed6-8df6-77189248b9f4",
        "cursor": {
          "ref": "0bff9b19-c829-4943-a979-b26307f76e07",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d398fae9-be02-4d81-8a78-0bab4ccaf26f"
        },
        "item": {
          "id": "d30d3383-b467-4ed6-8df6-77189248b9f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "96f45fe6-0831-4ee3-8f85-780a7883df0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690091c-0ba1-46fc-b186-fc80b87bd9de",
        "cursor": {
          "ref": "afa7676b-5a90-4aab-9b14-348ac2ce6850",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9db323fd-0746-42cf-a995-39253b59b567"
        },
        "item": {
          "id": "c690091c-0ba1-46fc-b186-fc80b87bd9de",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d0a392fb-3c88-4b81-9bde-844af94ccf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acd1184-bb36-401b-be38-ce0546d35be8",
        "cursor": {
          "ref": "01a58f7e-bc1e-4dd0-98bb-b5b8e30df1ae",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b9be80b-19ce-4c8c-9b92-869f11ec8d43"
        },
        "item": {
          "id": "6acd1184-bb36-401b-be38-ce0546d35be8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "966c832b-2bcb-4f01-a590-9e6eeb9e6fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13afcb1-7bf1-4564-9127-22dc3d435de4",
        "cursor": {
          "ref": "a797863f-dbb7-4df8-b709-bb259cfe5038",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8a1906eb-f136-4855-a861-04c46713df41"
        },
        "item": {
          "id": "c13afcb1-7bf1-4564-9127-22dc3d435de4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ddb96455-e50e-46cb-89f5-6aec9d8b38f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ee61c-0cf0-4d79-b9c8-197ed36c62c4",
        "cursor": {
          "ref": "9fdd401c-4c97-4297-9d4c-cdbac44ba4bb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0b7be0bf-6505-4c30-a9d3-1c49c5dab701"
        },
        "item": {
          "id": "665ee61c-0cf0-4d79-b9c8-197ed36c62c4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "60cd98c7-110d-4148-af5d-4eb075eec198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2fb3cd-227a-4d17-a50a-6473200108b4",
        "cursor": {
          "ref": "ddbe6824-a33b-4be0-aab7-f7d597a2aa77",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e2576b37-f307-4b12-a8b2-e4684ae5a698"
        },
        "item": {
          "id": "0c2fb3cd-227a-4d17-a50a-6473200108b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0154d459-9269-4642-bea5-d4ca1b04e723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848059b6-3b6b-4229-8453-058f8cf6426f",
        "cursor": {
          "ref": "9fca83fc-9c13-46e9-9df5-5d3b9d649ad4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e53d0633-936d-49e5-b98f-abc22b31ab95"
        },
        "item": {
          "id": "848059b6-3b6b-4229-8453-058f8cf6426f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ea06533-808c-4e87-8adb-9606a7d21ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bb6646-346a-4d81-a521-9b2d27e941a0",
        "cursor": {
          "ref": "f9ed5ef2-2605-4d80-b7d1-6bc203c5b7da",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c6aeb4f7-02e3-4a65-8576-ff80e4210ce9"
        },
        "item": {
          "id": "a6bb6646-346a-4d81-a521-9b2d27e941a0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "447504fc-9764-40e7-bc04-871858121dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c636f84-e323-46f5-bc32-1dcbac6824a8",
        "cursor": {
          "ref": "93bbf526-8d17-48fb-b2ad-fa267f872e89",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da4f6600-546a-4c8f-9ccb-749895a2a7ad"
        },
        "item": {
          "id": "2c636f84-e323-46f5-bc32-1dcbac6824a8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "447d7ed1-ee1e-48ca-89d1-4420db1d5e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2de8fb9-d991-44d9-bd69-fab033557ca7",
        "cursor": {
          "ref": "333db0b1-b82e-42b9-87f4-704b7113d6df",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "11705e77-08a1-4bd6-a88f-aa5213c48e5b"
        },
        "item": {
          "id": "d2de8fb9-d991-44d9-bd69-fab033557ca7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2568738e-311b-40d3-a94c-f494eba3c280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0929412a-68cb-4c1e-b9ac-62badc84dbc1",
        "cursor": {
          "ref": "49aebaf4-0f0a-42e8-8165-444fbbc0f4b4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "85e14e7d-30ee-4127-b91a-4a1d99de223e"
        },
        "item": {
          "id": "0929412a-68cb-4c1e-b9ac-62badc84dbc1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5e2184cb-1bee-4223-bdbd-55e711770d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e98084-ff55-484d-98cd-131e080b9294",
        "cursor": {
          "ref": "461bcd15-3d8c-45b2-8f16-b4acd2ab73b5",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bbca9e1b-c8c1-41c5-8c80-804b7655ed0a"
        },
        "item": {
          "id": "01e98084-ff55-484d-98cd-131e080b9294",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f1eed739-e92c-4dac-aa24-ef9df7a0c29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d2b71a-9b25-41eb-b048-2e99c7f94e1a",
        "cursor": {
          "ref": "e592099c-0fc8-42c0-b238-93c5cb300be6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4e3ca019-041c-419e-bf34-d47027ff9f3d"
        },
        "item": {
          "id": "83d2b71a-9b25-41eb-b048-2e99c7f94e1a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8fe870f2-9ca6-4d61-a2ac-a6ef18522e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b94b8-2f65-4488-b7fc-43f5342b7c05",
        "cursor": {
          "ref": "49803571-3ec7-471c-b4c8-0cf4f6f9b42e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7c28da8a-f412-4ce1-be39-fcf0bfec72ae"
        },
        "item": {
          "id": "2c8b94b8-2f65-4488-b7fc-43f5342b7c05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6786616-7994-4c7d-9008-1725fad17560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b70115a-29f0-4e48-90b5-77c7aef7b4af",
        "cursor": {
          "ref": "8bfe4250-0122-4493-8279-334b9b48ce3d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f9227883-98b4-4858-bdba-ef59867dbf5b"
        },
        "item": {
          "id": "8b70115a-29f0-4e48-90b5-77c7aef7b4af",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17260aa5-7d0e-4db0-913e-d2f471439e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1c354-e071-410d-9ff1-e32b81cb6778",
        "cursor": {
          "ref": "134b580e-186e-4081-aa46-7127aeeab60d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c6915a5-8401-4f70-be14-794e4190e548"
        },
        "item": {
          "id": "13a1c354-e071-410d-9ff1-e32b81cb6778",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4722c1d3-b6d8-4d67-b199-7e1a6fdc2509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75a8ac2-6479-4fdf-a3cb-cf4e7aa93072",
        "cursor": {
          "ref": "9e4a06ae-552d-439b-a335-d3ba49af88fd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "644abf77-a188-4c82-8eb6-7937da72b57c"
        },
        "item": {
          "id": "b75a8ac2-6479-4fdf-a3cb-cf4e7aa93072",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "31ce981b-5c58-43c6-8ed1-6cfda57e853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86bcbea-b1bc-43c1-8a45-bf45fb0d4126",
        "cursor": {
          "ref": "48ebbd48-7639-4f02-9660-44c332ad7c46",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "647e1479-47e4-44aa-9b8d-745991bd4749"
        },
        "item": {
          "id": "c86bcbea-b1bc-43c1-8a45-bf45fb0d4126",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e71d929f-d1e2-4bd1-bf40-b2f9d32f486c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59543c2-6fe2-4d61-83c6-ba1589e94567",
        "cursor": {
          "ref": "328b226d-0354-40f3-a910-a3904e391b61",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a8642154-2d94-4562-99ac-451aecc333f1"
        },
        "item": {
          "id": "f59543c2-6fe2-4d61-83c6-ba1589e94567",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "89811fec-3d11-4d18-b3e3-1676290277a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca24d0e-3835-4aad-a486-4826317d8d4b",
        "cursor": {
          "ref": "e323ea13-a9d5-4682-9dd6-f83bd840f39d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "769c78c3-91dc-46b5-9490-2f9a74e8be86"
        },
        "item": {
          "id": "cca24d0e-3835-4aad-a486-4826317d8d4b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8fc41405-3803-4786-a9fa-313251287ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e030fc-fb66-4c9b-9799-4d2de1cc3379",
        "cursor": {
          "ref": "3fca4a39-6e50-4cd3-b111-a7fd3f465e75",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b43db372-d073-46a4-9c51-cb76089043c3"
        },
        "item": {
          "id": "42e030fc-fb66-4c9b-9799-4d2de1cc3379",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e5f39044-560d-4b8d-9b3a-d387127ecbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19432896-1288-4238-8176-5667b0b56cee",
        "cursor": {
          "ref": "0169657a-3944-44e6-ad95-28b2b0abe329",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6eff6f31-ed02-433a-aac3-272f96249a47"
        },
        "item": {
          "id": "19432896-1288-4238-8176-5667b0b56cee",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b7a0a282-e72e-4ffa-a06f-fe5e5191b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64867699-98a0-4b02-b884-8dc3e2ee2090",
        "cursor": {
          "ref": "8fbd4fbf-f841-415a-af71-b80a6b43f295",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f5eb8773-26ac-43ff-a709-4edfcfd953c2"
        },
        "item": {
          "id": "64867699-98a0-4b02-b884-8dc3e2ee2090",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f424ceec-c82e-4209-8c56-344e1f7b9055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3219626-a1a9-4f3d-9632-10f58b664e7b",
        "cursor": {
          "ref": "1a7a26a7-9c65-457b-88a7-fdbfd6042ed7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "67cbaec4-b20d-4342-91ed-07e44b3e4f96"
        },
        "item": {
          "id": "e3219626-a1a9-4f3d-9632-10f58b664e7b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d7c2aab8-6906-4094-85d8-191388bbd72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90929a-d3b3-4ae3-a779-8b22ef7ff207",
        "cursor": {
          "ref": "b6f6acd9-0a52-4658-a64d-bf609e467be3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8a409084-398c-4df4-bf42-f772394f0893"
        },
        "item": {
          "id": "bc90929a-d3b3-4ae3-a779-8b22ef7ff207",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b7d0c1c1-066a-44b9-b7e4-db26b280003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96f9760-4fc0-4a39-b61d-eb80272ba3ed",
        "cursor": {
          "ref": "9963372c-7b37-4734-9576-8c7fa5bd899f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1eeaec8b-496a-48ea-9120-01b255ea37a1"
        },
        "item": {
          "id": "a96f9760-4fc0-4a39-b61d-eb80272ba3ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bdb6177f-3551-4133-9154-3f4170d4b9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4451ef83-710b-4a4c-9f8c-a6036be78a4a",
        "cursor": {
          "ref": "f143c924-8f81-4379-97f8-87586c611ae1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c1b51dce-2b77-471b-a593-6fd5e33c6188"
        },
        "item": {
          "id": "4451ef83-710b-4a4c-9f8c-a6036be78a4a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c53099da-7667-4456-8eae-5cc3bfcecaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc21bb1-f69e-4a73-9f61-30c3740bf902",
        "cursor": {
          "ref": "9f314242-0a71-4760-a4c7-f58956f3f117",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "770d0cf6-e593-4525-86dd-2ba3c7b89997"
        },
        "item": {
          "id": "ffc21bb1-f69e-4a73-9f61-30c3740bf902",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5381fa22-8153-45bb-8244-2ccc6494097a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59adc0f2-d2bc-43f9-ac65-8e6441a481c5",
        "cursor": {
          "ref": "e66670c0-85d4-444e-b099-a1e9568cc053",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "db0a17a9-e6f6-4820-acf9-03f752674ee2"
        },
        "item": {
          "id": "59adc0f2-d2bc-43f9-ac65-8e6441a481c5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c02b1be8-6347-4c1a-953d-7ecf5dbc29c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c64866-2aab-4cc1-a9b6-4c2f7f5d1cdf",
        "cursor": {
          "ref": "6263f2a0-d481-4851-9da2-42246018bef0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "58861f06-2d2e-47cf-a31e-95444a4afb2e"
        },
        "item": {
          "id": "74c64866-2aab-4cc1-a9b6-4c2f7f5d1cdf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "78ef034e-548b-4fd6-bcb5-f8c5dafa1555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c8bb04-005e-46e6-8b09-fddb673ebb8d",
        "cursor": {
          "ref": "a58c5378-d6ea-46d8-98cb-5cc1af3c538c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9f5a92bf-46f0-4ceb-8085-a27faee503f5"
        },
        "item": {
          "id": "64c8bb04-005e-46e6-8b09-fddb673ebb8d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6893b636-f651-4ba4-9a26-d8846b4d1645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711db85b-bb52-4a09-a8fc-4b620a88e866",
        "cursor": {
          "ref": "6228e731-3077-44ed-915f-ec31778e809b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f06e356d-18db-4459-a3f8-d7c92e60668f"
        },
        "item": {
          "id": "711db85b-bb52-4a09-a8fc-4b620a88e866",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e9d11637-8565-4662-a56b-cbe0c79ed659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd671ada-4363-4fd6-80ce-9b2f533c2b4e",
        "cursor": {
          "ref": "70c05450-a98a-4ef5-aa84-1ea1182a022e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "053a71d0-4c79-4d6c-b585-176408f75f3f"
        },
        "item": {
          "id": "dd671ada-4363-4fd6-80ce-9b2f533c2b4e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0d2335d6-a28d-4eb0-96a9-1b74f7fe7229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb952661-e7b5-47c3-8577-e0a9ccc17909",
        "cursor": {
          "ref": "c7c3d9d1-f4ba-4e8b-a569-7db09b8156af",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d0d24e04-7fa5-483c-97cb-e2148b52711d"
        },
        "item": {
          "id": "eb952661-e7b5-47c3-8577-e0a9ccc17909",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "20ea5318-880c-4a51-97e4-ad62c77e53ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8f9f47-2f6e-43a7-bfa7-502f169211a9",
        "cursor": {
          "ref": "66a3d03d-b20b-47b1-975b-bca103db49f5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "be6843a3-7ec9-4623-849e-1edc23e23e3f"
        },
        "item": {
          "id": "5f8f9f47-2f6e-43a7-bfa7-502f169211a9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3a5d6114-4f03-4997-9148-6426d060f1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed8be36-696b-4833-b071-73cbebb6b780",
        "cursor": {
          "ref": "2cab039f-8510-4aac-8df7-7964b8824f01",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e54b8f9b-2148-4b6e-8709-8fb15e288358"
        },
        "item": {
          "id": "6ed8be36-696b-4833-b071-73cbebb6b780",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ea68264-2a3e-4045-be93-e98f54aa95c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447cfbde-6753-4d98-935c-a1422dc713dc",
        "cursor": {
          "ref": "eb8a1f58-c757-4279-9ffb-ea1e6df68ae3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a3587734-dfc4-4ba6-ad67-e033e2b260fc"
        },
        "item": {
          "id": "447cfbde-6753-4d98-935c-a1422dc713dc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "33826748-8e54-421c-ac71-30799bfa82c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c72cb8-ce3a-49de-a66b-dd78da8a85eb",
        "cursor": {
          "ref": "3b34bfac-ef87-4096-8ead-cc78fb97df6c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cdd0d6e6-2ac5-479d-8cc5-013a382a4afb"
        },
        "item": {
          "id": "e0c72cb8-ce3a-49de-a66b-dd78da8a85eb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1ea478b5-2732-4f2a-bdb8-ef5ce87870ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458fcfd9-734e-4de1-940d-658ae8fc77c0",
        "cursor": {
          "ref": "e02c7990-6c1e-42a6-8c2e-9fa9f35f03b3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "80a648bc-0b59-4dd0-bce5-1f5b983bc82c"
        },
        "item": {
          "id": "458fcfd9-734e-4de1-940d-658ae8fc77c0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6f587f53-29b8-4b9a-994c-93dcda21bdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033a0cbb-01ee-451d-b50d-b07f56c657d8",
        "cursor": {
          "ref": "9671e971-14be-4ea8-b9bc-b4740f0eefd0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bd0ac900-c157-4498-b30a-9f694f936764"
        },
        "item": {
          "id": "033a0cbb-01ee-451d-b50d-b07f56c657d8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4ae1df4f-4184-497b-a20b-5bd56e532e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767b60a8-1a07-4018-883c-97418f9d6047",
        "cursor": {
          "ref": "8d93584e-1d02-4837-aa6c-cab729175e5a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "64be0564-d9a9-40da-a59a-c399310eb896"
        },
        "item": {
          "id": "767b60a8-1a07-4018-883c-97418f9d6047",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "67dc4264-e7a1-4e9a-9876-8729b352bacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b402d98c-2350-43a4-ab71-611da04440d0",
        "cursor": {
          "ref": "b95beb82-896c-4d08-9f38-e1b954edd91f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d7cd92f0-d7cb-4224-b63c-21251df8ed21"
        },
        "item": {
          "id": "b402d98c-2350-43a4-ab71-611da04440d0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0d04bb03-09e2-4e12-a3aa-63e141886c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa71ab5f-0019-4621-b0ac-df39a2ed6995",
        "cursor": {
          "ref": "b6742d60-6f8d-4d29-9515-f1881e8202a1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "17c64507-7ee8-4cf0-8416-d39418d2af78"
        },
        "item": {
          "id": "aa71ab5f-0019-4621-b0ac-df39a2ed6995",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7d1b0e2c-c5c0-4b54-ac75-fddc83e45cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e70b053-9900-497b-810e-0ece65c5cdff",
        "cursor": {
          "ref": "264d2589-7628-46c3-bd51-1f84a98398de",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "19786146-fdc9-4bb6-ba9c-8d2e6c43f346"
        },
        "item": {
          "id": "2e70b053-9900-497b-810e-0ece65c5cdff",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e866dd7d-a65c-483d-9308-b8c71e97145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d544e-0dc6-4041-bb06-c932a794b535",
        "cursor": {
          "ref": "579c20f3-4f7f-4ed7-993e-a54ceaabef14",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "52c86eab-e964-4322-9182-24f256331fa5"
        },
        "item": {
          "id": "b87d544e-0dc6-4041-bb06-c932a794b535",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "99a250c3-7197-4463-b1f0-70339bb33cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32853006-a666-490e-b175-70319d0ba373",
        "cursor": {
          "ref": "0485caf1-11dc-4a2c-8a22-d9de6b66d292",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "68030798-2765-4212-b8cf-ccd6771d84ce"
        },
        "item": {
          "id": "32853006-a666-490e-b175-70319d0ba373",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7becc124-c0a9-4403-87b2-9ccdfe8ecb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715ceacb-2d24-4c7d-92d3-125f6bea81fa",
        "cursor": {
          "ref": "e477c372-505c-4504-8318-876cd59e2869",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0e7c4e67-3779-43a0-9089-8b5efbe135b6"
        },
        "item": {
          "id": "715ceacb-2d24-4c7d-92d3-125f6bea81fa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09e0b92f-8c67-41b6-b7ff-51c53f58f2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d51aa4f-d073-4b73-8ce1-27fd42751118",
        "cursor": {
          "ref": "d5b52948-69bb-456d-acc5-365cc15cbaa1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "57e9de7a-f207-463b-8238-d30a4662c034"
        },
        "item": {
          "id": "0d51aa4f-d073-4b73-8ce1-27fd42751118",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8e3c33b2-fa6f-4be4-8fc8-2955975a2251",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f81098-7522-4268-a5c9-066895e4f0a4",
        "cursor": {
          "ref": "cac8c274-9ec5-49cd-aaac-c33c07320439",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f02bbe33-f6ba-4e27-9ef3-5ed467e5d704"
        },
        "item": {
          "id": "b6f81098-7522-4268-a5c9-066895e4f0a4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ee1da8d4-daa4-4e1f-aa59-8f7ed3759f1d",
          "status": "OK",
          "code": 200,
          "responseTime": 1462,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2180ff62-ad0f-4a1b-b6e7-df7f73dfef8f",
        "cursor": {
          "ref": "f4f46033-1425-4a88-b5ac-df9d21044db1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "92171d3b-528b-4c1d-ba91-d34172eb9bd7"
        },
        "item": {
          "id": "2180ff62-ad0f-4a1b-b6e7-df7f73dfef8f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b7f69866-3db2-407b-bb63-ce86429aa99f",
          "status": "OK",
          "code": 200,
          "responseTime": 1515,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccef201-fad6-49f8-a0a1-766fe9399d5e",
        "cursor": {
          "ref": "339e0091-7aaa-4c2b-9a7a-abdff6e13dd3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6434328b-cc82-43cb-839a-5e6b6d78f6b6"
        },
        "item": {
          "id": "8ccef201-fad6-49f8-a0a1-766fe9399d5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0cb20f86-c061-4c3d-8f9a-c7ec6e508873",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccef201-fad6-49f8-a0a1-766fe9399d5e",
        "cursor": {
          "ref": "339e0091-7aaa-4c2b-9a7a-abdff6e13dd3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6434328b-cc82-43cb-839a-5e6b6d78f6b6"
        },
        "item": {
          "id": "8ccef201-fad6-49f8-a0a1-766fe9399d5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0cb20f86-c061-4c3d-8f9a-c7ec6e508873",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07a49c-b84c-4db1-a15c-ee5ee794aefb",
        "cursor": {
          "ref": "b7864d90-c3b2-429d-bc5b-54f33bd6de09",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a3cc0899-5fb8-4cf7-ae94-4287a0cd63b0"
        },
        "item": {
          "id": "1a07a49c-b84c-4db1-a15c-ee5ee794aefb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "30171d1d-f140-4eaf-83c8-f9beb2a39660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a1a3c7-670c-488d-a493-a90e1f55c24b",
        "cursor": {
          "ref": "3fb20d91-84f5-4265-baa7-2b9556b5e3cc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "48c17f7f-a46a-4527-9318-9e05e5a8a725"
        },
        "item": {
          "id": "82a1a3c7-670c-488d-a493-a90e1f55c24b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1c5af71-ed8b-48ba-8330-a11e5812c4e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}