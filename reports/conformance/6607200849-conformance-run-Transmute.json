{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "43a2807f-f553-4f44-803e-2c4192828c9b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a0a56fa0-1875-42a0-aeda-d96199e0957c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "728c6200-927e-48c2-b27b-58bbe2d257d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "94fba571-df00-4063-8c2a-1308e6f92c17"
                }
              }
            ]
          },
          {
            "id": "c1c4b2f3-48ef-4e47-b601-9198b55dfae3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc919176-5df6-41b6-9e16-f7b3b7f216b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5df3dfa-cf30-41e1-a003-4ebc4da4b8ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "44cbb6fa-c7c2-48c8-adfd-135884d13bd9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "35222b7a-8992-4251-9e32-ec8dcbd01a79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "affa8ccd-5caf-4705-accf-cdd000313f6a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a49228-8dba-4903-babf-64b1370334eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "950fefc7-bc4f-4c65-af1d-35eeb8d3d0e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32d47b4c-5ebb-4cdd-a41d-a67f477dd673",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "777466d9-fd03-4617-b641-ba2586aca551"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee709869-9cc6-476d-b1ea-0dbf0a0ffeca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b088bb6-c0d5-4d17-85a0-62127eeba094"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7067025-c36d-4d28-8a38-09dab69bc867",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "55ff5456-bd6b-4277-8c3e-69d59c1a9332"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be3c45b1-60b0-4464-b30b-f39c9782d908",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e75a8b5-214e-476c-ac16-0c3d3a1f2ff1"
            }
          }
        ]
      },
      {
        "id": "e986e05a-084a-4df3-b97e-00f61c7be796",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "558b5f18-07b6-428e-8d39-708d91f0a484",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bfb3372-b3ac-4a30-931f-c50a820c2181",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6299c6c-1a5b-4ac6-b02d-48f4cf40680a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b7b5a7-4698-4417-a348-453f48a66cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ef50491-0dd4-43bb-b131-1e94ce74835b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028d9f47-a209-4a64-b7d6-97cbdf9ff609",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba871b-f244-4563-8006-a84e6efaf1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d84a05c0-0190-4beb-9c9f-832ce865eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efabf1b-9a4b-44f3-8694-cffce93fe9f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24852f4b-6d19-4480-9633-7836179ff5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb312749-5f9f-4ce9-85cc-be0b5e8bfad2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93ab036f-0b8e-4e0d-96cb-d5dbc4c92c61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "310d81be-af14-4cea-bf25-b0e6e3188077",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b100622b-5ac1-48a2-a66f-914c5993fd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "363538e8-6807-498d-812f-8d3251a60d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932664ca-e6d9-4b9c-bcff-b43f70635391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880aee95-9884-4212-9fc8-c109abaae457"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "031595b7-b46c-4443-8a10-aa26c57740bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f7af8b4-deec-44ef-94de-8c05c81e24aa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5196d75d-dad7-4324-a5fe-c20dc8562962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "80b52694-5f21-4b3d-b629-86bf6725f974"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b10caec0-9540-4ec7-befe-22adeebc8918",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cb8c3edf-c3a8-4286-85f0-07e91786313d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ef11c46-025d-47ab-a12f-7825862c9bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bf5e2d6-8dba-423a-9b40-8f5057f64ff1"
            }
          }
        ]
      },
      {
        "id": "5c202728-a7a3-4833-82cf-996de2269cf1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3f87fde3-d980-4df2-a19e-b93885b49402",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffb85dd6-0b8e-4aae-b21b-80e2aa8a15d8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8c44a87b-4c87-4c51-a90b-74705b89a8e6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a08c1-b80c-40b8-9ac4-93b47260679a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64f3d7a-a785-401f-958c-42d04bd045f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4537141b-7888-4aca-b9b2-9a524d2b17af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f1d535c-3de0-42bd-8a8a-5c3c185f2ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcbaa59-775d-4bba-8181-1ecb05bdf1ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fd7e0f-568d-4c00-a12b-687c6eb53cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9024bc46-61a8-4b7f-bcd2-77b794f0dae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d0bea-99d0-4727-8a20-f1cd766e8158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca1d4f1-dcb3-4f85-8ee2-fedc6e7128d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b9908-96b4-4e6b-ae01-56229d92438e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a757c84-a8ca-4f96-835e-443a6d4b9b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ef0dd1-d58f-471b-92bd-709731e35228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa61776-bd66-453f-ac75-1aa61d3251ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aec0f97-9057-454f-b341-016d7aa2273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95f6a46-ca48-4e40-bf93-5c31610ea0c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbac19-6a18-4624-aaab-bcfe16772c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422761d1-437d-4c20-a446-deeb25d897cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8dafb6-84e3-40fe-8282-76edc8b7b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68732c2a-8bad-4813-a998-5e4cdc6a5074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be78c3ed-1673-4c31-a881-a26bdc485731",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea038bc3-f8e4-4c02-b8d3-8f533698dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eab6d20-c420-45c7-bcc9-ffd45c81c5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50614ee9-e0aa-4375-b936-5ebe956781cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6677179-1cb3-4b3e-8582-71b2e2fcb88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17194e8-2ab3-477b-82c6-82d4d122387b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddc2ca5-21aa-43a9-ac4b-f0e9c25661c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38810a3e-4688-4d0a-8c39-b784ffe59027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9245cc7-e398-40ec-a84e-8cfe4f8dcdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523c4b84-1463-4917-8cfe-2429156c2fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48fc715-a40f-4052-9daa-a0f77438bfcd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88d18f4-935f-47f0-ac84-1b23385d679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed323b4-6bd9-4dd8-8b1a-8d2d5682f355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e62b4bf-0c6a-474c-a904-b59b8956e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e89de3f-afbd-4f9f-b886-6a70d9d1e5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba27b76-67bd-4a05-9e7e-41062756dbbe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7987a-0a54-4fae-9106-981e138893fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2bf420-bdef-4c05-9886-a1753954d16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b222c0-c4c7-45cb-a881-e3a3a7e8d2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7358fce-2562-4dfc-ac36-be312b3cf48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af64c28d-4f0b-450c-9920-34f19dd90b3a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc0cbc-8472-4b72-8fae-8a2221660039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31656a07-4bd8-407a-b24d-6ffdf44b7268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d62b24-1664-4135-8c66-d824c0e2e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ac0aeb-5635-4293-a63d-8808a07754a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd22b208-4f0b-48ea-889a-731e50e0add5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ae6e0-d049-45af-9ed8-72dfb6af7c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb3306b-8fd6-4492-86cc-f80422277b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3677c0-1cf7-4a87-a305-758bcf2d4d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "623fa58f-f1c6-4d0c-b606-128a59a5d917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d49ea8-014b-4c83-9e08-2b3feb2c751a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c816da-1cf6-4e1a-80a2-cb1a7ae78488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c277420-e51c-4c3e-9a73-2870ec34bf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b426cb2b-016f-4c78-a76d-8f9dd3ac604e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e83a7d0-1482-4d59-92c8-6c024786557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aaaa4c-f99e-422a-b259-255b93f2d44b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee62ac22-1d19-4261-b92d-7ef1ad57e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1499f68b-be6f-46f5-a580-0881dbc059c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1953141-9c5c-4b71-9f91-9b79da4906f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d065dc78-7dad-4ed6-b9a9-0377e6939773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba36935-d4a4-4ba2-a32f-883af1e7a3bb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8224ec88-246f-47db-be29-7c3448ca8899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03afe8a-ee56-406c-8a39-1b5e385a26a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799872eb-c46c-41af-ba1e-fa82768cedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4edc89ba-a217-44a4-9d2d-7da9dd1411c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6078578b-a5c9-45ff-b0eb-54c16018f677",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687ae275-4f4c-4b81-8e9a-ad4f39f27cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3387cd-f1fd-4647-a54c-f055391144c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7469ac7-6aa2-4407-8eb4-7edca2931b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33a470f3-7da1-4538-a3ec-4b7b99d84e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27b5e7a-d902-48b2-a319-c4247901ce02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66db0cb1-6d63-4dc4-815b-c83e8aad503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64eb40a-dfaf-4f57-8a5b-afe7c630ad57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7253fe14-a876-4e96-8f48-0640a65f2fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ba58a6f-c854-4aed-bac5-60351cc6d72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c6137e-ab2c-4af0-a71a-9361372575b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5e3518-93f2-4b22-8d0d-661bbd078f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b5f0af-71ab-4756-be1e-aac13e570712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae419fa-c907-4f5c-a393-f4dd39968f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e896efd-6363-4df0-a8a1-884cc80abb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05de43e-77df-4cee-8023-cc2391fb107a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6531a93c-b8f8-4bc5-b379-7f3a2bed734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f64217-87af-48ff-94da-4fcf9850f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7281b2d6-ebf0-40ec-ac01-a119bf02e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c10d1468-8c97-41b8-be21-56b4b26c38e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed929d0e-a685-4141-9d4f-0cbd84cab31b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e588c39-b79d-4d29-8cce-0c937ccb2c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8d9518-12a5-43ac-a80f-d5a8f52087f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046b87a0-226a-4a55-8be1-352d19e127c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49cde45-d0d5-4168-b5e5-5aeb1c9bc630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11006ae8-03c1-49a0-a362-020605326117",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c07bb6-a03f-4d4e-97b1-e087f7fea1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386df144-917d-4f22-b851-87ed2a460584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed8cf0-3ebb-4764-805a-35c9435b2d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f0b3a0-ff46-47ea-9465-3f886a81b94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d541a69-4a10-45ba-bce4-44b36bb54dfc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f641a0f5-ef40-4d69-926f-52d46dc5262a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d8f5c9-20f8-4e57-b4a8-b5901f07e7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb0ca7a-2533-472a-81f1-f1a3e846e4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214bb448-7463-4f56-8eaa-48b3d7a29a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ff013f-b2c7-4f5e-83a8-0212d1770940",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad8f082-020c-4e75-b382-d11e493503f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4824ed-3ff1-4097-b222-f2ccc4842672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41f8574-2759-4058-828e-1f34a7fec775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df117c4-b547-4dd8-b943-f1e85caf69c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7766ca-d909-4492-9924-d13b952d0722",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fd1dab-4f8d-479a-86ab-6307bffa7410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51a48c0-d58c-4098-8498-5a0ded3b2233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526fafd1-e1ef-441c-a074-2e9587224af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce60e291-f5dd-4b31-bf58-f6c3e5a1b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290618ab-3b3e-487f-acc0-8cd4fdf0e639",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f726b4-8ccf-494f-ac29-484e3b22a853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45652cf3-3edc-46ae-84c0-702374363911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbec2096-7c23-48ac-897f-432808c2b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e87dc47-7d23-462a-8bc1-24fa3d9a55a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46065061-a9ba-4b40-9bcc-6e7589bf0c98",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c40d4f-25c6-4cfc-8367-ff74f60fe578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d3ac2e-facd-48c4-988c-fddc9c7fcbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d251ecad-f691-4273-b12a-6806d92cb510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59baba22-3cb4-4b5f-9f3f-451049baa0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60cc47a-3570-4851-acdf-c877b4afa5bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52036725-50db-4f2a-9515-1275385a957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bb6975-8047-49b9-bf8b-ce21f9dbdfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56e354f-4708-41d9-9449-8db336ff4119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a97f50ca-a263-45af-9b01-f5eeba603186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df75773-2c23-43d3-abf8-e8a2dd8797e8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ac674c-47cd-49ab-8407-eb8b0543458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4231cb-7bab-4c8e-b736-5d509109ab65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76818f60-e7fc-4314-b52d-24ad27fa0acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a18ed7e-5d73-4f83-b220-a9fd89b7eb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9691aa66-915a-44d0-82c2-8340063ace05",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695dfc4-3fdb-45f1-ab3d-8a25dc7581e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94b2dcd-84a5-4d4e-91ea-92483a79b4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3992a7b3-3feb-4a58-98ba-e1f34e79bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee09f093-2cd2-4857-a0fa-65532f9abdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d543b3a9-8502-4ea3-8592-af6b7b14a574",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13866d57-8d13-4584-84ef-623d4094f19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643f5037-c4d0-4c6a-8094-838e2ebf4954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d251826e-3054-4578-9ee1-e084274ae7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa88e01-aa19-4bd4-ae3a-757595e83bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32f3cf6-bccf-499d-829e-c66835d0ab57",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4ea141-c6c8-463c-8ae8-ff9419ab032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1523ed6d-b2c8-4ea0-accd-5a498072e70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a01a33f-be8f-409e-ba4b-7d28863b09a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a477c6d-e5cf-4739-84fc-1be3b3779c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c583b948-5865-49a5-a0dd-f33fafed1cce",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe238f8-31d5-405b-a859-296362a2a96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a2beeb-f230-4649-9057-7e44329e8888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff6895-2b39-47f1-8ee0-e6b671ff63f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cacb6f-1e04-4b32-94df-897726128cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f287cd-b2a1-4c80-9e2e-c8cee454d76e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a3b3e-fd0b-4983-807f-76ac4bc88c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5265f7f-57cf-4999-9cf3-ee4bc58963e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da22e251-f9d9-4f2d-978a-b4c18bd52166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ca55ac-69cb-4f82-b7fd-cbcecf1537f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb01581-c000-42b5-8c66-0c7d14f4b1d3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fae6230-90d3-484c-855d-f254ea091b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e0925f-bb86-443b-903a-551e4227e415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29201e5-9fcf-45ee-8800-9ec8e3795595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b9b3b2-75c8-4c9a-a2ab-8d0e4ca36322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bb89ee-fce2-4768-a9d2-01fb753f8c52",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f0c52c-4093-42c5-9bc8-0b23bf56a6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab558d6-a77d-4d33-87b2-1185ed43247f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334aeec8-7db5-46ca-aca8-eae4165a9334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "403d6d72-290e-40b4-988e-1f4eb1afea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6113ef-3622-4cae-9780-c8a1d820fdd8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e166d1d5-a69a-467f-a9ae-e04e2639080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb31193-afe1-4c90-8287-bce34598627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50ac6db-2dde-4315-a0cc-b98d6698f818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01db2869-2442-425f-99ef-8de4fd6747ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47fb2f-dc5f-4b6d-9e4a-9b7725ec9bef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf10777-21c9-44e9-bea7-ef250f22fde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86417034-bbc5-47e0-aa42-cb072db5ff10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2b672a-ce1d-430d-8d79-45aeb1b08990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d8217a89-3cf0-44b4-b9be-b01ca2378db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca20098-6c1e-4d59-be83-e190a07e3a57",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668f660b-7e90-46fe-88eb-2c360b5f1622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10d2cf8d-4a84-48d2-8205-ff106b2b6b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c84406-3519-4eae-8209-dc271ff4f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68f62be0-e4c2-4e9c-977d-d094725e85b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823f739c-abb8-4636-bf5c-d66617216d94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53516b6-716b-442c-a537-28844b774b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff54134-c863-4ac6-8807-1dea344b366f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ee0d28-4345-4cf9-9a0a-1d90ddfd2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1c0ee3-ade2-442e-b552-51cdb85ffd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b011545-9aef-4f5c-a59b-1244eaff99c5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41be6dab-9238-4a8b-89e0-073c1dfcbfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d28e5d-69be-4230-ac74-36aa2ae75de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3f2f18-a669-4b08-9e00-5f5cb8a6fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "659f37ae-a8ab-40d1-a90c-c7fc90a08de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb900d44-a9eb-4e95-92b6-6ace773f2744",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17940f5e-bc5e-4aad-90a9-fdb935c1349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd28554d-785d-40b7-90da-85c491d8d68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6261198e-5b6e-46c3-b8bd-fca7c84e9bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f32c820-5435-4edf-8739-12f35c0a2624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b00859-0812-4429-a515-b80562cb12ea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc56d01f-a5d2-4348-9060-b7d7f762633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e607d89-3245-4b25-b797-a145279b8756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc7da44-e0b5-4c52-9a27-847cfe0abe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d266838b-7def-47ad-b49c-347572a76a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7912d12d-fadc-4398-b3f9-b62797547f84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995b64bf-a355-40a2-ae81-e14ef749f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd761d1-3ba7-4e80-a13a-0565ae878cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df102631-ba27-42f6-9ad9-0d995b7ec939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78775228-77af-414c-99c5-ab327917a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e0f74-8fce-40ac-b8f8-8ceb98c29a25",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eae64f8-ef9a-4287-9f5a-2582acd5da3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8142379-6572-4c5c-9cef-e1b413aac09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733661b-ee3d-4ced-a42f-cf4574ab23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b411443b-1a74-425b-ae0d-fbb2863eb7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72de70a2-a5cb-4cf2-b657-f3254c23b486",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b366210-a4c2-4348-b5b1-c5e008d7a7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d10cab-1e92-4b6b-bd96-a25af11ed1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8ab999-eb1e-4741-8429-6fd369bd8fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56d640ce-d908-422a-a20e-d30c093406ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8fb6e-c73a-4e65-add5-c1a4dea9b66a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81221d-4fb7-4961-bb30-0c9f4c58af78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ade531-7402-44a2-8c05-26fd5fa7d9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48761cb0-68e3-4bd0-b344-03c541cd7e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "649b1006-d672-47e7-8602-3c58fdf7f981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb717051-a58b-4ceb-93a1-5b26d810fe44",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2617ae2a-b03f-41fa-9f9b-5315b0a7d4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f832f27b-54f8-4d2f-9369-428745c6fae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a662558-bf5b-4036-ad6a-035bdf6a73d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf171e4-98d3-43df-b5f7-57064f310a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0693324c-ad1a-4e22-adb4-492b225c5988",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f59cbb-af50-4556-aaee-4f67a1084e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c6cece-b6a1-4398-91b9-6458954eba3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337a04c0-b975-4850-8f55-5a420e485969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc4778-6146-430a-beb4-a363dd773577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e6f43-a8d4-4cb0-968d-8cede29c2ba3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448c183a-cfb2-4cda-886b-66cbff4a6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa14c50-e6b7-4dfa-b274-290bec1d0679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dccb55-3085-49ba-a730-e6fcda4b87ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7462b6e2-1ead-4f0f-8006-ed5f3efc228d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac2fa83-8dd8-4576-9c4a-7a7587af8d01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61001287-1553-489c-b2c8-811272d6931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084192b1-f7d1-487e-8305-be69b64cd37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da4c276-953c-4d51-ad63-b99605f239ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "891483b6-1954-48f0-9516-3532bf4806a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0699c532-cbee-4c37-ac9e-17622e0e09df",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b356186-dd67-427f-ba64-bf0d9151309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d12cbba-0f8c-4c50-80e3-631a72ca7f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8b3d85-6940-4aa0-8c60-0eeee72ce81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e93cbff-03b6-47a3-8d3c-d2103a764574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8306fd3-fc92-4c5a-a9a9-11b596845be8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cd795c-cb62-4bd2-a1cf-aa88020d7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7fcc8b-75d0-4cf8-b800-249f31d2c268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0720e7b7-be02-4b14-bbd0-0340a1da6f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b86f1665-8e2a-4864-afdd-f6bc297bdfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763c6e8c-ca8b-4515-b279-fb3ed59696da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a8588-f02b-42a0-af0f-de5fd17295b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be366c5-b5e4-4fb6-a016-28dfcc39965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813ec38d-cc4b-452b-a99c-2e552936d136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e641872c-dd62-4b0b-8469-46db4f9d7ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07a35ac-e9c7-41e0-b093-5517495c25c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db466a1b-4b76-4c22-9527-44210331e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e00dce-9e5d-4f9b-bf02-cb1986e196c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7789133e-5a3e-47eb-af59-83a13b39733e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de8ba82a-9f1c-481c-b2e4-815320a4dd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf8d6c6-a569-4824-b558-e35b386f9333",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1a83e0-fcc0-4b4f-b753-90d8290638c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2e70d5-a844-467b-82ea-a42b30cddee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e2aa12-af6d-4e1d-afb7-e09f1d4219d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e1617e-eb4d-49f2-a500-b0845d4cb5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ced96c-e490-47d7-9d8c-f3c58878e26b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31e3e86-8704-4d01-8781-9f885bc8af94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb45d8c-23cb-4e65-bf51-ba6b52bc1197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fcc9a2-7c75-4504-b22e-45cded472f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acd053cf-74ad-454e-b2a6-8b8d27a64795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81553b71-43c3-459c-82ac-dbbc26d688b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e31f963-dbde-451e-9ca1-d4c7465f55e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c07325-c606-425c-8ce1-6556261c50dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ebbf72-d5e3-4347-8c48-88b495d2d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9608f57-d1c1-4806-91f3-2312d0416d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaa6d74-3698-4e5e-b657-8d6dfa5f1c79",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8fd493-4bf9-4589-81a2-3493b496d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27f2a22-926f-4305-b5df-5d14a5be74df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebcccbd-8b8f-45dc-af8b-3f3247d7b496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "eefb1917-6c46-43a4-8429-b32950cfab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e3d2f7-572a-48f5-ba83-b588b63d8fc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b2574b-77a2-4ecb-bc10-f8ead9e46ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e23d15-26ec-432e-8599-9467dba87c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb523e2-18a2-4e4f-bae8-c4dd3260bbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5728173-e893-4d49-ad85-a356972f13a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d99be1e-b4a0-42be-bb21-37dfae7b4723",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c6367-0c7c-4e12-b470-92558745d58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82203a2-d1a0-4432-a3ab-d14f1113c60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ec250d-92c6-4853-841d-4f050fcf9613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "123989d3-fa14-4db9-962c-eed8e4d391c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fea96f-618c-431b-8f13-c9228c5d247e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124bd462-7cbc-46f1-bfb6-1c6250e3c146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213150cb-5332-4afe-95b3-c681ff44e079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df953597-472f-4786-98a8-f5f49141d285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a314fb5-2954-4994-8d01-b7534bc29772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3007f10b-587e-453b-8568-d6606bde42af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d515fa-b4c2-4130-abef-ca893546bbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015000fb-92e0-47bd-a9d5-ace590d97142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35ea9f-2f16-4892-b0d7-966d95a3696a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85355699-e6db-4168-868c-8edbdf955150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fedbe00-f497-4545-91c4-cf6b676bdac3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39c1211-f02a-42a1-ba64-d60e2236a154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d792d32-a170-4abf-8ca4-131a1f84d8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e79ed8-e7a1-4ea3-9b8a-9ddef9bc1046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "963c333f-758b-410c-91cd-e3be5383648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e7a47-6e20-4251-8f1c-49338f920868",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9081d22-6e5b-4c7b-a0f0-5e3487161f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53293445-1444-4cba-80e1-fbfbdf949322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8dec67-af9e-4cc5-a3a2-19ac6e406a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a015dd2-ec1e-4bdc-bd7b-ea1de64d4f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5af72d-3075-48df-983e-c140ee27e94d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ffa7f-6801-4cca-8ae6-a3e9830def6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efaf12a-f41f-4679-b376-44c23b5243f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e45b5d-0b56-4e08-a6b8-672d3ced4001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6c9c6e-428b-45ac-87f3-408eb57d0d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713a2d1c-10e0-4c0b-97d1-f6b5f6588123",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f416dea4-482b-467d-946f-37e7fb1c0064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49519306-f853-4455-8ab5-398ca9596660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1e2ed2-bfef-4d06-9bb0-9f97732ff7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7bf5a4-d89b-475a-ada7-c343d18bc216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721dd31-7ad3-4baf-b5f3-9e9a1eeafc1b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798e7f2f-272a-4188-92fe-029cd85e8333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922f14ed-6a8b-4961-9108-bf9129b33de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f54c8e5-eafe-4c63-a3c7-f2d2cef12ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ce0aec-591b-43a2-a560-fbe4ebfad62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c656d6-7a9d-4b62-b1a2-716b97dbfd43",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8965e70-14ad-4023-a1d0-601a646da46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9917572b-f445-4a81-8f86-75a8c8cbe4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45113bd-8203-449a-b14d-5b72f03d57d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e172139-e954-4a47-a92a-423d0d128b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2086fa7-5cbc-4b58-ab1b-30f0cbc446c4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cf55f7-dcb7-4141-8fc4-52c5b02a05db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d566efd5-1c3d-4d4d-a2db-c783b472f0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f94a50-7385-4562-9930-5cbcacd3d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5a0d8d-b41e-4a69-bc09-75b8af56868d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8455cdf5-39a1-416b-afaa-5358dad4dea9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e6a695-b007-4ad7-84fc-6d819c88c937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beeaaf0-8aaa-4cc8-b5f6-7300a9c0e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db84a26-6a04-42dd-8b5b-99c32d982225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef9c335-fc5b-4586-83a7-6e454cca3386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0b9f0-1d0f-482d-ba92-7fdcd4308f65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d6078d-2231-4853-b0fe-3d1292e6dd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebce8de0-6e61-45fb-8d20-685e3fc653f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161e7e6a-966d-4afd-baf6-c77e09bb3411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0425f6-05eb-4871-bc96-27ca90ab5f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a9ba10-719f-4af3-b1d0-cb0e6c873b2f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de505e-f266-4d8c-b659-b59486648c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170da391-96ef-4917-b1df-4568d6090d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2b49a-b020-484e-8b1b-c4c5ceca65aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "001ae6c6-5386-4884-9680-d168f8c1f7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e45fc9-65be-427a-8a0f-f5ec12209de5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f437b26-0c39-44b7-a5ed-15267f23bebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c096942c-fed2-46d1-a8be-18f0fd523701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa0841d-fc35-4f37-92d7-8804d8003321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1b4e1d-a124-4a6e-a6e8-cd873c2cd4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa2de36-43d0-4851-8663-cada23f9e7be",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3d6b10-6a2d-42dd-95f7-131dc93033db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f78f374-1a11-47ad-8619-0eee5be8f4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d54933e-ec8b-41a2-9e27-db2fab2d269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48964ca-9332-4205-84d4-1072d6a1fa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36078096-ddab-4116-97ce-8030292e417a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b993e9-5af9-4534-8226-47dedbcf9443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0d9dc9-59d3-4e15-a8eb-f23e0a80a89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43028fb-fed6-495f-a12c-0371d7cdd53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf8fddc-8cda-4561-894b-e79846e45123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c8463-a966-4911-b489-87a6bd5cc91f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8db8691-c961-4cd9-a96a-e21a706d9695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9cfbf3-6645-4f99-8b31-764c34bf6f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f51b44c-fd02-4789-92f3-c1c197ed7153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c087280-1769-4405-a1c0-3996fde95c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8409cb2-7e73-4231-b7e4-5b8c633624bf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6338338e-3351-4e2f-a74a-051907499dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f2a8ea-e63d-4ac6-905a-c130e9b653cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93fad0-b153-4578-86d7-fb89169cae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b08dd1e-7c3a-4eff-87d9-2dac684287c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46346e2-2965-422e-aaba-210f94e6d142",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2163dcf-6cb4-4ce8-91d3-8f23ef288d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d28655-0c40-42fc-b71b-3e2ba3c3d158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b785b2-1371-4710-9fe4-d3ab0dcb4581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bec4cb-fce8-4f61-b86b-9eb3547f9d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789120df-a1be-436f-bb6a-2852e613b611",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a531a642-094c-495b-a52d-183d6026ef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a3716c-ca7c-4cb9-9d38-35e069e9db53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c201fe-6b24-4283-87fa-aafde351bd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98670b42-2fcd-44ce-8964-c63f1abd6f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684c969-bb2c-4c64-af7e-8e3200327326",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ab8c89-9a78-4179-a48b-d4155bf4a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73844c4-9f62-471e-bb0f-b87d5aa4d181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8900635f-94aa-44b6-aca6-664184d5e473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db4ef6c-658b-459d-94a9-4c7928d5d976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23007561-392e-430c-9a64-2fa7e5e01b3f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838ecd1d-6274-4ae5-ab6f-e1b968f0baea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f235f1be-f54d-47fa-94f1-5a87263d5544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596dca55-75d1-4436-a8fe-fa1891c8f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "419ef364-8aaf-45e9-aa83-acd187c82bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7cf149-f966-4ab0-a1a9-e63ba1350ae9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f4215-afc9-4b56-b81f-fcdb06b8bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e339c7-c5af-403f-b62b-e4d01ff993de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762389d1-ee6e-4e7c-89c2-4673022a2006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "416eb4f8-eb2a-4a1e-89ed-1b43164c019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becb393c-9bc4-44be-8c48-131e35fb9304",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd738249-a6bc-49e3-af9f-9a6d8961f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e210714-333e-4680-88d2-eb97477eaea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998e865-f4c8-41b5-b896-dce2b3c8331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e2cbb7-c9d7-441a-a1d3-d87817e48341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b470ecac-d05e-42e7-b3ac-dd96922d176d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d824e-9d48-4394-b0ad-be26e7a38c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94939cc-78b7-40c4-b542-c65c518a0959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06631b77-0d42-40a4-8835-6e44a3cd9b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8104bda9-7581-4c48-980a-acaf8cd87f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4872d4e-8fec-4fa1-a25d-19b52a797bb1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37f59cd-3f3e-4631-aca5-1e4e5e437421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7ff6fa-1d17-40eb-89bb-8f39e6e251f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79330f6e-502c-49bb-9c3b-fe8b7aeaa658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a767b788-f952-477c-a156-ea3130d27043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845361e7-31da-4c72-ad47-ce097a734ddf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6b58bf-a8f5-4247-9344-8d71183e13bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212d96ca-8ce3-415e-a26e-47d6fbdda901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbc856f-2359-4289-9855-c215dba9b285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f9ad99-1b39-4f7d-bce7-e82b9d9b44d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d3ef8-78e1-47e8-89d9-7d00181effdb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cda319-28aa-49e6-9ae1-edcf6e374118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151e0c40-86ae-4a12-a375-8762f43964a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c856747-05dc-4704-9c22-2b5b09f4ffec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f3e6e4-a720-4b70-8f59-19b506d01d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5963159e-b969-4a5f-b57a-d3d653cf870f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5d43cd-2a86-4499-929c-61725ece13ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4df216-3ee4-44a3-86a2-3fdd7f8fa94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceffbd2-7bf8-4abb-97e7-0c17d2a2eb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf30837b-23d2-4bbf-b6d0-11cc96f748d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9cfef5-9009-4cc2-b2f9-e284fcaec855",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf53b60-29f7-4366-ae4d-8c179e5896c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68886f36-1f29-43c5-900c-6f35015ff647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61945d6d-e5eb-4086-b249-d2fac3a08f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "184e3833-a040-4509-9158-06740a230856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7210a5ce-9509-49c2-84a9-5778530463e3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c2bbb-ceb2-4127-b944-d99c7f35051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d48f97-fb2c-456c-adae-4aca950c5784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0663234a-cf43-4c5c-b5e1-22fdefea0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67877931-7985-4a6c-8232-5db54044344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7491d6c9-6076-4c36-a484-09818dfae6ee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61da1df4-ceea-4af3-8e92-610f79e926ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2636ab-6945-46cb-ac8b-ea3be9f8ba9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edc388a-3c5f-4e0c-b865-e4b68577f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7397e6f7-b64e-4748-8ac5-74f902e6a209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e242b04c-5752-4d97-ba57-f4b0bf8e4c7c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd13a852-c547-4f0e-9985-bb98589331e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8f71f7-7205-44e0-9908-7867f01b1552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5231ef7-3418-4910-b6b0-11900ca31210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b845584d-9966-4126-8ddf-2f1a138106f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7cdcab-ba22-42e4-87f9-16bdad410d44",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c8abab-8d0b-4e8f-84bc-f9c9e3b7c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6b4153-1c93-4196-ac53-3efa47c795a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600a06fb-09a6-4369-926f-6a4c7635f5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb97f10c-18da-4329-87c6-599650ab2b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd37531-4a59-47e7-ba13-b054616a9731",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38535aa-a9ab-47c5-9dc9-9380c98bce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca6d15c1-a637-4ba9-b853-0a44a6eb7625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8501b14d-4e61-4542-b417-0628b60b0083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87754708-1aca-4353-b176-0ac71b83bed7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76a5cdb9-e2f0-43a0-bafd-af84d0eb5269",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a42ea37-3600-4d11-bdf7-7d515db43523",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a271a7-aae6-479e-808f-6022e1de87c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa769510-12c2-4c1c-92d0-af10be5eeb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb8d558-14c3-4c3c-8eed-1706a65c7115",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27b1deb8-c9b6-419e-9219-309c154837dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35fd2613-540c-4df5-8f60-6a6f0fd72940",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f5e6a6e-1de3-4e4d-920b-ee484aa28bc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f36137e-df64-40e9-ad4e-89004f2aa0da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb710ec2-f3ec-4da2-96b5-5158c7d84dde"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b719ab1-be76-4a8c-a703-187afc61df4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b8aca1c-1bb5-43c2-a75d-dd2af2aa7dff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a08f3f2-30a9-4493-b4df-fc298d463d46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebab87a1-9727-444a-b442-5291dde19ce8"
                }
              }
            ]
          },
          {
            "id": "2332ed27-b63e-4d13-b63b-34228d30e617",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba0ace1c-81d1-4109-b2f5-995e776049d9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "78345af2-0056-46c1-b5b6-5e446019fbea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcde421-a65f-4303-a783-bc3d4f51f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "445faa43-4f8e-481b-b3b4-b9b477414331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbebc5a-b4c1-42a1-a8a1-e5a1cdc4eeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371132b2-9a12-46e7-a2cb-0fd6b2954a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2dd2e526-507b-42c0-8d48-49961246a1a8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a9a8258-b221-48ae-a749-fb8b3f9f367b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c34a015e-23d1-40cf-987d-cc30ab89277a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274848ba-5a73-46ac-a023-11a08d0ea91d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd231580-df5f-4c39-b751-025dd48d2c69"
                    }
                  }
                ]
              },
              {
                "id": "819585b0-439a-429d-84b4-939a84c317fd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "824df4e2-a1f8-42e2-b21d-9aa9a5a77eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef609fef-fac0-42a7-8967-3a256474af74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94b2d807-800d-48fd-bd04-b44eba39525f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e7629c2-482e-4dac-8354-6b364fc6eb9b"
                    }
                  }
                ]
              },
              {
                "id": "004666c0-f78e-40a9-9704-59a4bc23be96",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0161d01-31b9-4dae-b8cd-ee2dd8e7cb6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18be26b8-dd5c-4e99-bbb8-9205a14f4940"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2287f2dc-f783-4e20-ade4-238c9c8f3989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcea2640-9a25-4826-89c0-aa3fb8d40784"
                    }
                  }
                ]
              },
              {
                "id": "f31317bd-c74b-44a7-aa36-c65cbb1df36a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7ef140-fabc-41ae-a6b2-fa0161e637f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc20f5a9-4517-4f75-b6df-cfb798929b20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e016cb08-58c7-4b65-a379-3a85e909934c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "afaeda1c-0d6a-4f96-9418-6ca2403941f3"
                    }
                  }
                ]
              },
              {
                "id": "d53b0fba-8f8e-4dc7-856e-b47eb46f0bca",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f8ae061-d0be-452f-af33-69e5e479f9aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eee43492-031f-4c20-ae48-cb320d6f0316"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2820174c-2be3-48b0-845c-aadcb0d1e9ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4375072e-1a0b-4f46-b83a-070df15ebd6a"
                    }
                  }
                ]
              },
              {
                "id": "726b6b45-9ff7-423c-a342-c75c2f9cedf0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f2c494-e03a-4919-a33d-691d767b2657",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "327a4a0c-f65b-43f1-9984-80f79bccf7f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0bca01c-6342-40ab-aac2-39839963177b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69d784c7-fa0d-45bd-b400-a91d9f550292"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c93a1cd-3eb8-4f6c-9b25-a61509d97f1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c18d0e9-15c5-4cc3-9ebd-e5b159647e59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f14dded-18b1-47eb-b10e-a281aef50733",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d31a3840-4015-4fc3-8538-ee4c0ce79be3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db1a648e-b342-4bed-bd3a-ce7ef4535f92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "77a34a00-10cf-4d3c-bc32-a0c0e0ee8721"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce239cd6-e5b9-473c-aceb-b880ff86bcab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4bc2848-fe38-4fcc-947e-790bf4ee9a27"
            }
          }
        ]
      },
      {
        "id": "f9e4ceb2-ed32-41fd-a8d7-f102484f801c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fefd3740-bb2a-4c17-b883-5e62d5db07a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af118a59-1e0a-493c-b4ea-45dc715abc94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37920f04-69f0-46ab-a66d-b3652867ec03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9f85f9-04a5-4459-b9c0-fc8ad6fe4d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4456a98-7e00-47c3-b751-27af56c0d232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2067d0-4144-4c92-8915-88be4cbf43e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b23dd84-69f4-42f9-b564-b08be7d43fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e13e01f-4478-46e9-a6c5-c8d99d633e14",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bac783-dc1d-44de-9d0c-dc45a78aa835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f06831-aab2-428a-afca-4872d1bfa350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e68da6-129f-4cc9-b935-591bebf81ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab610e4-0bd6-48d5-bae6-41055b164b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14209e07-8642-4483-a500-33983e9dc05b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e10bfe-31cd-4c1e-9b5e-f26add790652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a894df23-7e46-4ece-bd23-8b3ab8cee86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6599a06-77b4-484a-875a-26912b632fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0dacb27-3760-4fef-bf1b-9958966847a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e84175-bda3-425d-b59c-dcb936004e75",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e19a0f-1f7e-49a2-83d6-9008e868f109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9278d87-de3d-40f2-994a-64f6e782e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324783e-a59a-430d-bd40-fd7a2fa060ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c23da8-f499-460c-9c08-e5928f6e1157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0fd83-75b3-4ba6-90bb-ccb016f0c592",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca7ed9a-4683-4184-9b83-028fc97239f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d893f9-50ab-47b7-aefc-f5708f92c205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a002bba-40f5-47ea-b8f2-fc00e49c5385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccc59fa-dbe4-4a18-8d38-41ecb57bc00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870545e2-ba4d-48ec-9a2a-28a8340149d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecef0fe-0fce-4119-bd51-1cbc9ed56829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbdaf22-ba94-496e-923e-abe8d24620e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab616dcb-b164-4c37-9c40-e3425d3247bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7494f888-cd8d-4c2e-9dc4-b11452e9770c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8faaaa2-d561-405d-b333-ff60c4545f73",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efab8908-e4c6-4368-a8b1-5801cb3fe6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3313ed93-fc30-4691-bd13-33a17b2041f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54f033d-dbde-40d8-a16a-93d96cc0b95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52656f1-f1a3-4913-87d8-59b31931dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05bc9b7-5da7-400b-bc17-98d5ab98096d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308de938-75b4-4d64-8a22-bb3eb91c9d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d202195-41db-4864-a712-5539327c4879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e1bcf3-7913-48df-9fcf-e833e1ac8137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ba4a0a-75f6-45e3-9145-fa372d1b269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aea8346-d7a4-49bc-9bd6-d4437bcda9e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a682a4f-9236-4ab6-984a-7f1b01e03388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dc6040-dcad-4215-8503-33849cc38afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9908e9bf-767c-451e-8ee4-cad4abd4ae87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa235092-74b9-47c4-9b89-3ef4e2da717d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b8c88e-2a45-48e4-9fa6-46b61f627b8f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fa7739-e8fc-4f97-a6dc-4ac9a8aac4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a708a6da-01dc-4797-a4bc-00706ccd5d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592f46a4-efeb-4088-be21-668a35cc2464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3369179a-9a0b-4509-8427-a13db5022415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b6e444-2b8b-4955-aad2-f5fbc873a53b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1b883e-0819-4fb6-950b-524f716503fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5df4eb-7b24-4977-baf3-1d4717bad8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef4ece6-698f-4fcd-b4fb-597750dddf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7b9276-b872-4348-bfa4-f9751b39da59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1457133c-b439-406b-9dae-a67fcdd505e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3cbec6-5889-4844-aa4a-2b18fc8567e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ec947a-faa0-4d17-9a74-62306b62df29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002555cb-f955-45ab-afa0-58fe5252677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de8c24a6-cae4-450f-b01e-af9cd518eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a2bb24-c938-4d78-86cd-72362b465eed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6509d9-1233-40ad-ba60-4e4a9e43c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab19ada-e64e-49dc-91b7-184efd0db310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dabed7e-fe01-4227-b4ca-9bf097a01888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5a8fab-1bb1-4511-9375-458492ea8a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55ced97-d96a-46c1-ae7e-c3fafa54b146",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4966d0-01db-4448-8c53-6104e4ff8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f6e7ee-d5b2-4faf-a06a-96338fc712a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0529ada-8498-471e-83f3-92ea05e03341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "57796340-4f2b-42cd-8f3c-bd698bafe802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72d9e68-7333-4241-a385-6845bcc9e753",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2791c484-2740-4d13-9aad-77c1ca00376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63836611-161d-40ff-a341-813f1a809218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d064c2-2e9d-464c-af79-a5ecf1b3657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "465b4422-6117-4e73-8314-4590b6a50e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1593466f-9a03-4c4e-83c8-d3e4e3d4a91b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61a780e-6104-493b-987d-984d9ba54a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a4de61-aac1-4da9-9f37-a28d6bc3e0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e277cd70-64bc-4f9a-aa2f-5deaf922d28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c4a275-636a-4e21-8920-380a273e1965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3678c0-73e0-43b9-8200-3ac0948adb17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005b7e88-7e9f-4f17-ae51-cad65d1832ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c321ffd-4abf-4d40-8793-16422e31175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ad29e2-3450-4673-8c70-b8a5d2aee14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea489a8-23d6-404d-9d15-4c22530bc7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b1dc36-b9a8-450b-bbae-d968f56d4cf0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0aa35-e859-4da5-bf28-1b451c4f1fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32292bae-75ab-4e26-99b3-cb5edfabb62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e967b0-8a7d-447e-8211-71627d56c060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22f88b4-af1a-4ff3-bc37-b04ab6e2b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a111b03-0523-49a4-bb42-0b45f3301907",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ddadc1-8d64-4761-a9ac-dbcc7fbd0f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5bc182-02ab-4b70-9cca-199022f02e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f491eb-ce5c-4650-8aab-a102b406b7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2792877e-2e39-41b2-befb-5c1074c532eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec70e2d-693a-4c1a-993d-9dc3e61af88a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60ed650-8fbc-4730-8879-38a6bdd8a03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd0cbb6-46e2-4ed4-b1e8-14ed2ea8fd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff22751c-d7d5-4e74-9397-1648ae91f7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0321d910-dd3b-4516-bd28-c18ab08a07a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9eb19d-9e82-4d7f-b554-fcd7c9f70b6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08472aa-cc46-4f4a-800f-5200e95edb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24453871-0c47-4a5a-88a8-aade64e4df90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a098112f-2867-486b-8986-289961227606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d22e675-e44c-4869-94f5-a54847bb9060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fc676f-31fd-4ae6-ae67-e9b09dec6299",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150b1aac-013a-4ad8-a177-0ba334f24631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203f0023-81ae-425a-ba3b-713c410cb63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2aafd11-0c91-4e29-873f-9f28dc63a367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c7e6cd-c772-4055-99d4-7cec60379270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab8492-a3c2-4253-967c-a331671b3cfc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbe48eb-8c58-41f7-8cff-2cff94aeedf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c260302-cb1d-47bb-a878-75a8f980b3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62424816-1ebf-421d-81c7-3ec1ae307300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c2f2d2-ef38-4c49-bc72-4dea96136024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0595a5-e719-49b4-b456-c84689acf32c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb4874a-e624-4572-ae93-c2f58f42d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db36350-4b7c-48ad-a345-98a970c3977b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc30a2-ec8e-41b2-838c-675c93494d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06438c68-dc47-4b3e-9961-e71790a2fc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e1a46a-b91c-4718-84a8-e4c87db37f5f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307dab4a-ae8e-4d38-b745-79849d6e67ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6129c904-ffd1-4e4b-a56b-e67cab744f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03715474-9fc3-4419-a46a-b778aaff7eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4ddfdb-8908-4120-862f-e3147a6c4112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea7ba9f-8c86-4a4a-a284-c9ac1c1504cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dff174-e197-4233-a57a-374c5947213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa35d2f0-e4ff-4e2d-b52b-7cb0e69e1536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61ed3a7-09ec-4262-8392-3e80f433ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b9b01d-ca9d-4092-ae49-ca9318df2092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c968fcb-ea82-4b08-9d3c-4c6f416549a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd6ee98-da98-49ee-a234-c693db1771bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058aad88-878f-4e17-9110-a74ba218a5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e1c41e-1734-4bb6-b139-42146d3ebc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf552a16-161d-4f41-bd25-781d043fffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9af9ac-57bc-46a6-ad3c-13573243a1eb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fc1dbe-4ad5-4468-94c6-3767c02b1754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718ea163-325d-4318-acff-b85b678b011c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2d93a-eb19-4d37-a1c2-8839254cf54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8df155-19f2-4788-a490-f9345d610fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de58e4d3-51f8-4dad-9ac0-dfb2e7ae95e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d460b931-6da8-43b7-a039-5a915f5d0cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c205f041-2fac-4234-9dd7-732b27cf4510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e8907-bed6-42ef-8531-0f8c34735c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6b54c4-d8c5-4b28-ae60-c59915614a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1eb156-d3fb-48a5-8c66-a37bf2059705",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bbccd2-769b-422d-9dd3-9be9d1191f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1146e762-061e-40d1-ab3a-22b18b4d09b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b61901-4924-4754-b5f2-766e335c05ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6810dd9-5355-4c04-b318-ceb49b3170f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dea31c-c37a-4678-8d67-595331638dc5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd15a8e-c5f9-49f1-9785-b07ff6ed0e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2da717-4af9-43a5-8257-2aafb8f5ba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea3d831-7eaf-4895-9775-d668f4a9c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccac387-5362-46ac-9b2c-1fdb0c998b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988e4ffa-e49e-400d-9448-68f5db2fbe98",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260306ed-d6bd-49e6-91ca-1faa2334a797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f7c5f1-3461-4449-9216-10f56c7f7568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87b4fb8-8aea-41b0-9c9c-502d65d32456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d37cd91-6984-47d9-b4cf-8abfe93c0df8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7c9529b-3578-41d6-bb4e-07f803a843c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da17d4b7-311e-48e7-b654-c74c388d76f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ae02ca-cd37-4ba1-8ab1-20c94d7c7541",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74a633ed-216b-4e7d-9d5a-ae0c248eb951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10d3a10-e5dc-46cf-8936-9ccd9f30ee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e616c59-67f0-4610-bb43-8dd096966e8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e107054-5a1d-4bd4-a392-2c97ec27cc7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c91fb800-1e75-418d-a3fd-766d2e0cf5e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb045aef-2576-468f-91d8-0683cd071317",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc1360ca-5e18-4739-b927-e8aa51f56c7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ebecef9-66ce-4752-95bc-c531aa28ba7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16024f33-f347-4361-8083-9ce9266d2eb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6615e35-fbd9-4ede-a37d-cdec18301c69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aecb442d-45d2-41d6-a48a-50f5d091699d"
            }
          }
        ]
      },
      {
        "id": "3a1c4289-a29d-4009-abc9-ab64895f6817",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8c34147d-80d8-4e6c-be63-469b1b942556",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f28fc7ec-91f5-4942-b76b-ed84569e980e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c32f0a8-d9d4-405a-9dbf-6c0d5e00df69",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5264d0-a1c1-4962-94fc-d68b6c5e9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc63422f-71e2-470c-8102-832a626c4de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4350672b-a2ab-4e47-a755-fa0af51d07e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09a6eac-adf1-4274-a5c2-822712c66018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fbafa8-ca5c-4030-8a06-e8f0bdfc7f56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443efb01-435f-4f23-8e76-d723b05db37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a22d50-e1e4-4af2-8b2d-7411991e8905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def1f224-6bd3-4c67-aa05-67020b7bbb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49aa300b-82d9-4e03-982b-4b497d89b0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4961b9e1-8371-4b8d-a7f5-a37f8a90e4f3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6efbee6-2554-4ba9-9075-5cf53aa74954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51ab680-a67a-41d7-926d-6e5d78e28c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4296e4f1-7f2b-4298-bb91-c0498cfc5fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "243a5374-fa21-49e1-9d21-c03182d4235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b8ef2-6aca-48f3-9ce1-cb92522bb526",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a23eee-cf04-4a62-81d2-1c6337e0e28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96748d79-24d6-4214-9105-ae3fd12dce22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530a1448-3566-4048-8935-ecbb634f274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be5c215-eaa6-4ef5-a8d2-39c23961d28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac798f4a-3410-47cb-834c-5d0d882a93e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbe78f5-cdcb-43e0-8fe4-93adfcc437c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeb91bb-eb06-495a-b95e-e22d219fda4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad3dbdc-df65-4c4d-b496-66cb3389e259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e6ca5e-246f-4d01-a4a0-8c62d0e912c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a8761e-5e5f-41d5-a892-573d2c490526",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5f742-98d0-4b25-a4fe-65ca21be3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3512eb59-6f6b-4f05-a954-48770f79bf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41492ba2-c5fe-4e1c-8ec9-409a98c75276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "604e2bae-f43e-4f4d-a448-cafc28cfedfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea2cc54-5acc-4777-8d5a-969abb3f740a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b29a56-ed32-4559-a4e2-7d90008889ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2d728a-c64d-47c8-8b77-42efd9f29ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76412990-1ebe-434f-bfad-10c9bee68bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e244f52-94d9-4ac0-ae35-0b721ed14776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c4d6ba-7fce-4981-abf7-8b4b6e04b12e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ce3368-7a0a-4364-a12e-17f40b58f007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f02a90c-b912-4d22-92f0-be8a5e7c8124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f0f866-f172-4024-882e-3cb1c178b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a9fa3e-1b20-4bca-87ac-8f1b80708710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90245ada-2eb9-4569-80b6-fb6012e48e8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78cee32-ff8c-43d5-aa2d-d6bda66934ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc62aa48-df98-4564-9c8c-b3ea616b4f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f17a8-3411-4703-ac2e-f881849030e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b96681-5e57-4c73-94b6-7633de97c58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a420d9-2109-48a4-92eb-8a52b945fd29",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ba853d-b944-43ce-961c-7352a31832be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ca90c9-780f-41f3-9868-f591e86f0621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b29fd0-971d-43b0-b3eb-0951513643f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b844af-cb85-4d9f-ad2f-fc0a9f312128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089e4792-999a-46ae-b365-f8aeb7c9a17d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690ab3d2-a865-4694-b2e8-8ae778ef7b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70eb7c7-05bb-4e87-82ce-b0be4349dd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6286e13-6894-46b1-ba13-2f975824705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "049503c4-6304-4577-9bbd-33219922a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d3dee1-8f24-40e1-8aa9-02466587735e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e400bdd-90e3-4cab-a97e-f26eb76fa50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8551470-3165-4b0b-b999-c1499654c370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5fb925-5c4a-40b4-9c62-0a7565f8a631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1115e5a2-807b-4de9-b7b9-ce9c92edb12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d318a-08e2-4656-9744-91805396358e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdea334-9741-4bb2-8ba3-6f9f3397c282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578fb5de-d314-47ca-ab15-df99353363f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc0938-d39f-4331-9479-c5d7afe55ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fbc7a2-fdc5-417c-979d-269b0a9c7455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2311b-9dd2-4543-875c-7b45a2d0a104",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28186f6-bded-4f83-a511-12717d58f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dea0a52-e6a3-40ec-9753-ebd1a4676ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994fea5b-1fec-4887-8041-cbbd9f65830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1f8582-4e0b-4dfa-a406-d8c889ae6d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa579504-c68b-4007-a71f-7ae12426dc5a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18787130-fd66-4a6e-8f30-cd95dab9c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345d06fc-cf61-4905-ab89-be6cfe5e7d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d18924-d985-4a85-a32a-2ba86e9d87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f650f6ee-a643-4cd7-b42c-25ff014d7f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d79574-7f18-4784-8e88-158681c81dad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c9b216-bfe2-4fe3-b361-924e12864f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7f8bd4-9a32-4481-a6d3-3dcc2e407aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb95e94-765e-49e6-91c9-e344c8283341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a77363-405b-4dcc-86f3-837e2ce9018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a66157-0f7c-4bd5-8972-f63ccb49c720",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0400eb27-066e-4983-b9a4-9d315d888bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a99ef0-7d0c-4288-8ef4-54ad58b69a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cde811-3fc5-4642-afba-680334952797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf319d2-4a76-4f38-b8ef-b69ab6de8907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e70dad-0025-4f17-ab0f-ec8aed64ffd4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690c39fc-c700-4904-910a-1594b2ce6d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623b5db7-3aff-4bb9-be2e-54a31669471e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4056fe34-7553-4a15-afeb-910c83c38d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "854caeea-5d0f-4c61-9118-3a16a216aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb08d19-2c55-4102-80ca-30a8b2bf6b63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2c3ec-99c3-424e-a8aa-f2d39031232d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fdf752-1e42-4e38-b33e-0de0f089cd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16db0462-af4e-4db5-adea-782bb825364c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3116d96-a5a2-42b1-9499-8814967e4096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eccc2b-8592-4f55-9711-d58443170e04",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c817adc1-5897-4b3a-9b1f-3d92e2e66758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5774478e-4211-4718-b59a-1b21d307347e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10270421-1734-434f-b7b3-8dac26619f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbffdba-bb5d-410a-9f7b-fb57fd7c0208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bf231d-0ed8-4ac0-a3d0-f11a8e4e21a7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2542fec-3f6e-4bd7-bc2f-bec970fc27fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae96fc8-c69e-474e-adab-d66eb7cea1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc6e5f6-0aea-4c57-933b-e8c91abafb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55ec31c-9e56-470f-b777-2b0552b7a628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1254207-cf04-4dc2-86d3-56f9b05818be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f941b7-5700-461a-b1ac-80fd9e356811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b0549c-c847-409a-87e0-111952574c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3f7a7f-2399-4ec8-bf9d-562737726d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9e50b8-1bc6-4e1d-987c-58eb4973ce5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576b49c-d148-4900-909c-3c6aba30a9c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73396fc8-1c82-4731-ab1e-2b00fee7a334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27da54f0-45f4-4bbd-96dd-4d37edb06082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16759175-cf38-4be9-a248-5c5883c838ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c64454e-0eb7-4b14-be11-79aaf90be14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7db0b03-e2f4-4007-b95f-0d9818945282",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d7a25f-d86b-4cd2-8f10-9b63afdbd222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85bf7db-1932-4408-bf8b-2588dc7d1b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ed4d47-3326-4e6e-89a7-736096547a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd65dc9-96fb-46f6-8666-2ed046692584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df69c712-d2a1-433a-8f24-2718b6311256",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32774d5b-ca11-42d0-9d03-26784e81efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b200fc-f16e-4be5-a419-7f3d181c4bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed2fd43-fd60-4ee8-9845-170d8f0ac006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c368d8e2-3d53-45b8-83bc-35b62979eb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764b92f9-74dd-4980-a887-f9418488d7f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530d155a-1497-4ae3-8c7a-e9e2cdd5f4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba911cc-f026-4e09-968a-8b208c5cf95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972c9254-de35-4da3-9eb9-737453d35b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d2538f-b9f5-4873-ba8c-803dc47f3a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730fa686-c144-4abf-b1f5-3cdc995a1415",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4379d68c-c2d2-4fad-8449-ac59267ec4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13d7e9b-a355-4880-b8ff-2e95e0e8b48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdb43f0-84fe-4b45-b3e1-5ee8a1b7421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "249c45ea-c531-42aa-83e0-92c192548ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7f965c-af93-4cc8-878f-cfeeb41c8549",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73786e0b-f3e6-4c9a-8ac3-df9821abdb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a49bff-1cb4-4b34-9bba-ffe90219c5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8232d3-d670-44c6-b539-b831e1e86127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df2c5f4-b130-4831-a29f-b195f227f52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb24b36-6e41-43da-b602-0460e25461b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b94fc-e616-4c1c-b5a2-9de26aabce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a302787-6afa-4995-9f6f-2b5362279bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f97fb-1270-4230-814c-8dd32e8f06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0595fc8d-7ea0-46f4-a3cb-209573417c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c7c70a-0090-4172-9e99-64ae275e5e6f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd43bd4-9e0f-47b0-9d33-9cafe9b68f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9276a6f0-5508-4ef6-a7d4-3e3e1bfb0338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fd1cf-1a14-40a8-8f10-5848337e75c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de40a1d6-f18b-4be0-8c4a-b9146ef6cb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646df40e-13b9-49a1-9e2d-f300c623142a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a9f4c8-6438-4da5-880d-634ef7813d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d774bf-8ef0-47d9-8ed6-fab7492a58a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8374a1c-1078-40dc-b7f9-7959e0536d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff45cea4-097c-4543-a3f6-c25934ccbb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace5502-e49a-486d-b9b9-2fd3fcb6474f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17aeb60-d05f-4550-8263-ce04d9a75bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d978660-99b5-43d3-bfa2-a1547b619c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaed6ef-bfca-499f-87ba-93cd190c38b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400d935b-7bd0-4390-8020-42c56f8d1232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aedcb87-3edb-433a-9c6f-d737cd440160",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8859148d-95dc-471c-bc81-c4baba0b12b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08678491-b903-4357-af36-9dfd8bab36cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d2b64f-8ba7-4840-b268-2bb8c62d1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3022cad9-830e-4dbf-bf9a-667fac81a6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8d437a-84cb-45ac-827d-6773ef565ef4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f805f6c-df63-4a0d-98c9-14453518b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b202f69-7a58-48f7-b477-c0c3ed1f75fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061f1177-ba54-4235-a454-51bb2ea0f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a1772b-8f5a-4801-8c65-3fca3065f36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e426028-60a5-4b32-a995-4c55a183408f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c1b0a3-864c-40c3-8240-a928a4e7a874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575f1f72-cfc6-4260-acde-ca018f9e43d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd770a21-2b89-4ef0-803b-eb4c49604bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc0f544-cb9f-4f36-816f-3259efa23668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb780c7-e04b-4eb0-bfd0-ff3391b6729a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94737a-2cd7-46a5-8e46-702d6097e389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6476be93-73f6-470b-b35c-425aed0b6369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4433e437-f463-4fb6-b292-9ceda84efbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba6cf32-cc27-437f-8820-0d179b27d529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c5ff3-a456-4153-861e-6e0318c958db",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc52079-be07-4df4-890b-74800de764ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f26d11-c710-4c80-b9ed-04c043c85631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b99e75-dc12-4cd4-993c-2f326f57271e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383d5364-fdcf-435f-aa04-b1f0c39601a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b75dd07e-33e2-4cae-99ba-fc57121c3367",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e1dddaf-37ed-4de6-be4f-ba7af5b36792",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf305ec-2103-4155-8a4b-bf3692bcd012",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23f53f78-81ca-4ad7-a556-7e14b562e2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aadfd65-bf23-4ea8-90da-fd1f21d676a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bb58ea8-e446-456e-b6fc-8f3e762b25d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36f20294-2cb5-4755-91d4-f49c68f75b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39b30fec-a8cf-440d-b72c-5743eaa6feab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dcf252a-c1c9-4b81-85f3-500aa85317bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773781ff-7fc6-4654-ab99-cdd61cb9b135"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aeade812-bbae-472d-af8a-cd39bada43fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f160c9f-ecab-45c6-8c5d-9d95c45fd598"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f8111dc-d290-4ee5-9a87-452a2ac8e40a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bbd2b92-eef8-4168-b68b-f719eee229ee"
            }
          }
        ]
      },
      {
        "id": "02c2e1e6-d2c0-42d0-add2-12efe999496c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4604b574-cf8a-4752-bccd-fb12e2259ac3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fc6c59a-1770-4221-aa4e-9244d61169a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03de0d32-ae73-4c55-80a8-3b62a859c8a4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6165532-2cfb-4623-aae8-16186273e594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc0ce51-13c8-4f3b-a76b-ff00b3d54014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e143496a-d21f-4fd8-af3f-27ba3f9077c0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49425801-2707-4c0e-9a99-0157077491dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aabaafd-b54f-4335-a37b-20e9e0087f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ae275-52e8-4c6f-9397-ed80e173abf7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0537b02-785f-46cd-8cd8-71966758295d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce697ff7-c256-4ee0-bc5c-15ca2d6033cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021c74b7-1fd2-486e-9d88-dc5902f45c36",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3812b88-3356-4fa7-a0e9-9115fa03df66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65021335-c911-44a0-a005-75bb4e6bfa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e084d7d5-acd1-4250-bfb0-d84299a6d43a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325e7b95-3d8c-4220-83c9-eeff433906ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfd3a4a-5cf7-41ce-90c3-ff5d2eca9524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22961c34-fd0c-4dd8-a8c0-1c83e9f63c15",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d05e3-050a-4f72-b294-ebd30628fd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009dccd9-ace6-4e0e-ad0a-e03f5b8dd901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dce8c6-491a-4ed7-94cb-6666db9195dd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d5d504-d7bf-4842-9415-6715163d1355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362c2ead-2e24-4771-b3f4-ec2cea1003f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86ac0ba-c7d2-4657-9d03-cc37c6b51b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda475b2-f542-4474-9855-b2d4a12b500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2075b9f0-dcc4-42d5-9a88-f2891893c0d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81595b21-2bbe-4220-a7e3-e3b7d718cdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7db694-5783-4d61-9a25-90ee16b26251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9651fd-5d23-4465-9cd5-60cac172e9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a796da-e0e1-4424-bead-19f9b0f725d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c31db61-94e0-4153-8323-33914478878e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1f3be7-23f3-44a9-930d-4b447632ba62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340f4888-0b7c-4de0-b24a-48b692a5e481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b961ba-d386-419e-bbb2-afd72ff1186d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27736dff-fafd-4b25-84ef-1d3439a5ff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83db77cc-04fa-490b-9c2a-cac110f9dc58",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb89621-5ac3-46e3-b144-ae77c7bf2fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfd14b9-9d22-4103-8964-bd8fbff6cc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0ce239-9fdd-4369-a8e6-6e8d68b18073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81af7f23-0499-48ec-8d57-887adb26d0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea8c5c1-2b2e-4ad0-8266-741b208bdb3b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a34bd-a744-45b2-8d27-e6d46d372a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247c3324-673f-441b-b70b-bf0ea9039637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb29c881-ef23-4048-84a3-92273e4e6dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5204bb-09f5-415a-9da0-3a0110cbf5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53b9e9-fea9-4f59-a9ae-57bd3fd8b487",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250f46bf-6eb9-47b8-abcd-ea27113e61f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb81a1a9-e7c2-459e-80db-25a1c4d4ea5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c80599e-08df-458e-a2ac-3097988f710e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee24b749-a6d1-42e0-8979-5cb02aeb9c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc2619a-209d-40ef-89f7-f6488fc4becc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5028279d-b15a-48b1-832a-71173d62b68a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3d769d-c201-465b-b8f8-9c0c276136a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c67f2a5-cd53-4c7b-a600-b60141dca653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809381df-1b42-4426-979d-cc02207b11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce76c8b-2a83-4517-808c-421e3bb9ccf4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f867567d-3baa-4fe3-8891-81fdd3f9a102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff809360-281b-415e-955a-a23c577582b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3c78c3-9a8e-4109-9b30-521bee954b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d97e82-901e-4f88-a1ff-fbd15051ce42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a40575-c1d3-43a8-ae56-63226d81c143",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571ef635-28ff-4ca2-8b75-16a07f9f8daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81913d32-0465-4b28-882f-d094803f64f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23fe5f9-1e7c-4593-896a-3b7b434ec27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4d9059-4ac8-4c51-9a56-cafcb57e0ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1a449e-6bae-498b-838f-620c65f063c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad88ab5-970c-4a6d-898d-767b2c3463f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a2297f-37d4-4a5c-885a-9bfd1e546897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d78844-9fc9-4ec2-8bc5-d52a2d6ad26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e606422b-156e-48b0-ba69-3ad7b2f9c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a6075-7705-4d6b-9a5c-306d7541fd81",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef00bf1-d909-42e8-b0ab-f235e8d70eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beead53e-46d3-4350-8c57-fa18cdb80d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1be3e0b-0bd9-458f-9955-0fd9ec70a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2ca37e-5f27-41a8-b422-80b44101c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac24263-8b85-4fad-8994-6f9d153644ef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7558a27-2e41-408b-bc8a-8b7bfe031997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc96c218-3694-4f06-bc7f-0e8a3e9a7d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b966796f-ab7e-44a5-bcf2-4c9ea0a0c5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e9af41-a2d9-48cd-91b6-c23cd70f7c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aedcb5-6468-45c2-a61d-1b0a13d1d95d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3078af-3cbe-40a3-8387-732010c1fd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c26afb5-023f-4a8f-92ec-20b8690f2502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19be915-6b08-473c-b5d5-4779eceb1848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ec72fb-10e5-4786-8f61-c12837788f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d02436-a957-4ee7-8007-221fddd14d18",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec549c5b-bd1e-466a-b5aa-031a2e87f1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2260bb86-4d7b-4c2c-80c7-1d74a815de03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1a0aa8-0c67-4f41-b20c-0e07796024ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b8f8f5-a623-4869-ac7a-fc7d4f769e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e0b0f-f6ca-44ae-b78f-ec6f47a54b9d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c028128-79e4-45bf-98e8-3571cb24b515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6331c394-8b93-4c4a-8ab6-e57b0c2db46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87df7530-ac76-4a8a-a2f1-60d4488b9a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1b0b71-0065-4297-b6ba-101b0bd4c999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a232c2-afc2-44d0-9005-799847dd0084",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2d27a7-6247-4560-8cc6-78b32b4f8d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5dc510-3a5f-43ab-a171-b6edee730244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861e59f3-dd48-4ec3-a23d-d142042daa46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cebd760-fe0f-4b40-8baf-5c85473f478d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b1575b-5d76-4093-88f6-5412fe0eba59",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2212789a-707b-4a48-bdea-7aa9d4fd45bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d1c3cb-8c08-41db-8ce3-e88e3e687639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dad64c-9f31-4e0a-9d88-9c391f4e28c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa63c910-5e04-45a9-9e72-a88b0db48740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed05632d-25b0-4f1f-bce1-62ae71d9ac74",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce1cb9f-61f5-4d30-b781-61316f774398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b538555-3924-427b-bbbe-e784609390f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be1829f-09db-4619-9e75-d8813bd4fdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba16e5e5-f752-49bf-b2ba-aa0154a0034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a76091-ae9e-4d86-b9b5-3eacc366bae6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9465a2f0-efa8-43ed-81b0-41328b6a75fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e0742c-8352-4e5f-8bcf-0e872fb2984a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203d251-b250-4532-82a7-5c3459bf9343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d6299f-f6d7-47a5-808e-5428a8d61f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fd0adf-c2ea-442e-a665-a25e3baf6208",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8200cf69-676c-400d-8e89-28a1b602e932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdfe171-d620-44e6-ac75-5a5baaa06bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e36a10-7837-4686-9459-159fc43ccce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c66739-7309-4ac8-a0e8-725b1f3c44e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b047490a-8d3e-4630-83d7-5d291b53060b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b15c5c0-0e20-4a7d-84ab-490b086c06cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a359a4c3-35e9-411e-a8c8-f60ea732aa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5224d-f9ff-474f-b92f-4b55d844bc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e22f5c2-7240-4663-b6b9-1cc400ab389f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46034681-fa98-4863-ac04-33a84a8d6551",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c5eaed-12bf-4729-bb19-0bc953732d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994e5d17-52e5-4ae8-9e42-0c271cf68e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37b2812-6f6a-4252-86b6-ac8f5db5fed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38b4315-5141-4dc7-9a46-ec37061c195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4acf5e6-6ed6-4b98-a9b3-f196276f61f6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d0d63f-c91b-4dac-877d-78e2e85cbfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e052b00-a714-48d5-a33c-4ab322d39eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d66c499-c4ca-43ac-9177-d5422287ace0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcaf5bb-3977-4802-8dc4-2565d418d786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad854c-62b6-44ef-9425-d79337369f5f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fba483-89df-461f-a5a1-9c95b60763af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc318463-c5f9-4131-91ee-7943025bdee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493f2240-f0ab-441f-a4ab-1cda96f227b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d59079-7878-49a7-8119-499b4f1740c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc54683-f667-4a96-9b76-b7ae487292ae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaae35b-efb1-4320-ae10-6a18f9a38db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b0b917-0d33-43d2-8458-bdd1b9de81a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21f5c3-3215-4aad-84d0-7400c1d8cf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070b5a56-1a1b-45ae-b747-bd30e2a0fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a6ddf4-86fc-4b48-8640-a8ad8b66ba05",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f547f4d-e32c-4824-bd76-c48bc0eab90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6b0099-73ba-4d12-aed6-0f245454a772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3fad11-99bf-490e-b513-ce1c281786ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3587e53b-f2ba-4406-a85c-7cb2578371a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e6caa-c176-402f-bc4e-d631b0e8aca6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334afd9b-528b-4200-a945-a87e81043757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b940c14-8986-4684-9a8f-4d219e524f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8df19bd-861a-4acd-a532-e4835ad8c317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9f0c7b-1efe-4a3a-a7e4-d994f52f94fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee832a45-6d08-4aab-af5d-f8a1948da89e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8398c8-adf7-4bfa-9170-1cb2296722fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17312536-6610-4260-9be0-6814efecd638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27763795-ef80-4cb5-bc17-66fd63017e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351a5757-eba6-4068-a4bb-730445edbbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269d7338-48fd-4ecc-ba5b-e35e3e9a009a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a1d791-4df0-480e-9c1d-ce55aebe1a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e141e24b-cd3c-4b9c-b95b-1896b41cdae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd049b6-4e34-41f0-b516-4868b9cbe02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86857fa7-7fcd-4058-ae9e-8b33dcb4d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad2621-4f2e-4b7b-a33e-ac0b2fbdbd68",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa14523-36e7-44ff-86b2-88c67020f02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a29589-b1eb-45ef-b21f-1414678fe6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246f80cc-600d-4450-985e-cf8d1506b4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656be379-2d98-4b9f-9685-b990ab72c761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41289f1-da4f-4fd0-8657-7f75b6fbda8f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f58763-e716-4d9b-90b3-2fb38076b65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30b6c32-6a62-4970-b385-c7343340be7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552be8c8-9861-4972-9292-ecf6397cafdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91da182a-64bb-4189-a290-6585a6ca5f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09f314d-b9ae-4dab-9979-07483339a7b2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ea015-b24b-48b3-ae77-07b397fa5d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096d2e37-f96d-4643-a050-c425b11063b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6d7448-a8e5-4672-b50a-8fc052bfd793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c9ef6c-015a-41f9-9b6b-02bc72f4fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34c517f-5c35-440d-85b0-bcc94b9ef5f8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b01a2-b647-49f0-b4cd-94489374ee99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fe94c6-1b28-4f29-9130-5ed19b8a3536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1193dff9-77bf-4f9c-a466-24fff43d7a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b010c4-e27f-4428-978d-da5ef186bbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416041fc-1c86-4cd4-bdf2-1c295bce108e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5cb16e-f7ae-4350-8e51-867a0a15fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6841c164-df91-4ca0-a8c9-4afb3a5acccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb76e4e-e091-4986-a637-ef486513ddb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca5b49a-d785-49d9-8d3b-03ae736e4b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015bc30e-b835-4e27-97b3-6baad375b62e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66cf19c-8900-423b-b11f-04f52c3af8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5c04cd-4246-4259-a298-cdcd20144a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c7e9fc-f15f-4a88-800d-dabd0b554339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c929bb41-be40-4ad0-aeda-552d2d101223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f363ca1-7629-4865-ab03-629f06a2725d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d3f4ad-bf7d-40f4-8977-295c95634cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e52a937-2cbd-40a4-a084-29b38dc23041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501b8eee-dfb0-4bb2-8ffb-11ec21b645ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111cdb2f-af2b-44e2-b72f-f2ecb1d4d803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f859798e-f044-4cc9-8a58-c483b8145d65",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36911d97-705d-4843-9a0d-0f6fbbf8b065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec1b911-57c0-497e-a57b-fee2f041c5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83cfc64-ba4e-4064-a4d4-9a1ab6800d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ecc87d-7d99-4758-b8bf-9c28fda2ac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7240300c-a624-4134-bf10-1f1da526ccf5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2606b1-c1c9-4bd0-a33f-9544030ed902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d02151-e7ae-46f6-8190-661cb848a7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215a4f3a-5644-447c-a2e6-d661608e761d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e76947-8aad-496b-b4dc-eb99cfe330be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603d423b-9445-489c-a686-3d67ab6b3e3a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b15111-f6ab-4c5f-b650-7037b2629ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b82e9a-02af-46e1-935f-92dd9f1a492b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f70068-7e48-4648-9d2a-2d7a652e7aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dd2e1d-e7a4-49ab-a718-662cb9079363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba43c6c4-a67e-4eb9-9f2f-e56f81b509ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d250f82-f51b-41fc-a18e-0ef80b3c1753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdb60aa-87e0-4ccd-924a-7bb05c303ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fb6764-51ec-458c-bfa3-e3b5e5b01e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88075e43-e3fe-4235-aebf-6ff4e7c62fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245db440-d93e-4da3-8c41-b0cc68b67d26",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b708e6-c1a8-485d-8f51-b90a805928b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03b435c-6ee2-452b-b37f-8897435ad088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039b4151-b4af-443f-9bd5-538639de973e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00f00dd-44bf-487a-97ba-01fa53a13193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8a7c1-d4ac-4a90-a4d1-8f963e46f15f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a83cff-a309-4d53-9591-ed00fcc6bda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fecd05-1075-4d83-9bea-078a0afda0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef6e3f2-9125-4a66-b221-4934fa9f06e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708f5e88-af0e-4454-a1f3-131e33d5320a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13606f8-7507-4d38-91ee-552036a88d53",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c2463b-8f5b-4a64-8b40-6fcb00ef70c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39356d86-33a8-4ab1-a1aa-dbdd8556584b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcaa841-d935-4e68-ae8c-c7e1739d6df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30005ccb-7f70-4374-9138-243102d3c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1c6790-7cf9-4cde-90c8-d33df36660c2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c72d2-807e-433f-8563-ba5fb1f66b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a416c8e-8cc2-4b99-aa23-1b42dc256787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3274dfd-89da-492e-8f19-6c36471fd463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2923aa-5869-4ada-94f0-91b1347fff23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa5cce4-bf38-4afc-aad0-1075bd5c5079",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64af6f0e-2099-4e2a-9aea-ad68bd2a516e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1ae9e3-22d1-4f37-ab1a-9648523eff8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cda652c-da01-4dfd-a975-34f4ada68904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a739be-69f3-4f5a-ab76-86c6880e3c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899b449-e5d6-4d7c-a7e8-a7093ba78ba4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dfb4b7-3518-4498-a3a7-02ed89802f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad01b1fa-ad32-41d5-a546-e4eaa7086663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f16967-ee16-422a-946a-b85e439ba88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cf2aec-4710-4fd4-b1b0-e3c114c1feaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd84cf6-3913-4ffb-b1ad-01de2f3d5678",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce027ad-1560-440d-974c-bf3d78db6aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865e4176-9d9e-4ffa-b686-0d710f5a3f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ca1528-5c9c-44f7-be93-ab8abac4ee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68584af-1775-4004-aa2f-901ecb64f946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bbdefa-25d5-4b42-8a93-6c2578eb093e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e77335-ea19-4c9f-b396-93293faf9a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc3b3ba-3902-4f23-b61a-ecf9689a3f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2c9629-8295-43bd-8b4b-1bb95f305433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010e6b70-d47c-442e-82ac-e54f6a5916a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7002927-f3fa-4cb6-a510-c823105309f6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd5113d-470b-44f4-84dd-11500469363d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce16fce-7c19-4ba0-8836-5846ab0f818f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d689112f-a467-47f5-a442-1eeb6d3e69eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49355dce-4f00-46d9-9141-2be241a5a75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53828b37-d983-46d0-b086-c6c576c056db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb522d5-d39f-48a9-93b9-88de78f0634d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98efbdeb-b75d-449c-ae82-4bb48d2fe40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e2b83e-bf9d-4a58-9d45-b9b5b915c4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f308d4-b91d-4211-90ae-71de568f4779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34c6e47-7f8c-4812-80ad-8852be9218f0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9636db-5850-4368-84a3-b75ffe171286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079e4b99-1377-4173-813d-88b1f55abcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315677d9-4359-42a4-b8b6-015af260c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544050fa-34f8-47bd-beef-74276d5aab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e44440b-566b-495e-8553-163ec565e40f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f57f9e9-e714-4b07-a779-fb7a73921070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c90c40-ebe6-4997-8909-376680d1c74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15dcce0-197a-43f6-8667-850027d0e498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3c8a80-9c5f-4610-89f8-2f2265720996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ebd62-5c87-4ada-a3b1-9389fe06e5cd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f55920b-4fb2-499e-a09d-dbc8e74c273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dd2e78-6a5f-4f6e-975b-36d2aff13cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3569787-25ee-4a85-8ad4-fb4b456e46e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166a8a33-d48b-4659-9b98-9e454b805d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb498aaf-ec77-45b2-bd8f-e73c264fb4fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83273e2-5f64-4ca6-a50f-7e30988c78ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bba572b-dec5-4755-90fd-0b7dfeac9fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4dc4ba-dbc0-4ec6-b098-81aeb08657f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba6fd04-ea81-48f0-b7a6-8fe2d0f801c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cac3d0-3f08-4eb5-9379-8530320a77cc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee66303b-3755-4ff6-8e5d-298bafed65a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b273d9-a714-4abb-b846-3c318bfdc21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a09280a-5005-44b7-b409-d09f86da9cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27789cfe-e3fd-4b8f-a90e-9b5801628185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f20c8f3-72a6-470d-bd2a-9b08c7856659",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc3c13a-3c42-4885-8914-4e836e16f63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d21fbd-738c-458f-af02-170ce09cb59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c280e62e-7d79-493d-8b04-9b2dbeb9a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65499c3b-5f98-4875-aa53-68bf3cd0bbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb02c8e6-ec11-4e69-8bd3-a2e467b07468",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888c9ddc-a40b-40fe-b6cb-15e189220fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abb707c-82eb-4617-8cc8-015ae2e83cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44dc057-95ce-454d-b7bd-dbd34b977e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b30b7a3-c8de-4250-9aeb-e5f17db18b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ebe45-b5e6-4b36-8848-b54f5dd74593",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7f6d6a-ca78-421f-af41-6a5b7b25a5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb464a19-ff4d-40dd-bd74-d6879508decf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11994cf-5ef3-4472-bb8a-5658350f4a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55e5d4b-19c6-4246-9bd9-f6d6e92ab5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9113a204-6514-406d-8580-f593a1d2eb50",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cceb5624-796d-4717-a3b8-334bb4801af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6652f681-fecb-4a81-9dc6-bcf040895174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bcd722-2edb-41b4-94d6-a55dd4bfafe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cffcdb-a15b-48f8-9bc0-a941c9f3b397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04072cb-e790-44c1-afb0-c77b1ae5cc37",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfdd95a-2069-44f1-88a5-c133faa581c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c12c34a-d254-40cc-9ecc-856373aa2ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f25ad7a-75b2-41de-bae1-4e4c87edcb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dac9086-1162-4180-a8e5-3a9db231c1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7e992f-087d-4760-9e2f-8f58d617df02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0604cc-16f6-43f1-a916-c6dec7fa164a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2f5650-3cea-4669-b968-43798fab2d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16bce61-9105-454d-9bdb-4aa6a401e9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f302460e-a6bc-401c-a791-a13cca20f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba7c487-f897-4712-a78f-eca6e5013cc4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6da62d-44bb-4e5e-bac2-0c20a7eb3ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eba3602-a01b-4ef5-be42-61ada92dbee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d18baac-f728-478f-b5d0-71303608c524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcb4ad2-2f17-4176-8e6b-7aa1c36d5472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f297059-4fef-48e8-bd57-39f84f55dd6f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685fd926-8e10-420d-a043-266c9f8a7d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d042c2-f303-4e06-9b5c-e36b2d15ab53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c6e921-d8ed-4791-b8a5-b1713f488032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa56ccbe-54b3-445a-9f30-c8a5a486527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09175e15-af5a-4d19-b6e8-adafde8b7071",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98103c7b-2ac9-43ae-a1ac-e1c7fb078c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cb1898-d071-45dd-ac25-0893f25adcb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffdd1ae-519b-4b25-9814-fb43990e4bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66201f57-b616-4ca0-b13a-7ef160d2f854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81926ce3-04f6-419e-bd95-382d928403ff",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8844fb1-c8a1-4b77-9e99-92e83ea471d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423fabe8-5eb0-4f06-8f14-4c8f9a4fcddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7070f5a4-3387-4a63-9102-b6d8b61d0013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a0e905-7e5e-46a5-9641-f935733fd1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316aac6d-bc6d-4b40-9a63-e8f8d9659191",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad8523-f45d-4586-a5e2-772475b82386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba79db62-d11e-458e-8dc6-fcb3a9ffadb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66df64af-d653-49fa-a2af-18bb510975e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ed9189-5ac2-4019-87bf-b2d6d90de3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7817e41-9996-4e3f-b718-d63b1cf929a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea7852b-f23b-43f0-82b2-375367929e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74b775a-4a16-423c-b073-09fa06dbb8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fe2d67-8b23-454e-96d3-d4a8f0fbdf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6231cd3-072e-4ac5-9aa4-c8e97568d89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24665ef4-410b-4319-9dcd-96ed5c18eae4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24b041-600b-414c-9da0-49d683a54196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739b3167-9eb4-4872-ae8b-9dec3c9c2418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60622567-6b4e-4749-80a7-a40cd6be3529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfc2752-82bf-4e81-8724-69a63a5115bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83317378-a435-4cdc-a1d5-c80d30cb742f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833dcf1e-7afa-4e22-928a-9f9b347cf105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b16e5f-fba2-4ecf-a2ae-5258370909fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b69c927-2457-45ba-83b5-90a17da37abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40239ab-775d-4cd8-b1a2-baa68701de67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c371237f-29fc-4afb-8924-02601714b1c1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56dec8-f7d3-455e-b342-ef8fe15d5778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e499af2-7431-4349-8b7a-fd1bc7d6a2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4167e-4aa8-4c37-916c-80218b856775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccba551-1f7a-4326-95f9-5e46e35d9b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380045bd-9472-4e72-98ff-36b2c6e07e26",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95c31c0-c537-47f4-9ffd-98a93040e528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca90371-2cc2-4836-83dc-142993b317ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17c7a02-7fe8-4703-be44-d317895fd45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8ea01b-a8e1-4e33-bb22-6505f67c4b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2e7309-7b55-4346-8033-a095f9af2d62",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb62dac6-2edc-42ae-b68e-d84de178e198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e58ebd-89b1-4dd9-be3f-624cd23f9fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f73ef0-97dd-4406-8b96-9789cefafd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207606bb-49c8-4770-957e-ac5544d34d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dca937-42b2-4722-a57c-a513faf27781",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493d09f8-1ded-4f18-96ed-323b3b4531f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8316f34f-c4cd-47ed-8ada-b5125c432280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6166fdd6-99a3-4b5b-ace8-d62b756813b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a777e88-783e-44fe-8dfc-a2d55b9e1311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6ada90-72df-40f1-b8b8-c28d054d0017",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b9de41-3334-47a5-8af3-177f2753226b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c781dc7e-35cf-420c-9080-2bbfc1dae4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04d1ca2-d824-4108-964f-ce525d07963a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26af094-7eb3-4700-bd28-950e83f265b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb60397-21e5-402f-87f3-c3755ee10169",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320528e-0e37-4abd-b789-5c11db6ea9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198bea5e-76ce-4cc4-a098-436843b98775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0281aca1-cf63-4e4e-9fde-5cd7f2eeb8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b424f3eb-93c2-4fb1-9fa8-b9117b076ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a672aec-56b7-49e6-a40c-abe559b91757",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048dbae6-e8b2-4ace-81df-d1ee67c39cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e73ee9-688f-424a-957d-9f5b3bd9962f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa17134-6fa1-4bb8-9c3b-039cc20c4b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242ff219-590d-4c05-925f-71d0fbe80b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d556df-0818-4b04-8bf4-c26422dd5912",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce883b7f-567c-4abc-99e1-f4b752989a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e14d9de-4328-4714-ac39-a7780ff84122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db4997-02b9-4cea-b3a9-88bc6ce16baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb54ccd-499d-49df-99a8-beecc6227cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b08eb15-4361-4efa-af6f-06f14f6ba66e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1577bc-cb77-4593-b358-3d3095a59e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c212d2-c61d-48af-9fa4-64ef80e107df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81784ec3-8d14-4df1-bc9a-3d99135eea26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2418129-9bc1-4726-81f9-d299b78e8388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ba8cb6-fc52-417c-987a-176f1be45396",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74e0aff-ce8a-4d80-96b1-9e15e7f8f753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09911983-d5d6-4d67-860a-d1f745b800e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8500e9-79c0-400b-9281-a6239872e018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec23b854-7f91-41c1-938b-51854f419c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2481f34-cf17-46ae-8636-1a0f704e9e7f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44b7e75-d2da-4892-b2c2-e4a5ac023c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6aa289-55a6-4ba3-8dbf-8feed7c212df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a25cbb3-fdd6-4920-9cb3-e9708385990f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ed7997-4538-4c42-bc95-660b0b35b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8081de-3da3-49b6-ad6d-f890d5d3ad80",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8380ff0-1927-46ef-8bdf-843b67a8211e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719b5660-9e32-4a9c-92e5-56b2cfb70e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44368548-d353-4810-91ac-7e41d2a4a9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daaacd3-e059-4039-ae1d-4d53e3532b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e1f380-4a3b-4a4c-9bde-bda54c04c7b2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fdc854-7feb-4f19-b394-e4bb6983f53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbfeb92-3970-4ac5-af03-b89c97c49aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6223491e-60df-4f62-950b-3f998e355810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43e5d03-e983-437e-8b03-a50752114717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f654da-25bd-47ce-a7d4-6b3d2537c945",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76209a38-86a8-487b-a368-7745f1154732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd78e36a-3871-4da1-8a78-8595fb465871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a6bc7d-f1c2-45c4-a379-c04a26b00781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f184ef-59da-4a10-8a88-7870b6065400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7271ecd-aa2c-4052-b6ae-3983918a05d9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362181b5-6312-4dc0-8ddb-bf93ba69fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54048cb-51dc-4afb-a3b1-535f9ad4d578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdeece3-c52e-4018-84a4-c4fee6aef85f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7684afd-28b9-4a04-a9a7-b73d0879cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e117d0a-4075-4a18-8827-d36628b66291",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a435b-772c-482a-b3b7-50eac8a873cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341a3b5b-1fad-46f2-a3fb-eeb52a04540b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454d3fc-bb06-4b72-b5eb-b66afaa007d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f6cb85-7755-40be-9981-5db07fec7587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f3be48-1556-44d5-a991-f3556cf83e90",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172f6bc3-2292-46d9-a12d-198967a581cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc738e5-6883-4c37-adec-87f726628f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147cc2ab-6684-4d35-8ba3-033663f8111a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8692fc19-5aff-4332-964b-be58164b3a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dd53b7-761c-4d4e-9799-5e10f546097e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f21a8-f3fd-499a-8915-c345c49f823d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f6bfa7-3413-4337-ad75-a431c349e743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11fed05-55fa-42c7-8760-3c3408a188c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f24099c-03a3-41db-9884-c9743bf49eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b4ae4f-23d1-4741-9a04-14c2a5ca8a08",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77460e4e-4563-4251-bbba-8ee0e98053a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb7514c-d7d6-4ac6-ae22-f2a0c9aaa627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7a4bd6-299c-4f5b-9ff6-96a9ef62858a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d098278-08e4-4256-9fa1-e19d0ebd1165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250dda46-36e9-4cd6-9e80-1788569c66e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db01281-6510-437a-9656-2dd3afe58edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b48b278-8a3a-4b0b-a77f-11ff99c57fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b9d5a-c51f-4b7a-94ef-265448921ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e991da96-832a-4f85-b16d-52874f355d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216d0f96-393a-4fea-a06f-f453cbab7b28",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be05b48e-0261-4758-8fe3-50f490bd7705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b08cb1-3bde-433a-9b07-6b1748f139e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371bd070-b2ff-418c-b4b1-ac6ab7ea41a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61bf48f-72ec-4094-b9a1-5c23f8d2d567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6449ae21-296c-43e4-8fe0-251036770eb6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8fb1d8-4799-47ca-b8f7-3460a956de95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed7b8f1-023d-432e-889b-1b04fcb7c540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483324ec-e852-48ab-9672-2c3014d12fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e56c2d-f3f3-4032-b6cc-8f6c83ed0992"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42c6d54-8d1f-4c4c-ba6d-61cfcaa2790e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5282d111-8919-4098-a318-64df6e0ca68d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b98479aa-b45f-4f13-ba31-08447402faf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b21bc4f0-0c69-42ee-a4d8-ad36b3486718"
                    }
                  }
                ]
              },
              {
                "id": "52cff99e-8c1a-4b60-8387-01e18e5e0fae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b44398d6-f530-4e47-b2f0-6c3eeff82d6a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73412d1-d713-4a2a-8244-65a4e319a7df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1a9d0e17-2226-40d9-b303-602a7c01ce23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e996282-8e32-4802-8c83-4904d31af531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cf3fef-87b4-4cb2-8048-7aa54a6a3638"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06b3290c-116e-425c-a046-694fd2df50d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ee575b9-8f75-4c9a-96a2-55e3d4e597d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abbabdd1-dd7d-4e51-9bb1-91c8483270a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761e1e1f-9c99-4ef9-99bd-f99a88413082"
                    }
                  }
                ]
              },
              {
                "id": "cd8e66c6-6259-42e4-96cd-e6acad1e2259",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "216a7861-d4da-46db-8925-ac9c862363a2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b486106-5410-4a51-94d1-08703790f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c3ff81dd-b345-4953-b1c0-073aaa00ef33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd5e518-9654-482f-883b-27fe973996fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb6aded-0fa7-4213-a08b-3d413dc40259"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d521dd0-43b2-4c82-b087-93977eaadca6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "249ae384-c196-43ae-88f8-6d11ed0694e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eba112e-2bb2-4a1d-bf8c-eff13936aac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd308b40-0296-4e62-bbc9-a002f6caa78a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5755891-18ca-4ac2-a5bf-3c9992a34dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba4b24dd-8277-4fb6-859e-3e980946ac67"
                    }
                  }
                ]
              },
              {
                "id": "bf97685c-4579-4ae6-b707-244fb6119ca3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b91b1dfd-441e-4e1c-86e7-14d376050fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9397879-2d5b-4b40-9a27-090621e2faf8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02af0982-d4d2-43e0-b39a-ef9719c7b524",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f8edae1-cd6a-4e0b-8203-0a8ec60a02d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4844b53b-fe41-45b0-ae50-60b00ad335b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "acae9e62-0c27-4d9b-896d-7eac36f961d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1391eb8-a246-4bad-a04e-78873b9880a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c5df8ac-0e5e-472c-86fb-e3cc203b214f"
            }
          }
        ]
      },
      {
        "id": "a7d85753-b364-4562-8e43-6622d9c12d53",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a605cde-d9ed-4684-8f56-1fa23ef50ff4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3242a31e-7a99-4c2e-8f4a-66584a580277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f103ba8-3627-4347-8613-15844f4eb20d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2fefb5-f9b5-4aa0-836e-730daeaaf181",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "82a22465-96d7-4954-9904-228bcb9f02af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc1e39d-e3e2-46a2-ac09-a3ebd588f340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1daa71d-8d70-4590-80ab-1d6dc43555e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d999c7f-d759-4aad-bb46-175f6cb557e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17cc253e-13b5-468b-8553-bf8ad4be67df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb156c27-320c-43a1-8463-7dd601854d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cb36930-c624-41c0-b1e3-9d0018c73585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e451f9d0-6d88-47ad-91e2-ad66b42a2c2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "026a2d10-2441-418d-be64-34372913bcc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "587138b7-5647-4200-897b-3de3aaec02df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80cfd943-c0dc-4630-9cef-c63c5e4eb325"
            }
          }
        ]
      },
      {
        "id": "89268f56-6dca-4fe0-8d15-8876ae0d6dfc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "916e95e4-16f1-4afd-89fb-b759ecb5f9cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e98189d-4aa5-4ba8-8be6-3b9a7659ff2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "552b85d7-cf11-4ec8-b520-1dbb9dcfd56f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c85cd1c-052b-4a81-8a51-ce087eca8ce4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f18e7f8-c8c5-455c-826f-945289da4b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d261d8d-f21e-4f29-af92-c5c5658ca90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea99f203-ade8-4f45-8e8a-42d8e2353f81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c05024f-551a-479e-9cbd-d50581fb8dff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46c45064-8564-4ed9-9ea8-353413bb6af0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15439a49-7f7c-4a61-a997-06493dc8ce04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a61e124-5c89-4ffa-9e1a-9cf6198fd241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7f9c54e-d0d8-436e-8e99-a7602321bc9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "760958f2-0f27-4c69-96e0-fcd489892f3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01ee44b8-889c-4647-971c-649028bf8093",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3183105d-6285-443d-8e78-63f55483673f"
            }
          }
        ]
      },
      {
        "id": "86217de1-de06-4070-9d97-7f890a45c219",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7b616bb8-dc8b-403a-bd3b-02a954077f13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32505763-3b69-409a-89bc-ca000f877d3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8a5f56a-05d9-443e-af01-c28655e86539",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2b0854-decd-4461-b94a-e65160423461",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc15b3eb-0920-49a4-9f15-6cd04fac438f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a71e62-278a-450b-91cb-32c48c11884a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd55badc-b2f9-4caa-9a0d-97c71003d61e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7672058f-c420-44cc-b4da-2f8e06fe15e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e7c0ec6-203b-49c9-9a40-0730c1bb3de2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "562b9d7a-f8a5-4dc5-ad13-e9da3be347c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9fa1544-0588-4f05-8b96-5da40d3efd7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28cfa78c-d6ae-40ec-8334-9e832e863e87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30f886b3-6d7f-4ef5-9fc6-bb7823ca7ac6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6f228f0-c432-40ec-9b69-92a5aa8778a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8b3719d-ea29-4469-9d6e-83fafb520ddc"
            }
          }
        ]
      },
      {
        "id": "b053584a-6b0e-4213-a71a-37324069e155",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a61644b-5ea9-47f4-925f-7c8a55356b98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a838b749-92ba-46ff-8cba-2316b73c5bad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fbcfa2f5-7159-43eb-8d78-ad13ec99f65f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5417181c-1ee0-4c56-8f5e-b8f53ffbe74e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d3e0ceb-7d89-4f8d-811a-84e302a7768a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 496.0280701754379,
      "responseMin": 9,
      "responseMax": 19591,
      "responseSd": 2043.2134097564453,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698021247281,
      "completed": 1698021401525
    },
    "executions": [
      {
        "id": "a0a56fa0-1875-42a0-aeda-d96199e0957c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "077f556e-6a83-4e2a-9420-90098d710b90",
          "httpRequestId": "60f265a1-5fa6-49b3-8467-3287a4308701"
        },
        "item": {
          "id": "a0a56fa0-1875-42a0-aeda-d96199e0957c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bbd132c3-2d7c-4e4c-9ba0-664914a29ecb",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "c1c4b2f3-48ef-4e47-b601-9198b55dfae3",
        "cursor": {
          "ref": "f40115e3-c24b-4385-bed5-bb51a733af2d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0318d369-8045-413e-8ab4-0f2bb3216eab"
        },
        "item": {
          "id": "c1c4b2f3-48ef-4e47-b601-9198b55dfae3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b08039ef-e4a1-483b-bac9-2057768edffe",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "affa8ccd-5caf-4705-accf-cdd000313f6a",
        "cursor": {
          "ref": "e5200128-39f1-441c-8d8b-e18ca0efdc65",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "efe71991-91fd-4ec3-a68d-f84edd99c7fa"
        },
        "item": {
          "id": "affa8ccd-5caf-4705-accf-cdd000313f6a",
          "name": "did_json"
        },
        "response": {
          "id": "269d7e3b-7c1d-4422-9c89-a0c8d010c4ae",
          "status": "OK",
          "code": 200,
          "responseTime": 1898,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6299c6c-1a5b-4ac6-b02d-48f4cf40680a",
        "cursor": {
          "ref": "f93f23f8-a443-4333-88e4-0a3339c8ba1c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "48f5a390-ddf7-4209-a38e-a71c1e7ed2dc"
        },
        "item": {
          "id": "e6299c6c-1a5b-4ac6-b02d-48f4cf40680a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a47a27b9-22f1-4651-b915-3676a19da9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6299c6c-1a5b-4ac6-b02d-48f4cf40680a",
        "cursor": {
          "ref": "f93f23f8-a443-4333-88e4-0a3339c8ba1c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "48f5a390-ddf7-4209-a38e-a71c1e7ed2dc"
        },
        "item": {
          "id": "e6299c6c-1a5b-4ac6-b02d-48f4cf40680a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a47a27b9-22f1-4651-b915-3676a19da9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028d9f47-a209-4a64-b7d6-97cbdf9ff609",
        "cursor": {
          "ref": "25c904a6-b5f5-42ab-8f2e-7f7139ab833b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5afe444f-588f-4e7f-a088-d7212e9971cd"
        },
        "item": {
          "id": "028d9f47-a209-4a64-b7d6-97cbdf9ff609",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8c504bd8-7c3e-4841-961a-19d17a799da5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 411,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efabf1b-9a4b-44f3-8694-cffce93fe9f4",
        "cursor": {
          "ref": "10c436ee-e8ae-4021-9526-4f201dcfea03",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "924e83be-fd9a-4313-beed-7239cc6dcf55"
        },
        "item": {
          "id": "0efabf1b-9a4b-44f3-8694-cffce93fe9f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "62e7a581-9812-4ba4-a78d-2842c2d1763e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 253,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310d81be-af14-4cea-bf25-b0e6e3188077",
        "cursor": {
          "ref": "66739c51-f8ff-435b-8ca7-89e32449eee3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "066ab9ca-5aa1-4966-8644-e3ff67ff88f7"
        },
        "item": {
          "id": "310d81be-af14-4cea-bf25-b0e6e3188077",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f74a8647-fc90-4106-a589-a49e9f82e7f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7af8b4-deec-44ef-94de-8c05c81e24aa",
        "cursor": {
          "ref": "4272e473-3552-4c3f-ae6e-244761ec6b0a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7fb20cc6-22ac-43bc-a8ae-18369233410a"
        },
        "item": {
          "id": "1f7af8b4-deec-44ef-94de-8c05c81e24aa",
          "name": "identifiers"
        },
        "response": {
          "id": "a2975cd1-bc0a-4cf6-87e9-9fd92c7f6100",
          "status": "OK",
          "code": 200,
          "responseTime": 1597,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c44a87b-4c87-4c51-a90b-74705b89a8e6",
        "cursor": {
          "ref": "0417ad27-ae72-4637-8222-73b2a7fc53ee",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "feb4a0f8-d359-4188-a109-661d75724656"
        },
        "item": {
          "id": "8c44a87b-4c87-4c51-a90b-74705b89a8e6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c17a2d3d-8376-4094-8ad3-a65fbfc86d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcbaa59-775d-4bba-8181-1ecb05bdf1ac",
        "cursor": {
          "ref": "2356f8a0-b63c-42ed-998b-f69d90ea0ce9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3308cdb9-6401-4013-808e-95715981c3d5"
        },
        "item": {
          "id": "ebcbaa59-775d-4bba-8181-1ecb05bdf1ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "079a9ca0-f7b3-4148-8d02-deca603cfe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b9908-96b4-4e6b-ae01-56229d92438e",
        "cursor": {
          "ref": "15fbce8d-3a5e-416e-b839-8ef49258dadd",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b41e7383-c0b2-42d8-8ec7-2749032fb71d"
        },
        "item": {
          "id": "1e4b9908-96b4-4e6b-ae01-56229d92438e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4f1751ce-fd34-4534-801b-532d860337a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95f6a46-ca48-4e40-bf93-5c31610ea0c4",
        "cursor": {
          "ref": "f45f3cb6-2035-4eda-a690-f73661718af1",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "daf16e52-4906-4fd5-a090-4f3f1fc9dee3"
        },
        "item": {
          "id": "a95f6a46-ca48-4e40-bf93-5c31610ea0c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7317194-0560-4546-83b0-ab6913a06f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be78c3ed-1673-4c31-a881-a26bdc485731",
        "cursor": {
          "ref": "c6c4b413-e81a-47ae-b487-e3e7e2e665a2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9ee7f368-c748-483d-9852-c4a6b280dfd9"
        },
        "item": {
          "id": "be78c3ed-1673-4c31-a881-a26bdc485731",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "00fa508b-05a9-496b-bb89-4f4526f5ff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17194e8-2ab3-477b-82c6-82d4d122387b",
        "cursor": {
          "ref": "5f0d3813-a83c-4276-bed4-d525df139388",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d303d2e7-584b-4506-92fe-871da232d0ff"
        },
        "item": {
          "id": "e17194e8-2ab3-477b-82c6-82d4d122387b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9cf7052c-cb16-4ee2-9675-6e16f3bf17a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48fc715-a40f-4052-9daa-a0f77438bfcd",
        "cursor": {
          "ref": "d6967993-37f9-4d33-9f7f-58cf107ffc93",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b341b5a6-b06e-4e38-ac9f-d42f4406bb85"
        },
        "item": {
          "id": "d48fc715-a40f-4052-9daa-a0f77438bfcd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d6b22eca-194c-4361-9aac-e99c61d05de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba27b76-67bd-4a05-9e7e-41062756dbbe",
        "cursor": {
          "ref": "f75d2eff-1c8f-4e90-b8d8-37c3011c78a1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c54cade6-6c56-4bb4-8777-d6ba6ca93fb9"
        },
        "item": {
          "id": "9ba27b76-67bd-4a05-9e7e-41062756dbbe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b20795bd-5516-491c-87e4-40047097109e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af64c28d-4f0b-450c-9920-34f19dd90b3a",
        "cursor": {
          "ref": "99faf21f-1cf2-4504-9ef0-09517a612c8c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9dc9af26-43b2-4637-9a87-a34cd0b785f1"
        },
        "item": {
          "id": "af64c28d-4f0b-450c-9920-34f19dd90b3a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d4612aed-afb3-4c2f-a39f-2ffbc2fcd9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd22b208-4f0b-48ea-889a-731e50e0add5",
        "cursor": {
          "ref": "615872e8-6095-429b-8b6e-f34f92c8de42",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f54b7267-4c34-4315-85af-abdd0b3fa3cb"
        },
        "item": {
          "id": "fd22b208-4f0b-48ea-889a-731e50e0add5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "031968c9-cc1f-4611-9634-798068d4f06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d49ea8-014b-4c83-9e08-2b3feb2c751a",
        "cursor": {
          "ref": "be6ea72f-ede9-464b-85e8-9db52a9d825c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "45af23d2-70fc-4cb6-aebc-c2cdce228b3a"
        },
        "item": {
          "id": "c7d49ea8-014b-4c83-9e08-2b3feb2c751a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d7614e65-c97f-42b9-ab6e-3660441ff31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aaaa4c-f99e-422a-b259-255b93f2d44b",
        "cursor": {
          "ref": "90a78136-71f3-4b6c-9ed8-8e5d9e125e1b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7ae7e07a-6196-4be0-9d49-4e3145f11600"
        },
        "item": {
          "id": "d3aaaa4c-f99e-422a-b259-255b93f2d44b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ca9cef4-12e0-4000-bbc6-8497c3c4cd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba36935-d4a4-4ba2-a32f-883af1e7a3bb",
        "cursor": {
          "ref": "8c20a82f-39da-4da7-ba42-6cacfaa1d8d6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0ba169b-494f-43de-afc9-cbbcd0faa101"
        },
        "item": {
          "id": "3ba36935-d4a4-4ba2-a32f-883af1e7a3bb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7b7dd04f-73a4-4333-8412-4f3155621e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6078578b-a5c9-45ff-b0eb-54c16018f677",
        "cursor": {
          "ref": "b8efe060-9291-4f60-baaf-91ba47bd538e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8c87f1e2-44ae-4e1b-8946-fb88b06ad170"
        },
        "item": {
          "id": "6078578b-a5c9-45ff-b0eb-54c16018f677",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d3c1c943-a5e2-481f-b171-ba5acfff706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27b5e7a-d902-48b2-a319-c4247901ce02",
        "cursor": {
          "ref": "3bef2391-0621-4271-96e9-394afa515eb7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7c55d331-d1ad-4e33-8360-da86665c1f4e"
        },
        "item": {
          "id": "e27b5e7a-d902-48b2-a319-c4247901ce02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "03ced3fa-dfcb-4080-af14-f0418d17c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c6137e-ab2c-4af0-a71a-9361372575b3",
        "cursor": {
          "ref": "59d9799c-521a-4188-af03-9c186f77397e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9821fc3-8d61-4105-b604-9e748ecdabc9"
        },
        "item": {
          "id": "d2c6137e-ab2c-4af0-a71a-9361372575b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "27755697-6732-4d0f-8f8a-1f65a36a95e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05de43e-77df-4cee-8023-cc2391fb107a",
        "cursor": {
          "ref": "ded0e398-786b-42c5-b8d3-a041cdd993f8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10145972-f855-426a-936a-bcacfc2407f7"
        },
        "item": {
          "id": "e05de43e-77df-4cee-8023-cc2391fb107a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f3b03c62-2369-4b18-9851-f2ccbda9ea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed929d0e-a685-4141-9d4f-0cbd84cab31b",
        "cursor": {
          "ref": "30303a4e-fa54-455f-8a5d-7d1655cb7767",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0793be0c-21ca-413b-87d1-15310e611431"
        },
        "item": {
          "id": "ed929d0e-a685-4141-9d4f-0cbd84cab31b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1b1abb5d-d498-428f-b421-37485ae3c40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11006ae8-03c1-49a0-a362-020605326117",
        "cursor": {
          "ref": "61f1a45d-3c89-45d1-9211-1047274c2b10",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f1d8c22-3ec3-455d-ac49-3cdfdb822ae1"
        },
        "item": {
          "id": "11006ae8-03c1-49a0-a362-020605326117",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e5b5a761-4e41-4216-b28b-eb0976d9c543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d541a69-4a10-45ba-bce4-44b36bb54dfc",
        "cursor": {
          "ref": "9ba9c6b3-100a-40cf-8aa0-acca2bf3a145",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "09bcb01b-b245-43b0-a7c5-1f57944c585f"
        },
        "item": {
          "id": "5d541a69-4a10-45ba-bce4-44b36bb54dfc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4a285479-c09c-4cf8-93d3-ac29480c63ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ff013f-b2c7-4f5e-83a8-0212d1770940",
        "cursor": {
          "ref": "d9ac23da-624a-4229-8177-cd76ccc5e1f0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5c259d47-cb20-4dd7-b3ce-ee6000fe1e30"
        },
        "item": {
          "id": "f0ff013f-b2c7-4f5e-83a8-0212d1770940",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8bab6dba-4e89-4119-8e8b-66e240f77946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7766ca-d909-4492-9924-d13b952d0722",
        "cursor": {
          "ref": "5b08258c-580c-4463-b26f-52b140d79146",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "706778bc-77d1-48b2-9b2d-cab05c1aa9ae"
        },
        "item": {
          "id": "2c7766ca-d909-4492-9924-d13b952d0722",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb427dbc-28fc-4b93-a443-bb146b8c5f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290618ab-3b3e-487f-acc0-8cd4fdf0e639",
        "cursor": {
          "ref": "3034a8da-8dd0-4999-8ddb-a56d3c27cce1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d6c2402e-e0d1-4379-8922-cb36fdb0f737"
        },
        "item": {
          "id": "290618ab-3b3e-487f-acc0-8cd4fdf0e639",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "694b7157-0f88-49bc-a7e0-78fc90741543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46065061-a9ba-4b40-9bcc-6e7589bf0c98",
        "cursor": {
          "ref": "389b6a19-d0a3-4baf-bab3-c1de503e7e28",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b3a650ea-0f85-45df-8dd8-f0780129a990"
        },
        "item": {
          "id": "46065061-a9ba-4b40-9bcc-6e7589bf0c98",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2328e1e9-4c6b-4627-8f19-65e84c416e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60cc47a-3570-4851-acdf-c877b4afa5bb",
        "cursor": {
          "ref": "c73eb9f8-ad88-4002-9811-c15b0e0f7f10",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1d3f6ca4-fab8-4a19-9419-01bec3387e53"
        },
        "item": {
          "id": "a60cc47a-3570-4851-acdf-c877b4afa5bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef69a142-489d-4aac-bfb9-d9c8f03a0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df75773-2c23-43d3-abf8-e8a2dd8797e8",
        "cursor": {
          "ref": "6cbadc9f-772c-4b15-9e59-0d4589a5590c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cbd822dc-e00c-4dcc-9405-34427599f4f0"
        },
        "item": {
          "id": "4df75773-2c23-43d3-abf8-e8a2dd8797e8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c43d22ed-2014-4acc-b88d-027c8a0541ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9691aa66-915a-44d0-82c2-8340063ace05",
        "cursor": {
          "ref": "dd5bf9f9-9d01-4bb4-bdc6-a17ce8a9b94c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4f922e9f-45f8-4cbf-a0bf-1116f7cc2723"
        },
        "item": {
          "id": "9691aa66-915a-44d0-82c2-8340063ace05",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8a8ce15f-f2ef-4e82-93a7-fef69b0eb637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d543b3a9-8502-4ea3-8592-af6b7b14a574",
        "cursor": {
          "ref": "653197e5-9e7f-485f-a381-c091422ec1d0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c87b50f4-a9d9-4bcf-a724-28a177b3adab"
        },
        "item": {
          "id": "d543b3a9-8502-4ea3-8592-af6b7b14a574",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8163272e-3580-45b1-998e-a62ccb740042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32f3cf6-bccf-499d-829e-c66835d0ab57",
        "cursor": {
          "ref": "069f2d60-5adb-4a67-acba-472225b91fc1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ca7557c1-ae11-49a5-a768-b2b455c0fac3"
        },
        "item": {
          "id": "e32f3cf6-bccf-499d-829e-c66835d0ab57",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2a346e11-daeb-4942-b305-f5c1864ac618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c583b948-5865-49a5-a0dd-f33fafed1cce",
        "cursor": {
          "ref": "a15663d8-8761-47c3-9242-89bb39c41feb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ab643852-33f5-4894-ad65-bf04782f1ea7"
        },
        "item": {
          "id": "c583b948-5865-49a5-a0dd-f33fafed1cce",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6528e650-f1ae-44a3-84d4-00d040fbe8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f287cd-b2a1-4c80-9e2e-c8cee454d76e",
        "cursor": {
          "ref": "1e151c18-faf8-4505-a6b8-9a847fa22bff",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "30d4afee-3f09-4b19-8b7e-97d330f42915"
        },
        "item": {
          "id": "50f287cd-b2a1-4c80-9e2e-c8cee454d76e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "291d2b24-c13b-48b7-aef9-06401f4ca493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb01581-c000-42b5-8c66-0c7d14f4b1d3",
        "cursor": {
          "ref": "7f77fef4-8c06-49ba-b87d-584ab3e753ee",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d2c5199-1c0e-414f-bf81-5efdd9d3f4c6"
        },
        "item": {
          "id": "3fb01581-c000-42b5-8c66-0c7d14f4b1d3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a5d75a5c-da5e-4aed-8ec9-f4d5a1116308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bb89ee-fce2-4768-a9d2-01fb753f8c52",
        "cursor": {
          "ref": "40ac4f66-c737-4415-b9ea-e2ad54d2531f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4382c8dc-8db3-444b-9b59-4fc9b243182e"
        },
        "item": {
          "id": "81bb89ee-fce2-4768-a9d2-01fb753f8c52",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d7bba0e-b500-4499-9320-2c12e78c3e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6113ef-3622-4cae-9780-c8a1d820fdd8",
        "cursor": {
          "ref": "a155f9ac-3a03-46f6-b07d-ee68232519ea",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "98843d1a-e12f-4129-b831-ad439264ff93"
        },
        "item": {
          "id": "ca6113ef-3622-4cae-9780-c8a1d820fdd8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "38a2cde8-131e-40ed-a391-300ad5604d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47fb2f-dc5f-4b6d-9e4a-9b7725ec9bef",
        "cursor": {
          "ref": "bf2ea0fd-e5c4-49b9-9ca8-2e24f2cb0bbb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe9a798d-5878-4b08-a080-98c9a734d913"
        },
        "item": {
          "id": "8b47fb2f-dc5f-4b6d-9e4a-9b7725ec9bef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9468591-1b75-4c70-8654-eb091a70c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca20098-6c1e-4d59-be83-e190a07e3a57",
        "cursor": {
          "ref": "a2257424-0988-4dc2-8b18-a95d08615c03",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eceb8e7a-5721-48a3-a50d-af40048a71e8"
        },
        "item": {
          "id": "2ca20098-6c1e-4d59-be83-e190a07e3a57",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f36f1d43-b6e0-4bec-a418-6abdad6d3b44",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2609,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823f739c-abb8-4636-bf5c-d66617216d94",
        "cursor": {
          "ref": "31aab543-1cad-49b2-9d7b-ae1aa134339e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b3255b2-96e4-4718-8b1b-217e2761cf3d"
        },
        "item": {
          "id": "823f739c-abb8-4636-bf5c-d66617216d94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ffd32028-225b-46e3-9d6a-9b655a942491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b011545-9aef-4f5c-a59b-1244eaff99c5",
        "cursor": {
          "ref": "7728dbad-df83-4ab1-a04d-a806a7e69262",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ed69774d-465e-4584-867f-ba6dfd235d81"
        },
        "item": {
          "id": "0b011545-9aef-4f5c-a59b-1244eaff99c5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "edc87b01-d1a3-4851-9fc1-bab74667e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb900d44-a9eb-4e95-92b6-6ace773f2744",
        "cursor": {
          "ref": "12dc5611-f8f2-4b95-af7f-8f0fd1a92822",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5f37f77b-2ac8-42d8-acfc-1b9a3fefc3c5"
        },
        "item": {
          "id": "fb900d44-a9eb-4e95-92b6-6ace773f2744",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "982b62e0-112a-4e9d-9a16-0ff09176b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b00859-0812-4429-a515-b80562cb12ea",
        "cursor": {
          "ref": "1c95dfd5-bb32-4f6b-a222-0363839e16cf",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1fb1ba80-90a2-45de-8d8e-c8a996073a47"
        },
        "item": {
          "id": "f5b00859-0812-4429-a515-b80562cb12ea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5a90a202-c12e-4337-b6fb-8fce2dab0439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7912d12d-fadc-4398-b3f9-b62797547f84",
        "cursor": {
          "ref": "caf99713-e92a-4591-8618-2a564bf14849",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "32ffd98e-da64-4a25-8db8-4bc364e8f1b8"
        },
        "item": {
          "id": "7912d12d-fadc-4398-b3f9-b62797547f84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a8dcbe8e-ec57-4f87-a17b-c4943ab0fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e0f74-8fce-40ac-b8f8-8ceb98c29a25",
        "cursor": {
          "ref": "012ee7ae-e815-41da-9a3c-60ff218d9aa9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cc31b27d-b5b9-456c-8377-a8efae9b8089"
        },
        "item": {
          "id": "6f0e0f74-8fce-40ac-b8f8-8ceb98c29a25",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0678ac0d-f3ee-442a-a987-5902bce781e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72de70a2-a5cb-4cf2-b657-f3254c23b486",
        "cursor": {
          "ref": "5b680bf3-f397-4494-a1b3-c77e1c7c9e01",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d3b66b56-de1a-4ee0-b3e6-a3c748fd93d8"
        },
        "item": {
          "id": "72de70a2-a5cb-4cf2-b657-f3254c23b486",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e8fc5c40-c2b5-462f-b202-1a3adaa56bea",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8fb6e-c73a-4e65-add5-c1a4dea9b66a",
        "cursor": {
          "ref": "ff42c181-e241-4437-a044-164cb284ca60",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8dc74b10-bff7-4cd4-927a-7c1549ca5d18"
        },
        "item": {
          "id": "c9d8fb6e-c73a-4e65-add5-c1a4dea9b66a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d25984a2-c19a-4cd1-b677-e15d4ca5eae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb717051-a58b-4ceb-93a1-5b26d810fe44",
        "cursor": {
          "ref": "936e6c36-fc3b-4bce-a028-aa96ba76e36c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0dddad29-9003-4e4c-8e1e-7e85bb9b9906"
        },
        "item": {
          "id": "fb717051-a58b-4ceb-93a1-5b26d810fe44",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70a0a32e-8c2a-4b26-aecb-c30323edbf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693324c-ad1a-4e22-adb4-492b225c5988",
        "cursor": {
          "ref": "1a15bfb3-b7d0-475b-9b27-f08521afbf5f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e304e023-7338-4fe4-ae26-6e1c140f3fdb"
        },
        "item": {
          "id": "0693324c-ad1a-4e22-adb4-492b225c5988",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee98a257-6514-4cad-bebf-bcc5cc3526f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e6f43-a8d4-4cb0-968d-8cede29c2ba3",
        "cursor": {
          "ref": "22c0a219-75ff-4537-aafc-10fabf7a5492",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dba17dbd-41e0-4206-8796-16c2d940fc38"
        },
        "item": {
          "id": "f92e6f43-a8d4-4cb0-968d-8cede29c2ba3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "97ba4c9c-67f5-47e8-ada6-0d0d28e4971f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac2fa83-8dd8-4576-9c4a-7a7587af8d01",
        "cursor": {
          "ref": "c55a1fc4-d432-4b56-8855-567967d5e776",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0f783f38-4fa7-4fea-b7bd-fdd17fa6dd73"
        },
        "item": {
          "id": "aac2fa83-8dd8-4576-9c4a-7a7587af8d01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "097ec4d1-b227-482e-ab7a-9bca311cc75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0699c532-cbee-4c37-ac9e-17622e0e09df",
        "cursor": {
          "ref": "f5739898-270b-47b6-896c-2d8f973173cf",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f58c08d1-55b6-419e-9837-cd4117ec5e2a"
        },
        "item": {
          "id": "0699c532-cbee-4c37-ac9e-17622e0e09df",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f857e8b5-d2e2-43a6-8fa4-dc556f51120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8306fd3-fc92-4c5a-a9a9-11b596845be8",
        "cursor": {
          "ref": "93bd3358-5f5a-4090-8199-0f7eaa4cf284",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5d21d99e-1e3d-40d0-b7bf-856b75a9e34f"
        },
        "item": {
          "id": "a8306fd3-fc92-4c5a-a9a9-11b596845be8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cda7d086-a86f-419f-8dfb-abb9f10cd50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763c6e8c-ca8b-4515-b279-fb3ed59696da",
        "cursor": {
          "ref": "99176778-fbe3-4ca2-9c0b-e651c323b2c0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a80864e3-706c-4e76-9e7a-22796725bb5e"
        },
        "item": {
          "id": "763c6e8c-ca8b-4515-b279-fb3ed59696da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d040150c-0659-4b99-961e-e14c599378c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07a35ac-e9c7-41e0-b093-5517495c25c0",
        "cursor": {
          "ref": "db444840-8522-4795-b3aa-8afcaff3a0eb",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5517216e-f430-4aaa-b332-aab6fbf52a85"
        },
        "item": {
          "id": "c07a35ac-e9c7-41e0-b093-5517495c25c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a11cc883-dbd8-46b6-a03b-5862633ac1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf8d6c6-a569-4824-b558-e35b386f9333",
        "cursor": {
          "ref": "0612648a-62ca-4a68-aee2-330d4be4c360",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dd05e71c-4ad6-43f0-81ec-db1e5cb901fe"
        },
        "item": {
          "id": "8cf8d6c6-a569-4824-b558-e35b386f9333",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f66c69a2-1833-4f3d-87a9-81b0fda1d1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ced96c-e490-47d7-9d8c-f3c58878e26b",
        "cursor": {
          "ref": "8966e1c6-a6e0-4ba1-86ae-8a9ac18df054",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1a67497e-8cd1-428f-8935-691afeeb198a"
        },
        "item": {
          "id": "54ced96c-e490-47d7-9d8c-f3c58878e26b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e2826450-5dbc-4fd4-9390-fa2edea85c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81553b71-43c3-459c-82ac-dbbc26d688b2",
        "cursor": {
          "ref": "ed9f8230-5d02-480a-8950-040effce6b57",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "641c091b-65f4-439c-b566-a234d5b02201"
        },
        "item": {
          "id": "81553b71-43c3-459c-82ac-dbbc26d688b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "afa585d9-268c-43d5-b54d-d53bea843c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaa6d74-3698-4e5e-b657-8d6dfa5f1c79",
        "cursor": {
          "ref": "57062fc4-11d9-4a2c-a3f7-c45e9cc4de4c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0fa2e24-bb46-4ce0-843a-3c61a632ff40"
        },
        "item": {
          "id": "eeaa6d74-3698-4e5e-b657-8d6dfa5f1c79",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9fc52fcb-267d-4843-8e12-bb647437f067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e3d2f7-572a-48f5-ba83-b588b63d8fc9",
        "cursor": {
          "ref": "b4877f63-d50f-4c5c-9040-f7ff421e3de8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fa7bd874-c792-4364-b67f-a536fc814fa7"
        },
        "item": {
          "id": "22e3d2f7-572a-48f5-ba83-b588b63d8fc9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c997023f-b159-43cf-952a-8f09911a0c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d99be1e-b4a0-42be-bb21-37dfae7b4723",
        "cursor": {
          "ref": "b78be014-b3a1-437c-8273-0110e9f89a1b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "13d89274-e203-4cfc-ad16-50772830925c"
        },
        "item": {
          "id": "4d99be1e-b4a0-42be-bb21-37dfae7b4723",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b196523-9b90-419a-a335-d7ac1c3d3445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fea96f-618c-431b-8f13-c9228c5d247e",
        "cursor": {
          "ref": "95b9b9ae-2fc5-40d5-987a-ab459fdff8da",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c2f87f2c-a5ef-4a58-92b1-9160d1c9101c"
        },
        "item": {
          "id": "a7fea96f-618c-431b-8f13-c9228c5d247e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4b7ec10b-ad9b-4041-96eb-996ddd16449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3007f10b-587e-453b-8568-d6606bde42af",
        "cursor": {
          "ref": "40ca71bb-13ad-4e63-8007-5a21d174437b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "66c60a97-90ed-4fdf-b3c1-a1029a727d70"
        },
        "item": {
          "id": "3007f10b-587e-453b-8568-d6606bde42af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "15c95dc5-d97c-4482-9da1-6116b4ec9696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fedbe00-f497-4545-91c4-cf6b676bdac3",
        "cursor": {
          "ref": "33dd3cc5-0011-4e58-95b9-513eb98f03af",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "952282b6-dc14-45ef-8f90-eabcd28b3c8a"
        },
        "item": {
          "id": "0fedbe00-f497-4545-91c4-cf6b676bdac3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "db9cb96a-b31b-4a2d-837c-037c9d30c322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e7a47-6e20-4251-8f1c-49338f920868",
        "cursor": {
          "ref": "25c537ec-8403-474d-8d3a-23614ddf2cfc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "745656ed-f960-48f9-9690-7ee5624bdef9"
        },
        "item": {
          "id": "d85e7a47-6e20-4251-8f1c-49338f920868",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5c333d8-82cb-4bd0-a115-dc2ebc60acaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5af72d-3075-48df-983e-c140ee27e94d",
        "cursor": {
          "ref": "4c2235a4-2029-4d5b-b76d-1b914ba1d90b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96253b46-ba51-4532-bdeb-0d1600e7e0c8"
        },
        "item": {
          "id": "4a5af72d-3075-48df-983e-c140ee27e94d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21929e38-c941-4d53-9b11-5a0644e3c36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713a2d1c-10e0-4c0b-97d1-f6b5f6588123",
        "cursor": {
          "ref": "c73d2b3b-400f-4444-8c02-cb371f82822f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7fdf8fef-71a3-47e7-8bcc-c29affb3115e"
        },
        "item": {
          "id": "713a2d1c-10e0-4c0b-97d1-f6b5f6588123",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38629165-7ecc-4c66-ae7f-7bab059212e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721dd31-7ad3-4baf-b5f3-9e9a1eeafc1b",
        "cursor": {
          "ref": "70247569-1cdd-4e7e-a5dd-7f8dd5239e7b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bbac5f83-5822-4023-9681-5a48073f4218"
        },
        "item": {
          "id": "a721dd31-7ad3-4baf-b5f3-9e9a1eeafc1b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b3bbc35-02a9-4f21-a2fd-df8020b8c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c656d6-7a9d-4b62-b1a2-716b97dbfd43",
        "cursor": {
          "ref": "95193a1f-1d3b-4319-b3f8-26a1f061375a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e9531a19-9585-4673-9095-123d160198b7"
        },
        "item": {
          "id": "71c656d6-7a9d-4b62-b1a2-716b97dbfd43",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2b1d0877-d598-4610-bf67-ca4f87a0f734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2086fa7-5cbc-4b58-ab1b-30f0cbc446c4",
        "cursor": {
          "ref": "4af3a65a-2eb9-4c0c-b47c-f6471a0e7c01",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16a80e9a-da17-49fd-a52f-aafa6590a637"
        },
        "item": {
          "id": "b2086fa7-5cbc-4b58-ab1b-30f0cbc446c4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "acdd4575-b917-4bc4-8b99-c68e26489eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8455cdf5-39a1-416b-afaa-5358dad4dea9",
        "cursor": {
          "ref": "e9351076-12ac-4d81-b437-20ac29b9a7a5",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cecf347b-038c-4d63-b778-87299869b13d"
        },
        "item": {
          "id": "8455cdf5-39a1-416b-afaa-5358dad4dea9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "155e5ffd-b8aa-4c25-bde4-f93116b99064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0b9f0-1d0f-482d-ba92-7fdcd4308f65",
        "cursor": {
          "ref": "b90e4523-0bfe-4328-b740-f393c2cc1edb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "652f4a83-622e-4da9-9041-3ac99560dda6"
        },
        "item": {
          "id": "94e0b9f0-1d0f-482d-ba92-7fdcd4308f65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5c252118-fac5-4a4d-a123-880bc9bfddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a9ba10-719f-4af3-b1d0-cb0e6c873b2f",
        "cursor": {
          "ref": "d93c5656-925b-4135-8504-d7c559042237",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c32104af-8589-4ae0-bbbf-33d67153ed71"
        },
        "item": {
          "id": "c0a9ba10-719f-4af3-b1d0-cb0e6c873b2f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59cb6ffa-72dc-4dca-94b8-51fb70f73ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e45fc9-65be-427a-8a0f-f5ec12209de5",
        "cursor": {
          "ref": "7d2f5a97-e32e-499d-8b0b-25f5a9cadf40",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ccd0fcfa-b4b1-4fd8-9a3a-a73108952460"
        },
        "item": {
          "id": "83e45fc9-65be-427a-8a0f-f5ec12209de5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "58acbd81-e3e7-4137-9085-362c6261877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa2de36-43d0-4851-8663-cada23f9e7be",
        "cursor": {
          "ref": "0204ffa7-0aa9-4712-8aa6-d8ecc7364014",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49edcc05-fdb0-4eb6-ab90-91fe0aaa3e83"
        },
        "item": {
          "id": "baa2de36-43d0-4851-8663-cada23f9e7be",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "42f7433b-737e-44d6-84be-e4631bcf30f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36078096-ddab-4116-97ce-8030292e417a",
        "cursor": {
          "ref": "957e9948-ae35-41b6-8a65-a14f440468a8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "13bade5e-370c-4df4-bac3-bb0c875a0e2b"
        },
        "item": {
          "id": "36078096-ddab-4116-97ce-8030292e417a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d76afb33-c1c0-4011-950a-0b113678ac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c8463-a966-4911-b489-87a6bd5cc91f",
        "cursor": {
          "ref": "6f8b70b3-fc0e-4e94-9f8a-bdf473d46b18",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ba55a7b2-2413-4f7d-b826-bfdcc72b701a"
        },
        "item": {
          "id": "606c8463-a966-4911-b489-87a6bd5cc91f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4328cfe-9ce4-4d95-a06a-0b033095ceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8409cb2-7e73-4231-b7e4-5b8c633624bf",
        "cursor": {
          "ref": "0794b944-65a6-4622-b678-f9caf292b56e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "507b2856-440d-408f-87a9-07f5582b540b"
        },
        "item": {
          "id": "c8409cb2-7e73-4231-b7e4-5b8c633624bf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0bb24e92-f379-4641-89ea-dfcda94b6d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46346e2-2965-422e-aaba-210f94e6d142",
        "cursor": {
          "ref": "a2ea1dba-59fd-4bfe-8aa0-92ae7eca7ed6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9ce3d833-e407-44e5-a9bf-0873a40382cf"
        },
        "item": {
          "id": "f46346e2-2965-422e-aaba-210f94e6d142",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7161fa64-d0d1-43cb-8f84-7cdfab0f1096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789120df-a1be-436f-bb6a-2852e613b611",
        "cursor": {
          "ref": "92e5ed72-bea9-4a06-a92a-950cb6d40d9b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a734a450-28dc-47a0-8fe7-fbfb5ca98374"
        },
        "item": {
          "id": "789120df-a1be-436f-bb6a-2852e613b611",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6b4bbdb-2255-44a2-be0b-6a5d37a93448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684c969-bb2c-4c64-af7e-8e3200327326",
        "cursor": {
          "ref": "94446f7d-a479-438f-a93e-3a5e6f2d9243",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb04e6b2-f565-4309-932c-6226e04b3e99"
        },
        "item": {
          "id": "f684c969-bb2c-4c64-af7e-8e3200327326",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2fd24d34-03bc-4b75-93d0-5dcd972e14e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23007561-392e-430c-9a64-2fa7e5e01b3f",
        "cursor": {
          "ref": "95c8bba1-6152-4ff6-8845-faa597e7c604",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "56ea4cad-524c-42da-9dbf-552abf683b3f"
        },
        "item": {
          "id": "23007561-392e-430c-9a64-2fa7e5e01b3f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "87a67af5-92e5-4243-a378-ebfef09526c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7cf149-f966-4ab0-a1a9-e63ba1350ae9",
        "cursor": {
          "ref": "bcf10970-2264-4545-beaf-e5ce2bdcb316",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "976264c4-6a2d-4151-add9-78a7c80c5977"
        },
        "item": {
          "id": "ee7cf149-f966-4ab0-a1a9-e63ba1350ae9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de11f360-ad3e-49a6-8420-aff4d2840cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becb393c-9bc4-44be-8c48-131e35fb9304",
        "cursor": {
          "ref": "75ab54b1-4406-4241-bac3-029a17596ce1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7ea2d62c-d706-4098-8827-1244d16334c5"
        },
        "item": {
          "id": "becb393c-9bc4-44be-8c48-131e35fb9304",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "84ee8b00-4ddb-40a7-8b6b-1eb6f19964e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b470ecac-d05e-42e7-b3ac-dd96922d176d",
        "cursor": {
          "ref": "104f847c-03ab-44de-a2e6-e24e1016c266",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be7dc83c-a689-4d62-87b0-79dfdbc99643"
        },
        "item": {
          "id": "b470ecac-d05e-42e7-b3ac-dd96922d176d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4591ee5d-e41c-4d6e-9bce-155a6c177c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4872d4e-8fec-4fa1-a25d-19b52a797bb1",
        "cursor": {
          "ref": "975433f1-ba83-4305-ba34-d9efa5f6ff99",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "17c86841-bda1-4ceb-9d8b-3d7cafb645ea"
        },
        "item": {
          "id": "d4872d4e-8fec-4fa1-a25d-19b52a797bb1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5da4f16a-5e85-4692-b6f9-e9dd1ab25fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845361e7-31da-4c72-ad47-ce097a734ddf",
        "cursor": {
          "ref": "c12a19c0-1020-42bd-b579-7e954629ea1a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "96737657-bb13-483b-9e38-07fe85e9d3e6"
        },
        "item": {
          "id": "845361e7-31da-4c72-ad47-ce097a734ddf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1f1a8000-9e2a-4895-8248-3b531416b04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d3ef8-78e1-47e8-89d9-7d00181effdb",
        "cursor": {
          "ref": "53f5c3cf-04c0-4500-a18f-96ad58bdaa39",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d967e8e7-7821-4b3f-879e-9adbd5d55a53"
        },
        "item": {
          "id": "563d3ef8-78e1-47e8-89d9-7d00181effdb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d2c72f5a-9f7d-4d66-8552-64c31cfc4d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5963159e-b969-4a5f-b57a-d3d653cf870f",
        "cursor": {
          "ref": "f14cae42-ffff-4e70-9e6c-a8f2be1420af",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "88888041-ac7e-4c9a-af87-33dcce27a6a7"
        },
        "item": {
          "id": "5963159e-b969-4a5f-b57a-d3d653cf870f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9aa294f8-701c-457f-ab75-2c818e3bf512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9cfef5-9009-4cc2-b2f9-e284fcaec855",
        "cursor": {
          "ref": "c1e6f396-7609-491e-afaa-ca6bc2fbcace",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a45bb42c-389e-493e-bf56-166142f1f2ab"
        },
        "item": {
          "id": "aa9cfef5-9009-4cc2-b2f9-e284fcaec855",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c60dbd12-0786-4a52-b5c7-9dd141abe124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7210a5ce-9509-49c2-84a9-5778530463e3",
        "cursor": {
          "ref": "a1303435-18b4-47d5-ae94-153970c8de53",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0597b5b0-f273-400a-9f11-7eac47b03b5f"
        },
        "item": {
          "id": "7210a5ce-9509-49c2-84a9-5778530463e3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fb6ea043-f804-40dc-ab59-164b7bffb7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7491d6c9-6076-4c36-a484-09818dfae6ee",
        "cursor": {
          "ref": "488abe19-5174-485e-a516-0902c98b2e42",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c46cb49c-7bc1-4745-ab58-08bfbc6bf15f"
        },
        "item": {
          "id": "7491d6c9-6076-4c36-a484-09818dfae6ee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b7456b0f-ceb3-4a13-a6bd-b4af42ccd814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e242b04c-5752-4d97-ba57-f4b0bf8e4c7c",
        "cursor": {
          "ref": "7f7eb8cc-c18c-4fd6-b1ad-90f9728e766c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89f03399-3f1c-437e-a0c3-8d7d0e11b6c7"
        },
        "item": {
          "id": "e242b04c-5752-4d97-ba57-f4b0bf8e4c7c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d06f7fa-ca35-4074-954c-d5598ecb3960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7cdcab-ba22-42e4-87f9-16bdad410d44",
        "cursor": {
          "ref": "45d408e9-b8b3-496d-9940-bdd1c3d36030",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f45d0a50-2173-4206-92f4-09a4286448dc"
        },
        "item": {
          "id": "ff7cdcab-ba22-42e4-87f9-16bdad410d44",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e84bd719-ed43-46f5-8a33-f88c125837ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd37531-4a59-47e7-ba13-b054616a9731",
        "cursor": {
          "ref": "b584e695-ddfb-4b7e-802c-6558ba5db855",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c8b72c8a-10a1-43f8-86e9-d38e1eb30034"
        },
        "item": {
          "id": "7dd37531-4a59-47e7-ba13-b054616a9731",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "69911f5e-5fd1-49ae-92d1-d49b7e2ad818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a42ea37-3600-4d11-bdf7-7d515db43523",
        "cursor": {
          "ref": "14320f3a-8e81-4a8a-91ba-6992dd19d84d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2186a89c-80e2-4905-921a-d2e4bd410bab"
        },
        "item": {
          "id": "4a42ea37-3600-4d11-bdf7-7d515db43523",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b5ca68ac-7b56-4f7d-8585-b1e099e94758",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78345af2-0056-46c1-b5b6-5e446019fbea",
        "cursor": {
          "ref": "a47b2aa2-3715-47c2-b162-e5b7ae6ed23a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e34f621-3550-43c2-a307-428dd944cbfa"
        },
        "item": {
          "id": "78345af2-0056-46c1-b5b6-5e446019fbea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "645e4b68-0c63-4de5-bc58-759790599812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2dd2e526-507b-42c0-8d48-49961246a1a8",
        "cursor": {
          "ref": "c3482b8e-ac8a-4ea1-9c74-efc7a703b620",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "409ce5c3-6bcb-495d-ac7a-8906bda18991"
        },
        "item": {
          "id": "2dd2e526-507b-42c0-8d48-49961246a1a8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "414d15c1-5999-4519-b4d3-76493b7e799e",
          "status": "Created",
          "code": 201,
          "responseTime": 12194,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "819585b0-439a-429d-84b4-939a84c317fd",
        "cursor": {
          "ref": "c2229c33-728c-453c-9753-f30366fb7246",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b6ea383-fb0d-4f58-885d-d8a35e84cb90"
        },
        "item": {
          "id": "819585b0-439a-429d-84b4-939a84c317fd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af482250-f1a3-4d6e-b66f-9410f44ff22d",
          "status": "Created",
          "code": 201,
          "responseTime": 19116,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "004666c0-f78e-40a9-9704-59a4bc23be96",
        "cursor": {
          "ref": "94f3ed33-f4b1-4f88-9aa0-0bf2d6798db5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "85b76e61-2576-459e-b672-39e0e3d434df"
        },
        "item": {
          "id": "004666c0-f78e-40a9-9704-59a4bc23be96",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a41205b-d326-45bb-a4e4-a3e6dddb4e61",
          "status": "Created",
          "code": 201,
          "responseTime": 19591,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31317bd-c74b-44a7-aa36-c65cbb1df36a",
        "cursor": {
          "ref": "55569ceb-5b62-4dc1-8bf2-1296c158835b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5b3348b7-e000-4e6d-8b71-c3ad63aee7a2"
        },
        "item": {
          "id": "f31317bd-c74b-44a7-aa36-c65cbb1df36a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ae10df12-7ded-4f57-aa2a-aa4ab51e1ea0",
          "status": "Created",
          "code": 201,
          "responseTime": 13329,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b0fba-8f8e-4dc7-856e-b47eb46f0bca",
        "cursor": {
          "ref": "6de8c969-14ba-485e-a2b8-ccbad8051b2f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "844cc101-2ed9-4b4e-94ba-e4590f182ba9"
        },
        "item": {
          "id": "d53b0fba-8f8e-4dc7-856e-b47eb46f0bca",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50fe8d2c-18e1-4b1a-aa9d-5b05d655bf88",
          "status": "Created",
          "code": 201,
          "responseTime": 11058,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "726b6b45-9ff7-423c-a342-c75c2f9cedf0",
        "cursor": {
          "ref": "4f27f558-6819-475d-a1da-71970c936f6d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2aaccc9d-7460-43a2-814e-f7365845d652"
        },
        "item": {
          "id": "726b6b45-9ff7-423c-a342-c75c2f9cedf0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5c5248b1-52e2-4109-a94e-74e6168a13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "37920f04-69f0-46ab-a66d-b3652867ec03",
        "cursor": {
          "ref": "47fa063e-d083-4298-b8c3-06505ededcec",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d1cc3e6a-4af3-4223-94bc-fbc0d30b1e81"
        },
        "item": {
          "id": "37920f04-69f0-46ab-a66d-b3652867ec03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b373102a-800a-454e-b8e4-ec3adc3004d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e13e01f-4478-46e9-a6c5-c8d99d633e14",
        "cursor": {
          "ref": "a75c2eeb-db3a-4f30-b92b-1b256a5e3cf8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8d2b75d5-a798-4618-800f-5a46140b9be5"
        },
        "item": {
          "id": "0e13e01f-4478-46e9-a6c5-c8d99d633e14",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab335c3f-d383-4d94-a2d6-12e55db2d89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14209e07-8642-4483-a500-33983e9dc05b",
        "cursor": {
          "ref": "084725bc-9917-437d-8a53-d0905bc3de72",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7b814f54-a354-4da6-b92e-2188c575099b"
        },
        "item": {
          "id": "14209e07-8642-4483-a500-33983e9dc05b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b7c5492-cfde-4b99-a616-854a9ad3a3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e84175-bda3-425d-b59c-dcb936004e75",
        "cursor": {
          "ref": "8c5c5ead-edf1-469b-a8d5-fc20c0856fd8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c2595097-d832-4065-ab11-a8ec6344736d"
        },
        "item": {
          "id": "e0e84175-bda3-425d-b59c-dcb936004e75",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4d22586d-f839-403b-9566-36651992d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0fd83-75b3-4ba6-90bb-ccb016f0c592",
        "cursor": {
          "ref": "050d8c44-b53e-42e3-bfec-53b79048bf27",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4df0204d-ca02-4b4d-b27a-eb26360a1646"
        },
        "item": {
          "id": "a5a0fd83-75b3-4ba6-90bb-ccb016f0c592",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef30a514-aee5-405b-997d-117f149f21b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870545e2-ba4d-48ec-9a2a-28a8340149d5",
        "cursor": {
          "ref": "67e2c42f-8349-4b8e-8a64-d3ca071b8128",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4172cc33-074a-4da8-adc5-df6916effac4"
        },
        "item": {
          "id": "870545e2-ba4d-48ec-9a2a-28a8340149d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bbc1d222-26c1-43bd-b1e5-dbb694244b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8faaaa2-d561-405d-b333-ff60c4545f73",
        "cursor": {
          "ref": "1920f814-f216-4c4c-868b-71666aab36f4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eeefa33a-937d-4e3e-b182-eadbae744702"
        },
        "item": {
          "id": "a8faaaa2-d561-405d-b333-ff60c4545f73",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af9632ff-cee1-4ad5-b8a5-0ebf75f50eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05bc9b7-5da7-400b-bc17-98d5ab98096d",
        "cursor": {
          "ref": "235a85e5-d89e-4150-abee-23d206f205ff",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8cbba785-e90d-4c6f-97da-473607fb9737"
        },
        "item": {
          "id": "e05bc9b7-5da7-400b-bc17-98d5ab98096d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8be65524-aed4-4463-a571-5721e6438d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aea8346-d7a4-49bc-9bd6-d4437bcda9e9",
        "cursor": {
          "ref": "e4c30844-bd33-4442-8395-929288293ef9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b7790936-9dba-498d-ae59-b4ab6b4dfd74"
        },
        "item": {
          "id": "9aea8346-d7a4-49bc-9bd6-d4437bcda9e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d9185886-005f-4bea-a420-9a925285b2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b8c88e-2a45-48e4-9fa6-46b61f627b8f",
        "cursor": {
          "ref": "1f094435-e9bc-4f71-bcc6-11a3ce828cda",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "91a4e0c4-03f0-42da-b638-142b91983041"
        },
        "item": {
          "id": "72b8c88e-2a45-48e4-9fa6-46b61f627b8f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "88abca84-5619-48a1-b489-b00a52248b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b6e444-2b8b-4955-aad2-f5fbc873a53b",
        "cursor": {
          "ref": "71a82f9b-c672-4287-bdd7-ca21060a7125",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a12e388d-29cb-490d-8593-0272c066f9e0"
        },
        "item": {
          "id": "d9b6e444-2b8b-4955-aad2-f5fbc873a53b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c846ff03-52eb-4b68-b369-9770eeffe3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1457133c-b439-406b-9dae-a67fcdd505e5",
        "cursor": {
          "ref": "1f9a2689-d2da-47d3-9d9c-5d387abd52dd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b7147e7e-acc5-4649-a7b2-8cc81b367a45"
        },
        "item": {
          "id": "1457133c-b439-406b-9dae-a67fcdd505e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1158def2-5d5c-453e-9eae-8682f9bff12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2bb24-c938-4d78-86cd-72362b465eed",
        "cursor": {
          "ref": "bd4abbf2-b65a-43dd-87d8-a91579ac2710",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bef7c1e6-a474-4b17-815a-119ef5b378bd"
        },
        "item": {
          "id": "b0a2bb24-c938-4d78-86cd-72362b465eed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7e78a63e-5eb1-41e7-956c-03f94c5fbbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55ced97-d96a-46c1-ae7e-c3fafa54b146",
        "cursor": {
          "ref": "8597c05b-6c62-44dd-8c5a-181ce1e318d6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "02db6676-a26c-4452-a8c8-fd9940082efb"
        },
        "item": {
          "id": "b55ced97-d96a-46c1-ae7e-c3fafa54b146",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14c3b695-169c-4880-a891-e27e7e7103f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72d9e68-7333-4241-a385-6845bcc9e753",
        "cursor": {
          "ref": "d71decc0-75dc-47c9-8d6a-80e908cedd6b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "69535e7f-1718-4c7f-b32f-ad447fac6c50"
        },
        "item": {
          "id": "b72d9e68-7333-4241-a385-6845bcc9e753",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8362ff0f-5570-4189-ad39-c1c064d76c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1593466f-9a03-4c4e-83c8-d3e4e3d4a91b",
        "cursor": {
          "ref": "014a5ad9-8572-4194-a5cf-6c29af426157",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "76b4de25-de60-40c1-aa0b-3073c2e81b66"
        },
        "item": {
          "id": "1593466f-9a03-4c4e-83c8-d3e4e3d4a91b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "abab9cfb-fcb3-41ea-90cf-eba6756c07c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3678c0-73e0-43b9-8200-3ac0948adb17",
        "cursor": {
          "ref": "83ec9e97-f071-419c-8b46-2115d8eae0c6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "608cf979-225a-4d29-9c4a-b8df43180bcf"
        },
        "item": {
          "id": "4a3678c0-73e0-43b9-8200-3ac0948adb17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f461bc40-7726-42e4-8ab9-4f3b26ddc515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b1dc36-b9a8-450b-bbae-d968f56d4cf0",
        "cursor": {
          "ref": "5c7da177-6cca-41fc-8bcc-d6e523c7bc79",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8e94ca4d-1352-4cf6-a05f-48d45754d6eb"
        },
        "item": {
          "id": "52b1dc36-b9a8-450b-bbae-d968f56d4cf0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad6a77e7-565a-444d-b8ef-965e908613a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a111b03-0523-49a4-bb42-0b45f3301907",
        "cursor": {
          "ref": "13f70a8a-dc76-4fdc-a2a5-da50927c4978",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e264a8e-ea6b-46cc-86dd-08656ca0d758"
        },
        "item": {
          "id": "5a111b03-0523-49a4-bb42-0b45f3301907",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aac4703f-1175-4043-aabd-a1178c8e2bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec70e2d-693a-4c1a-993d-9dc3e61af88a",
        "cursor": {
          "ref": "1aca3c61-8305-4847-a6af-752c43932b06",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e3912f6-1c51-447f-b644-9e25fb2fb49d"
        },
        "item": {
          "id": "9ec70e2d-693a-4c1a-993d-9dc3e61af88a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b3cc5f5-36b3-4bd3-828c-1a5f87edfdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9eb19d-9e82-4d7f-b554-fcd7c9f70b6e",
        "cursor": {
          "ref": "ea8c455b-fca0-49a2-9d1f-68f46296f218",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4c938b44-3eec-4621-8670-e1079f038366"
        },
        "item": {
          "id": "4f9eb19d-9e82-4d7f-b554-fcd7c9f70b6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d47b2264-5cd3-479c-99df-abbc4e916109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fc676f-31fd-4ae6-ae67-e9b09dec6299",
        "cursor": {
          "ref": "23aa00f9-5488-4b1a-8edf-9ed3e96281e1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f73400ba-a615-468b-9db4-8ed7d6253334"
        },
        "item": {
          "id": "41fc676f-31fd-4ae6-ae67-e9b09dec6299",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "60a20d15-4c73-4786-8cab-5c6a10357928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab8492-a3c2-4253-967c-a331671b3cfc",
        "cursor": {
          "ref": "4958e0d0-b83b-484f-bf90-4d2dc815c095",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2876a519-303e-4e77-915a-2dfad48fc1a7"
        },
        "item": {
          "id": "92ab8492-a3c2-4253-967c-a331671b3cfc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71165dae-614b-4d93-8e68-27dadb1fba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0595a5-e719-49b4-b456-c84689acf32c",
        "cursor": {
          "ref": "2a51b651-412d-43be-bfc2-72c869017ac4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b9821eee-e557-45d8-9867-81fe423225d4"
        },
        "item": {
          "id": "fd0595a5-e719-49b4-b456-c84689acf32c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fd5259af-ac1f-466e-9b5d-75402a1d2f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e1a46a-b91c-4718-84a8-e4c87db37f5f",
        "cursor": {
          "ref": "77aa274d-689c-4718-8ad5-12e57c43461d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7ab812e-231d-4c8b-99d6-10e1486cd681"
        },
        "item": {
          "id": "86e1a46a-b91c-4718-84a8-e4c87db37f5f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2171413a-d6ea-422b-b3b2-f025ff18c816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea7ba9f-8c86-4a4a-a284-c9ac1c1504cb",
        "cursor": {
          "ref": "e50cea79-88c4-4f86-92d1-a967d1049361",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f34857ff-cf70-46c6-93b4-e189ff96643c"
        },
        "item": {
          "id": "7ea7ba9f-8c86-4a4a-a284-c9ac1c1504cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e397bf57-b66f-4d52-936b-674332f92b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c968fcb-ea82-4b08-9d3c-4c6f416549a5",
        "cursor": {
          "ref": "3768410b-8d35-49e1-b53d-adae4478bae2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ede31d75-0103-46b2-b1c5-2c0826ba793d"
        },
        "item": {
          "id": "5c968fcb-ea82-4b08-9d3c-4c6f416549a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a902fe50-2f34-43ff-b4b1-c800705d9a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9af9ac-57bc-46a6-ad3c-13573243a1eb",
        "cursor": {
          "ref": "69c12cc7-f48c-4a57-bb33-11a2944cbfd5",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4816fcfe-e816-4146-ba78-72586a652ab8"
        },
        "item": {
          "id": "6c9af9ac-57bc-46a6-ad3c-13573243a1eb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f250e0ec-8cbe-48b6-bc3d-2e3fffce7121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de58e4d3-51f8-4dad-9ac0-dfb2e7ae95e9",
        "cursor": {
          "ref": "3d555e50-3d87-4124-8932-850d9608d144",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d952eb4-49d2-4ec7-a314-23436e4f8b1f"
        },
        "item": {
          "id": "de58e4d3-51f8-4dad-9ac0-dfb2e7ae95e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e4a716f-e4c8-407c-80fb-f75f28c9da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1eb156-d3fb-48a5-8c66-a37bf2059705",
        "cursor": {
          "ref": "6218cbac-2e56-4ddd-9d78-3bcb95d6a765",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ece5d09f-7295-460d-b96e-54202655d351"
        },
        "item": {
          "id": "6c1eb156-d3fb-48a5-8c66-a37bf2059705",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5afc2cf9-c84a-4461-8566-c1e235224b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dea31c-c37a-4678-8d67-595331638dc5",
        "cursor": {
          "ref": "18a324ab-04cb-4801-8577-32b148c4632f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64a08730-5327-47af-acd1-62248975aec1"
        },
        "item": {
          "id": "31dea31c-c37a-4678-8d67-595331638dc5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3af2ad39-90dc-4f15-9055-ca83a6031139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988e4ffa-e49e-400d-9448-68f5db2fbe98",
        "cursor": {
          "ref": "044e4c7a-4850-4032-9145-5fa5126117f6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "201d1d23-87b2-470b-9fd0-f9cc3e359639"
        },
        "item": {
          "id": "988e4ffa-e49e-400d-9448-68f5db2fbe98",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e293e4ea-f00f-4a0d-a603-629985066043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da17d4b7-311e-48e7-b654-c74c388d76f5",
        "cursor": {
          "ref": "59656d11-dd8d-4805-aab8-4a38bbd70465",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d7054ce-9fdd-4de9-8791-6e5a2517dd21"
        },
        "item": {
          "id": "da17d4b7-311e-48e7-b654-c74c388d76f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc777eb3-c86a-41f5-8b27-68e9eebe3963",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c32f0a8-d9d4-405a-9dbf-6c0d5e00df69",
        "cursor": {
          "ref": "5183e3de-31c1-46af-9148-16931aa5b07f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bf6406a3-9fb3-4b4d-b470-dbb4e124fca1"
        },
        "item": {
          "id": "4c32f0a8-d9d4-405a-9dbf-6c0d5e00df69",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f84a27a4-3720-41b3-a5a4-3be4489e9364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fbafa8-ca5c-4030-8a06-e8f0bdfc7f56",
        "cursor": {
          "ref": "45ec4e7e-7fde-432e-87b1-53eeaa00ba97",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bdaf04c6-0362-4910-b955-1941dc4f9ef0"
        },
        "item": {
          "id": "72fbafa8-ca5c-4030-8a06-e8f0bdfc7f56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6d2c8ca4-0bac-4408-b975-d298c3761997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4961b9e1-8371-4b8d-a7f5-a37f8a90e4f3",
        "cursor": {
          "ref": "c632e671-1218-4735-9517-5da87934e115",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29f3bcec-c431-4f31-95d1-3d4566f6d021"
        },
        "item": {
          "id": "4961b9e1-8371-4b8d-a7f5-a37f8a90e4f3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3fe0b8c5-ac81-4489-85e7-1b7deb8e146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b8ef2-6aca-48f3-9ce1-cb92522bb526",
        "cursor": {
          "ref": "2e473b2e-4ef4-4fe5-9d50-e534af257487",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6cd4f140-90e5-4761-ba32-b88205ec20a6"
        },
        "item": {
          "id": "9f7b8ef2-6aca-48f3-9ce1-cb92522bb526",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "68e05ee5-7287-4758-84a7-6e9e57c75bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac798f4a-3410-47cb-834c-5d0d882a93e5",
        "cursor": {
          "ref": "f72cfef3-aad9-49ae-b328-c7a2a9f9fc63",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b28ffc59-5c4e-4527-9b79-cf8d1ba1301e"
        },
        "item": {
          "id": "ac798f4a-3410-47cb-834c-5d0d882a93e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9272bf6-a697-433b-abab-ad335c380ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a8761e-5e5f-41d5-a892-573d2c490526",
        "cursor": {
          "ref": "4d5eded6-413d-4491-a098-7bba221dc796",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3782742f-5c44-4f26-bd06-29db7836ff0a"
        },
        "item": {
          "id": "30a8761e-5e5f-41d5-a892-573d2c490526",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "077ae02c-1bea-457d-b60a-1de9b8ce6333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea2cc54-5acc-4777-8d5a-969abb3f740a",
        "cursor": {
          "ref": "ae6fa089-7b5c-4125-b0ba-af54fee5b73b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "73657195-f2ad-4fa9-9264-574427827731"
        },
        "item": {
          "id": "9ea2cc54-5acc-4777-8d5a-969abb3f740a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d48a2ff5-f548-493d-8129-0230b067875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c4d6ba-7fce-4981-abf7-8b4b6e04b12e",
        "cursor": {
          "ref": "78884b2c-02d8-4dff-b87d-c72ac370db68",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6ccb6a6f-16af-4385-8b2d-f34635325836"
        },
        "item": {
          "id": "c2c4d6ba-7fce-4981-abf7-8b4b6e04b12e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c9e77f1c-30d3-428d-ace7-4799d47fb8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90245ada-2eb9-4569-80b6-fb6012e48e8d",
        "cursor": {
          "ref": "5d83b8f6-4759-4aaa-95eb-87830a1f0485",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2bfbdd74-ea50-4258-a228-6fa93a7e83ba"
        },
        "item": {
          "id": "90245ada-2eb9-4569-80b6-fb6012e48e8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f576dfa-6cd3-4f76-a6b9-e6eee9548b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a420d9-2109-48a4-92eb-8a52b945fd29",
        "cursor": {
          "ref": "9ebb8524-9f5b-4b90-bbc0-dbd7dc2de409",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b6005942-938a-4a30-b626-02c98e096f83"
        },
        "item": {
          "id": "a0a420d9-2109-48a4-92eb-8a52b945fd29",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "902f859f-05da-4ea7-8697-8210da7b6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089e4792-999a-46ae-b365-f8aeb7c9a17d",
        "cursor": {
          "ref": "4503046e-2a9b-491b-99aa-f39d75643e8e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "96a6463a-a760-426e-9aa8-820d943202d5"
        },
        "item": {
          "id": "089e4792-999a-46ae-b365-f8aeb7c9a17d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d7404ba4-5ca1-4c89-925e-8d1aea533142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d3dee1-8f24-40e1-8aa9-02466587735e",
        "cursor": {
          "ref": "60d3c0f0-5152-48b5-9cae-e963d9e7c5f1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "af3f6812-19ed-471e-a434-8d067ec696a4"
        },
        "item": {
          "id": "55d3dee1-8f24-40e1-8aa9-02466587735e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6343c584-4d5d-4e65-aaf1-2ebd58c81198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d318a-08e2-4656-9744-91805396358e",
        "cursor": {
          "ref": "20676b82-4d82-43f7-86ef-ea6256e1e151",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d8f4575-01af-4960-8280-f3faf68a7346"
        },
        "item": {
          "id": "325d318a-08e2-4656-9744-91805396358e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "02e8809d-5e83-4008-a2c9-38a5231211d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2311b-9dd2-4543-875c-7b45a2d0a104",
        "cursor": {
          "ref": "7d23a9a2-8e5c-4105-8f44-a1cd9c932a7a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "90b6eb72-1d16-4153-80fe-7f267cfec22b"
        },
        "item": {
          "id": "b0c2311b-9dd2-4543-875c-7b45a2d0a104",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f40fe32-539f-417d-af86-f04c8a1b5477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa579504-c68b-4007-a71f-7ae12426dc5a",
        "cursor": {
          "ref": "92b737eb-d21b-43d1-a621-9f92cb867dab",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a85934a-a446-4426-9280-ac62c942d220"
        },
        "item": {
          "id": "fa579504-c68b-4007-a71f-7ae12426dc5a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4fe62641-9da5-4faf-ae31-e0b115aa6424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d79574-7f18-4784-8e88-158681c81dad",
        "cursor": {
          "ref": "4e7a12ab-782d-4e00-9b70-579fbd53053c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cd06f925-9165-4836-9f53-17806e98080d"
        },
        "item": {
          "id": "69d79574-7f18-4784-8e88-158681c81dad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ff5ca308-0089-4824-a3db-9568fa9cdc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a66157-0f7c-4bd5-8972-f63ccb49c720",
        "cursor": {
          "ref": "662e426c-0611-477e-a54c-23198fa82c6b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "97bf9e22-e66e-4d1b-86db-e938181cebdd"
        },
        "item": {
          "id": "50a66157-0f7c-4bd5-8972-f63ccb49c720",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "69a32448-1e91-4a72-a458-506af284376c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e70dad-0025-4f17-ab0f-ec8aed64ffd4",
        "cursor": {
          "ref": "7c4ec7eb-4fc9-4509-952c-83c38dc80c66",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a236ff13-c9ae-4c47-a151-8bf5ecc92d64"
        },
        "item": {
          "id": "c2e70dad-0025-4f17-ab0f-ec8aed64ffd4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd107f58-0537-4418-acf0-bae5818b1c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb08d19-2c55-4102-80ca-30a8b2bf6b63",
        "cursor": {
          "ref": "237b2139-7549-48ad-bb87-2ab4c954db6d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "717e29f1-1bf6-4401-8c34-95d3181424fd"
        },
        "item": {
          "id": "1fb08d19-2c55-4102-80ca-30a8b2bf6b63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a203fe9-673e-41a5-bd04-72888a71807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eccc2b-8592-4f55-9711-d58443170e04",
        "cursor": {
          "ref": "0b542823-9fc5-461f-a1a5-7629f91a39be",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "90b59ab1-7fda-4f41-a246-63757fff6322"
        },
        "item": {
          "id": "90eccc2b-8592-4f55-9711-d58443170e04",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7ee26131-14ae-43d3-8f02-d35c853b4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bf231d-0ed8-4ac0-a3d0-f11a8e4e21a7",
        "cursor": {
          "ref": "09b26393-d71a-4d04-9d7d-b51a376a6f27",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "993c66f0-f709-4b36-b9c6-567fa75da853"
        },
        "item": {
          "id": "42bf231d-0ed8-4ac0-a3d0-f11a8e4e21a7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e26d378-c530-4268-9684-014879a3748f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1254207-cf04-4dc2-86d3-56f9b05818be",
        "cursor": {
          "ref": "3d6d27ef-4346-4653-bb1c-08fb3e5025a7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "841a68fc-ec0b-4b36-a9d4-d9555741b9ab"
        },
        "item": {
          "id": "b1254207-cf04-4dc2-86d3-56f9b05818be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cfe1ba0c-e0b8-4ad0-b119-4affbbb9b086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576b49c-d148-4900-909c-3c6aba30a9c0",
        "cursor": {
          "ref": "26bf15de-cea1-4107-81f4-579730f2750b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c32c49b3-3c00-4b13-adba-a434bfc8cc95"
        },
        "item": {
          "id": "b576b49c-d148-4900-909c-3c6aba30a9c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d4167fbd-1ec2-4855-ae94-b57be7b1190a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7db0b03-e2f4-4007-b95f-0d9818945282",
        "cursor": {
          "ref": "db0b02c4-2970-4288-9574-0813555e3fe9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0b646742-0658-4bc1-8947-9227c07ab43f"
        },
        "item": {
          "id": "b7db0b03-e2f4-4007-b95f-0d9818945282",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "533621ab-21cf-44b4-b04e-e780c64e4d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df69c712-d2a1-433a-8f24-2718b6311256",
        "cursor": {
          "ref": "323600d7-f557-40aa-9465-8f2e48b8c69a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fab4147d-0521-4fd6-a030-753bb0a69586"
        },
        "item": {
          "id": "df69c712-d2a1-433a-8f24-2718b6311256",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0489004-e8c8-401b-8153-cfce7151a0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764b92f9-74dd-4980-a887-f9418488d7f0",
        "cursor": {
          "ref": "38ca1640-5d7c-4c77-9856-27a1b33fea04",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f11e5ddc-eb4e-4b35-bb21-d3832e01c051"
        },
        "item": {
          "id": "764b92f9-74dd-4980-a887-f9418488d7f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "693d82cf-80c0-404d-9866-be80c598b1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730fa686-c144-4abf-b1f5-3cdc995a1415",
        "cursor": {
          "ref": "0411922e-12e9-4728-b79a-1f21c5597b5e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "14d3e061-c60d-4c3f-a392-fc27c9fc1914"
        },
        "item": {
          "id": "730fa686-c144-4abf-b1f5-3cdc995a1415",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3a60bed-513b-400e-abd7-814f1d2d2102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7f965c-af93-4cc8-878f-cfeeb41c8549",
        "cursor": {
          "ref": "7538c0fe-51a1-405a-8a53-660ca9392c43",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a530d183-8f7d-45d7-971e-01910370e7a5"
        },
        "item": {
          "id": "5b7f965c-af93-4cc8-878f-cfeeb41c8549",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c6eaadf-c5ca-4456-82b3-6561777186b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb24b36-6e41-43da-b602-0460e25461b2",
        "cursor": {
          "ref": "2041fab6-c6da-479a-9ae1-3c150d211a23",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "06da7ee2-0f1d-4f6c-93b1-e17529b09d10"
        },
        "item": {
          "id": "4fb24b36-6e41-43da-b602-0460e25461b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c9cff92-ad06-4e49-ae6e-7c4e8839ac12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c7c70a-0090-4172-9e99-64ae275e5e6f",
        "cursor": {
          "ref": "d91959a3-22d4-4ac1-ae82-7602bbe20f67",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff43545b-ed01-459e-ab87-81b9ace0d6e1"
        },
        "item": {
          "id": "a7c7c70a-0090-4172-9e99-64ae275e5e6f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f636fd34-4fb7-4797-b72b-15906201558d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646df40e-13b9-49a1-9e2d-f300c623142a",
        "cursor": {
          "ref": "2372ee10-4474-4304-afb6-b302c5df9f42",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3f7c9fee-dfc0-414b-9e3c-873f9b84ecfa"
        },
        "item": {
          "id": "646df40e-13b9-49a1-9e2d-f300c623142a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fdf7a16c-bf7f-4b3b-8402-36aa2d01188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace5502-e49a-486d-b9b9-2fd3fcb6474f",
        "cursor": {
          "ref": "11a86002-5ee7-4837-a969-b97ba3548fa6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0b9061e1-a4e2-4476-9ede-a9c634881caf"
        },
        "item": {
          "id": "1ace5502-e49a-486d-b9b9-2fd3fcb6474f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9427ef18-b47f-4b46-9554-844847a3a29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aedcb87-3edb-433a-9c6f-d737cd440160",
        "cursor": {
          "ref": "c19c8d19-2cd8-4436-8a07-8b5d86141e50",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "65c0bd8b-db6f-447c-8519-41b4decda2b9"
        },
        "item": {
          "id": "7aedcb87-3edb-433a-9c6f-d737cd440160",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "670a46be-b028-491a-9698-60a96e730687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8d437a-84cb-45ac-827d-6773ef565ef4",
        "cursor": {
          "ref": "2b0bd97d-7880-4497-9581-8af7fd8cdc00",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "adbb418f-9643-4ebd-aaf9-c0871aa06c35"
        },
        "item": {
          "id": "7f8d437a-84cb-45ac-827d-6773ef565ef4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "906425b1-9d36-4b02-9727-740db9b06d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e426028-60a5-4b32-a995-4c55a183408f",
        "cursor": {
          "ref": "f1aef19b-1ccf-408a-b6bb-d4f93986a2b7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0d9b33b2-9801-40c2-8546-aed2aff7fee1"
        },
        "item": {
          "id": "0e426028-60a5-4b32-a995-4c55a183408f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d8ead231-0e75-4510-bfae-0b4f9c5cc0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb780c7-e04b-4eb0-bfd0-ff3391b6729a",
        "cursor": {
          "ref": "6549e70c-e466-4ad8-b59f-3cb4cc1e3053",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "834b7017-9782-4fb8-846e-0bf4985f5adf"
        },
        "item": {
          "id": "2fb780c7-e04b-4eb0-bfd0-ff3391b6729a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6e2bca27-bfe5-494f-a396-7c561e73ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c5ff3-a456-4153-861e-6e0318c958db",
        "cursor": {
          "ref": "260f9249-5c6a-427a-9830-36d466ccfd61",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6d49bcde-2494-417b-955d-b54ef076babb"
        },
        "item": {
          "id": "a18c5ff3-a456-4153-861e-6e0318c958db",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc20e36c-8f3e-4e3b-ae7d-0e3859901ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1dddaf-37ed-4de6-be4f-ba7af5b36792",
        "cursor": {
          "ref": "c05dfa47-00f7-4749-a48e-59d1ae2837de",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "87b7f54f-81bb-47f1-a781-07d7732bf4dc"
        },
        "item": {
          "id": "9e1dddaf-37ed-4de6-be4f-ba7af5b36792",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "546822f1-5c5a-4915-9e55-eaccb55edb01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de0d32-ae73-4c55-80a8-3b62a859c8a4",
        "cursor": {
          "ref": "c31c0971-7a45-4f3e-8d48-c281daacaefb",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ef9d5e6-3a93-4668-873e-d40a0c6e9461"
        },
        "item": {
          "id": "03de0d32-ae73-4c55-80a8-3b62a859c8a4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ac49c79a-d5ce-40f7-87c6-7d7321855fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e143496a-d21f-4fd8-af3f-27ba3f9077c0",
        "cursor": {
          "ref": "9caa125c-ddc0-48b8-99b3-f5fba777bb5b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "21850fa2-4957-4abd-a10e-10b4602c7aa8"
        },
        "item": {
          "id": "e143496a-d21f-4fd8-af3f-27ba3f9077c0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7ef59d2b-bb9d-4fb2-a612-777ef6a44120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ae275-52e8-4c6f-9397-ed80e173abf7",
        "cursor": {
          "ref": "d8206b31-98bd-4c77-bca6-3b00fb3db473",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac6ba3bd-8fc2-4f66-b296-b5cf1deb28c9"
        },
        "item": {
          "id": "929ae275-52e8-4c6f-9397-ed80e173abf7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a97f4196-72b6-48b5-aa85-dbb500bcd58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021c74b7-1fd2-486e-9d88-dc5902f45c36",
        "cursor": {
          "ref": "fe4fa56b-36e6-40ea-9148-8e4be22ce1a8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "70b2ce80-787f-4940-9936-79d4ad4fa745"
        },
        "item": {
          "id": "021c74b7-1fd2-486e-9d88-dc5902f45c36",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ceca606a-be6d-479b-ab0e-4a3269b9dfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e084d7d5-acd1-4250-bfb0-d84299a6d43a",
        "cursor": {
          "ref": "0f75f7f3-5cd3-4e89-8231-848a54e8f1e3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d8af638-7023-4093-9c5f-b69589baef23"
        },
        "item": {
          "id": "e084d7d5-acd1-4250-bfb0-d84299a6d43a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "36e14100-760d-41fe-8a11-85ac4b429c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22961c34-fd0c-4dd8-a8c0-1c83e9f63c15",
        "cursor": {
          "ref": "2e900965-733f-40bb-a246-eb61b1674855",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e343e686-a673-4fd3-956f-b051e2a2d4ca"
        },
        "item": {
          "id": "22961c34-fd0c-4dd8-a8c0-1c83e9f63c15",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c41a447f-d379-4dd3-9e4c-1f0353b49838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dce8c6-491a-4ed7-94cb-6666db9195dd",
        "cursor": {
          "ref": "90ab3c12-b088-4e10-9160-61e899e3843b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "22617b72-fc86-477e-a88f-3eb52d64ff33"
        },
        "item": {
          "id": "46dce8c6-491a-4ed7-94cb-6666db9195dd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2fe2fe55-7ca1-44e7-b1d3-f025ccc0a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2075b9f0-dcc4-42d5-9a88-f2891893c0d8",
        "cursor": {
          "ref": "b59016be-f6a1-427f-933a-03bffd32f631",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "22dc28a2-2011-450a-af3c-537f9b35b4d3"
        },
        "item": {
          "id": "2075b9f0-dcc4-42d5-9a88-f2891893c0d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2973da5d-885b-4236-becd-3229426b129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c31db61-94e0-4153-8323-33914478878e",
        "cursor": {
          "ref": "ea79f2b7-3c0d-4cc3-a437-2ef0bc645110",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a94488bb-7bff-4860-b095-917b2bd70e8e"
        },
        "item": {
          "id": "1c31db61-94e0-4153-8323-33914478878e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "be409132-858f-4a41-b4c4-b63df0c4781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83db77cc-04fa-490b-9c2a-cac110f9dc58",
        "cursor": {
          "ref": "4c6315db-9c50-4462-89a1-9c37351395e8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "be5eddd0-3888-483c-9378-ce010a2af691"
        },
        "item": {
          "id": "83db77cc-04fa-490b-9c2a-cac110f9dc58",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a92fab16-6abf-446f-82cf-f44024299fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea8c5c1-2b2e-4ad0-8266-741b208bdb3b",
        "cursor": {
          "ref": "7a4c304c-ab22-4d08-9156-3067bc3b10a3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "99677379-646e-4c48-bdcc-1d2a171e201d"
        },
        "item": {
          "id": "dea8c5c1-2b2e-4ad0-8266-741b208bdb3b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4de4bf43-9b01-4e1b-b2c8-97a9f34cae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53b9e9-fea9-4f59-a9ae-57bd3fd8b487",
        "cursor": {
          "ref": "a8214dce-47d4-4060-9e73-70f469e58fc7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "21b36039-5554-447c-b2b1-838022a91d47"
        },
        "item": {
          "id": "4b53b9e9-fea9-4f59-a9ae-57bd3fd8b487",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a124854a-5e91-4ca6-9a96-a5918aa6b5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc2619a-209d-40ef-89f7-f6488fc4becc",
        "cursor": {
          "ref": "e7642478-17ee-4064-a213-5132b6c71d53",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51fe5f4b-c497-464b-b05e-1f0b05af3c0d"
        },
        "item": {
          "id": "2dc2619a-209d-40ef-89f7-f6488fc4becc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e8c46b4-d324-4cff-8656-9b8177df9213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce76c8b-2a83-4517-808c-421e3bb9ccf4",
        "cursor": {
          "ref": "69b93c97-67fe-426b-bbdb-24b7950d23f4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a6899e25-34a9-4733-8202-c46db8373de7"
        },
        "item": {
          "id": "3ce76c8b-2a83-4517-808c-421e3bb9ccf4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b7375505-d548-44ad-bd15-b96e04f641dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a40575-c1d3-43a8-ae56-63226d81c143",
        "cursor": {
          "ref": "09ddb5d9-44f2-4b45-a45f-f4594cf99e3a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f83866c0-5314-4a32-a92f-da16acd53bf1"
        },
        "item": {
          "id": "46a40575-c1d3-43a8-ae56-63226d81c143",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f3b9aa32-e7bb-4ec9-a0d1-3b784477439b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1a449e-6bae-498b-838f-620c65f063c1",
        "cursor": {
          "ref": "50b2ecdd-f7b1-4e8a-aff1-675c46a2180f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "175a9835-2327-4c82-bc94-ce352d8c87ae"
        },
        "item": {
          "id": "6c1a449e-6bae-498b-838f-620c65f063c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "203d75ca-a262-4d1f-a56c-c190850dff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570a6075-7705-4d6b-9a5c-306d7541fd81",
        "cursor": {
          "ref": "0aba1122-2330-4c66-853b-02a0a3ae6085",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "298e9ad7-e269-43b7-b9dc-335081e80c4f"
        },
        "item": {
          "id": "570a6075-7705-4d6b-9a5c-306d7541fd81",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8e94512b-5f11-41fb-83f6-5ac77664f719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac24263-8b85-4fad-8994-6f9d153644ef",
        "cursor": {
          "ref": "eb4b3dad-f996-49c6-a5b7-3374224cf65d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cb1d27bc-75a6-4780-bcc3-0dc4605258f3"
        },
        "item": {
          "id": "3ac24263-8b85-4fad-8994-6f9d153644ef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "90ef6b82-6ef7-4b16-bc4f-540b929e8858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aedcb5-6468-45c2-a61d-1b0a13d1d95d",
        "cursor": {
          "ref": "a6c4f6c7-8184-4298-b458-92f577c38aec",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ce0f3e4-cac2-4b5d-8f87-e01d8bdd990a"
        },
        "item": {
          "id": "f2aedcb5-6468-45c2-a61d-1b0a13d1d95d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8977ed70-4915-4aca-b016-b9e4d03aba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d02436-a957-4ee7-8007-221fddd14d18",
        "cursor": {
          "ref": "a55be74d-78a1-4a30-a4d9-1b269f59bf67",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad206257-435f-4505-bce8-a60925c170ab"
        },
        "item": {
          "id": "d4d02436-a957-4ee7-8007-221fddd14d18",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "49a4a310-88ac-4967-8bb7-be0571ea07a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e0b0f-f6ca-44ae-b78f-ec6f47a54b9d",
        "cursor": {
          "ref": "9b0c3b5b-0c3f-4210-9461-aef7d785c72e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f7bd9ecc-41b2-41dd-8a2e-166365dc0d9e"
        },
        "item": {
          "id": "428e0b0f-f6ca-44ae-b78f-ec6f47a54b9d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aea3c40d-78a5-4a38-9841-8f0e59e03097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a232c2-afc2-44d0-9005-799847dd0084",
        "cursor": {
          "ref": "3d6ab495-1dbe-4b0f-a570-838ba91a90fa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f1a7f23-ee05-4377-8c22-f483685250dc"
        },
        "item": {
          "id": "09a232c2-afc2-44d0-9005-799847dd0084",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44c2362e-bdf9-4d74-9092-2e7c4a5c8906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b1575b-5d76-4093-88f6-5412fe0eba59",
        "cursor": {
          "ref": "1d2920d4-dbb2-426d-84c3-9db5b489526e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "28fa2443-2ce1-46a2-9526-a35b93218a06"
        },
        "item": {
          "id": "d5b1575b-5d76-4093-88f6-5412fe0eba59",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "67c046a1-cf32-4f71-8aef-d774c9cb21b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed05632d-25b0-4f1f-bce1-62ae71d9ac74",
        "cursor": {
          "ref": "2a9848d5-413b-4204-a959-299277b3f288",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fb7b94c8-862b-4d5c-a9bc-12fdaecc838a"
        },
        "item": {
          "id": "ed05632d-25b0-4f1f-bce1-62ae71d9ac74",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "11bca033-924e-43b3-9068-16f584b2b0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a76091-ae9e-4d86-b9b5-3eacc366bae6",
        "cursor": {
          "ref": "75186f12-558a-4e82-81cc-86dd975a85a1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7191afc8-f051-4617-8205-70d15fdbeee9"
        },
        "item": {
          "id": "44a76091-ae9e-4d86-b9b5-3eacc366bae6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2d25bd86-e0a2-442a-8ab6-848e50b2d408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fd0adf-c2ea-442e-a665-a25e3baf6208",
        "cursor": {
          "ref": "f0e59bd2-882c-4935-8149-c205f9a92650",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c96ffb4-3499-4843-94c1-da51e4170e05"
        },
        "item": {
          "id": "b6fd0adf-c2ea-442e-a665-a25e3baf6208",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6a8af388-f2b1-4a3c-8da4-5dc53daf77d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b047490a-8d3e-4630-83d7-5d291b53060b",
        "cursor": {
          "ref": "2c8e2b41-e7a7-4ed2-bf9f-78ceed53cbbb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "820fab24-8d44-434b-9c5c-6b8352dfa457"
        },
        "item": {
          "id": "b047490a-8d3e-4630-83d7-5d291b53060b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f08d890b-4c99-4bc0-b5ae-fb138abb8062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46034681-fa98-4863-ac04-33a84a8d6551",
        "cursor": {
          "ref": "93e0be99-21de-47a9-a7ea-afdc8c3d7508",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "31f7fabf-3ff7-4957-8211-f1352d71b135"
        },
        "item": {
          "id": "46034681-fa98-4863-ac04-33a84a8d6551",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d4bbddd5-4261-44c3-a48c-c40459820e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4acf5e6-6ed6-4b98-a9b3-f196276f61f6",
        "cursor": {
          "ref": "fd072355-646e-451a-83e0-b46170405618",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "390bd60c-b7bd-478b-8cda-f52bde45a629"
        },
        "item": {
          "id": "b4acf5e6-6ed6-4b98-a9b3-f196276f61f6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5ff67450-2bd2-429c-ae4f-26f271d1afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad854c-62b6-44ef-9425-d79337369f5f",
        "cursor": {
          "ref": "8a4e888d-7f58-4910-b5be-1b33d0b9947c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0903d444-9e12-438a-bc3f-0896e24940ef"
        },
        "item": {
          "id": "a0ad854c-62b6-44ef-9425-d79337369f5f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b909c944-f8f6-4bb0-9366-5c6a6fa263d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc54683-f667-4a96-9b76-b7ae487292ae",
        "cursor": {
          "ref": "0bea67cb-df10-4ef3-8c1e-579144832c6a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d81b600c-167c-43c7-82d2-7e5612b2d33c"
        },
        "item": {
          "id": "7fc54683-f667-4a96-9b76-b7ae487292ae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c52ac71-9f88-4390-8645-da87e4488ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a6ddf4-86fc-4b48-8640-a8ad8b66ba05",
        "cursor": {
          "ref": "b312f1e6-d07d-4a0c-8e10-1b6473852b19",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e3374a2d-a28d-45b4-9d0c-3e737d6ab9f8"
        },
        "item": {
          "id": "f0a6ddf4-86fc-4b48-8640-a8ad8b66ba05",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d7a0590-efad-41c0-b972-87de4c7d328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e6caa-c176-402f-bc4e-d631b0e8aca6",
        "cursor": {
          "ref": "e699b8cd-8103-4558-8225-0e4f26ce38b9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a8cc2c2-51e1-4205-9583-28373a8dab4f"
        },
        "item": {
          "id": "d32e6caa-c176-402f-bc4e-d631b0e8aca6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d20e3eec-fb8d-456e-9581-930a51c0521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee832a45-6d08-4aab-af5d-f8a1948da89e",
        "cursor": {
          "ref": "b9f78354-f1e6-4141-9653-b14b56160fdc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "65d0adf5-0888-435f-bb97-002a83cf0ac5"
        },
        "item": {
          "id": "ee832a45-6d08-4aab-af5d-f8a1948da89e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "73d1f9a2-749b-4d55-ba6b-913f6f2c426f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269d7338-48fd-4ecc-ba5b-e35e3e9a009a",
        "cursor": {
          "ref": "5f341f28-3f3e-47c4-91e3-1c11bf3276f2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1e45d2a0-c821-4aaa-92e4-97a34a7cabb5"
        },
        "item": {
          "id": "269d7338-48fd-4ecc-ba5b-e35e3e9a009a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30cc2417-4e90-4634-a853-b4b7e20c7155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad2621-4f2e-4b7b-a33e-ac0b2fbdbd68",
        "cursor": {
          "ref": "009d3ca1-986f-4a3f-bd4d-13a006a45e80",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa37a532-0c62-4e94-8a7d-d1c693b4a4ba"
        },
        "item": {
          "id": "10ad2621-4f2e-4b7b-a33e-ac0b2fbdbd68",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29250fd7-9c97-4ff5-81d9-7aa6bee3591b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41289f1-da4f-4fd0-8657-7f75b6fbda8f",
        "cursor": {
          "ref": "30ce96ea-3a10-4779-8afd-aebcca22feac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "55122d15-e2f9-49d4-887a-6d2423505ad2"
        },
        "item": {
          "id": "a41289f1-da4f-4fd0-8657-7f75b6fbda8f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "74f3ab07-9339-49ea-9507-26eb3ccdc836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09f314d-b9ae-4dab-9979-07483339a7b2",
        "cursor": {
          "ref": "8c883de4-899b-49bb-a714-f0666a502716",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "682d5371-ee37-41f1-805e-27f868b686f8"
        },
        "item": {
          "id": "e09f314d-b9ae-4dab-9979-07483339a7b2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ea9d4107-5268-4b6b-80e8-a6c5cf9ef28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34c517f-5c35-440d-85b0-bcc94b9ef5f8",
        "cursor": {
          "ref": "18776665-942d-4bb6-9325-1f3ef0e3b604",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "44386224-1308-4e10-8362-3d8b973bec8a"
        },
        "item": {
          "id": "f34c517f-5c35-440d-85b0-bcc94b9ef5f8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7640c19e-3822-429c-9906-bb6b454ee6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416041fc-1c86-4cd4-bdf2-1c295bce108e",
        "cursor": {
          "ref": "f395ad7d-8b44-4b1b-bdff-9c8cf4614acd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e60629f0-d9b7-419a-88ed-c87a9c0be932"
        },
        "item": {
          "id": "416041fc-1c86-4cd4-bdf2-1c295bce108e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "94599a8a-b600-498c-b6ad-aa4d68a98e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015bc30e-b835-4e27-97b3-6baad375b62e",
        "cursor": {
          "ref": "9912ac5b-b84e-4432-b026-e8249a4b1ae1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b6a0e76-9c4a-43f9-b2a0-ad8b77182d24"
        },
        "item": {
          "id": "015bc30e-b835-4e27-97b3-6baad375b62e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b1b1236-58e4-449f-8a10-d2dd6168d0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f363ca1-7629-4865-ab03-629f06a2725d",
        "cursor": {
          "ref": "238fcdcd-6050-40b2-9102-c0aec70b9d24",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c01f956-b2fd-4ff8-b752-cac7c3a5dae2"
        },
        "item": {
          "id": "8f363ca1-7629-4865-ab03-629f06a2725d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "30bdeab8-9de8-4120-88af-6e5061763567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f859798e-f044-4cc9-8a58-c483b8145d65",
        "cursor": {
          "ref": "b07ea356-1dc8-47d6-8950-a5524f347345",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "827267e6-adf6-4391-85b9-000ac812a82c"
        },
        "item": {
          "id": "f859798e-f044-4cc9-8a58-c483b8145d65",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f6076cf3-bfb7-4c9b-bb76-c7f9ae119bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7240300c-a624-4134-bf10-1f1da526ccf5",
        "cursor": {
          "ref": "9a8db20d-1adf-4bfc-bdf5-aa3dfeac0c7c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d1e7488-a4bb-489f-89d3-e75d2d08b990"
        },
        "item": {
          "id": "7240300c-a624-4134-bf10-1f1da526ccf5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e860db52-5ed1-4a54-9d2a-f1163920f5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603d423b-9445-489c-a686-3d67ab6b3e3a",
        "cursor": {
          "ref": "b0bb9e82-82d5-4f63-840b-fb327b5f373f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "595a02c1-9f1c-4ca2-8fd6-1ca4db937c5e"
        },
        "item": {
          "id": "603d423b-9445-489c-a686-3d67ab6b3e3a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c258d18f-cfe0-40a6-8ef6-b17c799f1611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba43c6c4-a67e-4eb9-9f2f-e56f81b509ac",
        "cursor": {
          "ref": "83b03e96-4af3-4e10-9c85-a38622517ba5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "963721e6-7c5e-4430-bedd-6448955cbd87"
        },
        "item": {
          "id": "ba43c6c4-a67e-4eb9-9f2f-e56f81b509ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36fb34d6-a830-46da-8fbf-f76423f4779a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245db440-d93e-4da3-8c41-b0cc68b67d26",
        "cursor": {
          "ref": "ee5f9c86-3489-4f96-ba18-5e87382063d2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a96f784-e631-4b90-891e-99e5a9be5c56"
        },
        "item": {
          "id": "245db440-d93e-4da3-8c41-b0cc68b67d26",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de40a053-9f2d-434c-90c4-5fb5966193ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8a7c1-d4ac-4a90-a4d1-8f963e46f15f",
        "cursor": {
          "ref": "37ada656-e533-47d7-b991-9824d0abd358",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "555d3cdb-b461-4bac-a0f9-4a6ea493c4ce"
        },
        "item": {
          "id": "fff8a7c1-d4ac-4a90-a4d1-8f963e46f15f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6ecc6d42-c998-4a55-9430-9ce8b20585da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13606f8-7507-4d38-91ee-552036a88d53",
        "cursor": {
          "ref": "85442198-4c83-41c2-8187-80822478f879",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2cc7097e-98af-4483-a752-8254f668b167"
        },
        "item": {
          "id": "b13606f8-7507-4d38-91ee-552036a88d53",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b7759b5f-4f95-4618-a852-4a12b8a864c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1c6790-7cf9-4cde-90c8-d33df36660c2",
        "cursor": {
          "ref": "c2131feb-a3d3-4a40-b03d-340f3a59af64",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "62fc27ee-9204-45b7-962b-c97ea806f5e2"
        },
        "item": {
          "id": "4c1c6790-7cf9-4cde-90c8-d33df36660c2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "564df0a0-79c4-4908-94f2-26bbeef63bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa5cce4-bf38-4afc-aad0-1075bd5c5079",
        "cursor": {
          "ref": "b523cf6e-dccb-4874-add7-daf08672dee0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fb0a5627-8899-4525-9afa-a8e0ad57c42d"
        },
        "item": {
          "id": "2aa5cce4-bf38-4afc-aad0-1075bd5c5079",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35342542-13de-43b5-9cd3-2ca09dc817cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899b449-e5d6-4d7c-a7e8-a7093ba78ba4",
        "cursor": {
          "ref": "23de88c0-249d-457a-8139-e826a8b28eb4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3002feae-2ba3-49f8-96c1-58d2c70c6076"
        },
        "item": {
          "id": "9899b449-e5d6-4d7c-a7e8-a7093ba78ba4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a69f0059-e0c0-402d-894e-674f77086ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd84cf6-3913-4ffb-b1ad-01de2f3d5678",
        "cursor": {
          "ref": "45d4212b-f567-4165-adc1-c5bf36a75431",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ccd8545-4661-4e54-b84e-3553bd19cbaa"
        },
        "item": {
          "id": "8dd84cf6-3913-4ffb-b1ad-01de2f3d5678",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f17e83dd-ed31-453a-ac9c-15988690edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bbdefa-25d5-4b42-8a93-6c2578eb093e",
        "cursor": {
          "ref": "959ac6d4-c828-4248-983c-e031ef1e4aca",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82e7cd79-6779-4a46-803b-c42dae9df602"
        },
        "item": {
          "id": "32bbdefa-25d5-4b42-8a93-6c2578eb093e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f29f1847-fcce-42c3-9fba-8d8d24a66d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7002927-f3fa-4cb6-a510-c823105309f6",
        "cursor": {
          "ref": "c2c0ee23-0668-4860-a5ad-b0d21be72235",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "264a18d8-b4ff-4f2d-b781-4582e9c6e8bc"
        },
        "item": {
          "id": "b7002927-f3fa-4cb6-a510-c823105309f6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bfe0af61-f81c-4739-9678-fb3114495aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53828b37-d983-46d0-b086-c6c576c056db",
        "cursor": {
          "ref": "9ad61929-9771-40c3-8287-c8ddd2e72618",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "afa97e0d-6422-4e12-a765-ab37e6939160"
        },
        "item": {
          "id": "53828b37-d983-46d0-b086-c6c576c056db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "072c1fea-c064-4cb1-b4dc-8e5062721bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c6e47-7f8c-4812-80ad-8852be9218f0",
        "cursor": {
          "ref": "f3406db3-919a-42bd-9595-4b45d58b3164",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c58db63b-71bc-495a-98eb-2409673d46f4"
        },
        "item": {
          "id": "a34c6e47-7f8c-4812-80ad-8852be9218f0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "479af202-0917-4052-be20-2830d15f0ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e44440b-566b-495e-8553-163ec565e40f",
        "cursor": {
          "ref": "010589ca-d78d-40ae-b4a0-a5c66c478db0",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "136656f9-3b40-4ce0-b02b-b660a883131e"
        },
        "item": {
          "id": "8e44440b-566b-495e-8553-163ec565e40f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4770fc76-7fcc-4c46-9617-1981e582d8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ebd62-5c87-4ada-a3b1-9389fe06e5cd",
        "cursor": {
          "ref": "f60638f9-b6d8-4876-a818-8d702e5aa5f8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c2b3014b-c59c-46f6-ba14-64761d72bdda"
        },
        "item": {
          "id": "6f2ebd62-5c87-4ada-a3b1-9389fe06e5cd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b2383308-12f1-4908-8fe0-e01ae08e5091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb498aaf-ec77-45b2-bd8f-e73c264fb4fd",
        "cursor": {
          "ref": "09b4f590-a864-4bd2-85e2-02b7dad9a0d7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "abbc23ba-8533-4dd0-b090-efa4299c1500"
        },
        "item": {
          "id": "eb498aaf-ec77-45b2-bd8f-e73c264fb4fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f588fa37-fde6-4fd1-b9b5-4777d0c13fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cac3d0-3f08-4eb5-9379-8530320a77cc",
        "cursor": {
          "ref": "516971ca-c335-419c-a9b5-51758513524c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6d72e0ea-6c5b-4e8c-8deb-ba6e47373684"
        },
        "item": {
          "id": "b8cac3d0-3f08-4eb5-9379-8530320a77cc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a49cedf-33a4-445d-81f1-2e2af6ef98a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f20c8f3-72a6-470d-bd2a-9b08c7856659",
        "cursor": {
          "ref": "e57088bd-2ff7-4566-9d32-096e0bade9b8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "11fb5188-e659-4d31-be1c-ba6fd7c76a7b"
        },
        "item": {
          "id": "3f20c8f3-72a6-470d-bd2a-9b08c7856659",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e083ea7-8343-4f84-8c5e-f09863c8074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb02c8e6-ec11-4e69-8bd3-a2e467b07468",
        "cursor": {
          "ref": "3481a485-f0a5-4b0b-8736-a0205cdea465",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f2987d3d-6b4b-4801-8c4b-30c962a680d8"
        },
        "item": {
          "id": "eb02c8e6-ec11-4e69-8bd3-a2e467b07468",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fc5e9593-8aec-40e9-a4e8-85209fd0d6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ebe45-b5e6-4b36-8848-b54f5dd74593",
        "cursor": {
          "ref": "162a6ee8-45cc-43e5-96fe-18254cdca4d9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5a187072-0de2-4db6-9b75-992a4dfe43bc"
        },
        "item": {
          "id": "378ebe45-b5e6-4b36-8848-b54f5dd74593",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6a45e039-1b1f-4fd4-ad25-b33ec356dee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9113a204-6514-406d-8580-f593a1d2eb50",
        "cursor": {
          "ref": "dce8e8e8-5a9b-454a-8d74-6abb1557c00f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b324ea85-5c99-4ded-8dba-9eab4eda045f"
        },
        "item": {
          "id": "9113a204-6514-406d-8580-f593a1d2eb50",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "34f272f2-5e8c-4a4d-b4a3-45ba723dc697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04072cb-e790-44c1-afb0-c77b1ae5cc37",
        "cursor": {
          "ref": "7022d6c2-c469-45a6-b393-e6404809d54b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b9bb766b-e721-42db-bf97-3489472c72e9"
        },
        "item": {
          "id": "f04072cb-e790-44c1-afb0-c77b1ae5cc37",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "beea83b0-1ba5-42f4-8efc-401fbe71e1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7e992f-087d-4760-9e2f-8f58d617df02",
        "cursor": {
          "ref": "3259f656-63e0-4c36-9e86-9ec7e09e43b2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fe9342c5-6bc3-4024-a40c-7e1310c3e567"
        },
        "item": {
          "id": "cb7e992f-087d-4760-9e2f-8f58d617df02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2c363f37-7cf9-4744-b010-987fbd8bc534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba7c487-f897-4712-a78f-eca6e5013cc4",
        "cursor": {
          "ref": "e782b9bd-e5b4-4cd7-b38d-2b94ff6d9b04",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f26a3dab-0c38-4e91-bafd-40cf4f250eca"
        },
        "item": {
          "id": "7ba7c487-f897-4712-a78f-eca6e5013cc4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1c45de15-5678-4164-95f1-3fe7c6c4b460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f297059-4fef-48e8-bd57-39f84f55dd6f",
        "cursor": {
          "ref": "5b384da0-0ec5-450f-b11c-c2cbf1c7eba2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4368b2c-15e0-42fa-8fc6-f7fc1d9ebbec"
        },
        "item": {
          "id": "5f297059-4fef-48e8-bd57-39f84f55dd6f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6dc3859f-4f6e-44d7-addb-5177481702e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09175e15-af5a-4d19-b6e8-adafde8b7071",
        "cursor": {
          "ref": "39ef17e5-1062-42fa-9516-3fa26ebdca08",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2966ad7f-93b8-49c3-8a7b-1cac2a6ae941"
        },
        "item": {
          "id": "09175e15-af5a-4d19-b6e8-adafde8b7071",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5e2d46d1-f3ac-45a9-9190-7016bc646cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81926ce3-04f6-419e-bd95-382d928403ff",
        "cursor": {
          "ref": "9112cbc5-220c-4221-89c9-5fc008c3f1cd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5e748ef2-c584-4604-b624-009310e256bd"
        },
        "item": {
          "id": "81926ce3-04f6-419e-bd95-382d928403ff",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "34669d74-8c7a-436c-ae9f-8ae65ed4322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316aac6d-bc6d-4b40-9a63-e8f8d9659191",
        "cursor": {
          "ref": "49bb53cf-dbf5-4a5d-a1ce-1bebedbb3b2e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1cd691d3-1490-494a-a425-5240817fed7a"
        },
        "item": {
          "id": "316aac6d-bc6d-4b40-9a63-e8f8d9659191",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b9259b21-ae69-48a5-8e48-e024c6175a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7817e41-9996-4e3f-b718-d63b1cf929a7",
        "cursor": {
          "ref": "9415ed8c-ce3c-41f6-8253-0eb4ca913c6d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "33457aab-95be-4b41-9f5c-8598b3ba16ee"
        },
        "item": {
          "id": "c7817e41-9996-4e3f-b718-d63b1cf929a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "45a786f6-406e-4db0-9c35-95b1646f1aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24665ef4-410b-4319-9dcd-96ed5c18eae4",
        "cursor": {
          "ref": "5014157a-bfab-47a0-b069-6eae60e9e8d1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a0312f00-6fd8-41f5-9abd-006f654a11b1"
        },
        "item": {
          "id": "24665ef4-410b-4319-9dcd-96ed5c18eae4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4764003c-df1a-4764-b133-6251e9293ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83317378-a435-4cdc-a1d5-c80d30cb742f",
        "cursor": {
          "ref": "cf0b3bcb-63df-43d9-97e1-e0a3e1ce7498",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "efdf7309-57c1-4f1c-bda8-8065012c537e"
        },
        "item": {
          "id": "83317378-a435-4cdc-a1d5-c80d30cb742f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2d491dfe-6d39-454e-b49c-6db18e39cf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c371237f-29fc-4afb-8924-02601714b1c1",
        "cursor": {
          "ref": "f26e899f-2abe-4c4c-90ea-d6905c0e717b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e763835c-5b1c-4ae6-88e1-bb2c16c0e493"
        },
        "item": {
          "id": "c371237f-29fc-4afb-8924-02601714b1c1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "db5e614f-c5b3-44e9-b312-7ffbde7fa15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380045bd-9472-4e72-98ff-36b2c6e07e26",
        "cursor": {
          "ref": "ba90dfb6-a74f-465d-b248-39d3b8891af6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "697545dd-24b3-4e66-91a2-eeabfab22045"
        },
        "item": {
          "id": "380045bd-9472-4e72-98ff-36b2c6e07e26",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d191f064-c6e6-4325-8c00-2516873e151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2e7309-7b55-4346-8033-a095f9af2d62",
        "cursor": {
          "ref": "e19e0204-a9d1-45af-827f-4a539d8b238f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "484e27bb-6312-4ded-87eb-a20ff59dd685"
        },
        "item": {
          "id": "8f2e7309-7b55-4346-8033-a095f9af2d62",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bb7acf73-f444-48dd-8d6e-5ef0f85a9930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dca937-42b2-4722-a57c-a513faf27781",
        "cursor": {
          "ref": "d162155e-5cfb-48d1-aa75-61e2c304a1a4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d074f0fd-d24c-49e0-936d-3add76f0af19"
        },
        "item": {
          "id": "29dca937-42b2-4722-a57c-a513faf27781",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a5ca70c9-46a9-48b3-87e5-ab5dd5c898ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6ada90-72df-40f1-b8b8-c28d054d0017",
        "cursor": {
          "ref": "1ead4dfb-4683-429c-8b8f-a3dfb36d3bb6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b4d3def5-7c28-48c1-8dd4-3fb5c8edd51c"
        },
        "item": {
          "id": "5f6ada90-72df-40f1-b8b8-c28d054d0017",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3c2429ca-2365-4728-8afb-68bc11ef8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb60397-21e5-402f-87f3-c3755ee10169",
        "cursor": {
          "ref": "2573c8b9-6708-4b30-b13f-487554d1f627",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b2ea3fa7-b98b-4fd1-a449-1bd12e58fc87"
        },
        "item": {
          "id": "0eb60397-21e5-402f-87f3-c3755ee10169",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b6451ffe-e7cd-440a-a269-107a046975c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a672aec-56b7-49e6-a40c-abe559b91757",
        "cursor": {
          "ref": "9c52aa98-b563-4bdd-9cf4-58d28946a9f7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9fe0bff1-d452-47da-9400-4d4182bc9ff0"
        },
        "item": {
          "id": "8a672aec-56b7-49e6-a40c-abe559b91757",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2282e4eb-3a68-4190-8ff3-d24ec0d713b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d556df-0818-4b04-8bf4-c26422dd5912",
        "cursor": {
          "ref": "7098ad17-f499-4e94-b110-9378c9755b96",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "22ae3435-76b0-4603-87ca-134f89b5fdca"
        },
        "item": {
          "id": "35d556df-0818-4b04-8bf4-c26422dd5912",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "71bbb49e-94e4-4058-87dc-e3da8a4a46c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b08eb15-4361-4efa-af6f-06f14f6ba66e",
        "cursor": {
          "ref": "cd76c0d7-cf1e-455f-b8fa-6fe554642231",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ab353f0b-3044-4f5b-9b3a-0e02063e7a5e"
        },
        "item": {
          "id": "4b08eb15-4361-4efa-af6f-06f14f6ba66e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fa398f50-ef6b-4406-b11e-8424a11b0a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ba8cb6-fc52-417c-987a-176f1be45396",
        "cursor": {
          "ref": "4c06712d-ed74-4f62-9ef6-de14e6ec2cbe",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "134716cb-a1e5-4037-935f-7a959f8a9a61"
        },
        "item": {
          "id": "33ba8cb6-fc52-417c-987a-176f1be45396",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "22233b7d-c1e8-4ea3-9886-7b04f35bab17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2481f34-cf17-46ae-8636-1a0f704e9e7f",
        "cursor": {
          "ref": "aa98ffe4-a3ca-43af-a81e-bb5ae940d52e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "34a503b2-8da9-48c6-bab6-ffc05c6b08cf"
        },
        "item": {
          "id": "e2481f34-cf17-46ae-8636-1a0f704e9e7f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f60ab41c-1109-4227-96a1-cb0500175743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8081de-3da3-49b6-ad6d-f890d5d3ad80",
        "cursor": {
          "ref": "c9975448-1c97-493b-8a15-66643dea367c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c0918a55-8986-469e-b2df-b590edc3dfbb"
        },
        "item": {
          "id": "ef8081de-3da3-49b6-ad6d-f890d5d3ad80",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b52fcfae-b19c-4fc0-a66b-818942b62769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e1f380-4a3b-4a4c-9bde-bda54c04c7b2",
        "cursor": {
          "ref": "9d8ceb6e-09f2-4ed0-80d6-9210d33217cf",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "809fb2a2-eb61-4ba0-89f3-ec5f03e73ed0"
        },
        "item": {
          "id": "a8e1f380-4a3b-4a4c-9bde-bda54c04c7b2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b70f8780-04d3-4236-ae38-14867ed3eabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f654da-25bd-47ce-a7d4-6b3d2537c945",
        "cursor": {
          "ref": "62866946-06c0-4319-98f0-49cc029378f7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e05cd52d-f5de-45fb-b2c8-b8d1020b739d"
        },
        "item": {
          "id": "49f654da-25bd-47ce-a7d4-6b3d2537c945",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b8776833-e522-490c-a136-f5ae851f2101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7271ecd-aa2c-4052-b6ae-3983918a05d9",
        "cursor": {
          "ref": "2c3ba7e2-773a-408b-985f-2a4201a8bf4e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "38274147-01fb-4824-a42d-a3e8a69deeb9"
        },
        "item": {
          "id": "a7271ecd-aa2c-4052-b6ae-3983918a05d9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7c79b47e-08d7-4a38-891a-6ac2566c5878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e117d0a-4075-4a18-8827-d36628b66291",
        "cursor": {
          "ref": "2a363c9b-d2b5-4806-a026-79d2e3a7aa96",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8826f105-8844-40f3-be43-81e32a5218f6"
        },
        "item": {
          "id": "7e117d0a-4075-4a18-8827-d36628b66291",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4eb2479-3585-4070-ad65-b0137f1314c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f3be48-1556-44d5-a991-f3556cf83e90",
        "cursor": {
          "ref": "f5eb077d-5643-4d08-91b7-47cd7511e689",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4e237e4b-0cf3-424e-80ec-3ab7cd75c5fd"
        },
        "item": {
          "id": "72f3be48-1556-44d5-a991-f3556cf83e90",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cfbac53b-4f9d-4f33-b015-24e0bbb01470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dd53b7-761c-4d4e-9799-5e10f546097e",
        "cursor": {
          "ref": "92c2c18d-dac5-4b01-8721-9637ed616171",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3f9523e6-c275-4122-9ce2-0de90492aadb"
        },
        "item": {
          "id": "67dd53b7-761c-4d4e-9799-5e10f546097e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e97ae757-4a6c-4088-94d8-4ea83f0b79e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b4ae4f-23d1-4741-9a04-14c2a5ca8a08",
        "cursor": {
          "ref": "15d4e7bd-e012-441d-b8fe-f49eb00b069d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e6c540b8-520b-46bb-92f4-239045b9e910"
        },
        "item": {
          "id": "72b4ae4f-23d1-4741-9a04-14c2a5ca8a08",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5589b394-07f4-4b86-ab40-0914810572fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250dda46-36e9-4cd6-9e80-1788569c66e4",
        "cursor": {
          "ref": "a2780fe0-2873-4bba-adc4-0bfcac7ba345",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c2c2e120-8df4-470f-a2b7-3ea6be7228bd"
        },
        "item": {
          "id": "250dda46-36e9-4cd6-9e80-1788569c66e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b4124bec-61da-483c-9b5b-bef277c25ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216d0f96-393a-4fea-a06f-f453cbab7b28",
        "cursor": {
          "ref": "1bf0f2fa-a852-43f8-bd52-942bb3491854",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "15bd2223-0708-4c85-bfe7-b510f7fcacd8"
        },
        "item": {
          "id": "216d0f96-393a-4fea-a06f-f453cbab7b28",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb6cfd6b-3bcd-476e-ae6b-dda08fc8f128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6449ae21-296c-43e4-8fe0-251036770eb6",
        "cursor": {
          "ref": "9989dabc-acdd-4c45-b057-1e0726728892",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1a655e88-25b0-4287-8f79-79f2e67b8443"
        },
        "item": {
          "id": "6449ae21-296c-43e4-8fe0-251036770eb6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "347bfbe9-2520-4d7d-89d7-ac6d1e27efbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44398d6-f530-4e47-b2f0-6c3eeff82d6a",
        "cursor": {
          "ref": "369f306f-4741-42a2-83b0-f2b974c2bc5b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "32c0ca41-8b48-4fa9-9a21-b1542b93aec2"
        },
        "item": {
          "id": "b44398d6-f530-4e47-b2f0-6c3eeff82d6a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a8d6f925-c98b-4643-a9c7-004988029046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216a7861-d4da-46db-8925-ac9c862363a2",
        "cursor": {
          "ref": "33a79406-beef-4d08-a0a7-e6eb2b271799",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "294a28f9-4f57-49e3-be7b-9cca8d3f263c"
        },
        "item": {
          "id": "216a7861-d4da-46db-8925-ac9c862363a2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1fd3a742-2d83-40d5-8c7e-8962c19c052d",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "249ae384-c196-43ae-88f8-6d11ed0694e9",
        "cursor": {
          "ref": "a812aa85-78f8-4afe-82dd-93ad76a6b045",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b4503f0b-3ff1-4462-ae64-e898081e0c75"
        },
        "item": {
          "id": "249ae384-c196-43ae-88f8-6d11ed0694e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "75ae3b97-2dd3-46a0-9cc8-5aa752b054da",
          "status": "OK",
          "code": 200,
          "responseTime": 5147,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf97685c-4579-4ae6-b707-244fb6119ca3",
        "cursor": {
          "ref": "dd23f06f-2a97-45d6-b8fc-e5fa275f0d42",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f80284fa-4b67-474e-ba67-4fe8cde45cf1"
        },
        "item": {
          "id": "bf97685c-4579-4ae6-b707-244fb6119ca3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3ab1c742-7efd-496a-a86c-cb735defad73",
          "status": "OK",
          "code": 200,
          "responseTime": 1390,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f103ba8-3627-4347-8613-15844f4eb20d",
        "cursor": {
          "ref": "68eb10c8-2711-4c1a-a2a2-13dddcd0a2ff",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f4b04e43-5ebc-4f6b-ade4-05988a8ea66c"
        },
        "item": {
          "id": "9f103ba8-3627-4347-8613-15844f4eb20d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ecef4a0-a5fd-451a-95e7-1edaf890d68a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f103ba8-3627-4347-8613-15844f4eb20d",
        "cursor": {
          "ref": "68eb10c8-2711-4c1a-a2a2-13dddcd0a2ff",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f4b04e43-5ebc-4f6b-ade4-05988a8ea66c"
        },
        "item": {
          "id": "9f103ba8-3627-4347-8613-15844f4eb20d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ecef4a0-a5fd-451a-95e7-1edaf890d68a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552b85d7-cf11-4ec8-b520-1dbb9dcfd56f",
        "cursor": {
          "ref": "a6b07d6d-8d33-4e31-9f7f-0f241633f915",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51d5dd88-fa8b-4e86-8822-0fdbcd71fc67"
        },
        "item": {
          "id": "552b85d7-cf11-4ec8-b520-1dbb9dcfd56f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "31c08a7a-3349-4868-9352-7d1b47dd247b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a5f56a-05d9-443e-af01-c28655e86539",
        "cursor": {
          "ref": "b5136574-31c5-4279-b234-9d6720643189",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "298aa61d-c56a-413c-be34-81b8cd599aa5"
        },
        "item": {
          "id": "b8a5f56a-05d9-443e-af01-c28655e86539",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "539f22d9-e9ca-4c59-b40f-6bb4e75bb9de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}