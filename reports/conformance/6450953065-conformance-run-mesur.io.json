{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ee8ff5d1-3e85-457d-a3da-950dac742d4b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "582ad552-dbb1-4b13-bc27-cb5e8cbb4d3c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a347f6c4-7be5-45a3-ae89-22736250a838",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e0ea1af3-d48b-405e-9263-351488f5fee5"
                }
              }
            ]
          },
          {
            "id": "739f380c-3f39-4a8c-a465-b7becce9bb64",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4fdd18e-b335-4766-8f40-b988d2a1e7de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "badb5030-a05b-4c7d-b45d-b1ad84b7fa74"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f7ed9580-e4bb-4c6b-8371-e7a320cd1c2a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "443b1776-412c-4c6b-b56d-6eb45b579abd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "647dae89-e236-4edb-866a-fba654ac9b44",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26fe5a49-d6b4-427c-aee2-e6ac34426804",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a21c78b-d4cc-40ac-9131-8c0a35be5560"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99afea17-237b-4785-85ab-79de8376f5ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3790f58-5ffd-4e4c-b911-7efba7590bcb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9aa9a585-bf1b-4067-997d-5e7734018a06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c6c1d45-9298-448d-af99-9690359cfe28"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "757bde50-5711-496e-8968-c3a9b20fffa9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ad73ad8d-f41a-4cb9-adc9-3e2ee50efb1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7775558-4bc8-4da9-8b3d-f24e737fa258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb7a2bc8-4990-42f5-8f7b-c17267846787"
            }
          }
        ]
      },
      {
        "id": "641301e6-e01c-47ee-ab8f-7f106e649f04",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fc175bf8-9884-4234-8675-0498065d1145",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbf1f86b-7520-4d4f-9857-6218795c9fc3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb3d3876-523b-4542-86a1-1dc20796370d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b1e0c5-4479-45b0-8b33-6b42764f89ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "941ed3e1-4084-45ef-bdaa-a6e07a632f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a673d4-0575-498b-8f68-9aad0f12e7ed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81620a0d-2522-47c8-92ea-065b9b9b7521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eb40c4f-a86c-4158-ae6f-5f2584d81096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b376d7-4d80-400c-ad0a-027fcfeb85bb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f822a73-cb16-425f-89a6-6d92e0d7a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05f5e6f2-247a-4888-926b-2b4dd89c2821"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "560ba536-f980-4523-bb71-1c7d6b931c00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3723da1-78eb-4c3c-88e6-9c2a500b6206",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9379f94-fb79-4c67-a500-e60c2b2c2a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1a6e6c5-9bf4-4d01-8c56-73674f6808c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323eb50d-8be8-4586-89fe-afe1dd66bdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2399fe-e9fa-4c52-abc3-38c68ce2b6d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1ad785bc-ebcc-46f4-ad80-f36ea5e051a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e2355b3-4ad3-482d-91cb-45e231742092",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64d6f83d-771f-490e-ba91-2d539b0e5a78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6aad20eb-5514-4fec-bf35-93b23382dcc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b991b0e-4ed8-4c13-addb-c9dce10df12e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78ff2918-2623-4c2b-88bf-554187bda5eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "617623e5-5a80-4bae-b1ae-07df09f7dd90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94ca9eb9-54a7-4957-b5ef-abb59304a98a"
            }
          }
        ]
      },
      {
        "id": "c91c18d4-978a-4a58-bc1c-c5783ceafceb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7721b035-0821-4f13-aa2c-07931821b497",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a8ee3f3-cf4d-4111-a011-222d38803380",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7abbc7a2-4b53-415c-b00d-b400f394bff6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140e1947-175b-4fc8-8302-338bbd0a76bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87afe231-29a3-4c91-831a-4b3bc56744b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d875aba6-efc1-4b1a-b184-5c61087f9776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8be6b249-ba4c-4aaa-b52c-75a4da30d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c996f8a8-377a-4b4c-a2b8-58cfe01fada3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0aca68-3d19-48e8-8d82-e93227709c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831c9611-f2f4-4a3c-9140-adab9545da73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d539c9-ad48-4021-854d-930b880cfcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938f51aa-70af-4174-b666-3ee769217b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7acd0a8-6124-4720-b7e8-8d217ab2822c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d828c16-c0cc-4ad7-979f-3d752c8046a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b279e419-6faa-4f96-9988-d3ee93f77e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3100ee39-deb0-4a5f-a823-4ef447697b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07606756-95cc-4b37-b6d8-58ea37b8dc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ad51ff-0ba5-49d5-8cf2-b4418db0dd0a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb194f85-89f1-431e-8754-928935dbc133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a876f3-f5e7-4350-b5c8-d3ac9a9b2940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8640b5-fe8e-482d-839d-229b7742cc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c45d66-fde8-4da5-b79f-ce76e1705d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c8325-9c71-4234-9894-3595350656b4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460e87b-320d-4471-9932-fdb37a3dab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cab5514-e866-4b5b-ab37-b8ec16598db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a45cde5-1a5a-4217-89fd-f63c4b40f719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a788cf-8754-47c2-b9f0-e13087ed790c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a2343e-2824-4573-a7df-628a448f91a3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc935c-b536-4abb-99f4-b627ea643abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08157eab-a4b0-4da6-ac27-2e8f2fc6e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d36601-5efa-4268-bbe2-04d94ef31bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c464ccbb-cd01-4348-b9d7-7d7dcc7998c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c264bdc3-76e0-4c33-b847-7bfa8c2f537b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82f1c00-6c8c-4357-9330-3834384920bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82834dd1-6aa0-41a3-bae3-e6fad82a7723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e4a8f2-fd4c-44a7-8e44-9be570ddcdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00ef1d8-5bdc-444f-b86d-f7de8112e570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36e9f05-a0d9-41aa-9631-28fbd3336a7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8576bb-4ccc-4dc2-a30c-4cd0fe6e7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb77f6c-b167-4ea1-a677-9fe66245554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03748d8-e9ce-4f34-9eb3-349f3c3b3142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8dd40a-b456-4f2c-bda2-8454057255ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f4877f-afed-4f0a-be5c-39d5bfb9a2fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeda1c9-3d80-48a0-b417-f055d30d9485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac70760e-c4ea-4f42-9ac7-088c99bbf041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de524eef-6659-4227-a15a-5cc5cb710031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "424e27ef-fa5d-4115-8ecb-37123d3518a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d838c3-c6b9-43de-acbf-3e88b466a3b5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b43dff7-3c19-485b-8235-a505d2070a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370a2725-7631-4e42-9c9a-cb3b60dc4566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be75de9f-8a93-4354-abb4-c1eb5913f66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "855954be-7e75-4dbc-a866-7c4c2fd3d56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8da49-9e1f-4785-bd6c-10f200a816e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8321efa-d56d-4c84-82da-375819eab0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fabbed8-f5e5-4391-abcd-ace4612b8f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adef26ce-939e-4474-beb0-c94d1b72269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd41072d-112f-4494-9255-c67ad316e528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03ce2a7-3f3e-4540-8372-2b4346c5e754",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36477c59-dac2-4c48-900c-c9dc5786dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ec76c7-72ed-4c21-9934-159ec0235e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f99aca-49e4-4743-b63a-e155fa4201a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370df3f8-2d0f-4d38-bb5d-116a369fa94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8f8a1-9aee-4043-874c-622ceb1d8aec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15c7386-7fe6-4b15-ab4c-b804fbb4c9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e921ddd0-58f6-4228-a439-59602241dd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da467569-79a4-401f-a4fa-358d0acf5c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f171884a-ea0e-471c-a192-44ac767afbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d93d01b-8538-4adb-be1a-e17b10fcfef7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fb8d74-c325-4feb-b653-4c019c8a3fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cd0334-53ed-439c-ba32-b656b8a66204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04b071b-f1c7-4279-b1ff-1ebf4e7ef134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2b7b3b-417a-4667-bbee-10fb5ef23725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8cbd9-2051-4503-ab14-4852629eb3ff",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9861d5c-2350-42c7-ad0d-55ed58916e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa5ace3-d8ec-44b2-9644-0625f9b141a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c617a334-5bd1-402d-8fb0-07821efde277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e61d69-41a0-4743-aa8c-502c8d176c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ebb70-5db2-431a-bb79-1849ec0184d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1d0235-26b8-400a-817b-ea71408faf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b54024-c3c3-4e37-98b9-02359ad0e9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515ce150-17bd-4469-8b78-ad39b68fbc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ac1b561-2af5-40d0-9057-fec490205445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d50736-0737-473e-a281-a0b620f08e86",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac1cd1-59bd-4855-84ff-f9eee5d2e982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610534a1-4dd5-47b0-80a0-9b15a94fbd6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe73e08a-7eb1-4414-8b2a-f7837cb09a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2acc403b-8384-40d0-b2c9-052976f8e0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9272a8-d804-4c40-a311-4cc080469751",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c356453-767a-4a7c-ba74-eca83b57866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d6c4fb-2eb9-4575-a298-15531075985a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ce1fc-6288-4ff3-8f16-49a8e89b285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ca2449-a273-4214-9ef3-a7a669f0f977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9a02b7-d3e4-433f-a34b-6b25d6754345",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac841b2-c158-42c5-a739-dced86a95e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969c9126-ab8b-4973-a860-d8c408f711bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cabbf5-5ee0-48f1-ab2a-c94f2b2e8fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5190bcb-c75c-4b35-b8ad-807d24a4163a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128f1b51-b903-48ba-9753-0303319943b4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b77ddd-e68b-4147-8937-e8e034384957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b980df7-d2a7-4f9b-8432-fcc7b636400a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b696d8-bf68-475c-ab92-7cbfcfbf5377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e7e4ba-6905-4a38-ab98-c4d5454da15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a51d77-a13f-4114-9812-c9c2c29a5642",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e41d143-f77f-43c1-8afd-af156c733b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd1d12a-c25c-458e-824c-76119e57bafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dc8aa2-f020-4c05-b1c7-6bd6c28d5a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd7a7ba-5172-4d23-b7f0-100f3a21dc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a9e85-12e0-4ac4-aa7a-63a4cd0924d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d19d97-5650-40cf-a1aa-c3344af3c84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f94b6e-dd47-4bdc-995c-2f1d861319d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cfa88c-6400-4809-935b-ad4a63b69a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f90f700-eb0a-490a-8159-dce803c7a923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c40eb8b-18df-46bf-8fa1-f303982d5628",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee75bcd3-8f30-45c9-b1fc-768c67afe64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6df843-e795-4adb-897d-8e416d9f2f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41a7db1-ae05-40dd-b594-4e01a79ee6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e36b45d3-836a-4704-980c-e86540404573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cd4d08-a1e3-4c3b-9764-b53b47726e59",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e0806c-3ec4-48e0-aaa7-a75a21bc752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e153ae-c63f-4fdc-9ace-6817d23deaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31690384-de70-48f5-944f-d6f9549a9a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6d362a-23d5-4f46-b228-b61cc6fbe10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea7e49b-62b9-4931-8a9e-f3925ee8885d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0376e856-776a-4601-b5d4-0a63d6574323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3a4ffb-ce4a-4227-92e7-78cc6b309f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978c271c-a1e6-479f-8068-f7efd3a91d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade1d918-b08c-4ee1-91c2-73f1b6e88625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc11b02d-0a4c-4d43-931b-a4a7479f8f97",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0a4ac8-5c2a-4010-a758-5eec9896b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62627e2c-5bca-48ee-b983-74853fe46949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f63e28-ab64-41b5-935e-49335da9dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c455f6-a1d4-4e69-9f22-0bc2e0affdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44543b1e-4951-4271-a97e-efb4b2e38e8e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc495410-f657-4fa5-baca-cfc958e0c32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ab89f2-ac67-4526-b0ad-583fdd503852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a489f0-87c9-451d-8c67-692c51b60574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "314fe741-689a-452c-b714-ccd68218993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63e6637-556d-4338-b437-0599a48223be",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa5b818-40c6-4361-9087-7271de07ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86543c5f-646d-42bb-8752-1f1c5b8046d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52546200-b174-425b-a821-ba511fcfd9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb0e622-cff6-48c2-9985-e23c6e59b7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab673ab-4b98-4dd7-8e33-1eea3f19dce2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b82551-3c07-4c3f-942c-c6da7e9341ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457a3e6e-d788-46e2-a3a2-01df44aef666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd22cab-b5d0-467b-aa38-7b7704d38f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78467e3d-280d-4ef6-8b5c-6a4957556758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd751a-c5fd-4a5e-81fe-ca2918ec85a1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca35deee-6e48-4b2e-953e-1dd82725ac2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a4b6b9-5009-464a-a9cf-ad6acc0bf4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd8ca71-dfd9-47ca-870b-9f1eb90d503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d015e1-91d6-42c9-ad47-5ee11da39edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3ed1e4-b580-4c4f-9a48-abceafd6f268",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5229d3-b28b-4d57-a24a-6cd684c453d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8618a6ef-a5f8-4fd1-a3b0-97744bcdead0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ac09a3-cac7-4fc8-a08b-6a4cb7e8e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75cd002-9ff6-491e-a6dd-47bb47fb55d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dab295-d95a-4c8c-b473-a25066f6b115",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d6425d-70f5-4b48-957e-d2855f2c2311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c470af8-4ebc-4d18-9a6b-562af4ddcc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbab44a-2846-4f0f-853b-59222eec7c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19880b9b-99ce-48c4-81e4-e439fd431132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def7fe06-2355-4e50-aede-0df8efbb6fbb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cac6944-0ce7-4462-b903-8136294e9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc22729-6845-4169-a21f-087abb50284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c660b0-1523-4259-9a6e-b2973103aa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d467276-5851-479f-adcd-753fb0845760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3bee33-495d-40ca-8f94-a0b9c85f6dd5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daadd9b-ec26-4f07-9728-9b906fbbcd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81a26f8-82d5-4fb0-98da-fa192b28b666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d2c0f7-1b0d-4449-b145-7d4321676f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "249b4309-182c-4186-af18-4d6dbf670e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236fc137-57bb-4970-8ae9-08d307dcd035",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bc500a-b942-4209-b7f9-f4fc93675871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b72895-b7fc-4da9-96d2-1dc34f98bb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab56a8c-9155-4316-9bde-6a2763815714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3288a8ea-ac02-42f6-a5fb-184f11e80e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758cd0ac-f95d-4be0-9f7b-8e2cf956d41a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772d8c1b-ada0-41a5-8cc8-60a3f8dda4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8767420-c802-412a-86d9-3154b09f36ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46884b38-1283-4e9d-b1b6-38bb79ab7546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82d14660-ba55-497f-8552-95b0010ece1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295bd5d7-dd5a-4d74-86d2-671bdce70cd6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a9977-4887-415e-ba5d-dadd853975fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee902192-3db1-4325-be7e-fd3772ee2f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b6626f-f216-4178-9d14-49afb276ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c3283a-9f33-4c51-9e9b-71b51353f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0c952b-c97b-4010-b6a7-f518d8187d18",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2223ba5-b219-4696-acc4-a884111138cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbc5f5e-5ecf-4165-b604-89f221aa2698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3843bb-7aa1-452e-8b6c-a78dcc41f746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ab60f5-e360-476f-8fb5-6c26c3215c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7713a0ea-2eb1-408a-958e-5d6cd503b11e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710ff700-3406-4994-89e2-abaaef97314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68c76fa-c73a-44e9-9302-ec45f356d5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03fa433-2424-428c-8192-1c104932c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7c43ad-89a6-43a0-9328-c02a6f4c471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4752b-62a2-4971-bebd-f5f4214642b8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0865b379-60dc-4280-b0a9-d316dd7c4b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c1dd94-2e4a-4456-a10b-18992553bc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7382a6-82ad-4c2c-9a00-8c51454f7fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a1fa46-b32c-4af8-8e3f-c6338acbee43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c0ba8b-af1c-4e82-8441-22491ccfd71f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da9d7f-7bd3-40e5-9608-bfe0a9a92f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6348dbd7-9cc8-461e-9e7f-f65ed6971ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0749a20-79b6-40c5-a982-4845c8a076e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4117d2c-7eae-4452-a777-f861b530f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f7fef9-559a-4969-9f5c-f9225e8b81c6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51068402-3671-4b19-a471-5bac6f184a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6a3db5-efbe-4d7e-bd0d-7fba0ebaa7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c5f71-23bc-4b83-9bb7-830286defb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "395f2761-3806-4b9e-8bd7-108be1a8fe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27dd370-0fbb-40be-818d-4c101b9c8564",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30053d8b-4e3c-4ec1-b24c-0a792b220711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e909879e-9159-4731-b8b7-31956c8bb35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919bc468-9d3f-42b5-a91f-94a9b07a8522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08672ef8-78c5-4e19-8c31-d0c0f1c88128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00da3d4-831c-4d13-b2f7-0564383fc2ce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ef91cc-c64f-4d5c-ad52-411c97d90bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02ee1b3-9dbe-4331-81fb-884f6a283f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62130a54-2283-4667-921a-14c03840fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d349c0c7-407c-4067-8933-875867486601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d26681-2232-4383-9959-17d52cd0c849",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aca39eb-d9e2-4c8c-bdb0-6f8d1bc30938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb88b9a9-24e3-43c3-92d8-2f2270cf8a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8506c3f6-5fc2-48bd-84b8-54cfcfd1d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23b6701-eb0d-482d-b90a-0bf4114410f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de534426-22b1-4584-afdb-9b6f3e4d5940",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dde4a5d-dfb3-4d73-b002-a47956c572d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da907cb-2fbf-4898-9f81-81e1c71e713f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da68789-dc08-4e46-9177-a7177c980156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3054b5d9-a677-47af-9f89-48509b88fcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ead5882-2da6-4f07-a86d-6c0832767cdb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1772d0d7-6130-4761-9cc6-e69b44f9257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880aad5e-b22a-4d63-8e12-1e83e1039b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73cc3cf-de2d-44b6-81d1-4db32ae34ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fab3c33-347b-4f7a-affe-30cf75cf7ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb526d0-307b-44a5-a699-f4aa683e8402",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e168d3-aedc-40dd-b961-978e3a788c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ffc15a-a462-461f-b57f-543d57dce600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d5c043-6211-46eb-8fdf-310b21448d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1e56d3-f14a-42f7-94d1-6557cb37069c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02842e6-ffec-47dd-b779-41aab0cd2d79",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc7c02-4d00-482f-9350-46611dc5e706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fb1ad4-fb20-4e99-b83d-3dd18c8bf138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d906551-b24e-46cb-9d43-1fe7be4c0a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60015363-d227-4337-9112-adc95585e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451e2d2a-25ee-476e-a250-ac1e175a2f7d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016bf33b-6a9a-4586-974c-1fee7647fd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b58ed27-13b1-42c2-b8e9-8d23118ca4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b841ad6-2abf-4419-aeef-11ede59f7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "863c3523-26e2-472a-9324-38f8800748ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd8a9ce-c157-43bd-98b1-cfa43f92d5c6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9000a2-99ba-4789-b2ba-75e61c89d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67482233-6b45-434a-9adb-a95895078b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e752836-4570-4a17-a96e-74afdab212df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac93aa31-30ca-43d1-8e01-ae1d99f9d892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b344996-5359-436f-8375-292444912b11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f422c9-22bb-4de3-b033-765495f2ff10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d817e94-0675-43b1-b4f4-57d7d7f1cfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff6470e-a195-457d-9fdb-d66c8f724b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "613d2948-69a0-4247-b6a8-c51eb846ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6afba9f-2af9-431a-9559-dcfe91d2f0cd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa4baa-5d6d-4e29-9952-9ecda64e58cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b621df79-e350-4df1-b89c-e8d7655f1d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606dde58-4f12-4b8b-b90d-15b7320dbcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e9e55a-a6f5-4ef4-9a04-9086500409e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e510dcd7-a4d6-4e32-84dc-1cf570efb4e1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1618a46c-eb1a-4f2b-8f78-8a377409a971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec71530-b8fe-4869-94ed-6addd3d99142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250cb098-b636-425d-8045-177cd4be0a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0407ff-d138-4b2b-9148-ee7380b9b597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4699cc-02a9-45ac-b501-42de7e460452",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31114d1c-87a4-4128-9bd3-c57c31a7cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91a94b3-d448-46f0-8db7-c28e7829509c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792871b1-5be8-4e4c-9448-19c1fcd33a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f44600-e786-4b47-b156-1967a310c211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822a2a24-f95e-42d5-89f3-be05ffc0ac33",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1641ff-b288-46d0-874d-98cf94a322ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78757f78-ce2e-45e6-9c0c-b8c7bb986a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bae615-2436-4da1-98c5-86e8926ae7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0518ba44-c703-45eb-a11f-389fb362b426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a5211-62d8-47cc-855b-f6179b705294",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd51064-aec7-4610-b383-03456a20f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3450cf-0021-4775-9f79-ffcbaee8c777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e591d7dd-acb5-49a2-ab0d-ce93fd7a72bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d257cae-8ec7-48ec-82f5-a89753850f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b20d00-bf14-442d-aa2f-4843c40bc98e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44a62f1-c725-4aac-b8c4-9768e06c6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b833d2-56de-4380-93b1-81a63c7a1324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f10d0a-7770-4946-9cd9-ec8fdae14893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca8618b-68ed-48eb-98ba-fc74415dc1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e993f1-2be7-422f-ad51-e86b723cecbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e1e0c1-3541-4627-a539-811b35abe7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca02c48-a317-49c1-becc-e6a1801aea20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cc883b-db27-42d1-8bb3-dd6f3b31c054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "730d8d6e-52ba-45cb-b58d-f94faa49a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8999a973-f4be-42b5-a22e-47f5832ceb5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1c9851-6b57-4d22-9b08-b928b0252109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14862cfc-da93-417f-bf8c-a1d25d0a68c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bd5cc9-89a3-46df-b3a6-1affe910c076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "617ebf36-b138-4179-91f0-b12c56d7e944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682d542b-2b61-451b-ab2f-92e6001268e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f76991-941b-4f1b-a1e9-9aae5dfa2532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e0049f-ae00-4dae-814a-229a5fd3d852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc47358-e25e-4c29-ad09-7af088cbde34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "560af4f9-d7c8-4948-9eb1-b39a8933f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5914dba-7d85-4cd5-ad55-bfb2ad46c45d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beea606-5f36-497a-aa12-3ae00880f98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e9670f-8cc8-4302-9b33-41ae06f64078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40062440-9cc9-427a-9354-2b8de0b5e793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ae9d63-c096-40b6-83b5-5dfe96221cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3ce02a-52b7-49b0-93d4-410cb2923d78",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cbdc05-de8a-4000-bf69-3ecc2ab50eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c13e9e-b8c6-49b4-8dd8-c8778e9c601b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538080ee-1877-403d-9e91-cfb1fd731b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d039b512-1cf7-40c1-a6f2-dc1289f86397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00493329-2a9b-402e-bed6-a1be164634fc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe1b7e0-828c-42e0-b8db-9a3cfc1bc432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c47571-9430-4431-9189-d82a90eb469a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96ff43-bef4-41fe-a536-085a5385b2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc999656-21a8-47d5-a699-43bce6093929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36507145-6702-4609-82a3-b79717fce140",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c6e827-d52f-4a8f-b478-59173b3a8a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019eacb6-486e-4bea-b17d-8f3f36ce9666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10698ace-a83d-4f7c-9727-10e197a63c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2308bd7b-2d95-44d3-87d9-c716f94a814b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ba549c-97fe-41e5-aa8f-1a3d2e7583fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8779dfb-146d-42c6-a23c-89cb97e6171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1ddcaf-65d4-460b-b4e2-bcef22492e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6ebe14-eb52-48a8-b33c-9d79ee57cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d42f47a-35ce-4096-bd41-a107eb66e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2290acab-c404-48c6-936b-65b17fac3bae",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d807ed8d-9659-4f80-9a41-09b5cd2c2651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef37f71-b00c-4c80-935c-c53a4095a162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0713d0c-b47d-4f4f-9fb1-51f061d0d190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73d13fce-390b-4a1d-bd7f-939ecf7e6da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8034af13-9f0e-4be1-9151-8de2d2d6b256",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8310e81-2bb1-47eb-afc7-8e11bac18c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4341cefd-010b-4fc3-b0fe-61b190a0e032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73784a1-6943-4280-b0dc-467124a90386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b484d29-0e5e-418e-9774-8c28908d05c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3243c3-487f-40bb-ba6a-e3cd5b9c15c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c02c1e-5700-4fd4-9940-60b0672ae7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33a7014-660a-48c2-9bfa-6e87b48f5ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119cbdd-b609-4ddf-aa55-af71f38e630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eac9d56-5720-43e2-9a3c-1d9c39f3ce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34909d8b-beeb-4bc9-90c4-9f2273471f08",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9d11e3-6341-40a8-a547-025ec03d3cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c39138-65c6-4afd-94ea-85723455fdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af8943-cd6b-43af-98bb-b820a6fe21d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45b83b5-200b-4caa-883d-7bdf015e5296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8b353b-1fb9-4c6c-87c4-150994d7c1a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9986d50a-1da4-4265-ab65-6e64243f3e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f879b6-892c-424b-807f-ec44584edcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a22058-e997-406d-9659-2962e31b91be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcce20a-38c1-410f-b870-51ebeb666efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbec24a-b992-4a12-a536-644c59708340",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef1e248-8e4d-4b1c-a704-643864cbc79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b6de2f-b936-4433-9a81-81f830957e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a26c5d-de33-4f25-8ba0-2f67dd7335eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bbac84-4438-4921-a698-c97bdf055c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f774c4d1-37e3-4e06-bac5-fa2d73ebe750",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863643fb-9ae7-412f-bfe4-a0c483631f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ef4c0a-f4f3-4d4d-a495-7cdac6e6c2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e26755-a38e-4548-9a00-3af33e913c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba362e09-2a71-471b-b07d-7c69094bdbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77687a4c-da5d-4f8e-a132-646c2942f03e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9f773-81cf-4239-8911-19a1e7bf9a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d9a6c5-2525-4244-bb46-a0d92c9ae6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66cd094-53fb-4e34-a399-07c557503584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "377870e1-cf33-4a70-80ff-c45830b945d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99906c8-9988-4c08-b5ca-c1d1d37bb098",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec16822-e956-4970-a94c-96972bf88bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64cd2b5-fddb-47b0-850b-3cce668cc9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72ee25e-7d68-492f-b9bf-46dfba62f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7459c771-41b4-4f25-bfe0-f3a0c34a92c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47aaec4e-4641-436e-9258-ed99a710970e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb741474-1b47-4091-a43c-f1d23a03e8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dc94c9-5adb-4f81-9f3b-ca408eb1f8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219233c4-bfd4-4f95-8c7b-8ae6d2ebb04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0994eb6b-f150-437f-97a1-8cf266c9713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6c37b5-dbf2-4e98-974b-819c4d0c0906",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d147391-1797-452a-9f75-18a079d46a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b87904c-c46d-47b6-b694-ae5d07804dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a162e9e9-59a6-4b5e-83ef-4ab787913a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9dd5d6-4880-4b97-a36b-38ff29d2ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a62491-ba8d-456e-ad25-edc05c310c62",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e7f39-1f3e-4e8f-8e2e-debb6efbe718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d11582-1d5e-46c7-9cd8-aee404ea3e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eae54a-f639-4566-b7d8-295babeb1d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a88d35-d721-47ef-bc00-b31604afb96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45a68d-83d4-40ab-8cb1-578578cf7735",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ce81ba-e89e-46b9-a2bb-6587140e97df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad675357-380e-4190-ac9f-1666269ee380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14550d44-8f81-4c62-8d58-414b0f96acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85cc844d-a0f5-452f-bab5-8ec55fde8104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a195b3-8895-4313-9c8a-0901801ab0df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e0315-db7c-47e5-a6b5-239409a838a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a4bf48-5b95-4f3e-84c7-ffbba57ae752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476a459-caa0-4186-9005-1be9fac398b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0422282b-de90-4013-88ab-40aa1e8539af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6310555d-d819-4cdd-b03f-472cab3257db",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd379cf-38b9-448c-b973-334c9f4f4117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a603412-83f7-4e81-9cd4-9009739e136c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec38b869-b493-48a8-958a-c828ef2b3245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b4ff2d-8692-4465-a414-94cfcbe020db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cde032-9575-42c8-a50f-75d353c108d2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3659d39-ac19-4543-a451-a59c44e0ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496b6371-7916-41f0-b89f-1065e2b38328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e2d95-573f-4014-b092-52e469106600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6178c22-55c2-4fc6-a0be-c9c02f976ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43059664-b109-4e06-b629-e43249a8df3e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a39ab04-9b9a-405f-a460-f8565a3f9a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311aa9df-50a7-4ecc-b4c5-be6d658f2ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26512d0-bccd-4516-924c-928c975c00dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0d8768-17fb-4691-8d48-9e7d2eaec029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f3821f-98c3-42ec-94f7-99f6bee88e44",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f1cca4-9170-4bd5-ae7d-eb981d24d556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e06758-7299-48f6-b82a-63200acb7fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6294791f-fd21-4644-b5b1-b3840a9e843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcbacec-3e9b-412f-aa42-1e1fd2f89516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a23b226-4181-4d6c-b5d0-4dfc23e357bf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0786337-7dd3-42cc-a242-8cf0610d5d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8219fc0-6dac-4284-884d-d1ef3005adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2447927-2a7f-4f24-a52e-99a3249ba321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99dfbeb8-e290-4822-bb11-14fe371e92e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19a144d-a9ac-40f7-b4d6-220808444cb6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefa8767-84d9-4519-8e6b-9ea6f028a71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab66cb1-c763-48f1-a25c-64793bdc7e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db76a36a-3e97-44fd-b689-39e04ade4615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0af4284-89ff-4a1a-9f97-fed44292eb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c6f0e-7cbd-4f38-baa5-36ce3cbe209a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f1174-572a-4121-b77f-7074c28eeb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea64bdd-549c-4f53-be20-879ae7f94027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e92790-06d1-4c5f-a4ab-1dfcccfad38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8da70f6-7a1d-47f9-90ab-5c3a9c57c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc3d04-fd30-4958-8508-a7ecb93e7ad3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1239c7ae-422e-482a-b708-2d285842b156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c564035-49f3-4e0d-b8f4-56fbe53df666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67054d6d-70f6-4bef-8a18-01b976bdc724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59f08c73-086e-4625-aab9-0cad1278fd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d613995e-ac72-4b5e-8be3-3c1360943ccc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7afe1a-f262-4fdb-901a-92fbe9446e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec24f90e-8163-40aa-bcfc-0b7946f2007b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b37102-ab9f-4a50-8f92-450e4ec51147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40e63fc2-5671-4451-b59d-6dd4a9dbfc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009d6595-3bc8-4276-a897-17e584850da0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126c1955-55d5-4ebb-a6db-6714ad1b055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c434e1-8258-4cdb-b075-2df49dd1654b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8b9ecc-2ead-4386-8a66-16009ce11d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d960aff1-7350-4ab4-8070-10685d21aa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40bfacc-cd37-4452-996c-38b497919060",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65b373-ab5d-4fa3-8968-1d5ed2385f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e76d44d-78d5-43ed-a486-80c38c7457b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc46c2-e274-4f6d-a713-bb68c0104a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2330f618-6e9a-4389-a641-007bb3deaec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b1ba2a-5b28-440d-b931-1746e7d2daae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6100fcd-68d2-478a-9b5f-c75fdc7be9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "238db20b-eee8-4f46-b899-d49f5080f488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a01afb8-186a-45c2-aa61-c7b4d3ee3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5b1696-82fa-45cc-8e0b-978dfc09b6b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31760dc8-d3c6-45b9-9c34-21405eac08a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c998e29-ca56-46a6-8b57-b8bfd9a684f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500a315f-71c6-4deb-9e65-a863aadd2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "595f95d5-9067-4a4d-8f00-1da8d630a6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91729b75-6be6-4c7b-be89-d60c34b72e5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "435a2d31-007c-4d37-b641-ed431651cdde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3982fd33-e407-4564-af85-65925dffa3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e40efb0-9fa6-47d5-8025-e3cd21a6e1a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2403700-b877-4f28-9d2f-21eee7338e5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbac3e43-484b-4e4b-89c1-7542333c2b6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c36d0930-5d37-4b9f-8130-cb3cb66f959e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a874801b-e90c-4700-bded-d324d38acc07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e14091a5-d5dc-4d8d-89ac-af075003a622",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17ffb9a5-d9f1-4fed-bdc4-7b0f86452af3"
                }
              }
            ]
          },
          {
            "id": "643e2bd2-b795-4080-9bbb-7b8f98f56625",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07484fb6-600d-4023-97ea-e7db46d2c291",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "723dfc26-3974-46dd-8567-9e76e36076bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46f1217a-090a-4296-8061-491571bcb9f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0617580-20de-4e2f-9a94-0b21b213f079",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97fbc0c6-948f-445e-8ed8-df13389612fd"
                    }
                  }
                ]
              },
              {
                "id": "f7f6acd3-8475-4638-97b8-db36e0e8413c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71a1522f-a7a3-41d9-8cce-fc3ec7537f72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "961fd582-246f-4e7f-9847-90acfa0c330b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b9e6f02-2301-4b51-aa32-eb416874c770",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0323f1e-5b32-4f9a-8b8c-33717cd2e8f9"
                    }
                  }
                ]
              },
              {
                "id": "aba318ae-c52c-426e-8d75-6f55c976ba02",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c211d6-7541-48ea-8daf-bf7f58600ec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a30be29a-7335-43d5-b90d-680151e08290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6cafeee-40a4-42f9-a630-db9c0eb49ff2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37d483f7-e89d-4f74-b077-4cf2d75fbbfb"
                    }
                  }
                ]
              },
              {
                "id": "ca23c840-f9d3-412d-84e1-a8bb4dd64c61",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35181446-7ef3-4aa2-b63e-a3ba84fb7916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca35fc4b-f4d4-4cdd-97c3-9b23a8d1110d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f7362c6-7f96-4270-8a3a-14dc71468c4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8a13a39-0027-4074-80e7-9a2781d2750a"
                    }
                  }
                ]
              },
              {
                "id": "331c0a21-78dc-4058-bc39-85d151b4a1ab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "588bf97a-791a-4c31-9702-78ae5eb6470a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6144e10-9653-4be7-9d5d-8d1c0ebdea20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7014a528-b7da-4cec-86dd-2690d13bc37a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "73720ccf-dfcf-44d7-961e-98265a400a3a"
                    }
                  }
                ]
              },
              {
                "id": "073811e6-1229-4a9c-83d5-0d618b9b94d3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eeb7894-0ebd-4eb3-ac1d-54c12892a13e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e551c5e-de27-4886-b9c5-32485518afd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c8c420c-9bf7-40d4-834a-8de5f74771cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b1763bc-5b4b-4e87-8c85-00cae906cb6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "093c6767-3dd5-4806-9784-cd4617358e37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a511a10c-0fa3-4ad1-97c9-bbd177102ae0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81bb2355-ff05-44f5-95f1-dc3901b565e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "720143dd-eeab-40e7-b729-bab12b86ec8d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27d52428-854b-43c3-bb6e-da0f9f1dc0b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9826266-5f4a-42e9-a2fe-32c2b03ea924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d6e7dbd-cc00-4123-a393-747fb0f9449b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94c2a1f0-2e32-4ebd-8118-b818e5298ad1"
            }
          }
        ]
      },
      {
        "id": "f3d8812c-52fb-4f22-bdcc-d600f006667a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e9d57ba-5904-4791-a197-7f9c3db0851e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1276328f-2ec2-440d-8d38-640ac61cf85b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e398ad30-aaa9-4021-9b9e-a308b7ea4d97",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b8b689-fc3f-41f3-9876-4525dba31429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7a946c-518d-4a89-ab9b-d36db95fa620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c2d7fb-029f-4a62-b05f-9a094e553220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d808d13-e562-460e-95cb-1e7f4dc5730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7364e717-886d-4360-9cdb-7c4fce8ad62f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ae41ee-ebfd-4a92-87cb-5c7fb3793fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9c3088-0d8e-4031-a149-1dd28a05a9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d03f5b1-fe0a-46d9-b45f-a22fb85ed29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d5b44-bb3a-4ce4-b86b-eb410e308c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae270d7-6d67-4960-8475-131a77297d2a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a82f433-ce23-4742-a0e7-f203a54a95db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6b7eee-8e33-4a03-8ed7-5b6ef83be74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f06f456-7bcd-4a93-930a-98366ad49119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e71e638-dae7-4458-9eba-780514091756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3dd76b-c882-47ed-9f39-6a500ca3ea14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5795be-1f0c-4ee7-8013-980d43b2227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8fece9-bfd8-44f5-9209-38de727352e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd11764-0ce7-450d-b50c-e6bfacd3061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db4956b-3a4d-48de-8e03-e2c13e0ad1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c561849a-9da1-4f72-8b61-50ed3d0d011e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d1a2dd-8a08-43c8-a817-f5104f8ec3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6112bbf-1db7-4bf7-ae34-15c2bd95f0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f5b4b9-ccb7-4815-8318-9af07f3e76ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da2f6d68-4950-4a21-988c-fced352aa840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138662e8-ea39-4011-99dd-fffc53e4dfcb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c9f163-0c2d-48ee-b0f4-cf11b8486dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbbfd01-1fcf-463a-826a-1e6aee3a20ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122ea2e3-26ab-4852-8017-a6f2aade0476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbe0a40-21f8-43fc-923b-32fdf4ebdad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7e89f-36d4-494c-b5f5-a8e828a06a6a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b38a95d-5e7c-4b05-9fcc-729a55e13c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e484158-83c4-44ce-8f53-3c205b32c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1145e343-9f38-4c74-846d-e1912ed87616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0470f365-80ad-42b7-89d4-556dc8b0fb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0016a91b-12e7-46d9-ad13-21129606982b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeb6732-3c2e-4f5e-bc4b-2f8c84cf8517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb381ff-602a-49ef-9c90-e6a6f63df18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70698994-05ce-4bbe-9726-48df6d5b940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f45314-b5b8-4f40-9744-81745ce7e7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7545b22-871a-4e16-b4ff-1b91f5f47585",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe7ad77-b264-498a-a158-47b9206a8f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a3acca-ed8d-4431-a33a-8bd116896a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154c658-8b73-41f9-b318-286ac9b05f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e071fe-de5f-43ea-899d-1306c98ecf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c326da36-5831-446f-b32b-494120d8791a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f1ff0-aa53-4159-b0df-3c239ad6f91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f5111-474f-4b76-b983-60b5c257e132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334ca9ad-4fe9-4bcf-b5c9-bd126460108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cabd5f-400d-4758-b4f2-a13a96adba6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf65e83-01dc-480d-b06c-4b97badb91f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3148ca1-1816-40fb-a5ea-4d73ac8cf1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0a6714-2de5-488c-bcb4-c772b0bd22a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dabf34-45f8-4314-9184-4e08e5c97a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e53d24ba-5706-4842-be69-e62ec9ef6f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2001ae-51f3-4bc8-8a84-c8a8ed62198a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252f956d-4e24-42c4-b7ad-8ae3edd48b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44b423b-bc4f-48f7-8c91-1337d5e86315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8f5ab4-e678-4d5f-aa39-1268ee8a51b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8798eb21-5a01-4bf1-923f-79b3904d9c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a54fc0-7907-4ab8-be08-f6afbb151829",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa88d75-1731-4ddb-81bd-74a454f74319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb67f3b3-0bba-4511-a9e1-29b9ac7e172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d6823f-98e9-480c-8260-e8040727fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91421436-9a4b-4b5d-ae7e-c99d7eb6d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44080d73-625c-482b-9c64-9c9a3ed40ef9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e28ad5-9b77-45cf-b7d9-675e9e7e961a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d121eb-14a2-453f-afa4-14ddcb19dde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498b59c-abf5-4c30-a397-ab1ce3cf7bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "28192f38-ff51-48c5-88a6-6d84e168a1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0db003-2dc8-4ec2-8d9d-191893ac813e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a29ddd-f177-46cf-b253-e642113c8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76544a31-1d94-4d9e-8bae-b2c0309a7838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d079ec-c9ff-4a9c-8b43-06603a9b0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c40f9e-9d4d-4082-adf2-2539c457924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6523d38-6e8d-4dd8-bffc-ad5ecffd88b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411589ac-3c59-41ad-b836-6afee59b0caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77521d51-f66d-4533-8792-116b14945361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f6e995-a268-4b4b-b482-507ed4566a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "340b2c44-3d51-435c-a269-ecfcd4b420d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3479d1b5-8f3f-4720-b71d-81fe4529b4eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543e30b1-664d-4e5d-8cef-b547d1374364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9b4dac-8a0b-4e5a-b696-7dc9c0e1ea48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f2a82a-e4d0-4d94-aa2a-e859700ab309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "844c03b1-4671-45e4-957e-ed1534c0f40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbde07b-d338-4cd8-85ff-43fd65d8e4ac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15feafc-9a43-451e-959e-b1f4dacc205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d171ce17-beda-4a79-8033-51b2c125889f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d46cc44-6f63-429e-b687-c57aef703269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca009cb-020e-45e6-817b-4ab66993f213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d3349-04b5-477a-bd9a-012de6da875e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65912e1e-6c7e-43b2-9631-c888e97119c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8402d814-10a8-4afa-94d4-f39ade485454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d0d6d-5798-45d1-bf75-9948103a5395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd915965-13c4-4ac9-b7ac-f76f2fb81407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dcdb1b-62fd-4ed3-bc17-b2fbfbcb58f2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97519d8a-cd59-441c-9103-2ba8ca7f2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d642662-5564-49ac-b980-8bea6869e2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b708d2-7d25-4a0e-a682-a1549fd0d23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d46113-dc91-4b02-a131-1e2ab2bbe31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97bf033-41c5-45bf-b5f9-60e2b3c3c6fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19fc936-bb55-4cbe-add0-806b60979073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b27ee5-b64e-43f0-8797-936f3f3324e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1264cab-9e61-44e1-a745-9448b97c2d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "856891d8-9250-43b6-a49e-9a2897b50fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5b5d75-c00b-49bd-8be3-8f021c1be2aa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d377eeaa-21d8-4e77-9a21-6cf9e84671dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ac5575-4d1a-479f-a3a3-d39a41265742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b8ec8-c12e-471f-aa83-6563269b2cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69cd6305-a489-4337-80d1-6b1bd976564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16a000e-c9aa-422a-b17d-f76ad0333146",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d0f50-1fb5-45a8-b3b1-0e7717829bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf174bf-47fd-4b32-967a-73ffa1dc5a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128cca9-9a83-4528-92f7-12e2677c1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bdff4d-85a5-446b-9ab7-dd4b483f8222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2564d4f9-b119-44e8-87ee-72b316236af6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f593c379-95d2-47e9-ad8a-6c07e4db97f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d52fb68-4531-4786-863f-130716debd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121fa283-0b26-4cab-9d2c-09ebf0e09704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9231d7c-c026-4ae8-b361-d0f84b9a30fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db27c8-1b14-416d-82ee-179a16362fd4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef9b73f-d835-4005-87a7-a552f03896bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fea3c2-e7f2-4ae4-b4cc-7216bab8aaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbf04ef-a55e-4283-94d5-06c2077595c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09172f2-5ca7-4174-b04c-5b67c628aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61818e2-db1d-48f6-9917-a58311223e93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44970b93-ef5c-425c-aba1-b3088906f5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f6b75b-a580-4485-a03b-0fb80a165bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0bb75c-3d1e-4270-b36b-522178552e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b5d826-cd02-4b19-b01f-678880f6bde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ccf6bf-41e2-45ab-a12d-1e131046cf16",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feef78e-2820-404f-88eb-f5845fd9ccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d27c46-ea56-4168-aeb7-bc2430f6e929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117327e6-ba6c-473c-8f66-573f2944e3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2b88ef-4f5e-4f28-9b79-b7b3b3a426e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d879fb-866c-41a8-a879-f7ed85d14fd6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bddd48b-1514-4311-8562-4ea4182d4173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978dd5c8-3b18-4a02-af1e-731d4d61efe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9232088-0552-4576-8288-d322fd01a39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c83c89d-adda-4622-88df-987ec5c4ceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367fcd1-a04a-4f8c-bb09-88ef260babc8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e4b44-85e3-4980-9266-d8dd5d6b301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6e285b-f620-4259-84b5-934032cd35dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be1ee7b-244c-48c0-8fe9-13c68a6c1d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ec19fe-1c11-4e0d-9159-bc0b3fd7d2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d50595-c4a6-4685-bad1-1b5dcff9ead5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceadb98-9a3c-4d61-992f-5caf70d6eea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f0e328-2923-44ec-8df0-032d1ecc00a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7e0416-f79b-4b1f-bdb3-86ce270a9fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cb07bb-35e7-469e-8271-a5be0cc2a4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ea1806-3ed1-4dc6-8c0e-879f972cda35",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f4f3d-fa5b-42ad-aef2-84045bfa4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2c6565-d09f-4895-8f3d-727841fd64f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ac13d5-f5a7-4013-89c1-ce6633f5ec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bd5ff1-945d-484d-a4ff-f945b75b3087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827cfc47-cae7-4703-a44b-164ddbe64665",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658f7907-b4a9-43ef-aefc-8207c7fdb44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f1bb7-4ce5-43b6-8afc-b939f6185805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49777a0-3dcf-46d8-94f4-50e8eaf03766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9117d83-4ecd-4dbe-833b-c1eff0f3661d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5325e81e-dd05-4461-ab7a-23c0ead300b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b193bcd5-7349-4a38-a329-41b79632030c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f467bfa9-e97a-4892-bc90-54b6c7cead1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf851f7-4ae6-4ea4-90ff-57f858d57594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7fd50c-3e9c-4ec4-8a7d-15d617c4ed7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e147deab-ddf4-4353-9b7b-402ce76984f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6b5a263-dd9b-4646-8a2b-0f9d67e05dee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6320307-ae6b-4a98-b44f-a0f99da66ba3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8e2f956-ab27-4b07-b534-d2684a6268fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6c46fe9-69f4-45c8-a5f4-7993463566a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4e7604f-d77c-4ff3-9682-92c06dfb429e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d171e3c4-7659-4987-ad7e-a3811c3e8620"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf52dda9-0e83-4d18-9bf5-6d1f7c94c12b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "343959b6-9b11-4351-b993-d54ea36e818a"
            }
          }
        ]
      },
      {
        "id": "6e24f8d1-36e9-48ff-afbf-452b76dbb7a0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5254b103-0569-4afb-98d2-8f014a2c5c99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1ebd816-6406-4d56-98db-ed730ed26e2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a92782eb-bd90-4e90-9ac1-82afc42835b7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34484536-2a98-4055-807c-9842596b85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bd187a-e90e-4d31-bec7-c539a9e057f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b506c3-6a01-4f6a-8eca-1e77b82c230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "54411abf-78dd-4085-ae5f-d625c2e3e009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb72f9d-6726-47eb-933e-b1e45d7d218c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f36548-f870-49df-95bc-c53c13db5a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dbb562-dc5a-4b80-9aea-94b1aae9c187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fdc6a8-02ca-4aff-b24b-cc567feb3bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e424c4c-0337-4fcf-99a2-6c361fde5cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b61442-d85a-4e0a-8af2-b41380e45d53",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e026b12-db8a-4a0d-89e7-96ee2883f660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66c6780-0b8d-41f5-857b-d8f810e92d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba22f56-ec73-490e-951e-8c78632511bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673d37df-2162-4d1f-9fc3-c628790f72f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ea4f6-f161-403a-9e53-5f0e0d55238f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61df9fff-ae48-4559-87b6-b1bf332c189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e4fc51-d5c3-4592-87ca-5c8e54e3aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2d5661-259e-4bae-8483-8c09e5fe3e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0333b377-ff6b-4b7e-a09c-b78d36932a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd05cce-c6c9-48c0-adfe-4e63fb84af82",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5ad74a-227b-4f78-8a05-5a097da83200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3ef3ad-c39e-4912-84c8-98364e829317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40ed35b-4da6-497e-8518-f824dd4fadbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e29152-0af1-433e-aa5e-80483088184a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0683e19d-dbc1-477f-8290-7e629825540b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bfce0c-771e-4a3a-8bd5-282df84ff281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e14cf4-aade-47db-a9c8-a5130071ab60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c2e90a-c9c2-4fed-97b0-242a53c5696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c74fda0-b00b-4dbe-bab3-e807bcd3f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f336c9f-5357-40a9-8d47-e84c7a33903d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6772dc5e-3882-4625-91a0-e6406807e62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b61c6cc-2ce8-47ba-b7ac-8ee8b0fdff75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cbd0cf-3e6b-4b8f-8d64-65704e28db3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a158dd-b03c-4cea-b08b-4bd669a19879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0386e112-d366-4d52-a87a-8545c3aa9e77",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4810f50b-3d94-45ed-be8f-18a19a9ce886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e63c7d-4280-43c7-9094-fe97b01dbc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695c6f03-42a8-49ed-8199-92c1eb20e6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "211c5063-5d88-4c0a-98ee-d9d323908b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d43c74-6105-4ffc-8d97-34c462154d52",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5249e632-e31f-4167-8b1b-698c8745dde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ff1dcd-31d5-48b7-8bfd-908e388d6035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66373b6a-62d4-4860-9e9d-c6caea0eb8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8b983f-c19f-403d-b5b9-89bbabbdbe83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036f8f11-3e87-4552-805e-ee1d6b269980",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e1af55-e66f-4e32-bc74-5e20f80d7978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96048322-e1a2-4e5e-b4f7-8106720ca3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba58a8-7774-407d-9cae-7b6ac66710a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab4a08-a798-4a5a-b0d3-4f43e01c06de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efd3e35-d5e1-4d01-be01-691516362219",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c380b7c9-38cc-497d-beb1-684d32a8ed93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180615ce-bf41-45a7-9a43-acb37e0dbdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ed8ca-9b7e-4cb3-a4ca-e222b4cfec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5c44ba07-b015-4b61-9917-739c042a3ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38d0cb-ef65-49c5-adb0-3df2217e7181",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6dab4b-d57a-4770-aaa7-c4685969cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cdd98e-6ec8-4a7f-8842-4f2d3003222c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f961ace-2d57-429a-9a9a-b1c35d76fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf372204-23ff-4b12-bd9e-c4b3759968c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e4dc57-734d-43c1-8866-1b04a77edf2b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa1f291-a4c1-41e3-b674-7bd008c78caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d369bebb-cc22-442e-88a7-e283f65ae84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9df260-1ba0-449e-a116-1f29f0e4710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a533b750-3845-44a7-b3bf-de6222f832c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f600d9e4-eb02-492a-aba7-6c52c38efd49",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0078329a-bcb7-4ba2-8369-80115c7c7049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7ea8f8-01ec-45bb-9303-7acd816283e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05f049d-03db-4afa-ab23-2f36b6e06722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff7bf19-956b-4974-9551-e39794e7bed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b62196-90e2-4795-952d-d005c7afa80d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b21f66-a992-402c-9d90-bdc7b860a62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defb544f-bb40-4795-8338-fe1123201d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d626f779-7c69-4ed3-8482-41e01dc17aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb52ece-4551-4afe-bfd5-b6267e63ad48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf4a4e-e9d3-4c7e-8bdf-a0db37dd0be0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dc4365-68f1-4d95-a02f-49420c2b9998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2207540-90b3-4800-92a1-b33ec8815903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e7ec6a-c8bd-4e7e-8ce1-6c582ab5dd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99690e5-2f9a-438a-b67f-c627b65ab5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce64a6f-e33b-44d7-b240-d7947ef89f95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a486693-c309-4665-aed1-4a4cd759be3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfea6c77-d7e6-4e0a-b7b1-98bef7271fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca811520-b1f2-4005-a7f5-d351d8809dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "536efb02-80ab-4803-916b-87cc67967043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f1bf94-c348-4c6d-a563-24d5ce1a6fed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a748ab9-d7ec-4052-a30a-f3a2f972cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d5f6e-477a-4d3b-a92f-858ec0d3c02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0842c7c4-86c0-4ce4-bf32-b4c42c31ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94118ae6-77e5-480f-91b7-e36f799049f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b164bd-f144-4791-a573-f2788c7ad1a8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd77dc87-5c33-4a8a-8c7c-4dc5e21002d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c433251-f0a3-46ce-a542-29ca1944f8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5aef0f-ecb4-4363-9505-10ebf9dcbfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "160133e0-92e4-4368-93b1-990792cd78cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3222f2a2-b017-4073-9a74-4bdb408f1091",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cdc8f1-c470-453e-b113-93ab671ed49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3689dc5e-90a1-4111-b039-76065e4f1708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39251e8-b1cf-402b-9130-7499b02a4d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8e7e6a-1f58-4335-80ca-97718b941341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d005c-6a31-4f3c-bc45-aedbc3ecc669",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a876cf97-c9bc-4ebf-a768-6053ef78c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e244e2e-548e-48d6-bf4b-184a5a089577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e1adc1-02ce-4cce-9afc-b0f9cddf682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3d2d75-1ebc-4358-ba42-1927f67b93f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f2869c-b963-45b7-908c-996446d06493",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e99e71-c18a-4224-a81e-ea5504bb6ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a506a0b-e9e1-4f7a-81cb-6405f9a95f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49829c18-9c5c-4877-a4b5-09e85e8b8e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0734c369-6042-4a98-96e3-fff8b32db95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1fa62c-d5ba-4a33-9f3c-50c53b695752",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3188b65b-5211-464c-9daa-e8f9ea39eb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0ef54d-fe9e-441f-90df-555e699967a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98049fb-1a9d-4e86-b4cc-46637f8b7b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce492ad-9cda-4618-9bbd-2e78863776cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5925cace-344b-4ef6-84f1-1dff4ab9f163",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa7def-b2a7-47d2-a9da-714fad96f1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7111ae38-42ae-4e37-9e94-b7c10a8fd991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97815a09-30a1-4034-9098-787c3352b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29adffae-6f53-494d-87bc-c95bc8beb718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882026fa-f947-449b-84c3-d2e1da2dda53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfba658-4465-4d94-b7bf-25fdbcd89a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be48efc-0208-4cd0-9c6c-a33c25e0fd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f5f007-62f8-40b0-ba56-a8cd12a5a09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "322cc412-dd42-4b78-8a78-0033908b68c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3588f916-dbf8-467e-8b8a-a2479cf5f9fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea4be12-172c-461f-a73b-993cb9292c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c477d077-139f-457a-a5d1-23515e86aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8460a2-5eb6-42b6-8b6a-52a3cf2664bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "065309d4-ad01-4a0b-8323-1cde1981b940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b577c40-0a9e-42a6-9eef-e37b79785d4b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef906359-f1c2-4c42-8adc-712869fe97a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2519a7c1-c181-4881-a5f5-63adf4fa6c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d5b9b6-a872-4f10-992f-ddfffa32cced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "161fd4fd-2c2c-4858-99de-02d6df95f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519b48f8-235d-4730-b848-5435e3322a71",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce2092-cedf-451c-a262-c63e36d464b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34ffb21-eaa4-4543-ad48-6cd795f696bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85096cc4-8e6c-4940-b85d-47379fa89c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821b6ef6-7a83-4f15-8cdd-52de504ce62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a494f0e2-9f36-4de1-9a83-6010199685a6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7f8832-dbb8-483a-9ee2-e83dda1596d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715d1586-bc1b-4c47-8c03-33ddb5bc77ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572edaa6-5843-4e03-94f5-895e0e945036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d55098d7-475a-4ca5-9045-ed4550d966db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731f6e7a-9825-4678-867f-05f42e60ba32",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dafb59-9049-480d-86a3-e0b39f1da780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff79ca8-a27b-48e0-8c1a-37a67455f1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d152f50f-306e-49e3-8b02-3e961302cca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfc97a6-9cb3-4737-82ff-dbb5d4b99c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a92184-b072-4e91-b703-ccc684921554",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b37f100-d1b3-44c6-b9e8-171d5f35d074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bf7338-ee67-4e51-84b0-ed5307c91161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cceca965-4840-4dca-8795-20393d5a568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ec9291-5a03-491b-a91d-b98b676dc2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d50e2af-6718-43de-a3b4-191a1e70e781",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b34701-7e91-44b4-b3dc-6dcfca6eab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5079e71-8629-41bf-bfa1-f73cd08d3ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85602cfd-c8af-42ae-b5f6-b16f4422ccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "166d23db-aa3a-4811-a509-784155f1a7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165e7d6f-6380-48b9-9028-e4a21ebde5ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa52361-0f3a-430e-a594-4bd67bedd208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c48d89-37f9-42c6-bcd8-39eb373e4773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc333b-c3f0-44a8-b9b1-5190b52538bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f254883-9129-4df8-9630-1f21a95ac902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b059c223-6099-405d-bf1f-1c7848b63baf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13beef99-1e1e-4c99-91b2-3f10e29cc0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe8c46e-404b-4180-8b86-574ec391d9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b171d1-5f12-4fac-b922-0bca819d45ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4941d44a-a636-4dc0-81cb-918606652b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9156bc1e-f615-47e5-91c4-a787a01c3649",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607d6035-3512-423a-a1a7-72e31c0e301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db5a25-551e-444d-a050-2b425f113568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cdb5b0-f466-459f-8063-a7521e062926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcaa887-73e5-47fa-85e8-931853b6c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137825c-071f-4fba-8530-0c761ef7faf2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04655885-6cbd-4e7b-a6a0-f494a27c76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46161ff-4c2d-404c-be41-746db9c40736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d972f3f4-3c61-48ee-9200-abd7de6b3a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa62881-77cc-4c97-bf73-8f26c75a1b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145146f6-232f-4d74-b5f5-081dc4f812c3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d614ba5-30c2-42bb-9301-c319c220d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b637e23d-b842-405b-ba6c-e6d6443a8011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eda3019-6b89-41ab-bc33-b0a56897d07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5388c5-79d8-4999-b2b4-2d8d1e4ff854"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fb3f370-164e-4dcb-a9cc-419b7b0ff3a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a53527c-dd1f-4cb8-8e9d-1e448c691922",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a1f1c2-e2ea-4171-a560-4ab008ccb750",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a15ec964-7935-49b5-ba97-7b3e585ebf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea860ff-1578-40d8-b6ee-b2f05646e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8298ab8f-3534-4892-8af4-4314658ef6ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3708c5b0-b732-4527-903c-998eed65f9af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "823793c3-2081-4e85-9233-d1fcde503824"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "220be724-b3a8-4e45-88cd-c2fa5147d78f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbefc444-c497-4aa9-bdf6-0eee61a76e8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c44b2aa-4a59-456c-8f09-1c642d9b8178",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91e78d21-5827-4550-bd5c-5dae34c4b799"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bba831be-fa83-4815-966f-8e22df3ea926",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44e5ff23-54a7-4d47-bf2e-cf3007a34d99"
            }
          }
        ]
      },
      {
        "id": "1a24e11d-49c4-4cf0-9b67-8bb89777bc54",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7c8ade87-6615-4935-a5e4-343abcb8c987",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d80a35b5-5fdc-4159-8525-0d087b5ccc2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aeb4b6cb-a1c8-41f7-b428-e226146bbd79",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b938a12-8b8d-46fa-ae98-e224ccab8803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbd3c44-fe00-41a7-81b4-c0e55b35f84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ae7a1-d88f-4203-98c4-5b1a659ce033",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24999c2f-ff33-4418-9a1e-23ad599c0f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae6776e-baa2-4f0e-bf8e-53ed4c758ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fcc3be-897e-49b2-8c70-251a41921f7d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697b296f-e754-4740-b5a0-b87134e5e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba11009-eac7-4d1e-b2bb-32b7d2f235cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c40b47-f5db-45a6-8620-5339c6a60389",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecc2416-3e3c-463b-af23-c18243f1d850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbe4e74-ba32-4ef3-9b94-25477ab4ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1784b711-c809-42fe-bda3-fca57e4aeae6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907aef2a-f2a4-43b6-a24f-425726b4d994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5e1573-fea7-49b5-b688-274d705704f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c418be2e-1392-4832-8211-1d3115e2d7ed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7c9382-038a-46b5-8319-71df843048a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f57b79-d01a-47a8-adfd-cd0276c72858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e92921-d085-452a-8e8d-7c327aa25ece",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b85c6c-3ed4-4f27-8e3a-80f70901f22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a428e423-e139-475d-9748-6ee6483d8a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293b458d-39e5-4f1c-bee1-6e6d6ab0be7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa856d3-8ed5-4b70-af2d-727ec09c899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254cdaf9-7571-4017-8f2a-4e1393c1973a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c4ca5d-9b40-4a41-b649-6d69d7500bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b1beeb-94b9-468e-a510-bcd82c456c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b5fd8a-0137-4e48-93e7-21650ef71816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a103e7f1-7a15-4562-a4ca-4d8fd5dba8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf748fc-4ddd-4112-8bc3-73f8e0a104e7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf4322-7246-4b9a-866b-de91fd639210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423b8811-1ee4-4e8b-ba26-adcf656f1a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384cb4e6-95cc-4c61-8478-73714adef246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6b9805-43ad-4276-a401-36e0f443dc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06da2147-cbba-4d56-819a-fad39935dcf7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6501c994-513d-4429-8a0b-5f09faf61eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8ab422-3a54-46f7-a90c-d83f263a3ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b35d4e5-d109-4212-8500-262da2de4a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6361caf5-2605-4da5-a404-53acedf805b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b91c091-85d2-4c2c-998c-2a71bc033a6f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5187e64a-7d14-43e9-ae51-76703f0e9074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80854343-d093-4ea0-ad91-d9853f8f341b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39a57c9-b3c6-4609-a8b5-7b49ecc65f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804d833c-919d-498c-8d58-9c9ea6e6d5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e39389-0222-4842-8f31-19ebc6f93558",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15817f49-0f06-482d-9a96-cdc7d65d7d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088883c4-ba01-41eb-abbf-c12e469de924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842e207c-30b3-46cf-b6a7-9c48f0a5fe65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cf44eb-1037-4f52-b4ab-254ca6d686f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed317de4-c5c1-4c9a-b641-a7f6b0021efb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7941122-3852-49b7-8d10-6bfd9cbac8b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c60953-a72d-454e-9ddd-84818b675fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cf82d6-55e1-40d9-b927-b6b1270e2512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4ed1ef-2f90-419c-9bc2-a76e7632156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ac44f5-8dca-42a4-a233-fba2889200de",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e175314b-45ba-4fe7-aeb4-8a001de8ead9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7e01f9-f803-4da7-bcbf-605b200eddf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938c14ec-affd-47b8-93d5-485fc940b195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fb1994-da44-47b4-9cc0-fd40b941d154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39da3a70-3e95-49c8-99c2-276c795f8fbc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0700f8f-8104-45a1-98e3-076cdca7ca03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13f50af-79ce-4d1d-8b7b-290dd045433a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7830580e-821a-4a1d-a908-ac3e9ef47196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af3b6e7-8041-412e-9bdc-623d4f5e9c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0549c014-cf8e-4848-8a36-385b3c8d2f44",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0802910-e42f-434f-bc10-14794410f1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597300ad-0fee-44da-b8bc-18b89f5c7c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bf4bae-cf6c-42e3-93f7-0c2a657ae053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25939ac-ae4d-44d4-af3f-47351e66d5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba77c1f-3e1d-4d31-ba44-7fd22da7d82c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1942d9-ac40-461a-987c-cc2b0dba0a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f478efb8-7f01-4cae-8eb8-82b27c29c1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb76e47-b7eb-46ed-9299-9b1f995aff8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcb41ec-19b1-4080-844f-a05bc7bade7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eed1c9-323b-4632-b7b2-11e7b30ad27e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a821a9-7764-455f-9db9-b5227db533f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ecf59d-d42b-4f38-861b-cf01d378a386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5803764c-2ba5-4fa7-b73c-a2438bc6e301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33152c93-dd08-481c-8c76-e2c711b6dcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149186ee-d972-4dba-9e61-9de5c45a23e3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699777ee-4390-41e5-a394-1f983b643257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e69ea3-b501-49a9-a8b6-07931194e38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdf2b24-0933-4f9e-8c94-ad80aefe6e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36a7ef6-e48b-49e4-95d4-b545adb28631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1698c29-1007-4e94-8566-d5823cc31742",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a90f92-5630-4f07-a3a1-f91f9e6b43ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad93a3ed-72a7-4f31-b2c7-c6ae2f30ed63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698f9857-86b4-4a7a-bf92-23a20f6b6b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dda408f-654d-4071-b9df-12939b46cbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7edffb-5163-43fc-914c-d2caecd3d9cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c26bf-a000-4c13-9cef-1e93eb614970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b5bfeb-9372-429b-a679-4dd47a48a1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fddc71-3bd4-4a60-ba7b-040844a7cfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb3690-a59b-48e6-bab4-561752f38e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d08486-b1e2-4e84-aa19-5bc1bbc12937",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6023ef93-e7ce-4906-8b0c-40f812605c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed05d35-db19-4fa6-8b7d-00a4eb076be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc6d15-f2fd-4bca-995c-f15d70d6894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4c5941-6306-4058-b55a-9fef4027d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad79d2-2abc-4fce-969f-400131c1a398",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8b249d-ac42-45ed-a2f1-2c4aa1f720a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28712620-c14f-4bb2-8754-f6a6fa65581b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513b86b7-e57f-45f2-8eec-0aedc5c2c33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5159fc9e-a4d6-4111-899a-099f8b51d927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5966a71-704f-4c3d-80bb-40c39d70d87a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cdadf4-6162-4606-ab60-076634380e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c8c201-95de-4e17-a29d-2b2a25d94b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6657bb4a-6acb-4835-bd6f-722c41e51c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38120f3-3b65-4156-8f57-33608f08fcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8e673c-bac9-4a1e-8a79-0175f8b1248d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83d0962-8165-4597-bd9a-ab7cce9fbcd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d519ed4c-1885-46be-882b-a72261609730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30077da1-354a-4c3c-8746-c89f082b8a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38d682e-081a-43f1-ad67-2c99488bfb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a35b545-de74-4656-833e-8bc8cc320761",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e50072-96ae-4b79-8fdd-51498a7c1ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75c82be-1191-44ba-b0d5-1ddf4b7b4363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b81a3d-c78c-4217-acf3-02552de74842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a68607-d80d-486a-86c8-1ac5dcabbc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dbafe6-e6c0-4ec7-9d5e-21501223ff15",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c64d5cb-e6c8-4fbc-96dc-66933323245a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd80225-7e10-48e7-a5bc-f77da2675aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd6e620-aa1d-44b8-b0b5-2af19269f82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eece3c93-1919-4137-b743-3ea7e3386aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c6d52c-53d3-4e75-9c0e-0d3f9f8c0006",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54485d3e-e0d8-464c-abe1-f8fb675b15a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361d037c-71a5-46e4-9cde-4f6a57faf23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e560de28-51e2-4e99-b42b-b6949c8809fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be1a7f1-6457-4623-8212-03545aa8e6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ac191f-d3ce-40df-b37c-47bb063d282e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c8f29d-dd3e-47b1-aff5-1a6df89bbe8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b2239a-ad03-4ea5-a80d-b3c08a743494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667d87c4-f7a7-4cf0-80d8-18128ed4ca48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ce0285-210c-49d7-8fb4-df67be8d556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0813df-744a-4e50-972a-7402741420d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5d8d52-b173-4bd2-8766-358869a79605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a467591-d8a3-4c2a-a3d6-2176481a1e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0d376c-33eb-4ac9-b7a9-26f3a429b281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ffde4a-903c-4109-98a4-c602da47c134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28a75f0-42f9-4e91-b33b-ff380d767eb6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4308d584-b709-4ca0-ac5a-895de017c855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbbb6cf-d49b-4709-92cb-5034838eea26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da708ba-e142-40c4-aa83-43e578fa68ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc0f93a-c980-4361-8443-e08db707e614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8a31dc-30d7-4f31-967f-8c0cdce34bd5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f5cc91-9649-4332-9202-9886893d12e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22cd237d-f329-4399-ab32-c343730a2858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1008d592-77d8-4e8e-8958-3d8b2508fb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fa764f-0fc5-4c94-b099-2450a626e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8ddb7b-3f3c-4f0b-8f73-fa6adc0633f2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cb55c5-6b19-46e3-9c75-da2ec030c5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3ecbbab-0a03-4791-9bf7-af8483332fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa96c66-e1b3-431c-9338-35d1b0c009c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b472cd4-dbc8-40be-8c36-ed6a431feef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c9f52-23e9-43be-b36d-78ce5db19873",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93354d0f-318d-4f6f-b37b-438148a63fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399d0bdc-8afa-4fc0-adde-22c765d4d2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3642fd1-5602-4671-9bc5-e21666129e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdd0741-274d-493d-b26c-d716525b9a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8d8cd6-5c3f-4ed3-b843-d9013aba8353",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424b1265-6950-4d59-bfab-d5275467f22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1204c0bc-a6ff-4034-bd71-2a4f4b7ed28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51737df3-770a-4fb1-8083-ba520c7f7540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b31bf7-0aef-4088-b319-833082a7c290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fa6ad1-54fe-4517-87d7-7cc00e9c889d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9cacd-32d4-4334-91d1-439bcbff27f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0392ea0a-09e8-48cc-913e-83da3b65bfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a788fbbd-409a-4467-9cf6-8d01aafcb854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1c344e-b0cd-462a-9570-2c65f9aeb04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7f6a60-4546-4782-8003-9937ba267317",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07046841-1501-426a-9fd5-bfe09662d219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b70d967-99d7-46c2-b679-f36c2bf04391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc01b52-934f-44d1-b381-dd0f278e8228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e407fb0-769b-4104-87d8-9a87a8bda23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0826065-88b0-4efe-a766-98a2a93a1f0b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d3b51b-8e8b-4f3c-8d83-972e80b40cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3babde9-0864-4490-aee2-bdbafbaeaa66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4038b906-2f5d-41f3-9644-83ff000caef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411cb6c0-2710-4c00-9da5-d7cc7795755b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61e14a8-37a4-4070-a74e-ee3109e98530",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf218eee-c42b-4d43-8459-5bd5dbefa412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adc0c43-532c-4166-bd57-b357daeb501b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b124da-42e5-40fa-9728-a26a4b12784a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c398922-b995-48b7-8456-bd9f645b7301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bef4d9-ebe1-40e0-b3ec-9639df37a090",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdcefef-d3bc-44ba-abe5-bcae19c7b727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3311acae-b0a9-4d65-9aec-f5a948da5312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4330eeb0-0e80-43e5-89d5-9853f0e749a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cc1931-7a38-4747-8b8a-8473bf979b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd5fd28-56e7-4aa6-97eb-4ef867f4a9f7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebc896-ab95-44f9-abe4-1767dbcc5f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4440a6dc-f6c9-4836-a6ac-0ad0eb549c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1068af-5c30-4569-89d4-d28886a96826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff95909-6f03-4fb6-b492-3ee20473fd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca52c3f-8db8-4655-a753-4cb0a78a2c4a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87ac297-0b04-4a0e-b53a-d5a24086a38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89526800-70cd-41f6-a039-db113bf51482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fbd5ce-c298-4c5d-a2b0-d8b2150b5f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2211a105-06f8-4341-815e-6b8700412c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa46994-1968-4398-b5f6-35e15a3525e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db16b77-6035-49ac-925b-47d9cf686189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3b0890-e06a-4e17-958b-42bea6685cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7759f331-3e1f-4625-a10a-e4dec0bd3dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d7ca52-83f4-49b3-9cf6-28424d01b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aeda6a-fa44-451f-b303-67570d8c2219",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8927336-a22a-4668-83b2-a97241029de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129a07a2-8897-449d-b2ca-8fa814d66ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decf5ab9-32a4-4383-9c63-883d6ff0db24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1014288-b356-45ce-8310-d7636a6763fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdea33c9-a8ac-4748-aed5-4774d2ddc3b7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab445b68-1b1f-43bd-893b-0037f44477bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6351769-4e96-45c1-8d97-500f4cf9a0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59480bea-c34f-4403-b5de-5253dcd2607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb004eff-c4b2-4c67-9eb6-a7bb9250eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7f0c88-3f07-47b5-af74-50896e315704",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa63365-4c0d-4877-be19-77fb7af5be1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a865d6-c6a2-4f74-abe7-63d0ffc81af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db08b3ea-4019-4f1b-bb7e-d6410e76e8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce12ea6-cfd6-4be9-a9df-a7f63facd726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40697756-28f1-4829-8b79-382fc60317e4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a62c9f-3cd3-44f3-ac83-4a77add4a79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be8e487-2e2c-4677-a45a-c46c6fd01904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fee157c-fb5d-48ed-8a54-41be3d6879ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da38baaa-6649-40f4-9922-7d9d621d5fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fac6bee-ae8d-47d1-8a88-8f6574f49d35",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d133b2-2af4-45e0-b8a6-3cf2dd3ef534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e734dcd-608a-46d9-aa46-e7649a54b2c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f850e6c-c883-474e-9d24-fb9f66e9ce51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bbf067-a015-4b8d-a6d9-6ea37231e468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3ba5c-b885-431b-b955-a5443b29ec8d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6adddf8-6f7d-4ecd-9df2-3bf3d580aa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf01f8e-4311-498c-8272-56f1a7753f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65197f10-b718-452a-9806-92acf24f3744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85f84af-6020-4ca8-a74b-837ce23d2dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699640fd-aa0d-4d69-9c34-a9fd1a364ca8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105de1e5-0752-44be-9ce4-55e30e2e050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3100f889-fe9d-4768-829b-68adb18a448b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2826c0-e343-4a84-8e46-dacd54280808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7febd47b-9bac-4175-8e50-6c9e9c0f3c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adf31bc-609a-48f0-90a8-8a8d7518bd7e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d379d44-e924-4eef-8dfc-c8f09894cf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4066ec66-917d-4d35-9ba3-7c99cf88dc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf302c67-c05c-4759-b290-90798d503ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6103de7-310a-4231-83da-dcbd5d2ad6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37bd0d5-b15c-4379-b6ce-7373e2d8958a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d6a710-d212-4052-851e-7ff4a0d59ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efe99f3-98e7-41ad-82fe-0d48acdd7153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9617f4ff-556a-4c21-9387-696882f189b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb4e009-0bb6-4b4a-a2d6-e27b1515721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476d859f-b24b-4b78-900d-698f6727eab0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a797af4-b771-4fbc-b8cb-c36fadd4344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc28e369-c37b-42db-b8ba-0b7869b81e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8ccabe-7fda-4c92-be25-cb8d84e7ce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf781d78-43ce-4220-a243-b3e185c7dfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28679b42-9e5c-405b-8d7a-904f0145b11d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fa3318-2d78-496c-bad7-d77f9a8229f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25dc7b5-a14c-4892-bf44-1880a473607f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6dcb04-dc2b-427b-8db6-2ea682ccafcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb9c6ed-360a-4ddc-b966-5ff365ff7332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d43601-9710-4aa3-85a7-837af96bc4d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e8ca6-84ab-42a9-946a-2f1331e02b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b98a0d1-02a4-437c-9e8c-c0af92d60a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a191d0db-2d5b-470e-92f4-6aa276a30f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f4f39-ee97-4a39-b363-b3bd34a184ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12ad627-9c0c-445e-8a32-513eeff19a20",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76321218-08d3-47fd-8668-d8a6244730db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3671cde6-a270-4088-81fd-41bf7f3c88a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3640ace-2a9a-44d1-b7c9-ff27113bc62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff20948-a1e1-4181-8d46-c368e5b6d466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d375ea39-8a03-4ab6-952d-ad529ac0d89b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963426f8-cfd0-4654-a3df-03170bd490d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a3fdd9-6799-4f39-9b2f-c8af7c08a9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b99af4-8196-433b-9423-db67117a6498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333ef4ba-b114-44cb-ac21-3ac2468efa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b201fd31-e5eb-4b27-a08e-b96780a97bc0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c373008-eb4d-4956-8a5c-7b32a8eea5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223f8eed-af86-4a49-b9ca-ded5070caad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5465c72c-8a40-4d92-95a8-75d2a836b17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0f9ad8-28c8-4705-b5e6-94e282d4d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d8189-fb32-40e0-b7d3-76ee0cd95681",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b793171-fbe2-4c01-b3cf-46881ecc239c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0c2a57-587b-40f1-b55b-4a10b9a819b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967f76d4-4654-4a67-93dc-8e4b8470cecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f459d614-b12a-4891-9074-14a14dcb203e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42965385-23b5-4725-803e-f49b0f1485f5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ae8e74-55e8-44f2-ad0a-bc1b6f9ea23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f2c6a5-4800-4047-918f-eb33f245adf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ca3da-610e-4231-b6dd-8b578d081c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db052a5-e786-4cfb-9df3-94afb6f01049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202a0425-7527-426a-9bd0-18a2abd20a81",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9475bbda-7637-4bef-a2f2-1683562ca5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3c9227-3284-4be1-8c76-404c1a31b4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961c693-85a0-46f6-9ba0-45d26f95362e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eb8987-817d-4c3a-a664-9ad890375a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dc2102-29a8-4963-9b12-1f9678310b2c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62086615-b0f8-45bf-9614-3714d1bbefe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1d6016-5438-4826-a1b9-bd339b1f9486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad87d8a1-fea7-4e99-a55e-d97ad4e47462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee42cc5-cc79-46d6-a32c-ad6110944e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ae7e5a-3a0f-4bed-9443-845a8d513218",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6805a1-6f4d-4bce-beeb-866d44014367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b057fdad-f4a1-4a1a-91a9-00e8a83ccf89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98619dc0-5f1b-4b74-97c8-61fbadd90a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6d50c7-447c-4cef-b054-31b81d57464e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171902dd-51b5-49d5-88e8-6cf693471f23",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1de096-fb6f-4656-984c-74b59c7de090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71aa0168-2691-4945-b1e6-47d31b8d3387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b2086-d67f-48ae-aa0f-e1e1a8157b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abee05b-b1f7-41ff-ab7e-eddf5eb09664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f421e9cb-c448-4c42-b472-bbfc6e00316a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32b825f-2688-4189-a052-0f00661c2000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc32e2db-1d0a-40f7-97b2-6d215905162b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed477bb1-67f7-4018-90d6-5a46c2ca3d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b626af-7a7a-482a-bd34-c53640d75648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115352d-0d2a-4fa3-b8bd-3fd8c2487f03",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4546acf3-7763-4eee-abac-032f8eaab0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b090f1c4-13be-4984-8d0e-a019adc31b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf69288-a653-4e3a-8e16-818e2c794da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6d45b7-e8dd-4459-9173-49b1e15996e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098e5b2a-99cb-4d75-ac19-b43cbfbf7978",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e5fef3-b465-4791-899a-0e0b57d20208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07f297c-2ac1-4b8d-9da6-fe8c182bd29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59910afa-4b2c-4dbd-92b6-5dc1e9c5302a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5dbcce-40be-4c5f-97d7-292058c5e68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5453721-b44c-4890-b657-20aa4e92e7ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cecc1e-70c0-4cbf-9dc5-b0f00cfdbc0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5584c9d0-0fae-48d9-81b3-630d7cd4c571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f77f576-2b3a-4873-8c2a-83261ed56426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09c748f-d109-4faa-8c4e-439fd4136eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b923c-1667-4f0a-9c63-3cb4abb30e68",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d65cfa1-b2e3-433a-8e62-de0e0156aea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d4182c-a4af-4e2a-b9c0-2a27dd185120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd3981f-e72d-4ebd-b663-d4b5a259e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b153624d-2da3-48e7-bb74-a0b8fe48f0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17999ec6-7576-42ac-b8ce-a52db7d64d26",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3470b061-9d11-42ea-a94c-9491ff85ce1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48458b58-ca22-4b15-8130-e2750c91ca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3095205-66fd-48a7-9436-4c134bec3d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d24597a-4245-4e59-90b8-1117daf9c1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c20e13-a1e7-4567-aee6-6b7eba738f33",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acabc7a-91d0-44b6-9126-5cb1dae63ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d400e62-ceef-474c-9873-f27d70db5ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794d43a-602b-4fa0-9f47-9702c6c20028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb9b9bd-15a7-4493-8b1d-d403f55b9311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336d71a4-911a-4208-9f6f-69810bc88035",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4196b2d2-9a7e-4d66-a8b1-96e517700a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9f353c-d045-4e9d-9258-f367c1b4159e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5ad2d9-1b1f-4f46-af3c-763ae3763898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dd1d00-6e2f-4028-93fa-8d0c208cc7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e02493-0f09-4ae9-9d21-3074eeab5cd1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517dac6b-1345-4a49-9a3c-e196a5dc3e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a16b90a-6e69-4c32-b9c6-ed990cef444d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9e68b-6e23-46a5-8afc-6449e6ff0fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699fa17c-9e4a-4155-beb7-f8ac243adfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a5b948-8ae0-4955-826c-2228826b8a49",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce41a20-41c8-41cd-99ee-7c9e5c881b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48722b7d-3405-4751-8c7d-51705cf15a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923733db-0e0d-4faf-a276-746c1567e04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7d291f-e4ee-46e1-b8f6-623bd8f1b0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307caaa4-9fa2-4c01-8d27-a6fe62e79741",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6d724-17fc-444f-b099-02d1240dc938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8543c556-c06f-4bef-bd03-b3bf04b7e86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88829e0-d0db-4f92-8e1b-2a4550dba868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fe1aee-14cb-4d88-9c0e-bb13956d9c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e782a91-5a03-4ea9-b691-2c6a8a973354",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b93751-bbbe-4fd3-98f9-2ba5bede1d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53960f87-e3b2-45e1-9d8d-38e7b4db9697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9e6428-5990-49f2-a9ef-cbb2c8f327cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a637ef29-e01c-4344-b223-67026ac04fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647ac69-0928-4b20-b6e6-fcb069abec24",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e8ff26-5c39-496d-8ec4-d883fb40d7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2afd45-0363-49e1-89e6-25e000c2ba7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f251e4-d3d0-44f5-b247-fb49c8e5ffe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009532c4-a59b-4100-af2b-92814d99a398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe6e841-6494-46dc-8775-2e014ba7e7ee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175c19e8-1d11-4f5f-96bb-a5c922d5d611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08253bb-6b99-4d2a-895b-877df767bc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53795aa8-5397-4ad4-88de-b8147e5b14a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07edc06d-8e65-4b49-b73d-07394e39f7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e39019d-7736-452b-9342-a5cbd82a0c17",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b211ccc7-96ce-42da-b66f-922af21b3459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc19215-4fa0-4765-a1bb-6d6db000cf21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab27b8b8-3b89-460c-a1b5-5456533edfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f214bb-6f7c-460c-894c-bdae7d800f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9aa362-de9e-472f-ba88-c5131bc04d3f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9691f15e-1c2a-43e8-9397-c1b28f1a2797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262bb3b8-b6b2-46ec-b425-af8077f59ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6666d661-74d5-4985-bb1a-2218d5db739c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2132142e-7311-45a7-8e63-600649f73e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d003439-4acd-42fd-a228-29cc73e76e0f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9623d-4fab-40f5-a1c5-1f462db975df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197aafd2-c6a7-441f-8329-264704d5f9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a01827-9417-44ae-a6f2-7a42fd437c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fab5dd2-f32e-4cde-8e40-0f608414bd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56480a51-6678-4173-a95e-0848ba2a3c66",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1d14d4-41f7-49ab-8356-baf9875dd7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242206c6-2329-42d0-9873-80d3702cb550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee31649d-6932-4ed9-a031-cacb622411cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf08cf42-c0ac-4796-b593-d9b015aaba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c234ad2-c0dd-4f0c-ba3d-a9ce43752f73",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b630a67-b2c3-419b-8a42-cebd2804b772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b813c435-dc6a-4d7e-bd4d-fa6472dd5e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b6762a-1f59-46cb-977f-10a728d13a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fe3d7a-468e-4b20-b975-6e613397c9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5642bd-46ca-42b9-9116-69d804352e92",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff2139d-69be-4c09-a37f-af76fa5396f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ce3b4b-4b26-4c43-bf08-b84d05478d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2031833c-3b97-4540-83e5-e4790899a997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa64a96f-f0cf-48fd-9ab8-82b6ab25d14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afbc752-d67e-4edc-810b-41dbd63c685e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b48dda-33d3-4d80-945b-44f56e49cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbaedf0c-3113-4061-aefd-65021da6520d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb50762-e751-4e37-be16-376273e8580c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f90e48-c4ab-4b91-9e86-58f3b37448d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b2200-ddd5-4e74-9aed-92c63ceb9960",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423cd4e5-42e1-4c15-a62f-9669e4a4605e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2183ae29-b913-4736-98a4-8b3330fd3d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c622cf82-51cb-4a9e-9435-64f0d8012d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad5b1ba-3815-4f10-a3e0-e2f2b89442c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df9880-13c0-4dc3-b900-a2fceb51b501",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b3cc8-91d3-431e-9d95-f0e4b0cfba30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9578c5ba-5bee-41b9-853f-77d2cba9eaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7968b788-a1d7-4257-ac28-aaecc8b37862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6050f2f-dc29-4547-b7e2-6a7a7bf8e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb0c492-e9ee-4a61-9ff4-4bec5b17696a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84c2994-e172-4a10-8c23-2d45ab4109a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5ba9a9-ebca-4d04-b59a-67ba92497c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2e9648-7360-4125-bc85-dd239523e7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714795e2-e211-4b5e-8abb-7dcbed6c392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecc27ee-db2e-4838-9a2f-ebd09b001d8e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bbf18c-b781-4bde-b405-1acde672762d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d204bc1-637b-4f55-99c7-5498db7bdfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0680ee89-f2bd-404a-8b0e-2e92dd09a049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d31fd4-6570-49d4-a8ba-4fc0c199eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baebc2c-63f2-4c00-95a5-5b37aecf89f0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7022fe4-6305-4158-ac8e-8c5b105cd103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b08026-a7a4-4db2-b7be-2bd925d5efc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa74ce3-7e7b-4a30-8363-567f372b9d64",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88de8688-d030-4e2b-b460-c6f3084cbf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7420579-94b1-4b8e-b0cc-f37612c5fea2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb765e-ff02-42e3-802f-5c7c346aaf46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3cf8f5-1846-4bdb-8656-8095c3335092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5c4a11-0f82-431a-9a5d-d43ec945d72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f220ab-c901-4b38-bf65-03041a122721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d562fcef-c020-43cf-9636-c9a74e533f6a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f399fe-f55a-469b-94b0-8bc1a9610763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d20128-b4b5-40ec-8faa-cae9a4e89c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb395cc2-ea1a-4ffd-a921-2cf4c4f67ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07382400-8ffb-46d6-b17a-216664836896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6446f616-743f-4d6c-a5c6-e4bfecd0408e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4f7dc5-5e60-468c-804a-4df86f3adb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486797b0-49c2-4cda-b005-2d1e30f1ad19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5325502-b37c-4077-b9c7-cb6644bc8b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce73f7a1-2dbd-48bb-9227-0c404e488b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3f6c7f-04a6-4673-9394-f68c923d2e00",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcf370f-90a8-4e9d-8a52-632011056ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d81912-3d19-45ca-a1ae-114f3b212d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fe56d9-ec7a-4075-8450-95466d981526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448b7d13-39e0-4acf-bd97-ed86161a77cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55850154-12aa-4499-a3ac-41044b01cd1a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcb3f3e-159b-43da-ba8f-3cc0159203e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f81eee0-ebe2-4590-83bc-8b49562ab8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb3f51c-846e-48cc-ad7a-b89ce22d894a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9621b6-45c5-45bc-aaff-ee9155167cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0087cad1-725e-4ed3-9440-76677d60e38e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b07bc-9bd6-4f7b-8cbe-f0df3a0dcbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b283df52-84f9-4685-a5ae-2d1bd0530e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7324f-6d60-42b1-967f-60af4bfafe10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c700eb97-bf74-4ae1-ac2d-aa347ca82725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec87bd8b-df62-4d68-9923-e2f289f13c85",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6817f187-6001-429a-8e28-1f812f491b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66246eb-bb5f-4c47-8f23-409a6a4dbd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac43b8f8-46fc-483e-a314-02ca070164ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7f45f5-8df2-43e7-8e27-dc90c2c6d82b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "045ea35d-88d7-4096-802d-bc9fd15c92c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923ae579-234c-4531-baee-365ace58df49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff2f876d-3af7-42f4-93c2-d51c2b9b5cee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e24f734a-0396-4022-9dcf-58cefe5c2705"
                    }
                  }
                ]
              },
              {
                "id": "3b3442e3-c8db-4bd1-b266-4c55b7c95bb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fc8c72b-e0c1-43d2-a178-f685d0d5f064",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4ff1df-52d7-41e6-831c-e36fc8b85c70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2dcf328e-a579-4789-9cd1-dd9bab278075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567a14d8-1396-4a53-ba95-ff7eabe11b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df10e055-6f65-4c1b-b374-55a1eef8e104"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64f3a9b9-2f11-4434-ab37-b2a63eda1e91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a89533e-94a4-496e-8a36-aac347150f05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c14bd5-36ae-4cfd-8d09-be2475e09aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc61960e-2b3c-4111-af98-472248963f1f"
                    }
                  }
                ]
              },
              {
                "id": "3843a5b9-d622-4793-ad75-1597c02db22a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f332794d-4d3d-4e23-82f5-ed0c8100b39e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd559ee-d0c4-4ce5-85e5-b876aa6e42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cdf6578a-3cd1-44d6-b151-d4325e995d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683df767-8cae-499b-83df-a20db6026101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509eefa4-ecc2-4694-ac17-1492f48d2e82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "590bcc41-6bde-419d-822a-2efbb6de2a3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a2db966-16bc-4d9d-9fa0-afdadeb89b2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "425b2042-d910-41b5-9a68-a907b45cffc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b446375-6f03-42f9-99ce-95e8a4422a8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f29225-f40f-44a3-bf66-841f0caf7aeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eab1b2ec-fada-4ad3-bd89-65632c69d57e"
                    }
                  }
                ]
              },
              {
                "id": "12ce8975-45a9-4e20-a403-89db65280934",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2be78585-77a1-4a91-b63c-60acdb56f693",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3982202b-cec1-4e72-90ac-5857baf2318d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89c090aa-181a-47b9-8833-fb49e48a300e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "497c8b99-d2ad-4603-919f-3c1f811a412b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8486c16-0489-47df-8068-f05177df5538",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b0321306-c1b0-4919-851e-e31956a4705b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9d9d58a-b53f-44d7-8033-aa9e0583520f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "796f7177-0b87-4aef-a426-548baf11b402"
            }
          }
        ]
      },
      {
        "id": "e0b5e70b-9db9-46af-95da-3776f1577396",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2aff9360-afd7-4d0d-9d35-fff3849b6e3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c12e742-72a0-4ebd-be5c-43904c935d5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a52b944d-7516-4f43-a4c4-f7b9c1adbcd6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df3e408-be8e-49f0-ab42-37a94f944429",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b039f822-9382-4689-b8f1-59af81c2b899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c5d871-c704-4ceb-9e49-99ea0ae14bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b139573f-9642-4a22-9852-418b2913e33a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5e048d0-f5b3-4d22-9751-fbfede440271",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ff7f8c9-4000-486d-892e-c683c1698785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8379d60-0eed-4583-b889-ddce45f32293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5e65cf-5ed2-4a10-a7e9-89fdab3efb34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65959d4d-7bbb-4ee8-aa47-29e456f8cd20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3f2029d5-185c-4f02-bea4-12130e7b0923"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea9d268-88aa-4fcb-86a1-423e3e97c7b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad8da47d-01cd-495f-8f17-591eec6f5946"
            }
          }
        ]
      },
      {
        "id": "e396fe06-d09f-4e01-ac6c-a69b9cdb7ed8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "659a8b7e-ba37-4bfd-b822-9374defc8590",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9e1de0a-6a6d-40a3-ad12-b919ec0cdff8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8e00f44-d7e8-42bc-ac6f-021d43cf3093",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1048c4d5-e6fe-4663-b9a1-67bacf61170e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b61c8f-a303-467d-8c80-9b3640a008b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc94b9b3-cba2-424e-9f98-7408d319f25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32b9c676-517e-4c05-9dc8-766f1625c118"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82e0490d-41b1-4059-9642-abadead22590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eceabc0-91bd-4d0e-b91d-9f301a21af36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1017c7c9-a746-4b5e-83a8-d18d27b88155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795a652b-5ead-4d3e-a749-a762c9e97b69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f593361-b7af-4c7c-b2e8-ee113d1a53b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "788676ac-27aa-4032-85ed-09e187e38cfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49aa60ae-9783-4a53-a14e-3529e8e8e73f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39b02170-eb22-491a-b8c8-0a2d362d374c"
            }
          }
        ]
      },
      {
        "id": "41d88a2d-e035-4f9b-8f01-c53f5e47cb2e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c562d88b-bd36-4ca1-be8e-10b1479adedb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e754e181-eceb-45d2-9e9e-f87ee06fa15c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bcb1871-96c5-435e-bf11-c4bd70c43020",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee20e2f7-3653-4704-9a55-1bb7320f5dd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5830d2c-eecf-4e68-a23d-b227d5ce78a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142630c6-feaf-4686-b41f-75e0b71a6f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5d692b0-2f83-4638-965e-eadb38ec8853"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88248cec-9aee-4877-98bf-a9fbecaca0bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cd412a7-cc6d-4f74-8733-16eac2af4993"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12bc226a-e592-4956-9121-ba7394ddcfe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9506824-e866-4cc5-87ae-286728b315d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab4ede1b-5570-4f76-81d3-5b279c01c9d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3c7e048-803c-49d6-96e2-acfc15a7dad7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41cb2be0-d46d-45c9-8176-002bf07b719f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96601500-bf35-49c9-9555-9087a8a4ae47"
            }
          }
        ]
      },
      {
        "id": "e006e31f-6990-44b4-987c-b985be79bf35",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee598517-8f29-4067-a12f-dd5ebb21fcba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "762ecbaf-a580-485b-bd02-98424f4d0755",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e1bb3dd-143d-41a1-97cd-672d1c80977a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a305354-10fe-4fb9-83fc-18dfb5d7811e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e01108c-1786-4c0f-8664-e49e87835d20",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.89436619718311,
      "responseMin": 18,
      "responseMax": 302,
      "responseSd": 27.074286888370395,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696811644708,
      "completed": 1696811666872
    },
    "executions": [
      {
        "id": "582ad552-dbb1-4b13-bc27-cb5e8cbb4d3c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "493f59d6-732c-4f87-9796-1d16f5f13e5c",
          "httpRequestId": "ed13dffa-4720-4168-b4f9-ed72eb849699"
        },
        "item": {
          "id": "582ad552-dbb1-4b13-bc27-cb5e8cbb4d3c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "43429586-4b19-47b8-a88a-c9c4910b9671",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "739f380c-3f39-4a8c-a465-b7becce9bb64",
        "cursor": {
          "ref": "a09073a9-babb-4c59-ba35-479d7aa905f8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8e7958ca-7112-4cce-89ab-f3c97379502a"
        },
        "item": {
          "id": "739f380c-3f39-4a8c-a465-b7becce9bb64",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cff0a382-8eea-497e-9817-43fedf48f032",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "647dae89-e236-4edb-866a-fba654ac9b44",
        "cursor": {
          "ref": "388b05d8-1ce5-463c-9897-4f530c480f15",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77bfa03e-81a0-4861-8ae5-2a10bfd3e8e4"
        },
        "item": {
          "id": "647dae89-e236-4edb-866a-fba654ac9b44",
          "name": "did_json"
        },
        "response": {
          "id": "6830915e-c2ad-4275-814a-24fdba64e93e",
          "status": "OK",
          "code": 200,
          "responseTime": 128,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3d3876-523b-4542-86a1-1dc20796370d",
        "cursor": {
          "ref": "47f2ce4e-d588-4cc9-b502-6eb2393915c7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d987f89-6a88-416f-849b-20e0e9d02b75"
        },
        "item": {
          "id": "bb3d3876-523b-4542-86a1-1dc20796370d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb680b57-7c0a-4be1-be4a-028593c2e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3d3876-523b-4542-86a1-1dc20796370d",
        "cursor": {
          "ref": "47f2ce4e-d588-4cc9-b502-6eb2393915c7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d987f89-6a88-416f-849b-20e0e9d02b75"
        },
        "item": {
          "id": "bb3d3876-523b-4542-86a1-1dc20796370d",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb680b57-7c0a-4be1-be4a-028593c2e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a673d4-0575-498b-8f68-9aad0f12e7ed",
        "cursor": {
          "ref": "4d41ba5d-6f18-45ca-ad0c-d209ad0bc8eb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7bb5e49b-5d39-413b-8304-e0817a8004ec"
        },
        "item": {
          "id": "22a673d4-0575-498b-8f68-9aad0f12e7ed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3937e76b-e8eb-4539-aca3-aac3e56873e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b376d7-4d80-400c-ad0a-027fcfeb85bb",
        "cursor": {
          "ref": "50f8d392-acef-4b46-bcff-6edd2976450e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "45ec32b6-e567-4d3d-a0fa-8e618055175f"
        },
        "item": {
          "id": "24b376d7-4d80-400c-ad0a-027fcfeb85bb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2e019808-bec2-47b5-80ea-f379251d8715",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3723da1-78eb-4c3c-88e6-9c2a500b6206",
        "cursor": {
          "ref": "7c8a722e-379c-412b-bb8a-73af1a9f0ba2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4c62fbaa-91a2-4f25-a831-1e8b0c44e022"
        },
        "item": {
          "id": "a3723da1-78eb-4c3c-88e6-9c2a500b6206",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dd2f4f41-1818-4882-ace8-f7ba71a99182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2355b3-4ad3-482d-91cb-45e231742092",
        "cursor": {
          "ref": "8a676b3b-dce3-4097-8fc8-96a0a0a6aa37",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04eeefa0-7fd1-4126-ab73-6805f1a2cb72"
        },
        "item": {
          "id": "3e2355b3-4ad3-482d-91cb-45e231742092",
          "name": "identifiers"
        },
        "response": {
          "id": "f1fb0e05-533e-4137-9b5c-b70cdc8eea44",
          "status": "OK",
          "code": 200,
          "responseTime": 233,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abbc7a2-4b53-415c-b00d-b400f394bff6",
        "cursor": {
          "ref": "b1d3209a-67f8-49f8-89cd-a3304aa747bc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "785bc38b-39bb-41ea-88d1-17b72a4577f5"
        },
        "item": {
          "id": "7abbc7a2-4b53-415c-b00d-b400f394bff6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "95b37851-43af-487f-ac74-4a60de16b79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c996f8a8-377a-4b4c-a2b8-58cfe01fada3",
        "cursor": {
          "ref": "6e90e4a3-25c6-4b06-818d-e4a2eb76d934",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f0fbaaf-5502-4c5a-8443-b32fe5ac226e"
        },
        "item": {
          "id": "c996f8a8-377a-4b4c-a2b8-58cfe01fada3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "84675cb3-0790-4150-95c1-c41b3c0067fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7acd0a8-6124-4720-b7e8-8d217ab2822c",
        "cursor": {
          "ref": "d8108b82-7825-442c-92b1-111502327091",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2fa621f7-246d-4f36-830b-62b199cf0ea7"
        },
        "item": {
          "id": "f7acd0a8-6124-4720-b7e8-8d217ab2822c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4dfc509d-61b4-4c72-937c-0c93da0ffac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ad51ff-0ba5-49d5-8cf2-b4418db0dd0a",
        "cursor": {
          "ref": "89e24140-2747-4c72-bc0c-ecf30cebec0c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3c99b453-4187-40b5-9e1f-d58a85ad171a"
        },
        "item": {
          "id": "c5ad51ff-0ba5-49d5-8cf2-b4418db0dd0a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7bfa55c2-bfc8-4a0f-a658-f2151a28794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c8325-9c71-4234-9894-3595350656b4",
        "cursor": {
          "ref": "40b2aa9b-f05e-4c56-a105-112738366195",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "37a845f5-47a1-49b6-a9ee-800e8a32653a"
        },
        "item": {
          "id": "ad1c8325-9c71-4234-9894-3595350656b4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c1fbfba0-57e2-43c3-aa68-fc47c8a55b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a2343e-2824-4573-a7df-628a448f91a3",
        "cursor": {
          "ref": "61689a23-eaf3-4feb-b736-173fdea1ddda",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c6910473-1498-4896-a21b-4c45c2bd8db5"
        },
        "item": {
          "id": "31a2343e-2824-4573-a7df-628a448f91a3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "42ae2010-a91f-42a9-845d-5256937f4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c264bdc3-76e0-4c33-b847-7bfa8c2f537b",
        "cursor": {
          "ref": "ed9f0bf0-8c55-4638-ae42-a0ae5c365685",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d32a2b30-0e8d-41dc-91d4-517a9f223861"
        },
        "item": {
          "id": "c264bdc3-76e0-4c33-b847-7bfa8c2f537b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a78726c7-a8fa-4930-8799-62380a0dd7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36e9f05-a0d9-41aa-9631-28fbd3336a7a",
        "cursor": {
          "ref": "2449023c-b2b1-4444-b983-c69ff5ab5de1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "07e9364d-24fd-4b1b-aec7-06822781d137"
        },
        "item": {
          "id": "b36e9f05-a0d9-41aa-9631-28fbd3336a7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1d877246-17db-4814-8b2e-6c657ac8a138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f4877f-afed-4f0a-be5c-39d5bfb9a2fd",
        "cursor": {
          "ref": "2e9d8823-ae93-4d8f-8e84-7d0f3336e516",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c97d0483-1fdb-41a3-beed-a0af0ab34015"
        },
        "item": {
          "id": "59f4877f-afed-4f0a-be5c-39d5bfb9a2fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "76fa8603-760d-4b34-a353-b32935a006e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d838c3-c6b9-43de-acbf-3e88b466a3b5",
        "cursor": {
          "ref": "ad6d0cb7-ee61-4852-a153-bc4caf889a48",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "27ed226c-6595-4995-9c4c-73bbf1fff925"
        },
        "item": {
          "id": "95d838c3-c6b9-43de-acbf-3e88b466a3b5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "63cbc19a-37ae-4c91-a40c-b6d4ca6da5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8da49-9e1f-4785-bd6c-10f200a816e5",
        "cursor": {
          "ref": "82b5c1d1-cf98-4f0e-b6b1-3fd6093150e5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e886e8a5-f34d-439a-bd94-73e8a1172a4a"
        },
        "item": {
          "id": "d0c8da49-9e1f-4785-bd6c-10f200a816e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e82d6b2d-eee3-4e4f-ba89-a2e506ca645d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03ce2a7-3f3e-4540-8372-2b4346c5e754",
        "cursor": {
          "ref": "0a5c4489-1f62-4411-a50f-a430b850a93e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4feb1d4c-9238-498e-a6f2-1f45efab3e30"
        },
        "item": {
          "id": "a03ce2a7-3f3e-4540-8372-2b4346c5e754",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a9f6da55-b23f-44a2-9878-dca078676031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8f8a1-9aee-4043-874c-622ceb1d8aec",
        "cursor": {
          "ref": "0d8d6509-bf4c-4e35-9541-7e5a906b66f8",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "71f51b82-88d0-4278-87b3-2cf9c0f4e138"
        },
        "item": {
          "id": "dec8f8a1-9aee-4043-874c-622ceb1d8aec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c9518793-7b19-4ba2-aff5-d66d55d31b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d93d01b-8538-4adb-be1a-e17b10fcfef7",
        "cursor": {
          "ref": "e0c48922-2b32-49f6-85c1-824bca1f43a7",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91d490d1-9e75-401b-94ab-a369d23497ec"
        },
        "item": {
          "id": "9d93d01b-8538-4adb-be1a-e17b10fcfef7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cc24ada5-b805-4ff4-b4b7-508e427a5fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8cbd9-2051-4503-ab14-4852629eb3ff",
        "cursor": {
          "ref": "ecf7e0ab-5dea-48cd-a999-f2a2be59a61b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1b9c0b5a-b295-4fbd-ade4-61d2220879b6"
        },
        "item": {
          "id": "11b8cbd9-2051-4503-ab14-4852629eb3ff",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4f224b65-5073-4c16-8d93-8fd540cccb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ebb70-5db2-431a-bb79-1849ec0184d9",
        "cursor": {
          "ref": "56f61215-aa01-4e59-85e3-f5e3b801c18b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ae763be3-b0d7-4ec2-af03-a73869fe4038"
        },
        "item": {
          "id": "0a8ebb70-5db2-431a-bb79-1849ec0184d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5dfb992b-d2eb-4964-9981-25a3dc7dcb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d50736-0737-473e-a281-a0b620f08e86",
        "cursor": {
          "ref": "dece1987-e260-48d8-858c-e4a31c7e490e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8ddb32b2-6ccc-4544-a1a9-04922045cf17"
        },
        "item": {
          "id": "15d50736-0737-473e-a281-a0b620f08e86",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a4b68638-e0c3-481d-be82-cbf553a676f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9272a8-d804-4c40-a311-4cc080469751",
        "cursor": {
          "ref": "372643ef-d257-4949-8d13-ed7bbedbf17e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f2b10f18-1123-4c94-8d70-9ff76ad68735"
        },
        "item": {
          "id": "1c9272a8-d804-4c40-a311-4cc080469751",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "05241e38-aa77-4503-a07b-687c3087ad0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9a02b7-d3e4-433f-a34b-6b25d6754345",
        "cursor": {
          "ref": "d64a9d42-cd03-4eb2-882f-6eb82e5d5bd2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cc2523d6-1894-4979-a875-96bd4db1668c"
        },
        "item": {
          "id": "0f9a02b7-d3e4-433f-a34b-6b25d6754345",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "249b52fc-e077-4039-a960-046af3bb1b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128f1b51-b903-48ba-9753-0303319943b4",
        "cursor": {
          "ref": "a6a3b4bf-6cec-4188-8ba8-ed8d51ead17c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3044262-111e-4f88-a737-307ee7912e07"
        },
        "item": {
          "id": "128f1b51-b903-48ba-9753-0303319943b4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0dd79423-25d7-4a63-b087-a602e5c3c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a51d77-a13f-4114-9812-c9c2c29a5642",
        "cursor": {
          "ref": "d8642551-f968-4562-8049-1e9669b670b5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "792a297a-a84d-4e26-b495-e8dec1aba846"
        },
        "item": {
          "id": "60a51d77-a13f-4114-9812-c9c2c29a5642",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "17c18605-c2da-41a7-a41a-20401dca29ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a9e85-12e0-4ac4-aa7a-63a4cd0924d7",
        "cursor": {
          "ref": "9277ddea-eee8-4855-82d8-a2d39874dfad",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d0932b9-a5d5-4452-beda-98622b175ec4"
        },
        "item": {
          "id": "333a9e85-12e0-4ac4-aa7a-63a4cd0924d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b4294c23-70e7-4459-8d79-fc74dc98bb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c40eb8b-18df-46bf-8fa1-f303982d5628",
        "cursor": {
          "ref": "e08b6356-dca0-4ec4-8566-a3486305f037",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "95321f55-63cb-454e-8778-5aa034839551"
        },
        "item": {
          "id": "7c40eb8b-18df-46bf-8fa1-f303982d5628",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "789b83ee-be71-4727-a372-7f9c2b6a3169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd4d08-a1e3-4c3b-9764-b53b47726e59",
        "cursor": {
          "ref": "4e91c047-1e6c-4a40-a952-6b1e4415606b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "89ac10d6-9437-4a39-8b60-ec1dc190d88e"
        },
        "item": {
          "id": "71cd4d08-a1e3-4c3b-9764-b53b47726e59",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e38126b7-4d93-4f46-bfd4-700c73d315d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea7e49b-62b9-4931-8a9e-f3925ee8885d",
        "cursor": {
          "ref": "026e96b2-6ed3-4ae1-98c1-6a962fce23c9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "45507e4c-1a95-4dd7-b016-67662e17c839"
        },
        "item": {
          "id": "bea7e49b-62b9-4931-8a9e-f3925ee8885d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd0b1b2c-e483-4731-9a8e-cba609c1b45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc11b02d-0a4c-4d43-931b-a4a7479f8f97",
        "cursor": {
          "ref": "f0e97c44-307e-44f9-ae2a-a826f3b24afb",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "40ac4add-2561-4f29-9558-67bd0ce968d4"
        },
        "item": {
          "id": "fc11b02d-0a4c-4d43-931b-a4a7479f8f97",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "02949532-a841-4b89-91fc-d0e6a71efb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44543b1e-4951-4271-a97e-efb4b2e38e8e",
        "cursor": {
          "ref": "63f42d61-456b-4134-8c1a-ba3649cc93ba",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8e87dbd-d429-43aa-a399-a0d49f35411c"
        },
        "item": {
          "id": "44543b1e-4951-4271-a97e-efb4b2e38e8e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f9a06c5-44f2-4118-9253-6a496017691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63e6637-556d-4338-b437-0599a48223be",
        "cursor": {
          "ref": "bd2a4807-49ce-4550-8668-19585555a75c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "603d3723-1599-4e7e-bcaf-8ea8eab0f66a"
        },
        "item": {
          "id": "c63e6637-556d-4338-b437-0599a48223be",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34fc9307-8b25-4651-8860-16bc7336c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab673ab-4b98-4dd7-8e33-1eea3f19dce2",
        "cursor": {
          "ref": "04459317-c36d-47fc-aa89-e992907f2517",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ff27bcf1-a80a-4fe7-ac0f-78042ebf571a"
        },
        "item": {
          "id": "eab673ab-4b98-4dd7-8e33-1eea3f19dce2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b72e3eae-a4f0-4db3-a20d-305cac359562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd751a-c5fd-4a5e-81fe-ca2918ec85a1",
        "cursor": {
          "ref": "b9c4490a-67c0-4672-8f1d-b1e1ef02be9b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1f2472a6-6b3c-484d-82c8-1b0497d2ac58"
        },
        "item": {
          "id": "cccd751a-c5fd-4a5e-81fe-ca2918ec85a1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef9fdf5c-83fa-4884-ab47-5bbffd0bafd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3ed1e4-b580-4c4f-9a48-abceafd6f268",
        "cursor": {
          "ref": "8c8200b2-9dcc-4e12-b5c2-87c266186dc7",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf69f108-4e8a-400f-b34b-c0f7d0a6a4e7"
        },
        "item": {
          "id": "5d3ed1e4-b580-4c4f-9a48-abceafd6f268",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d60679f-0879-433b-9c3a-5435023d99eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dab295-d95a-4c8c-b473-a25066f6b115",
        "cursor": {
          "ref": "63a187a0-046e-406f-a4b9-8e6a4ba0b606",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a4acad65-0c3a-405e-8e87-af11fe3faf3e"
        },
        "item": {
          "id": "38dab295-d95a-4c8c-b473-a25066f6b115",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fde18fa2-41df-46ed-836d-2bb6381f3f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def7fe06-2355-4e50-aede-0df8efbb6fbb",
        "cursor": {
          "ref": "d86f1e3a-142f-4a21-9c72-ef14f3f8e91b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6de2a326-3e92-4617-9b92-65a599d547c5"
        },
        "item": {
          "id": "def7fe06-2355-4e50-aede-0df8efbb6fbb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ede883d5-85cd-4150-91aa-9be37f07a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3bee33-495d-40ca-8f94-a0b9c85f6dd5",
        "cursor": {
          "ref": "1f13db6f-6e18-4d7c-b9ac-314b663578c4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f4dae119-18a0-4623-b79f-4d79131c3dbc"
        },
        "item": {
          "id": "1e3bee33-495d-40ca-8f94-a0b9c85f6dd5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa4fd410-9125-43df-9df3-56ad132d4f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236fc137-57bb-4970-8ae9-08d307dcd035",
        "cursor": {
          "ref": "9c9e0d2c-19df-4832-8a67-cf9d51c15233",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63f490db-3661-4cde-ae2f-84270f358dba"
        },
        "item": {
          "id": "236fc137-57bb-4970-8ae9-08d307dcd035",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "90b7d95e-be20-4ba2-90d4-107519af51ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758cd0ac-f95d-4be0-9f7b-8e2cf956d41a",
        "cursor": {
          "ref": "80b78f02-97d4-4042-9513-b7c92670a8c1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "55cffd16-6b26-48ab-b7a3-873d1a02dd5f"
        },
        "item": {
          "id": "758cd0ac-f95d-4be0-9f7b-8e2cf956d41a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3e6bc5a9-cdd0-44f7-b1f6-5113116ad24a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 55,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295bd5d7-dd5a-4d74-86d2-671bdce70cd6",
        "cursor": {
          "ref": "899e35aa-3fba-4727-b39a-00b709ecb279",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8be6cb30-0a96-4443-91b4-878df9334855"
        },
        "item": {
          "id": "295bd5d7-dd5a-4d74-86d2-671bdce70cd6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0ccbd496-1c2e-4c12-80ac-9450f542b299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0c952b-c97b-4010-b6a7-f518d8187d18",
        "cursor": {
          "ref": "2055e1fc-9887-40dd-967e-3e23ff58ff50",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4b56839a-04d1-42c6-9607-7534f6f5e584"
        },
        "item": {
          "id": "6f0c952b-c97b-4010-b6a7-f518d8187d18",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0fd1b2cf-56ea-4335-a130-b9c286c76b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7713a0ea-2eb1-408a-958e-5d6cd503b11e",
        "cursor": {
          "ref": "e38a2a65-919e-4966-8b2e-7638908fded8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "103bbc14-9718-4cbc-baa5-0466d79ee7fb"
        },
        "item": {
          "id": "7713a0ea-2eb1-408a-958e-5d6cd503b11e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e99bf321-7e63-4cf9-bd78-3cc821421503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4752b-62a2-4971-bebd-f5f4214642b8",
        "cursor": {
          "ref": "b54a8bd5-3448-4e15-b10c-03890f1efd57",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e5ddb5f1-4558-43f6-ae81-d61a16918ded"
        },
        "item": {
          "id": "89b4752b-62a2-4971-bebd-f5f4214642b8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b98ab9dc-2fc8-42be-add9-bd3a2ada6cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c0ba8b-af1c-4e82-8441-22491ccfd71f",
        "cursor": {
          "ref": "084289c1-55a8-4ef6-a456-d407915f822b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a5b689ea-f8f1-4e96-8d9c-ddbe528f5092"
        },
        "item": {
          "id": "57c0ba8b-af1c-4e82-8441-22491ccfd71f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6cd34add-fb95-4648-b2a1-a2f2253cdbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f7fef9-559a-4969-9f5c-f9225e8b81c6",
        "cursor": {
          "ref": "e681b424-9cd4-4b78-bf6a-dc59abb925cc",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a2584af8-8b91-4cf1-bc16-0ff83e294e09"
        },
        "item": {
          "id": "40f7fef9-559a-4969-9f5c-f9225e8b81c6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6051b0ac-69b7-4b8f-852b-3dc959e2e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27dd370-0fbb-40be-818d-4c101b9c8564",
        "cursor": {
          "ref": "8c243bf7-58b0-4dcc-b12a-2afca70461d8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57985fe0-72e0-4ec6-9d99-77a0e282e51a"
        },
        "item": {
          "id": "a27dd370-0fbb-40be-818d-4c101b9c8564",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "10b59c7c-9858-418c-bf42-71a95a9546a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00da3d4-831c-4d13-b2f7-0564383fc2ce",
        "cursor": {
          "ref": "da7ae991-d7e6-46b2-857c-a2b21a5ef900",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7fef8a58-d359-4708-92d2-303e6832e632"
        },
        "item": {
          "id": "e00da3d4-831c-4d13-b2f7-0564383fc2ce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8c6e1f1a-b0dd-4ce2-a075-c33506afdfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d26681-2232-4383-9959-17d52cd0c849",
        "cursor": {
          "ref": "74b63e1d-006c-4f88-8834-6136abf3c807",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3a69d213-969c-4c69-9d61-bd7fd2180c4f"
        },
        "item": {
          "id": "15d26681-2232-4383-9959-17d52cd0c849",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f9a026a4-e1dc-4613-8931-d9606450d52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de534426-22b1-4584-afdb-9b6f3e4d5940",
        "cursor": {
          "ref": "1929dea0-1002-4b42-9eb2-14a859d00892",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "27355619-5656-4051-98a5-c60518f1ff4e"
        },
        "item": {
          "id": "de534426-22b1-4584-afdb-9b6f3e4d5940",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c8062a7b-e946-47f8-9dae-d83ca3b30bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ead5882-2da6-4f07-a86d-6c0832767cdb",
        "cursor": {
          "ref": "8155fbd0-0d3f-4577-962e-947cc6590bd9",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "57eb9e54-deb9-4d0b-b0f0-6918d9e41dd7"
        },
        "item": {
          "id": "6ead5882-2da6-4f07-a86d-6c0832767cdb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "79edc687-1c51-49d2-ada9-d56b5aa90a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb526d0-307b-44a5-a699-f4aa683e8402",
        "cursor": {
          "ref": "99ce7eea-32f0-41ff-a9f9-421e5f094568",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f26d658-33a3-49b6-8057-980e59b331ee"
        },
        "item": {
          "id": "ccb526d0-307b-44a5-a699-f4aa683e8402",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "97fded05-9cb5-4431-a308-cd89425363b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02842e6-ffec-47dd-b779-41aab0cd2d79",
        "cursor": {
          "ref": "98a98403-36fc-4d0d-b10f-3351d8c93a77",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6d3f3eea-1a40-483d-b2c7-ac7e07bfb6ac"
        },
        "item": {
          "id": "b02842e6-ffec-47dd-b779-41aab0cd2d79",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5919968f-2a90-44c6-8b46-162b99e5e634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451e2d2a-25ee-476e-a250-ac1e175a2f7d",
        "cursor": {
          "ref": "4aea7c30-f468-4991-8a07-153c2b9a2a53",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1cf45514-5edb-46cb-b2c4-fc8c3d870100"
        },
        "item": {
          "id": "451e2d2a-25ee-476e-a250-ac1e175a2f7d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "126f2712-e52a-4263-ada9-189466046535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd8a9ce-c157-43bd-98b1-cfa43f92d5c6",
        "cursor": {
          "ref": "82941686-fcaf-46b0-8a28-fe9e84e501c6",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "19b089df-5018-4436-9e97-860e32bff1dd"
        },
        "item": {
          "id": "8fd8a9ce-c157-43bd-98b1-cfa43f92d5c6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "788c7b74-588b-49f1-a504-dc78579c8921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b344996-5359-436f-8375-292444912b11",
        "cursor": {
          "ref": "ed86524a-bda4-4465-bc18-a8bfa5166ddc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e227eaf9-7d0f-4b92-90fb-8026fbcc87d5"
        },
        "item": {
          "id": "5b344996-5359-436f-8375-292444912b11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ac5e26d4-241d-4b94-aa31-f0ec861f8a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6afba9f-2af9-431a-9559-dcfe91d2f0cd",
        "cursor": {
          "ref": "46e0c0b5-6aee-4557-83e6-6b0c8b279190",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f0ef3b2c-fc4a-4232-9f97-d107fd789d87"
        },
        "item": {
          "id": "f6afba9f-2af9-431a-9559-dcfe91d2f0cd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c17d26f4-0fe4-4994-8696-17a48ba480c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e510dcd7-a4d6-4e32-84dc-1cf570efb4e1",
        "cursor": {
          "ref": "db8906ad-4243-4dd5-8b7f-27cac70229a2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "77989a9d-50b0-41ad-828a-bb0b1c815033"
        },
        "item": {
          "id": "e510dcd7-a4d6-4e32-84dc-1cf570efb4e1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c74e3ff7-f333-4d65-b60c-0568ea6dceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4699cc-02a9-45ac-b501-42de7e460452",
        "cursor": {
          "ref": "2b7acb26-895d-4a99-b444-23a2bfd88bbe",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e38d4c41-2fc9-431c-ba49-6451119ab8f9"
        },
        "item": {
          "id": "cb4699cc-02a9-45ac-b501-42de7e460452",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ec6fa367-9700-4776-84a7-131c5560e182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822a2a24-f95e-42d5-89f3-be05ffc0ac33",
        "cursor": {
          "ref": "b1a11428-7af9-47ab-9287-8cfa5295847e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2eb73ef-e9e6-46be-9852-a36a1d5e3c93"
        },
        "item": {
          "id": "822a2a24-f95e-42d5-89f3-be05ffc0ac33",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "952deb2d-fa32-4990-a8bb-6fb2b8c53d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a5211-62d8-47cc-855b-f6179b705294",
        "cursor": {
          "ref": "8e4b4626-adbe-4ff6-a7b3-74c2e291c5bb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e651e61a-75d9-404e-97bd-f52139370369"
        },
        "item": {
          "id": "fe6a5211-62d8-47cc-855b-f6179b705294",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a5701f03-8f74-4504-aba2-6ac0f8668c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b20d00-bf14-442d-aa2f-4843c40bc98e",
        "cursor": {
          "ref": "52494b6b-b3eb-47f3-8a5b-a7283e49a9f7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7bbf7c15-6e06-4469-941a-de83727daf06"
        },
        "item": {
          "id": "36b20d00-bf14-442d-aa2f-4843c40bc98e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "416c6134-89b4-4cc6-a3a4-94517b1ded5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e993f1-2be7-422f-ad51-e86b723cecbb",
        "cursor": {
          "ref": "33192a80-e0b6-43c8-a063-c81eb67c78c3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d8e9910c-da78-4744-85a3-e583360e26fa"
        },
        "item": {
          "id": "75e993f1-2be7-422f-ad51-e86b723cecbb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "45aaaf9a-5657-4d3d-9ee6-789aeda87700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8999a973-f4be-42b5-a22e-47f5832ceb5d",
        "cursor": {
          "ref": "fd18042d-b5db-437a-85e1-181ab314680c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "038913ec-547f-422c-9fa9-7b7835c62637"
        },
        "item": {
          "id": "8999a973-f4be-42b5-a22e-47f5832ceb5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "03e5420e-b38e-4806-a3d2-3c8e550622d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d542b-2b61-451b-ab2f-92e6001268e1",
        "cursor": {
          "ref": "a68cb6d8-4898-4f28-b97d-dbcbf9a3e276",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7eda005-776c-413f-9d90-6c7a34459662"
        },
        "item": {
          "id": "682d542b-2b61-451b-ab2f-92e6001268e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7c63068c-6113-415f-98fa-bcab0d67dcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5914dba-7d85-4cd5-ad55-bfb2ad46c45d",
        "cursor": {
          "ref": "a8c6a0e5-4159-486d-aabc-dfe784d8f710",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "feb0c3d2-3fad-48ae-a5c9-1eae78f15df2"
        },
        "item": {
          "id": "a5914dba-7d85-4cd5-ad55-bfb2ad46c45d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7b8773bf-8e9c-453c-be2d-2c1c6972980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3ce02a-52b7-49b0-93d4-410cb2923d78",
        "cursor": {
          "ref": "44c8f74c-c8b1-40d4-b33f-1dcda3c58387",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff80aba1-5a09-4a39-b395-49dfb03861c5"
        },
        "item": {
          "id": "fc3ce02a-52b7-49b0-93d4-410cb2923d78",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "44820ff0-198f-4b98-9437-9bfdfdce7896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00493329-2a9b-402e-bed6-a1be164634fc",
        "cursor": {
          "ref": "e5be6f1d-d88a-47d7-9956-428d3d619ad7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46db0a72-1750-4c65-ae4f-61025188194f"
        },
        "item": {
          "id": "00493329-2a9b-402e-bed6-a1be164634fc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4fc38147-6c35-407e-9b05-6d93814bf502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36507145-6702-4609-82a3-b79717fce140",
        "cursor": {
          "ref": "121df733-ca9f-470d-a98f-b91faf4001a4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "307041af-a87c-4dc0-a8ac-18d088188348"
        },
        "item": {
          "id": "36507145-6702-4609-82a3-b79717fce140",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1f319c9f-ea0a-4bdd-b4b0-57602e069d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ba549c-97fe-41e5-aa8f-1a3d2e7583fe",
        "cursor": {
          "ref": "f7bb0fb3-9a42-4647-a1e8-aa220679889c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b07a6041-ea7f-46d8-bc79-98cdbf3229ad"
        },
        "item": {
          "id": "b0ba549c-97fe-41e5-aa8f-1a3d2e7583fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "82544e24-bb6a-48cc-bf3d-6c55f1f72ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2290acab-c404-48c6-936b-65b17fac3bae",
        "cursor": {
          "ref": "0600f379-d5ae-42a5-bce6-7ae02660b7e8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "eab11655-d079-4c3d-bacc-e37ab17ed521"
        },
        "item": {
          "id": "2290acab-c404-48c6-936b-65b17fac3bae",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "56869dcc-ed1e-453c-88d4-0afdbd364661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8034af13-9f0e-4be1-9151-8de2d2d6b256",
        "cursor": {
          "ref": "652a4e6f-dde8-42a5-985b-41b56d443245",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "079d153f-67c2-4fe9-beae-6b112c9647fd"
        },
        "item": {
          "id": "8034af13-9f0e-4be1-9151-8de2d2d6b256",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3088745b-f223-4d1b-9fe9-63509888a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3243c3-487f-40bb-ba6a-e3cd5b9c15c5",
        "cursor": {
          "ref": "e872909b-1341-46c1-869f-d2b7e25088ea",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "62687c64-ce8b-4e6c-8e90-9640b7025f10"
        },
        "item": {
          "id": "6b3243c3-487f-40bb-ba6a-e3cd5b9c15c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "418b03f9-4253-4873-9b89-52c461a285b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34909d8b-beeb-4bc9-90c4-9f2273471f08",
        "cursor": {
          "ref": "3a83ded2-3559-4443-8767-908aff23c58d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1d4b74cc-b58b-4526-93a4-ca67553b64cb"
        },
        "item": {
          "id": "34909d8b-beeb-4bc9-90c4-9f2273471f08",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "794073f1-95be-4625-8d69-ed6fe8f16934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8b353b-1fb9-4c6c-87c4-150994d7c1a9",
        "cursor": {
          "ref": "e02b4175-3a62-492a-8f04-a197dba410fd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6180478b-7554-432e-80a9-95874c911357"
        },
        "item": {
          "id": "ed8b353b-1fb9-4c6c-87c4-150994d7c1a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "657c7e54-38dc-4fd7-bbb9-5958b9b9ed75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbec24a-b992-4a12-a536-644c59708340",
        "cursor": {
          "ref": "4907ff53-cff4-47c3-abb3-e96560c1ae8c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "add2c04e-b20a-4b7b-ac88-bf60ef084d7c"
        },
        "item": {
          "id": "0cbec24a-b992-4a12-a536-644c59708340",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "45b52007-2d36-47ff-bdcc-8411c77cdafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f774c4d1-37e3-4e06-bac5-fa2d73ebe750",
        "cursor": {
          "ref": "812f120a-4fa2-46e2-8e12-9492207817af",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1829225c-82b2-4fed-a679-2862a5dfd0d2"
        },
        "item": {
          "id": "f774c4d1-37e3-4e06-bac5-fa2d73ebe750",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "add58e28-775b-4967-bc9c-6b36520f6c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77687a4c-da5d-4f8e-a132-646c2942f03e",
        "cursor": {
          "ref": "cf86e387-a9a3-48d8-b50c-54f692fb928a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b6c3b7da-011a-484f-8cec-bc3e06b88508"
        },
        "item": {
          "id": "77687a4c-da5d-4f8e-a132-646c2942f03e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6250115c-8720-46cf-b4b1-f7f4cab1d1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99906c8-9988-4c08-b5ca-c1d1d37bb098",
        "cursor": {
          "ref": "ab152f31-61ef-4335-86e2-eed7bc48fcec",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a6c355fe-81a8-438c-9fd4-bd40b96989f6"
        },
        "item": {
          "id": "d99906c8-9988-4c08-b5ca-c1d1d37bb098",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f3c4d8fe-9cc9-4330-8f5b-3918522e2d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47aaec4e-4641-436e-9258-ed99a710970e",
        "cursor": {
          "ref": "711f359d-fc2f-48c0-a767-7005553f48ed",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "40a0a17c-d4af-4321-9143-1e4326a9a8d4"
        },
        "item": {
          "id": "47aaec4e-4641-436e-9258-ed99a710970e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bcc176fd-c408-49bd-a163-6595bdc5696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6c37b5-dbf2-4e98-974b-819c4d0c0906",
        "cursor": {
          "ref": "e0afa767-59cb-4c7e-b44a-615676595f1a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b372ba42-133f-464c-9a81-c73b0ef5ee8d"
        },
        "item": {
          "id": "fc6c37b5-dbf2-4e98-974b-819c4d0c0906",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "668b1bb1-c297-4b56-845e-faad6a228e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a62491-ba8d-456e-ad25-edc05c310c62",
        "cursor": {
          "ref": "d34d2a7a-d0dc-4a78-9a25-e6b95af78f85",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "59f0e82a-9e9a-40f8-997b-85b0cd2c60f5"
        },
        "item": {
          "id": "98a62491-ba8d-456e-ad25-edc05c310c62",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6244a346-6336-4d62-a7a5-8156de3db2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45a68d-83d4-40ab-8cb1-578578cf7735",
        "cursor": {
          "ref": "b771405f-5952-49c1-b2aa-b2f45e89f785",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c08f1fa9-02e7-4f90-a6bd-2a65f9162ff4"
        },
        "item": {
          "id": "7d45a68d-83d4-40ab-8cb1-578578cf7735",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "50e85693-e6e3-42d7-927d-5c588de8271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a195b3-8895-4313-9c8a-0901801ab0df",
        "cursor": {
          "ref": "21a74041-e725-425c-aa12-c32b2ad5b30a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ad7bf9c1-21dc-4425-a023-499546451870"
        },
        "item": {
          "id": "96a195b3-8895-4313-9c8a-0901801ab0df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd591f6c-00b9-453a-a9f9-056d252ee944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6310555d-d819-4cdd-b03f-472cab3257db",
        "cursor": {
          "ref": "5281d432-ed1b-4348-9983-68e3090b36e4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd807cd5-b54a-4bcb-a43c-2c19ede63628"
        },
        "item": {
          "id": "6310555d-d819-4cdd-b03f-472cab3257db",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c18cd94a-995c-4b58-8999-64ff64e43790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cde032-9575-42c8-a50f-75d353c108d2",
        "cursor": {
          "ref": "aa0dc811-7c9a-48c4-90e3-c7eb249d91e7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5fd2f5aa-7da3-4aec-8ee5-43afbec7b4e3"
        },
        "item": {
          "id": "77cde032-9575-42c8-a50f-75d353c108d2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "383eb000-6cda-4ded-81d2-16c3f2b9669b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43059664-b109-4e06-b629-e43249a8df3e",
        "cursor": {
          "ref": "13f619f4-ed85-4bcb-be3a-91dd7679104b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ef488bff-dda1-430a-bc25-fb6dfe1766f6"
        },
        "item": {
          "id": "43059664-b109-4e06-b629-e43249a8df3e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "330045fb-26fd-4606-bace-078e9341b291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f3821f-98c3-42ec-94f7-99f6bee88e44",
        "cursor": {
          "ref": "cf73b8ad-3f9b-4fdd-b7cc-609e07244d27",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd05af74-e23d-4141-88e4-90b07931c613"
        },
        "item": {
          "id": "32f3821f-98c3-42ec-94f7-99f6bee88e44",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2890ab5d-8bb0-42c5-99f1-f5e7035c9640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a23b226-4181-4d6c-b5d0-4dfc23e357bf",
        "cursor": {
          "ref": "1d7cf057-d635-4588-9301-daf3ca7dc717",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "acd271b1-c4d0-4fe6-aeed-b0c2f0f2b618"
        },
        "item": {
          "id": "3a23b226-4181-4d6c-b5d0-4dfc23e357bf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6385d56f-f8fd-4c6b-9b8a-a495b192da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19a144d-a9ac-40f7-b4d6-220808444cb6",
        "cursor": {
          "ref": "c27b8300-3307-4afb-8a80-0ca6ea3912ac",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1bbe14ac-6562-4d6a-a3a1-d9778e82d87d"
        },
        "item": {
          "id": "d19a144d-a9ac-40f7-b4d6-220808444cb6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "01c80305-417b-4aa8-b996-e029c1721bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c6f0e-7cbd-4f38-baa5-36ce3cbe209a",
        "cursor": {
          "ref": "44a6ce0d-9e17-455f-bae5-0e256c2ea324",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "327edbcc-9214-4a22-8875-b7c51b6bca02"
        },
        "item": {
          "id": "a91c6f0e-7cbd-4f38-baa5-36ce3cbe209a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9e3462d9-8ae2-401d-b041-e2510b7bd9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc3d04-fd30-4958-8508-a7ecb93e7ad3",
        "cursor": {
          "ref": "f3c1bb06-9345-4328-8964-7a0d56ff142e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53a74878-fada-47c7-967a-90961fe21f78"
        },
        "item": {
          "id": "d7cc3d04-fd30-4958-8508-a7ecb93e7ad3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "282e560c-c6ae-4178-a513-45226967351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d613995e-ac72-4b5e-8be3-3c1360943ccc",
        "cursor": {
          "ref": "70ae80a7-9681-4e99-a269-dadfa094f90d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "50508b78-1dbb-4b53-ad32-aa6fe382961b"
        },
        "item": {
          "id": "d613995e-ac72-4b5e-8be3-3c1360943ccc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5904663b-6a89-4587-b19c-d3210b2ad375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009d6595-3bc8-4276-a897-17e584850da0",
        "cursor": {
          "ref": "023334a9-5b95-4e72-921f-42253b756603",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c7c4ed10-a03c-4e4e-9ab9-c30d12a631c1"
        },
        "item": {
          "id": "009d6595-3bc8-4276-a897-17e584850da0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "10fc572a-eff2-4c96-818f-6715f95d8e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40bfacc-cd37-4452-996c-38b497919060",
        "cursor": {
          "ref": "fa631991-68f7-4e1f-bdba-df8c15de7e90",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b920f198-0c3d-44ef-9800-668364e0f31e"
        },
        "item": {
          "id": "a40bfacc-cd37-4452-996c-38b497919060",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd262a47-367e-4196-a317-51e09194c11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b1ba2a-5b28-440d-b931-1746e7d2daae",
        "cursor": {
          "ref": "8e4bbc04-5ee9-4ee4-b61f-0eca62c54b14",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d3e2d472-bf7d-407c-95fc-57ddc78cf9b3"
        },
        "item": {
          "id": "89b1ba2a-5b28-440d-b931-1746e7d2daae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e532b2a-44e2-41b4-b791-c1cc6c9d9718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c998e29-ca56-46a6-8b57-b8bfd9a684f1",
        "cursor": {
          "ref": "9cb22408-b23c-4fa8-a95a-9162d6ffb7bd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7c0fbb96-cbe1-4da2-b662-abe9e74b74b4"
        },
        "item": {
          "id": "6c998e29-ca56-46a6-8b57-b8bfd9a684f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f4782f9c-b0a3-4b96-a46e-d1c2ed6e221c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07484fb6-600d-4023-97ea-e7db46d2c291",
        "cursor": {
          "ref": "9b93828a-ee6c-444f-b927-e444f8b0f601",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b92ccfad-ccbb-407b-a9fd-95bfc532e877"
        },
        "item": {
          "id": "07484fb6-600d-4023-97ea-e7db46d2c291",
          "name": "credentials_issue"
        },
        "response": {
          "id": "782c4496-e7fa-4d4e-83ad-70a4f475ca48",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f6acd3-8475-4638-97b8-db36e0e8413c",
        "cursor": {
          "ref": "8452dda5-78e8-41a6-89a5-5d3b505ba997",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db8623e8-0f99-4e9b-96d4-c586df25057d"
        },
        "item": {
          "id": "f7f6acd3-8475-4638-97b8-db36e0e8413c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1f8d888a-70ab-40fe-b444-9376f5de0139",
          "status": "Created",
          "code": 201,
          "responseTime": 213,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba318ae-c52c-426e-8d75-6f55c976ba02",
        "cursor": {
          "ref": "857db33a-0291-427f-8ab4-3dab3337b056",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef06b8a4-ed89-4565-8453-b98638c4c9a2"
        },
        "item": {
          "id": "aba318ae-c52c-426e-8d75-6f55c976ba02",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "67821262-4071-4285-a58f-13d77b9755ad",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23c840-f9d3-412d-84e1-a8bb4dd64c61",
        "cursor": {
          "ref": "f61cb975-68de-4f6d-9862-b00767ed62f1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e1152f6f-6b79-4774-adbc-7b4402fe542e"
        },
        "item": {
          "id": "ca23c840-f9d3-412d-84e1-a8bb4dd64c61",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ef96691-d94f-4dc1-addd-b7371302676e",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "331c0a21-78dc-4058-bc39-85d151b4a1ab",
        "cursor": {
          "ref": "2e914c73-854f-409f-9b29-189759585701",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e6cfa38-27dd-44d1-8fc7-57bee3caa1cc"
        },
        "item": {
          "id": "331c0a21-78dc-4058-bc39-85d151b4a1ab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "63b1e16a-733f-4e8c-a37d-1b9de3c46051",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "073811e6-1229-4a9c-83d5-0d618b9b94d3",
        "cursor": {
          "ref": "ad324bf4-b01e-4ded-805f-95ef0478d9fe",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "31489a83-894d-4b4d-806d-932b92cf8f4f"
        },
        "item": {
          "id": "073811e6-1229-4a9c-83d5-0d618b9b94d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e9ee0836-8c64-42d8-974d-abc89a5076aa",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e398ad30-aaa9-4021-9b9e-a308b7ea4d97",
        "cursor": {
          "ref": "40aedc1e-11df-4f0d-880c-f4c053e8d0b5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "242aa4f8-b027-4387-a9dd-772318f318b6"
        },
        "item": {
          "id": "e398ad30-aaa9-4021-9b9e-a308b7ea4d97",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d7985ebe-e857-4139-8d9a-d0418e7641da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7364e717-886d-4360-9cdb-7c4fce8ad62f",
        "cursor": {
          "ref": "abfe1240-c9d2-4f85-8743-b9f174b648d1",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fd06b1d8-3490-49cc-befa-ebf2f31afb49"
        },
        "item": {
          "id": "7364e717-886d-4360-9cdb-7c4fce8ad62f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15aab8e8-a1f1-483f-921c-b4e84da1d802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae270d7-6d67-4960-8475-131a77297d2a",
        "cursor": {
          "ref": "b6e3d5d8-e236-475c-8574-d40b675a4a29",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dfcb4c53-5a1c-4bf6-a4c6-27581bf0e1f3"
        },
        "item": {
          "id": "aae270d7-6d67-4960-8475-131a77297d2a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37d3132a-5837-43cf-b950-8b9c23134c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3dd76b-c882-47ed-9f39-6a500ca3ea14",
        "cursor": {
          "ref": "0e230adc-78fa-44d9-8f99-befa1830c27a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "82b23a3a-9780-456a-b16a-3e6a055ccd42"
        },
        "item": {
          "id": "aa3dd76b-c882-47ed-9f39-6a500ca3ea14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "00d7f9fe-b60f-46d5-8bdb-ba5393bc6924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c561849a-9da1-4f72-8b61-50ed3d0d011e",
        "cursor": {
          "ref": "3ebb3b36-ab66-49f9-bdef-a30d96e788b3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e30972d8-aa0d-4372-8a5f-fa8fa1a52980"
        },
        "item": {
          "id": "c561849a-9da1-4f72-8b61-50ed3d0d011e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a773f2e5-6f43-4028-b06c-e573f44a8197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138662e8-ea39-4011-99dd-fffc53e4dfcb",
        "cursor": {
          "ref": "34e12ab7-3483-4307-b3e2-12cdc29f6a68",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "51c62295-46f7-4da0-b039-5c48aa0376e9"
        },
        "item": {
          "id": "138662e8-ea39-4011-99dd-fffc53e4dfcb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5e1ca35c-068f-49a0-a5f9-42f661d2267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7e89f-36d4-494c-b5f5-a8e828a06a6a",
        "cursor": {
          "ref": "20403298-2219-4298-aaa5-0c02412a4708",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6c18c651-d51c-40fc-ac75-0d23888ef7e3"
        },
        "item": {
          "id": "b9e7e89f-36d4-494c-b5f5-a8e828a06a6a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "67175888-988f-4c82-81af-5010dfebcf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0016a91b-12e7-46d9-ad13-21129606982b",
        "cursor": {
          "ref": "8ca58453-f258-4535-9f1d-de5f7a16e4d5",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e5fb631f-64a6-4708-a83e-7dcfa42a6daf"
        },
        "item": {
          "id": "0016a91b-12e7-46d9-ad13-21129606982b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b98efd7-7371-4047-8e09-d26169360b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7545b22-871a-4e16-b4ff-1b91f5f47585",
        "cursor": {
          "ref": "f007ec13-e9bd-4f69-ade1-72c88e422747",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f93783a8-d743-4a40-bf8b-7e1dcd424299"
        },
        "item": {
          "id": "c7545b22-871a-4e16-b4ff-1b91f5f47585",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f217ad64-84dc-4946-9872-96f40601d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c326da36-5831-446f-b32b-494120d8791a",
        "cursor": {
          "ref": "10765d66-d22d-456a-83c1-856774594081",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "82c37a0b-277e-4e28-b7d7-e20b74941c26"
        },
        "item": {
          "id": "c326da36-5831-446f-b32b-494120d8791a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2ecb20a-3a0c-4c28-a5cd-0c3be4ff477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf65e83-01dc-480d-b06c-4b97badb91f2",
        "cursor": {
          "ref": "b711fe0c-93f3-4922-8994-f900f57a48f4",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e07e00e9-f3bd-431c-9954-71ddfba08f94"
        },
        "item": {
          "id": "3cf65e83-01dc-480d-b06c-4b97badb91f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a677bf4c-a16f-413d-98e3-fe74a4c37ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2001ae-51f3-4bc8-8a84-c8a8ed62198a",
        "cursor": {
          "ref": "04b522b9-1a74-4912-80e4-6497cd6597bc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55ac7eae-c1da-4412-95f2-2b60d65934b4"
        },
        "item": {
          "id": "ec2001ae-51f3-4bc8-8a84-c8a8ed62198a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "616258dd-7bee-49b5-b9f2-c14680c8dd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a54fc0-7907-4ab8-be08-f6afbb151829",
        "cursor": {
          "ref": "6a390846-2177-417c-a435-c11830870c25",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d136d9ed-91f2-42dd-ba54-bc5ab2012046"
        },
        "item": {
          "id": "76a54fc0-7907-4ab8-be08-f6afbb151829",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bd7f38fc-647a-49bc-b24f-06f3f3adff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44080d73-625c-482b-9c64-9c9a3ed40ef9",
        "cursor": {
          "ref": "7fbb354e-a912-4785-8cb0-7c1960a8407d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0d23d0e-ae50-4811-b6fe-40d0873f9e36"
        },
        "item": {
          "id": "44080d73-625c-482b-9c64-9c9a3ed40ef9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d2f22083-6c7e-4ac2-81c5-2248c0c55b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0db003-2dc8-4ec2-8d9d-191893ac813e",
        "cursor": {
          "ref": "6b796f78-718a-48cf-af94-f1a718b97b9b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7aa977fa-2015-437a-8e5c-4d83f288e3c3"
        },
        "item": {
          "id": "cc0db003-2dc8-4ec2-8d9d-191893ac813e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c818345e-e6da-4609-ae44-83b55737e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6523d38-6e8d-4dd8-bffc-ad5ecffd88b4",
        "cursor": {
          "ref": "5aec7aeb-42fb-4786-a3b6-e77113f342be",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ecc105c2-2542-45af-be76-5a8f4c23f7dc"
        },
        "item": {
          "id": "d6523d38-6e8d-4dd8-bffc-ad5ecffd88b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "18c20887-4f9a-4517-bdd7-f55c0261990b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3479d1b5-8f3f-4720-b71d-81fe4529b4eb",
        "cursor": {
          "ref": "a5184588-a0d5-4614-8dd0-b3ab437de941",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4d206775-beba-41b0-97d9-2a920aeee29d"
        },
        "item": {
          "id": "3479d1b5-8f3f-4720-b71d-81fe4529b4eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c4296f3-ac03-4a9a-ba74-351e7077c4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbde07b-d338-4cd8-85ff-43fd65d8e4ac",
        "cursor": {
          "ref": "c4fda02b-7aa2-48b5-9916-bab0f26f80ed",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fc1733c1-df0b-4c64-87ce-fcda25f3433f"
        },
        "item": {
          "id": "abbde07b-d338-4cd8-85ff-43fd65d8e4ac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad4cd386-50ee-46d0-8bc3-6ca06c4ebbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d3349-04b5-477a-bd9a-012de6da875e",
        "cursor": {
          "ref": "e22aa400-56db-4d26-8015-30a97e0b79b2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8c8112e6-5900-4fcd-ab17-45107bbb6987"
        },
        "item": {
          "id": "f42d3349-04b5-477a-bd9a-012de6da875e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ac75b83-fdac-4c09-9f66-4b7e679d9892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dcdb1b-62fd-4ed3-bc17-b2fbfbcb58f2",
        "cursor": {
          "ref": "c44e2a30-a8eb-4766-a6c2-df96571ddfd6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43d564b1-59d7-4e96-ac68-5176ddfaa14d"
        },
        "item": {
          "id": "61dcdb1b-62fd-4ed3-bc17-b2fbfbcb58f2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "50934ab8-c425-4478-825c-42974b40b1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bf033-41c5-45bf-b5f9-60e2b3c3c6fe",
        "cursor": {
          "ref": "bf201694-1c63-497f-9e16-68d9ab7c1988",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9b1198aa-b3ac-45eb-b968-62a453ad9771"
        },
        "item": {
          "id": "b97bf033-41c5-45bf-b5f9-60e2b3c3c6fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d51dea45-379f-4c95-a85e-3408767831aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5b5d75-c00b-49bd-8be3-8f021c1be2aa",
        "cursor": {
          "ref": "c68e7747-3770-4eb5-8763-d600a1fed3b6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aeddbe71-d167-437b-bbb3-38860cd315dd"
        },
        "item": {
          "id": "1b5b5d75-c00b-49bd-8be3-8f021c1be2aa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4b6b0ed-4d9d-4780-bdca-5944142da1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16a000e-c9aa-422a-b17d-f76ad0333146",
        "cursor": {
          "ref": "ae93caf3-ed8a-4b28-a5cb-8ae1cbf81dab",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "82900cda-78ea-4302-a502-b87a93cffcf4"
        },
        "item": {
          "id": "b16a000e-c9aa-422a-b17d-f76ad0333146",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9113b6fe-5b1c-479c-b401-7e692b462579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2564d4f9-b119-44e8-87ee-72b316236af6",
        "cursor": {
          "ref": "e1d1a5a3-07a8-437f-a90b-78643224918a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b2f4b2d0-2b77-4ba6-a60b-d4a92aa2a519"
        },
        "item": {
          "id": "2564d4f9-b119-44e8-87ee-72b316236af6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c521e46a-5bb6-455f-b494-6bf42a6d386b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db27c8-1b14-416d-82ee-179a16362fd4",
        "cursor": {
          "ref": "7dc9bea8-2468-4302-8b66-0ce0e96efb3a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "670d6439-640e-449a-88a9-1d01cca37797"
        },
        "item": {
          "id": "76db27c8-1b14-416d-82ee-179a16362fd4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c5976df4-78e3-452a-9b40-35e9ac90d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61818e2-db1d-48f6-9917-a58311223e93",
        "cursor": {
          "ref": "7faf0d2b-f295-4711-a977-b43a51599299",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ca919eff-fb39-47e3-b569-d1aefe01c185"
        },
        "item": {
          "id": "c61818e2-db1d-48f6-9917-a58311223e93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f2c36178-b8b5-4f3e-af41-df83024c4e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ccf6bf-41e2-45ab-a12d-1e131046cf16",
        "cursor": {
          "ref": "95bedf84-5e6b-46dc-8d9b-68afd594ad50",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7e6a06e9-1431-4e0a-aa69-e029532694a8"
        },
        "item": {
          "id": "47ccf6bf-41e2-45ab-a12d-1e131046cf16",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80a2102c-3117-43de-8f14-df90a7d314b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d879fb-866c-41a8-a879-f7ed85d14fd6",
        "cursor": {
          "ref": "069a7264-47f1-45d8-8776-0faeb4c7d47e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a03bca75-320e-4441-aec2-8cfeda67c1dc"
        },
        "item": {
          "id": "f6d879fb-866c-41a8-a879-f7ed85d14fd6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6efb760-6135-44fc-9dc0-1de95beec011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367fcd1-a04a-4f8c-bb09-88ef260babc8",
        "cursor": {
          "ref": "fc2131fa-6ea9-4717-801f-5442a1fbc10b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d5b28235-a209-4c2b-9e48-d9b3fa11502f"
        },
        "item": {
          "id": "e367fcd1-a04a-4f8c-bb09-88ef260babc8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0744dd9f-2b82-434a-ae22-5f166f38f626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d50595-c4a6-4685-bad1-1b5dcff9ead5",
        "cursor": {
          "ref": "af88f6dd-cd96-4e16-902c-4ce903b9a1e7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "44160ec1-55ba-4665-92c5-f9fd6c00b092"
        },
        "item": {
          "id": "98d50595-c4a6-4685-bad1-1b5dcff9ead5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c5369d82-318f-4ea3-b293-3f7ac360a910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ea1806-3ed1-4dc6-8c0e-879f972cda35",
        "cursor": {
          "ref": "5b86ede0-63e6-4d8e-8fcb-4fb6a2cb3635",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec12a780-f9c0-4909-a544-da9b51a657d4"
        },
        "item": {
          "id": "59ea1806-3ed1-4dc6-8c0e-879f972cda35",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e6482e5-522e-42b7-9e68-ef0f80935696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827cfc47-cae7-4703-a44b-164ddbe64665",
        "cursor": {
          "ref": "34828052-0dd6-45e9-ad00-5c5dd7b4a0b2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8886005c-85fb-49db-9057-9464a4a89cdb"
        },
        "item": {
          "id": "827cfc47-cae7-4703-a44b-164ddbe64665",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8caae1f8-5e47-48b6-98e6-781caa44b9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193bcd5-7349-4a38-a329-41b79632030c",
        "cursor": {
          "ref": "f633834f-a24f-48ee-a905-ee5f481a73f6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "26e8deb2-247a-49f4-a28f-664ac5989004"
        },
        "item": {
          "id": "b193bcd5-7349-4a38-a329-41b79632030c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8e72b71-7a76-4927-a922-b94426922203",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92782eb-bd90-4e90-9ac1-82afc42835b7",
        "cursor": {
          "ref": "e56ab2c8-256c-47fb-be39-5ecd1ede8197",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41a38471-898e-4f8e-bc82-8ed2d0f7ccda"
        },
        "item": {
          "id": "a92782eb-bd90-4e90-9ac1-82afc42835b7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3c9c040f-662f-4ba6-9ca7-0bc7c90adc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb72f9d-6726-47eb-933e-b1e45d7d218c",
        "cursor": {
          "ref": "b4e6a68e-cf55-413b-8989-6858252b2992",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de18d5d9-1343-433c-a6c2-278f5613ccc2"
        },
        "item": {
          "id": "ffb72f9d-6726-47eb-933e-b1e45d7d218c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca8c38a4-6432-4f0a-961e-237de278e2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b61442-d85a-4e0a-8af2-b41380e45d53",
        "cursor": {
          "ref": "7267a88d-483a-407f-a143-6bd6678585b8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c332a426-0440-4cd9-9f18-012865afceed"
        },
        "item": {
          "id": "82b61442-d85a-4e0a-8af2-b41380e45d53",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fdbacd79-cd5e-4ba4-a24e-d0d3746d2919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ea4f6-f161-403a-9e53-5f0e0d55238f",
        "cursor": {
          "ref": "4d0b0b85-9add-437c-9275-904c2d5a2cf5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "273d2a99-3364-4d2a-ad51-9973ba9b6f16"
        },
        "item": {
          "id": "9c9ea4f6-f161-403a-9e53-5f0e0d55238f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9dd2da92-4d52-4f35-8e47-135312e0fabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd05cce-c6c9-48c0-adfe-4e63fb84af82",
        "cursor": {
          "ref": "380dfa55-6ab3-4dcd-8877-42077d7bb43d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "08664e1a-3d78-40b8-8037-1d1c4239ca78"
        },
        "item": {
          "id": "acd05cce-c6c9-48c0-adfe-4e63fb84af82",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "777ab9ef-896e-4507-a594-ce91714c05d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0683e19d-dbc1-477f-8290-7e629825540b",
        "cursor": {
          "ref": "ea9adfdf-8943-4a9f-9a4e-1c4518c9e751",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5be81617-5aa3-4227-961b-c3730a5e3a43"
        },
        "item": {
          "id": "0683e19d-dbc1-477f-8290-7e629825540b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "09e5f87f-7eee-4a2c-9581-6f3c927b95d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f336c9f-5357-40a9-8d47-e84c7a33903d",
        "cursor": {
          "ref": "15c4fd65-5041-4dca-8998-fb8f5b37c1af",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0dab81fd-0885-42d4-9b5b-cf1993b3fcce"
        },
        "item": {
          "id": "5f336c9f-5357-40a9-8d47-e84c7a33903d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44600da5-e687-49cd-9bce-eadedfe80964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0386e112-d366-4d52-a87a-8545c3aa9e77",
        "cursor": {
          "ref": "094f13fd-9acb-4b38-80f6-fdb101b6a742",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "928259d0-29d2-4643-bba8-c1b8580dc4dc"
        },
        "item": {
          "id": "0386e112-d366-4d52-a87a-8545c3aa9e77",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "80a702cd-130e-4eca-abd7-9ca3a29ffdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d43c74-6105-4ffc-8d97-34c462154d52",
        "cursor": {
          "ref": "5783dcb0-b5f3-410d-8110-909dbe4a3fb7",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "68dbd8b4-b75c-43e5-bd08-21a7ec46f6be"
        },
        "item": {
          "id": "f7d43c74-6105-4ffc-8d97-34c462154d52",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16dc79c2-a3c1-43e7-98f3-b881e7931c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036f8f11-3e87-4552-805e-ee1d6b269980",
        "cursor": {
          "ref": "0c9a1892-3251-4ecc-a076-e914a28a8e12",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c1e79e37-d4a3-4d2d-b944-1bfe9fe8e9c8"
        },
        "item": {
          "id": "036f8f11-3e87-4552-805e-ee1d6b269980",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b740e9ab-500a-4d60-960b-da7cfb03f14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efd3e35-d5e1-4d01-be01-691516362219",
        "cursor": {
          "ref": "1c5d9f7f-80fe-49b9-9471-704944afc6ba",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7d0e1599-7bb5-4d24-a4c9-f840a37a1455"
        },
        "item": {
          "id": "0efd3e35-d5e1-4d01-be01-691516362219",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef82f5f7-07c9-4021-87b1-adf96d51a3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38d0cb-ef65-49c5-adb0-3df2217e7181",
        "cursor": {
          "ref": "838df2b5-f9a2-4ff1-be58-da929e90a232",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b5707427-d2a2-4f52-8ea5-c2c8e1aee17f"
        },
        "item": {
          "id": "af38d0cb-ef65-49c5-adb0-3df2217e7181",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41c98363-2087-4c09-b921-da3b2b36e438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e4dc57-734d-43c1-8866-1b04a77edf2b",
        "cursor": {
          "ref": "d1bec695-f149-4db9-8037-583d1c2fed66",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dbb2f56b-ebad-4b2c-8432-68aeaefef626"
        },
        "item": {
          "id": "70e4dc57-734d-43c1-8866-1b04a77edf2b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99c9db18-f6bd-4305-92ad-e27b80d0e78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f600d9e4-eb02-492a-aba7-6c52c38efd49",
        "cursor": {
          "ref": "4ac33a43-aa82-4d49-b1ff-50f82877dc9a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f1fae2fb-5735-4398-ae9a-9b2c1e6ed223"
        },
        "item": {
          "id": "f600d9e4-eb02-492a-aba7-6c52c38efd49",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "89491fc0-f1a1-48b1-a8c4-29a888fb1d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b62196-90e2-4795-952d-d005c7afa80d",
        "cursor": {
          "ref": "6f3b93cb-421d-4d76-97a6-002a6a0f84f1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "970b1fbf-c0f4-4fa0-992f-71b61eb28d41"
        },
        "item": {
          "id": "c5b62196-90e2-4795-952d-d005c7afa80d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "94d6da39-753e-42ec-ba3d-b2124fb8ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf4a4e-e9d3-4c7e-8bdf-a0db37dd0be0",
        "cursor": {
          "ref": "1bae1b03-8314-4025-a3ef-0de9d90a1698",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e991c8f9-1522-4528-9f57-c2ee13180cd5"
        },
        "item": {
          "id": "2adf4a4e-e9d3-4c7e-8bdf-a0db37dd0be0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6635006-9fcb-490b-bfdc-dfee70e21979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce64a6f-e33b-44d7-b240-d7947ef89f95",
        "cursor": {
          "ref": "68ac8863-9d97-407c-9a4a-e9b1eb2a85cd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "418a183f-b76a-4f58-b89b-4f94619a061e"
        },
        "item": {
          "id": "8ce64a6f-e33b-44d7-b240-d7947ef89f95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1b7ab03a-b42a-4f76-a542-887d50d69bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f1bf94-c348-4c6d-a563-24d5ce1a6fed",
        "cursor": {
          "ref": "e5e87fb7-d51e-4070-bef6-a79fc0325e27",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "10565815-a78f-41ca-90b9-f6694e30a45b"
        },
        "item": {
          "id": "72f1bf94-c348-4c6d-a563-24d5ce1a6fed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03f62164-dedf-4a54-a61e-018dd55132c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b164bd-f144-4791-a573-f2788c7ad1a8",
        "cursor": {
          "ref": "915b8e09-6f02-4d7e-b455-77cb455935a6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a3cf0f55-9f0c-4004-bc1d-e5affee83c6c"
        },
        "item": {
          "id": "98b164bd-f144-4791-a573-f2788c7ad1a8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1e4901d0-06a5-48e2-9ced-22b32c852245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3222f2a2-b017-4073-9a74-4bdb408f1091",
        "cursor": {
          "ref": "74446fab-f5f4-49e7-add8-56afc7290958",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aa22866c-40aa-4b3b-9393-57555cde61b1"
        },
        "item": {
          "id": "3222f2a2-b017-4073-9a74-4bdb408f1091",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "96da4abf-cbe6-4a47-a410-3c847ca33c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d005c-6a31-4f3c-bc45-aedbc3ecc669",
        "cursor": {
          "ref": "c17ef9d4-a04f-47b7-b17b-50e85352707d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be0afde5-85db-44aa-b2cf-a1e2d79b1d3f"
        },
        "item": {
          "id": "d57d005c-6a31-4f3c-bc45-aedbc3ecc669",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a0fd242-6498-4fb5-b6c6-e75f391eb8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2869c-b963-45b7-908c-996446d06493",
        "cursor": {
          "ref": "d6233a17-b487-414e-bbc6-8c1c4448d5d8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0c807081-2083-480f-a5de-196d3ede0ab6"
        },
        "item": {
          "id": "42f2869c-b963-45b7-908c-996446d06493",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "078dac8f-b4cc-4125-8c8a-01023e7d0d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1fa62c-d5ba-4a33-9f3c-50c53b695752",
        "cursor": {
          "ref": "147306a8-f006-42ae-8dbb-7e630294d011",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0856d0ee-35ca-4f1a-badf-1fbf8e6580bc"
        },
        "item": {
          "id": "0e1fa62c-d5ba-4a33-9f3c-50c53b695752",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "325ba086-00da-47f8-b2cc-18ab62b0b0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5925cace-344b-4ef6-84f1-1dff4ab9f163",
        "cursor": {
          "ref": "5505f008-3479-4c8c-8765-6becee547011",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "afdf571f-99ce-4e36-8aab-29963555f66a"
        },
        "item": {
          "id": "5925cace-344b-4ef6-84f1-1dff4ab9f163",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05bf5bc5-cefe-4aaf-8ccc-140353cd44de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882026fa-f947-449b-84c3-d2e1da2dda53",
        "cursor": {
          "ref": "b3fec9d9-995b-4806-9b56-d7d627ce472a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5cc3ff1c-3bdd-4bac-b223-c53110fb6721"
        },
        "item": {
          "id": "882026fa-f947-449b-84c3-d2e1da2dda53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77e41c24-9872-44c1-9a88-89fabea49f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3588f916-dbf8-467e-8b8a-a2479cf5f9fd",
        "cursor": {
          "ref": "3eb2dd34-e3d6-484b-a13a-1870acb7d1ef",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1f41f1c2-d69d-4ef0-bcf7-800ca2f13d7b"
        },
        "item": {
          "id": "3588f916-dbf8-467e-8b8a-a2479cf5f9fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6e18b1bf-2079-402e-bab1-8d939faaa3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b577c40-0a9e-42a6-9eef-e37b79785d4b",
        "cursor": {
          "ref": "7a9b46ef-e1a2-41fa-baf4-ad8e21475ef8",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "df13b3c7-b69e-4718-818e-6897b3807b0a"
        },
        "item": {
          "id": "1b577c40-0a9e-42a6-9eef-e37b79785d4b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8e4d944-1605-46e5-aae4-f0449d4b0ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519b48f8-235d-4730-b848-5435e3322a71",
        "cursor": {
          "ref": "e06b9311-0a9b-4df7-980c-3df106416c4d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "77206f56-4835-4190-ad5e-eccce6ceabc6"
        },
        "item": {
          "id": "519b48f8-235d-4730-b848-5435e3322a71",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebec726e-b74c-47cc-abde-40208784f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a494f0e2-9f36-4de1-9a83-6010199685a6",
        "cursor": {
          "ref": "daa795b3-4cc2-499a-bbb4-69fdd6de1138",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b378284e-5275-4ae0-886b-aa80ac3b6b62"
        },
        "item": {
          "id": "a494f0e2-9f36-4de1-9a83-6010199685a6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7036f3d2-40a4-4d61-9d2b-b9ad3a9f1234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731f6e7a-9825-4678-867f-05f42e60ba32",
        "cursor": {
          "ref": "d04df60d-9b1b-4a4b-9a5f-e8271241b7d0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1a4d27ff-7a03-4954-b17f-16b5d43690fe"
        },
        "item": {
          "id": "731f6e7a-9825-4678-867f-05f42e60ba32",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7b2983fe-17bc-4ea7-baf7-806cd522206d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a92184-b072-4e91-b703-ccc684921554",
        "cursor": {
          "ref": "9c3aa872-abec-494a-bf6e-7f50b9122f29",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c7bab53a-aed3-4f2a-bceb-1922ad7bff73"
        },
        "item": {
          "id": "60a92184-b072-4e91-b703-ccc684921554",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae85aec3-85b4-4e08-9ec0-ffa4a7843c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d50e2af-6718-43de-a3b4-191a1e70e781",
        "cursor": {
          "ref": "37e4a69e-95e1-4355-8718-57e6e2742922",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1005325c-4311-4339-a2fe-95022c24ec56"
        },
        "item": {
          "id": "6d50e2af-6718-43de-a3b4-191a1e70e781",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4fdc352c-5474-4e64-83ec-9fd10440b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165e7d6f-6380-48b9-9028-e4a21ebde5ff",
        "cursor": {
          "ref": "5eaee6d3-4d02-4333-94f9-f94fbb2736c6",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d219764c-bf39-45eb-81c8-f3482eea8feb"
        },
        "item": {
          "id": "165e7d6f-6380-48b9-9028-e4a21ebde5ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "19c3a96f-b585-441d-a4f1-3429fb24a4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b059c223-6099-405d-bf1f-1c7848b63baf",
        "cursor": {
          "ref": "a8a62c08-0597-4c6d-9737-4040a73c7fd2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8bd5ef5c-a7df-4257-b48d-960369dae0fa"
        },
        "item": {
          "id": "b059c223-6099-405d-bf1f-1c7848b63baf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cfa06388-6952-4583-b8c9-c0ff65ecaf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9156bc1e-f615-47e5-91c4-a787a01c3649",
        "cursor": {
          "ref": "91d64f48-5c84-4a7a-b618-e0e2f7e7ab9f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5c074466-3e54-49cb-8e69-b35bbb34298e"
        },
        "item": {
          "id": "9156bc1e-f615-47e5-91c4-a787a01c3649",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "49c257e6-48f2-4d49-8e87-0a31611ea94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137825c-071f-4fba-8530-0c761ef7faf2",
        "cursor": {
          "ref": "a851f060-28e6-43c5-9024-45e75c689d1b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5d0c82c9-8b7d-4e0f-a3e3-4ad19fde95e4"
        },
        "item": {
          "id": "6137825c-071f-4fba-8530-0c761ef7faf2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ca6ef918-eaa3-4461-a1dd-7a1d63b1c700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145146f6-232f-4d74-b5f5-081dc4f812c3",
        "cursor": {
          "ref": "575d5d34-b7e9-475a-bf2c-04a0757ad3d5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "318317ac-24c8-4127-a6eb-83b9c002b500"
        },
        "item": {
          "id": "145146f6-232f-4d74-b5f5-081dc4f812c3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "19eb09b9-443f-44e7-ab79-02ee734415a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a53527c-dd1f-4cb8-8e9d-1e448c691922",
        "cursor": {
          "ref": "72323fc2-a492-4bc9-b4aa-134b5cda3487",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e45c007a-6487-40e2-adf9-fbd4a5e86bc9"
        },
        "item": {
          "id": "2a53527c-dd1f-4cb8-8e9d-1e448c691922",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "306d9c79-e6ba-4ada-aa4b-d59a8502779c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb4b6cb-a1c8-41f7-b428-e226146bbd79",
        "cursor": {
          "ref": "3e723727-11ce-4318-80ff-6f4116b7b06f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "64b1ab6a-adfc-483a-8e8e-ef6b7179fc51"
        },
        "item": {
          "id": "aeb4b6cb-a1c8-41f7-b428-e226146bbd79",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed4ecf27-8317-4408-8f36-aa6e91696a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ae7a1-d88f-4203-98c4-5b1a659ce033",
        "cursor": {
          "ref": "01cf69c5-86bd-4ded-9550-9e91a3dbc296",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9ea9bb37-f541-4b23-af29-eefad2fb717e"
        },
        "item": {
          "id": "b31ae7a1-d88f-4203-98c4-5b1a659ce033",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "73965945-1529-4e6e-90ca-bcbc677a3de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fcc3be-897e-49b2-8c70-251a41921f7d",
        "cursor": {
          "ref": "d43a8b46-d6c3-4377-a984-e0132c05aee5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d227417-6403-4720-a518-5cf4059aca63"
        },
        "item": {
          "id": "15fcc3be-897e-49b2-8c70-251a41921f7d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "22a39794-5fca-4cf4-9f2c-99494c165c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c40b47-f5db-45a6-8620-5339c6a60389",
        "cursor": {
          "ref": "b27798c3-3dc7-419c-b994-755fd23dab1c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b8ea3df-e1fe-467f-bf68-20c2ada82f21"
        },
        "item": {
          "id": "26c40b47-f5db-45a6-8620-5339c6a60389",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "278d43ea-b4f4-4a60-b9b5-d49dc9f0fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1784b711-c809-42fe-bda3-fca57e4aeae6",
        "cursor": {
          "ref": "61b32544-017b-45c6-b600-f02b63b69f24",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "525ced85-d5e0-4b0d-a9e0-723a134ca23d"
        },
        "item": {
          "id": "1784b711-c809-42fe-bda3-fca57e4aeae6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06feaf0e-f4a1-411b-b39e-009419b6b97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c418be2e-1392-4832-8211-1d3115e2d7ed",
        "cursor": {
          "ref": "45a28b16-f135-4233-b046-af8633344e0e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5282ce76-29a7-4a7f-bc46-0aa32d72e29f"
        },
        "item": {
          "id": "c418be2e-1392-4832-8211-1d3115e2d7ed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "811d5ac2-023f-42ab-bc44-ae72cea7b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e92921-d085-452a-8e8d-7c327aa25ece",
        "cursor": {
          "ref": "d737e457-8389-42d7-887e-c800da2e5dd9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "93a8c796-72e7-423d-aa80-260fd8f5a127"
        },
        "item": {
          "id": "56e92921-d085-452a-8e8d-7c327aa25ece",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e88be14a-38bd-40dc-b699-258374e389b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254cdaf9-7571-4017-8f2a-4e1393c1973a",
        "cursor": {
          "ref": "d67e3e2f-75ab-460f-ac1b-f0d44e5b412d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6a243055-a6b2-4c2e-90a9-869d91c51096"
        },
        "item": {
          "id": "254cdaf9-7571-4017-8f2a-4e1393c1973a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4d46d5c5-f143-4828-afa3-8f47fedcaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf748fc-4ddd-4112-8bc3-73f8e0a104e7",
        "cursor": {
          "ref": "76bd8f04-c22b-4d46-83c4-e03166421865",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8e39637-7b3a-4a17-946c-f67a67e40b4b"
        },
        "item": {
          "id": "5cf748fc-4ddd-4112-8bc3-73f8e0a104e7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8953e25d-a42f-4686-a0bf-ca6e781bb847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06da2147-cbba-4d56-819a-fad39935dcf7",
        "cursor": {
          "ref": "7c92f295-fdb3-4ca5-b908-705740898d04",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2bbdb969-b924-45ce-a33c-33ea7fc4e754"
        },
        "item": {
          "id": "06da2147-cbba-4d56-819a-fad39935dcf7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5d9ad995-5075-4beb-bbcc-90ff007c3f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b91c091-85d2-4c2c-998c-2a71bc033a6f",
        "cursor": {
          "ref": "7d3abed9-acbd-4ea1-a98d-640d6f8908da",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "87557d89-7fb4-4f67-bcae-2653d852c6f8"
        },
        "item": {
          "id": "0b91c091-85d2-4c2c-998c-2a71bc033a6f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f276f14c-d062-4f41-82b6-9476e4b365f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e39389-0222-4842-8f31-19ebc6f93558",
        "cursor": {
          "ref": "86c5aec2-fb96-424f-a353-f23d18f55d95",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "41fc9ae0-ac42-4368-8755-ae7cb639cbde"
        },
        "item": {
          "id": "10e39389-0222-4842-8f31-19ebc6f93558",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5165559-eb60-49ec-aaa2-c2a404fa8038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed317de4-c5c1-4c9a-b641-a7f6b0021efb",
        "cursor": {
          "ref": "ca7c102d-6bf9-4a0f-8ead-965e0a4ef0a6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "89c22a84-d5cc-4a5b-91e4-cfccc921f989"
        },
        "item": {
          "id": "ed317de4-c5c1-4c9a-b641-a7f6b0021efb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f86321fc-d53f-4695-a26d-11b571d9339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ac44f5-8dca-42a4-a233-fba2889200de",
        "cursor": {
          "ref": "01a06d3b-5d76-48cc-8976-9dab5f59c997",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2822e8b7-c0ac-4ad0-a3f7-a1adb7280c98"
        },
        "item": {
          "id": "86ac44f5-8dca-42a4-a233-fba2889200de",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fe4fc3b6-85f7-481a-a0f1-74bfaa0237e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39da3a70-3e95-49c8-99c2-276c795f8fbc",
        "cursor": {
          "ref": "1b34806f-71af-4a5e-8e06-9f4c3240e16c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8d8e5d17-3b54-4242-8d25-29f066bef94e"
        },
        "item": {
          "id": "39da3a70-3e95-49c8-99c2-276c795f8fbc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0ea90d7a-87c2-46ee-8504-ee63bdb88d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0549c014-cf8e-4848-8a36-385b3c8d2f44",
        "cursor": {
          "ref": "62cb6720-386a-4b47-b6b0-ddb747282b70",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fafee769-aa2f-4e75-a9f7-c5f0068a9826"
        },
        "item": {
          "id": "0549c014-cf8e-4848-8a36-385b3c8d2f44",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a450afc0-2f1d-4076-aa9c-bda32b2c5c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba77c1f-3e1d-4d31-ba44-7fd22da7d82c",
        "cursor": {
          "ref": "8de50a2f-af88-402c-8eae-b1fb93818bf8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9325558b-935a-4088-b3b6-6e4e38d14b6b"
        },
        "item": {
          "id": "0ba77c1f-3e1d-4d31-ba44-7fd22da7d82c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e35be6b-06fb-4d2f-81a8-01592b406130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eed1c9-323b-4632-b7b2-11e7b30ad27e",
        "cursor": {
          "ref": "5b4a6600-6442-4cff-bbac-ab9a2958bd4e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "181e0860-4982-4cd6-8ca0-fe8dbb9f41d5"
        },
        "item": {
          "id": "25eed1c9-323b-4632-b7b2-11e7b30ad27e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d20a8751-5d10-41ae-a5cb-9273ebb3a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149186ee-d972-4dba-9e61-9de5c45a23e3",
        "cursor": {
          "ref": "03a7278f-964c-438d-a8d6-b259b225d17a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c183f21-7f13-44c9-8cf9-25269699b57b"
        },
        "item": {
          "id": "149186ee-d972-4dba-9e61-9de5c45a23e3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "60ee9766-6916-437e-8f1e-4e57f5e4a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1698c29-1007-4e94-8566-d5823cc31742",
        "cursor": {
          "ref": "9dcd6432-4983-401f-8be5-cf403b06a0d2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f48f2f6-67d3-4878-a6c5-c3fb1e639116"
        },
        "item": {
          "id": "c1698c29-1007-4e94-8566-d5823cc31742",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "10cba3e7-6551-4fa1-a897-56f64ccc3bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7edffb-5163-43fc-914c-d2caecd3d9cc",
        "cursor": {
          "ref": "9ed21de7-1ae8-45fd-a6aa-0a17f7b2e117",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4fc95952-e3de-4d5b-8037-7098f10bf53c"
        },
        "item": {
          "id": "dd7edffb-5163-43fc-914c-d2caecd3d9cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "484f1315-96ed-4a33-a14b-84a9814a9d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d08486-b1e2-4e84-aa19-5bc1bbc12937",
        "cursor": {
          "ref": "9b0905f2-9eed-423b-a572-bec234ed63a3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "499d8335-b980-4117-bc89-d185ad2b5d78"
        },
        "item": {
          "id": "a9d08486-b1e2-4e84-aa19-5bc1bbc12937",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f0fb4479-91a5-40fa-ad6e-63b3912578cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad79d2-2abc-4fce-969f-400131c1a398",
        "cursor": {
          "ref": "94b8fa49-3940-4104-bedf-d3a1193657a2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f3034900-10a4-4f30-8596-e16967cc78e5"
        },
        "item": {
          "id": "9aad79d2-2abc-4fce-969f-400131c1a398",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "090c6bab-97dc-4c78-8f88-dbd42875e1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5966a71-704f-4c3d-80bb-40c39d70d87a",
        "cursor": {
          "ref": "81999492-3859-4da7-a3ff-8f62bf8eaac4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ff7ffdf8-e266-4ef2-88d9-6b6ecbdf02da"
        },
        "item": {
          "id": "e5966a71-704f-4c3d-80bb-40c39d70d87a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bec1b1d2-c3a0-4610-abfe-dcb43110728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8e673c-bac9-4a1e-8a79-0175f8b1248d",
        "cursor": {
          "ref": "232282f4-0f7b-4c2d-b6c1-799178eecf1e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "733cd98e-11eb-4a52-b2c2-b25bc8764c1d"
        },
        "item": {
          "id": "8c8e673c-bac9-4a1e-8a79-0175f8b1248d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d9f30b80-5cdb-4f7f-a66e-ca958924f4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a35b545-de74-4656-833e-8bc8cc320761",
        "cursor": {
          "ref": "2c83f422-9cdd-415d-a8bb-7980bf9d7288",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8037f79f-bbaf-473b-9d4a-46322857708c"
        },
        "item": {
          "id": "5a35b545-de74-4656-833e-8bc8cc320761",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d87d5b34-61f8-4ee3-8b17-21da8946597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dbafe6-e6c0-4ec7-9d5e-21501223ff15",
        "cursor": {
          "ref": "bec671b2-2a76-4531-8545-6dce60c93fbc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9e6bd4ab-6923-47e4-9aae-60846889b806"
        },
        "item": {
          "id": "d4dbafe6-e6c0-4ec7-9d5e-21501223ff15",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d7ee285d-9646-4793-83ab-54fcfcd0bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c6d52c-53d3-4e75-9c0e-0d3f9f8c0006",
        "cursor": {
          "ref": "6576ec81-3ab6-4cbd-a9ee-24034e4819c3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bb32ed23-66de-40f0-99b0-8cc0c85366d7"
        },
        "item": {
          "id": "31c6d52c-53d3-4e75-9c0e-0d3f9f8c0006",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b70d61e4-5cd8-4225-a8a2-6b91093ac275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ac191f-d3ce-40df-b37c-47bb063d282e",
        "cursor": {
          "ref": "cd0d93f0-f63c-47ed-a1db-f72b1b2697b1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ea52723f-1c10-4402-9db2-e1140e0f2a32"
        },
        "item": {
          "id": "20ac191f-d3ce-40df-b37c-47bb063d282e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "219ae156-577d-4774-8df4-1d7593ef162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0813df-744a-4e50-972a-7402741420d5",
        "cursor": {
          "ref": "bde1f3ba-1791-4f4f-99f9-a03beee13763",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "614c10f3-d40c-4eca-af65-31a4eb458b66"
        },
        "item": {
          "id": "ff0813df-744a-4e50-972a-7402741420d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f60a316-9cea-487c-85be-e060ceebaf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28a75f0-42f9-4e91-b33b-ff380d767eb6",
        "cursor": {
          "ref": "1cc8120a-fc91-4f39-91d7-2f1d2ac6a0d4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a195d51a-890f-40e0-8dcc-f808fb604b0a"
        },
        "item": {
          "id": "c28a75f0-42f9-4e91-b33b-ff380d767eb6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "85c5585f-07d6-4e52-81c3-ea56e3e9c018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8a31dc-30d7-4f31-967f-8c0cdce34bd5",
        "cursor": {
          "ref": "a1a11859-5330-4243-b4a5-db084a733b30",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ce0bc8df-a9fc-4417-b85d-471a28b75232"
        },
        "item": {
          "id": "cd8a31dc-30d7-4f31-967f-8c0cdce34bd5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "11c38238-f854-4f8c-8dc4-36de5bff851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8ddb7b-3f3c-4f0b-8f73-fa6adc0633f2",
        "cursor": {
          "ref": "422a9f56-dd06-4fba-8d0a-8a13b513c2c5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5c0d5a58-6319-43f3-b2eb-5a61171d81de"
        },
        "item": {
          "id": "5f8ddb7b-3f3c-4f0b-8f73-fa6adc0633f2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "db188ebc-c359-4d1d-bcee-84a739f08eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c9f52-23e9-43be-b36d-78ce5db19873",
        "cursor": {
          "ref": "f5a4434f-add1-433f-ad08-e7a8ac466daa",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bd38eb92-7bc7-4e40-90e5-9aafa17436fa"
        },
        "item": {
          "id": "028c9f52-23e9-43be-b36d-78ce5db19873",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e9527d55-fa83-4c6a-9490-d965461f83c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8d8cd6-5c3f-4ed3-b843-d9013aba8353",
        "cursor": {
          "ref": "e0938e76-e66b-4670-9e02-6fd6d99a30c4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dff41175-fc1c-4d8e-b9d3-64209199569f"
        },
        "item": {
          "id": "8f8d8cd6-5c3f-4ed3-b843-d9013aba8353",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "26bc5afc-2ada-4fa8-9a1a-33aa05839ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fa6ad1-54fe-4517-87d7-7cc00e9c889d",
        "cursor": {
          "ref": "c9759183-4362-4eea-b855-1aaa4ff938e7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "639590d5-2747-4f57-ab3a-19d9dfb2798c"
        },
        "item": {
          "id": "20fa6ad1-54fe-4517-87d7-7cc00e9c889d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c6573240-e173-4061-bb7e-e975efb65af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7f6a60-4546-4782-8003-9937ba267317",
        "cursor": {
          "ref": "8b1b153a-f892-418d-bed4-631800b3dfa9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d2c21dfb-eedf-4f71-9e82-3a92e76e95ec"
        },
        "item": {
          "id": "2f7f6a60-4546-4782-8003-9937ba267317",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0c8cf504-1b4c-4271-9145-511119ae7603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0826065-88b0-4efe-a766-98a2a93a1f0b",
        "cursor": {
          "ref": "e7fc02c6-8180-417d-8516-cd90d75643ab",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "806daf0e-23ff-4770-b721-9f174ef7e0db"
        },
        "item": {
          "id": "c0826065-88b0-4efe-a766-98a2a93a1f0b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "17f6122f-8160-4fd3-bcf3-5a54fcb8f183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61e14a8-37a4-4070-a74e-ee3109e98530",
        "cursor": {
          "ref": "35fb1d77-3978-4d2e-8ec2-29483ee3a6c6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "34fd62df-8468-489f-af6c-fc5b7fb1de9b"
        },
        "item": {
          "id": "d61e14a8-37a4-4070-a74e-ee3109e98530",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa6228df-cc00-42a5-9a18-b1adc8ba4156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bef4d9-ebe1-40e0-b3ec-9639df37a090",
        "cursor": {
          "ref": "b098315d-cac6-4eb5-9040-8034f54a35b6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fdef00cb-3b98-4985-aa27-2be9a0315e0f"
        },
        "item": {
          "id": "d0bef4d9-ebe1-40e0-b3ec-9639df37a090",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ad64ba1e-6095-4d6c-ab7b-71d74346b163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5fd28-56e7-4aa6-97eb-4ef867f4a9f7",
        "cursor": {
          "ref": "c21464e9-6a6e-40a4-b0c7-779563b408da",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0e098d47-1c0c-4fd9-8f73-add1f7ea06aa"
        },
        "item": {
          "id": "ebd5fd28-56e7-4aa6-97eb-4ef867f4a9f7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dd6450d7-84ac-4310-8dd9-1e4d8875e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca52c3f-8db8-4655-a753-4cb0a78a2c4a",
        "cursor": {
          "ref": "a6287027-f08b-4fb9-820c-6800d0319582",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "da71fbdb-fa8e-4745-9c85-5c4f95ec597b"
        },
        "item": {
          "id": "bca52c3f-8db8-4655-a753-4cb0a78a2c4a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bbdf60df-c8c2-4dfd-962a-5d5828844436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa46994-1968-4398-b5f6-35e15a3525e5",
        "cursor": {
          "ref": "d7f1e773-8a45-4935-9a03-9362f05507c3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "494b1147-21bb-40a3-9351-cfb88dad6b67"
        },
        "item": {
          "id": "2aa46994-1968-4398-b5f6-35e15a3525e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b62ebc3b-526f-40cf-a524-045b23f904ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aeda6a-fa44-451f-b303-67570d8c2219",
        "cursor": {
          "ref": "0ba117b3-bf1f-4b31-ab5c-ee01eb543a38",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "18d761cc-36a9-4d2d-a817-0e72dce024c0"
        },
        "item": {
          "id": "15aeda6a-fa44-451f-b303-67570d8c2219",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0c2fd8a2-6312-47ca-9d55-3b9cd2487763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdea33c9-a8ac-4748-aed5-4774d2ddc3b7",
        "cursor": {
          "ref": "c51a6d85-4885-456a-9380-c75ef3f7f541",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c9b55d37-2195-44cf-89c7-cacf86adb96e"
        },
        "item": {
          "id": "fdea33c9-a8ac-4748-aed5-4774d2ddc3b7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a7c53a1c-84e9-47c5-a1f4-2a6f22691b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7f0c88-3f07-47b5-af74-50896e315704",
        "cursor": {
          "ref": "e8723e33-8599-4ffd-83a0-bf54f744d754",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "25a83595-b920-4c75-8e2e-0b8c868cf92f"
        },
        "item": {
          "id": "9a7f0c88-3f07-47b5-af74-50896e315704",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "90746726-3c66-489f-afa5-531c8df6aa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40697756-28f1-4829-8b79-382fc60317e4",
        "cursor": {
          "ref": "edc88e50-825a-4ef4-b5fb-abc61cc712e7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "57c1846b-44f3-45b5-b6b6-14446975fc41"
        },
        "item": {
          "id": "40697756-28f1-4829-8b79-382fc60317e4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5f1e695f-13d5-4a57-80a0-96d2d43c1f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fac6bee-ae8d-47d1-8a88-8f6574f49d35",
        "cursor": {
          "ref": "348dc8b1-f7a8-4b88-a2a3-639c7f65356c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f4044fba-48b1-4043-a897-bd110073cf30"
        },
        "item": {
          "id": "6fac6bee-ae8d-47d1-8a88-8f6574f49d35",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9d805de3-a3b9-4d6f-b272-d44e44c4d16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3ba5c-b885-431b-b955-a5443b29ec8d",
        "cursor": {
          "ref": "8b2bc914-aebe-49ef-867d-4ac5d90e315b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a7e077c9-3a03-4943-bcd8-2d6a53742f39"
        },
        "item": {
          "id": "b1f3ba5c-b885-431b-b955-a5443b29ec8d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f28ac092-23c6-4753-aa1c-75b1256b7411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699640fd-aa0d-4d69-9c34-a9fd1a364ca8",
        "cursor": {
          "ref": "519f00f3-4310-492f-853c-7521969329a0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "40e6943c-d605-4e60-8a15-5a4fbcd709aa"
        },
        "item": {
          "id": "699640fd-aa0d-4d69-9c34-a9fd1a364ca8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "978a4737-b6ec-4110-9b4b-b5cfb8071aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adf31bc-609a-48f0-90a8-8a8d7518bd7e",
        "cursor": {
          "ref": "509981c2-4be5-4e33-8cc8-5cdbffd7060b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ae814f54-164b-4c0b-af79-1d418ea4966c"
        },
        "item": {
          "id": "3adf31bc-609a-48f0-90a8-8a8d7518bd7e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "05d07f8a-a500-4f10-aad7-be565dfc4ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37bd0d5-b15c-4379-b6ce-7373e2d8958a",
        "cursor": {
          "ref": "f28d4e68-0980-40c9-8eac-33913d9a779d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4be543e0-48e3-44af-8eab-510a53d8fedf"
        },
        "item": {
          "id": "a37bd0d5-b15c-4379-b6ce-7373e2d8958a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "83d36a34-a1e7-4b97-aed9-494ff399a4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476d859f-b24b-4b78-900d-698f6727eab0",
        "cursor": {
          "ref": "02f5e6d9-f23f-4fcd-8eae-659ff2ec190c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "239723c0-68d2-448e-a082-4fb179bfafed"
        },
        "item": {
          "id": "476d859f-b24b-4b78-900d-698f6727eab0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c92c230a-9f30-4e90-935f-cd730b992227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28679b42-9e5c-405b-8d7a-904f0145b11d",
        "cursor": {
          "ref": "f870bd5a-6130-4844-95d6-41d6f6d5ea8f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2170fc45-a362-40e2-9b3e-dda078982fc2"
        },
        "item": {
          "id": "28679b42-9e5c-405b-8d7a-904f0145b11d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c570f9cc-b202-49e9-ac95-c4c4b7160723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d43601-9710-4aa3-85a7-837af96bc4d7",
        "cursor": {
          "ref": "6f5373f8-8199-4231-9c77-4a57b1d1bad6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c19748b8-5b7e-4c02-be89-55089d0ac4d3"
        },
        "item": {
          "id": "a6d43601-9710-4aa3-85a7-837af96bc4d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7205d5c1-8c5f-428f-8daf-dddd97b1dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12ad627-9c0c-445e-8a32-513eeff19a20",
        "cursor": {
          "ref": "bbec1cb0-fd88-4f39-9dec-4cb9644cbd32",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bb291942-ee36-4b06-a6a4-6385d541714b"
        },
        "item": {
          "id": "e12ad627-9c0c-445e-8a32-513eeff19a20",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6723f4c-7ba8-4b4a-98d6-37f431e78d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d375ea39-8a03-4ab6-952d-ad529ac0d89b",
        "cursor": {
          "ref": "56616f82-b3a7-4433-9b05-b40d5939948a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d32d2467-1693-40f3-89ec-c3f2d357acd5"
        },
        "item": {
          "id": "d375ea39-8a03-4ab6-952d-ad529ac0d89b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "618192f0-6dac-488d-a855-67933c2629ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b201fd31-e5eb-4b27-a08e-b96780a97bc0",
        "cursor": {
          "ref": "7a3da4d2-6b8d-4cc4-bab2-9fce10ffd8b9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "10630205-96e4-4633-be50-cb1628b7e73c"
        },
        "item": {
          "id": "b201fd31-e5eb-4b27-a08e-b96780a97bc0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5cc5c31b-0733-49cb-9aa6-5ee507b036e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d8189-fb32-40e0-b7d3-76ee0cd95681",
        "cursor": {
          "ref": "2ff1de86-eb74-45f4-9a40-b34c3e594c60",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "39008649-6f2a-4c3c-8416-bdfbadd977ec"
        },
        "item": {
          "id": "ae7d8189-fb32-40e0-b7d3-76ee0cd95681",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "690aedc6-71b6-42e8-9631-b2bdd396b12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42965385-23b5-4725-803e-f49b0f1485f5",
        "cursor": {
          "ref": "b8b5e3dc-2df4-403a-81aa-469e2360ea17",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4a64cd89-cc1c-4d56-9383-b1d00e1cc7f6"
        },
        "item": {
          "id": "42965385-23b5-4725-803e-f49b0f1485f5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6fb2b64d-b2b6-4377-9ec6-d5d8702810a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202a0425-7527-426a-9bd0-18a2abd20a81",
        "cursor": {
          "ref": "04d33787-5828-49c2-86aa-f8e0f359e267",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4df6b86d-0cd4-4b3b-a68a-930cd19f0405"
        },
        "item": {
          "id": "202a0425-7527-426a-9bd0-18a2abd20a81",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ee339ac-b53c-4fa4-9fd6-d6e6c4cdfca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dc2102-29a8-4963-9b12-1f9678310b2c",
        "cursor": {
          "ref": "13a0a804-833b-4f8d-a945-04f2c8a0d1ba",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be8c060a-f57a-4f3b-b442-8691928e2622"
        },
        "item": {
          "id": "c6dc2102-29a8-4963-9b12-1f9678310b2c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2acb7e14-6751-4018-be34-828c7336ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ae7e5a-3a0f-4bed-9443-845a8d513218",
        "cursor": {
          "ref": "2078ecf3-4ac5-4371-aa68-19beacce1a43",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74036033-2be2-41cd-8b5f-53e959ef1cba"
        },
        "item": {
          "id": "98ae7e5a-3a0f-4bed-9443-845a8d513218",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cd55f9fd-27c9-48e2-b038-b11b357d6b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171902dd-51b5-49d5-88e8-6cf693471f23",
        "cursor": {
          "ref": "da0f5011-57ec-4a62-8f97-e4e624ff1d06",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8193abc-3cb4-4844-be8e-23515332728d"
        },
        "item": {
          "id": "171902dd-51b5-49d5-88e8-6cf693471f23",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "af8fae5e-ed6f-4338-9756-5bf796d75a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f421e9cb-c448-4c42-b472-bbfc6e00316a",
        "cursor": {
          "ref": "812db72f-f8dc-44b3-bc5e-d6ddd80728a2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ff749176-eed1-45e9-9c39-5056257360bb"
        },
        "item": {
          "id": "f421e9cb-c448-4c42-b472-bbfc6e00316a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5198e79-6623-47a8-baec-233f7fc6d393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9115352d-0d2a-4fa3-b8bd-3fd8c2487f03",
        "cursor": {
          "ref": "0358db77-c118-4047-b8dc-0ce69409918c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aa17f07f-62be-4514-ad21-3b0ed23924b0"
        },
        "item": {
          "id": "9115352d-0d2a-4fa3-b8bd-3fd8c2487f03",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9918c52d-c8d1-45f8-9c2b-30cfc92d8234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098e5b2a-99cb-4d75-ac19-b43cbfbf7978",
        "cursor": {
          "ref": "7bb10b87-d107-4449-af09-9325fdae66d9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "22fe1a2c-7b6f-45b1-9824-7005aed99985"
        },
        "item": {
          "id": "098e5b2a-99cb-4d75-ac19-b43cbfbf7978",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1777e497-087c-467a-8298-2807fe0b06e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5453721-b44c-4890-b657-20aa4e92e7ac",
        "cursor": {
          "ref": "bc8cb0ac-3be3-435e-80a7-be1c8830271b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1019df6c-434c-4863-af04-5048914244e2"
        },
        "item": {
          "id": "d5453721-b44c-4890-b657-20aa4e92e7ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c3de7ce-564b-4265-bf6f-8c717b5f1d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b923c-1667-4f0a-9c63-3cb4abb30e68",
        "cursor": {
          "ref": "34c334a9-b650-4171-ad2b-72ab1c9873df",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0ddb5838-9916-4ce5-9701-dc60abce18de"
        },
        "item": {
          "id": "f57b923c-1667-4f0a-9c63-3cb4abb30e68",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "736d3691-aaab-42f5-8f7a-aa5a15de056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17999ec6-7576-42ac-b8ce-a52db7d64d26",
        "cursor": {
          "ref": "807930e0-8c6b-4819-8340-981ce3780742",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1431cc5d-f63f-4f65-bbee-9beb7a2dd09f"
        },
        "item": {
          "id": "17999ec6-7576-42ac-b8ce-a52db7d64d26",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c63cfd3e-f287-413d-8f80-873b5d3ddee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c20e13-a1e7-4567-aee6-6b7eba738f33",
        "cursor": {
          "ref": "881fd73e-0ce5-4e0a-923e-f3e9324d8745",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1634260a-817d-4a13-9214-1b1e0f4e14a3"
        },
        "item": {
          "id": "60c20e13-a1e7-4567-aee6-6b7eba738f33",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b71d9234-01f4-49d6-b7f1-5f09ddd93d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336d71a4-911a-4208-9f6f-69810bc88035",
        "cursor": {
          "ref": "7048636d-5c60-416b-9405-0da79bba6522",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "de86e95f-834e-4ac0-88fb-c4fed67c51a2"
        },
        "item": {
          "id": "336d71a4-911a-4208-9f6f-69810bc88035",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3588c8c9-2a75-46e9-9b18-6ea459696d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e02493-0f09-4ae9-9d21-3074eeab5cd1",
        "cursor": {
          "ref": "fa8df2bf-d66a-4805-8c95-335440556786",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67b2ee95-47f1-424d-9ad8-cbb6bdcf11a9"
        },
        "item": {
          "id": "e4e02493-0f09-4ae9-9d21-3074eeab5cd1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f133789f-b8c9-4e53-bab1-acbaf68032c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a5b948-8ae0-4955-826c-2228826b8a49",
        "cursor": {
          "ref": "3e48a136-3324-4bdb-bbc6-53070f16f374",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "de91418f-04f6-4dab-a972-208b98312918"
        },
        "item": {
          "id": "23a5b948-8ae0-4955-826c-2228826b8a49",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "105f6125-3419-4325-ae01-b69ce30aa8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307caaa4-9fa2-4c01-8d27-a6fe62e79741",
        "cursor": {
          "ref": "ebb74709-4aca-4ed2-b2ee-f27c4fb9e3a0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "98fa8b0b-d2c2-4502-bd28-6e0c0ed03745"
        },
        "item": {
          "id": "307caaa4-9fa2-4c01-8d27-a6fe62e79741",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fe798fa2-49e6-44e8-9fbb-42a1601504d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e782a91-5a03-4ea9-b691-2c6a8a973354",
        "cursor": {
          "ref": "a83afa59-db67-45b0-a23e-63d126662ed7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cbd1871c-07cd-4b02-9ec9-cc5198a9e192"
        },
        "item": {
          "id": "9e782a91-5a03-4ea9-b691-2c6a8a973354",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "10d146c4-919f-4e2b-b741-0b4497619370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647ac69-0928-4b20-b6e6-fcb069abec24",
        "cursor": {
          "ref": "68cf0ef2-50d1-40f6-aef9-a27fe7fffac4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e87adda1-341f-4e5d-8c55-0895cbc848d9"
        },
        "item": {
          "id": "7647ac69-0928-4b20-b6e6-fcb069abec24",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "929971c5-68e0-47f6-be3b-5ac59a675694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6e841-6494-46dc-8775-2e014ba7e7ee",
        "cursor": {
          "ref": "69487189-2d60-42f2-b524-ed2f169af8ee",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "492731a8-a6df-4a41-b512-b4a84e21c2c4"
        },
        "item": {
          "id": "6fe6e841-6494-46dc-8775-2e014ba7e7ee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b85cea6c-91a6-4286-9037-7d0b908c9f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e39019d-7736-452b-9342-a5cbd82a0c17",
        "cursor": {
          "ref": "7231d20d-ac67-4c6c-aefb-6e09c0663e29",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "30dd8c53-f591-436f-9291-fa7aaec74be4"
        },
        "item": {
          "id": "6e39019d-7736-452b-9342-a5cbd82a0c17",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "76effc41-7af0-4eeb-998f-fde99630dd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9aa362-de9e-472f-ba88-c5131bc04d3f",
        "cursor": {
          "ref": "799afcd3-6f76-483e-92cb-adde49f5cd0c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "836bf019-4842-4ea0-ac01-c6df963c46bf"
        },
        "item": {
          "id": "ca9aa362-de9e-472f-ba88-c5131bc04d3f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b94e7b82-3633-45ee-8516-37d0bb182de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d003439-4acd-42fd-a228-29cc73e76e0f",
        "cursor": {
          "ref": "93f171eb-6aae-4365-ad2e-78c84dc52c38",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8fffc54a-f9a4-487e-acdb-d52aab038ef5"
        },
        "item": {
          "id": "1d003439-4acd-42fd-a228-29cc73e76e0f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "35cfb286-8dfc-411c-91fe-154352e9cdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56480a51-6678-4173-a95e-0848ba2a3c66",
        "cursor": {
          "ref": "72ed13fd-42d9-4e0a-a74e-fb57caf282da",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2c4d8f61-5e4d-44c0-9a0c-a6bcfc597851"
        },
        "item": {
          "id": "56480a51-6678-4173-a95e-0848ba2a3c66",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46d96a16-538c-4207-a15c-eeebdf2b8655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c234ad2-c0dd-4f0c-ba3d-a9ce43752f73",
        "cursor": {
          "ref": "7cd9aabe-a004-4505-8dd8-7ecac580f002",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5d4a9133-0073-4425-bfe5-6071b65098a4"
        },
        "item": {
          "id": "4c234ad2-c0dd-4f0c-ba3d-a9ce43752f73",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2ad2ee39-402b-4919-a58f-77fa71db39b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5642bd-46ca-42b9-9116-69d804352e92",
        "cursor": {
          "ref": "c51552dd-289d-42ad-bd4e-5e92c026b67d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1db0c06d-1198-4334-8652-b014481bdf9a"
        },
        "item": {
          "id": "5f5642bd-46ca-42b9-9116-69d804352e92",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ea05787-0fec-41ea-b72e-e6da23d58cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afbc752-d67e-4edc-810b-41dbd63c685e",
        "cursor": {
          "ref": "2c6fed12-5956-49d3-91f2-297a8fc92b41",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7ca34123-93b5-4a0f-b39f-9932fbb31a1a"
        },
        "item": {
          "id": "7afbc752-d67e-4edc-810b-41dbd63c685e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4c4631f-e3a8-4588-a318-f04f30cc8387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b2200-ddd5-4e74-9aed-92c63ceb9960",
        "cursor": {
          "ref": "0f7cf77b-184c-424f-982d-05a443d99366",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9dd5096f-ebe6-4d77-8859-04f6cf9ba265"
        },
        "item": {
          "id": "053b2200-ddd5-4e74-9aed-92c63ceb9960",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e2396d75-99dd-46dc-9d8e-5dbfabad59e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df9880-13c0-4dc3-b900-a2fceb51b501",
        "cursor": {
          "ref": "08ffa611-a7f5-416c-ae70-91189a525926",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a1a13edb-9a5c-4545-a3df-29434e6302df"
        },
        "item": {
          "id": "23df9880-13c0-4dc3-b900-a2fceb51b501",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4073bff2-1fb0-4cff-9b28-655d2a01807b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb0c492-e9ee-4a61-9ff4-4bec5b17696a",
        "cursor": {
          "ref": "ff1a8ae9-d40e-4374-9d20-52a45e8daedc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d122dc1e-5da8-4948-955d-a8b7806fbeab"
        },
        "item": {
          "id": "fcb0c492-e9ee-4a61-9ff4-4bec5b17696a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c178dd74-f1a1-4462-9f18-7c4097e7cb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecc27ee-db2e-4838-9a2f-ebd09b001d8e",
        "cursor": {
          "ref": "14ab9663-5fba-4d94-84f7-cb76556a3b14",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5c74cc33-fe75-4016-8ae7-5e0062db10a3"
        },
        "item": {
          "id": "5ecc27ee-db2e-4838-9a2f-ebd09b001d8e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "573bd675-ec0b-4faf-8624-3c6d0ffe2b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baebc2c-63f2-4c00-95a5-5b37aecf89f0",
        "cursor": {
          "ref": "f9d1cd55-3e62-4476-aa9b-c68f07afc675",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a7d89e71-4577-45a5-85cf-5363be12cdb4"
        },
        "item": {
          "id": "2baebc2c-63f2-4c00-95a5-5b37aecf89f0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cf389618-143f-4a66-abd5-92d3fb9cb110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7420579-94b1-4b8e-b0cc-f37612c5fea2",
        "cursor": {
          "ref": "36c929fb-4338-4aca-a484-ec830feea7c8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fceee490-3558-49b0-a41a-07a796d4fc0d"
        },
        "item": {
          "id": "c7420579-94b1-4b8e-b0cc-f37612c5fea2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7ca22cd7-c1ba-400c-b133-ba208f66659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d562fcef-c020-43cf-9636-c9a74e533f6a",
        "cursor": {
          "ref": "f25a0310-8608-4311-9473-c674de26eb9b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "abcf0dc0-0930-4bb1-9112-9962553a418d"
        },
        "item": {
          "id": "d562fcef-c020-43cf-9636-c9a74e533f6a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "56495d44-8e2e-4e3a-911d-786c1e3c9af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6446f616-743f-4d6c-a5c6-e4bfecd0408e",
        "cursor": {
          "ref": "4db0a289-463e-48c4-b7cc-c79f25f6da98",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8bcb3a1b-99fc-4de7-8e4a-d6eee6cfd3b5"
        },
        "item": {
          "id": "6446f616-743f-4d6c-a5c6-e4bfecd0408e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1c4f2f98-c5fe-4a32-872d-f201fa08988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3f6c7f-04a6-4673-9394-f68c923d2e00",
        "cursor": {
          "ref": "da8e5632-dfed-4012-861e-14c370c0e253",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "46179385-3101-4547-8f1a-bc56dfd92826"
        },
        "item": {
          "id": "ac3f6c7f-04a6-4673-9394-f68c923d2e00",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1c8e7389-19be-4d57-91cc-856e1cda4ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55850154-12aa-4499-a3ac-41044b01cd1a",
        "cursor": {
          "ref": "98acdf5c-6833-4689-97b7-748848b0ef0f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "42d15188-a604-43c6-948b-6db69483c09b"
        },
        "item": {
          "id": "55850154-12aa-4499-a3ac-41044b01cd1a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "17cc8fb8-9b28-428b-9781-b12993061a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0087cad1-725e-4ed3-9440-76677d60e38e",
        "cursor": {
          "ref": "fc97eca6-5c99-45f8-b7ec-d4f3da03d182",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "20a5e15c-25dc-476e-9992-5a198de395ad"
        },
        "item": {
          "id": "0087cad1-725e-4ed3-9440-76677d60e38e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "073f5908-4013-42d5-977b-c12f0bf72129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec87bd8b-df62-4d68-9923-e2f289f13c85",
        "cursor": {
          "ref": "d41c0743-3b1c-432e-8d75-752bdbbb8eb4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f8878586-a186-4a11-b790-e9459052b460"
        },
        "item": {
          "id": "ec87bd8b-df62-4d68-9923-e2f289f13c85",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "00097d9e-cc67-4448-aa33-d70e0da65d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc8c72b-e0c1-43d2-a178-f685d0d5f064",
        "cursor": {
          "ref": "16749741-0c38-47da-b481-c946852f7417",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d97e038-ee89-4dda-9b82-033203dfe706"
        },
        "item": {
          "id": "1fc8c72b-e0c1-43d2-a178-f685d0d5f064",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "48ef6730-30b3-4728-aed9-1741e3133464",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f332794d-4d3d-4e23-82f5-ed0c8100b39e",
        "cursor": {
          "ref": "b979b9fc-146a-4db0-b483-3fc6a7645ecf",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cad43a4c-fd52-4212-8561-fdafee5c0a3b"
        },
        "item": {
          "id": "f332794d-4d3d-4e23-82f5-ed0c8100b39e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d5762650-2596-4660-8c5e-808524791c0f",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2db966-16bc-4d9d-9fa0-afdadeb89b2c",
        "cursor": {
          "ref": "6361d422-a4a0-41b0-8f7d-7c2999764aa8",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4b751704-2048-4ca3-b7e4-9b8cc1ecff33"
        },
        "item": {
          "id": "4a2db966-16bc-4d9d-9fa0-afdadeb89b2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dbba9791-bd80-450f-95f2-36dc8902e13c",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce8975-45a9-4e20-a403-89db65280934",
        "cursor": {
          "ref": "94dc5390-855b-4cf9-8814-1f7c996edcaf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "672431ef-1c48-4ccd-83a7-7896e940219b"
        },
        "item": {
          "id": "12ce8975-45a9-4e20-a403-89db65280934",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0d8dbda9-b5bf-4c69-8d78-8c8789d1adf0",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52b944d-7516-4f43-a4c4-f7b9c1adbcd6",
        "cursor": {
          "ref": "61ebf457-af58-4b9d-94a5-fd719fd17064",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "663750a4-7dbc-4f53-b19c-21a5e37d8eb2"
        },
        "item": {
          "id": "a52b944d-7516-4f43-a4c4-f7b9c1adbcd6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c28c635-1a77-41b6-9969-972f77f574b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52b944d-7516-4f43-a4c4-f7b9c1adbcd6",
        "cursor": {
          "ref": "61ebf457-af58-4b9d-94a5-fd719fd17064",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "663750a4-7dbc-4f53-b19c-21a5e37d8eb2"
        },
        "item": {
          "id": "a52b944d-7516-4f43-a4c4-f7b9c1adbcd6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c28c635-1a77-41b6-9969-972f77f574b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e00f44-d7e8-42bc-ac6f-021d43cf3093",
        "cursor": {
          "ref": "4e232c56-29f7-4c76-a5bd-74d2e5c1de92",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "677d873f-d067-4379-9fba-f4b28e5506a7"
        },
        "item": {
          "id": "f8e00f44-d7e8-42bc-ac6f-021d43cf3093",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a47e3c3e-4dc2-41d8-ac60-3f6790737400",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb1871-96c5-435e-bf11-c4bd70c43020",
        "cursor": {
          "ref": "267386b1-90d0-42f6-bea7-2878d160ec67",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4dfa5e7e-aaa7-411b-ad73-78846387c386"
        },
        "item": {
          "id": "2bcb1871-96c5-435e-bf11-c4bd70c43020",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a5b38022-5b7e-4015-ad0f-d51af715faa9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}